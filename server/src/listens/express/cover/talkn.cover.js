/*! For license information please see talkn.cover.js.LICENSE.txt */
(()=>{var e={9573:e=>{var t,n,r=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var l,u=[],s=!1,d=-1;function c(){s&&l&&(s=!1,l.length?u=l.concat(u):d=-1,u.length&&f())}function f(){if(!s){var e=o(c);s=!0;for(var t=u.length;t;){for(l=u,u=[];++d<t;)l&&l[d].run();d=-1,t=u.length}l=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new p(e,t)),1!==u.length||s||o(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},7548:(e,t,n)=>{e=n.nmd(e),function(t){"use strict";var n,r="function"==typeof(n=t.atob)?n:"function"==typeof Buffer?function(e){return new Buffer(e,"base64").toString("binary")}:"object"==typeof t.base64js?function(e){var n=t.base64js.b64ToByteArray(e);return Array.prototype.map.call(n,(function(e){return String.fromCharCode(e)})).join("")}:function(){throw new Error("You're probably in an old browser or an iOS webworker. It might help to include beatgammit's base64-js.")};t.atob=r,e&&e.exports&&(e.exports=r)}(window)},6894:(e,t,n)=>{e.exports=n(6894)},8399:e=>{var t,n,r=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var l,u=[],s=!1,d=-1;function c(){s&&l&&(s=!1,l.length?u=l.concat(u):d=-1,u.length&&f())}function f(){if(!s){var e=o(c);s=!0;for(var t=u.length;t;){for(l=u,u=[];++d<t;)l&&l[d].run();d=-1,t=u.length}l=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new p(e,t)),1!==u.length||s||o(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},5735:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(4015),a=n.n(r),i=n(3645),o=n.n(i)()(a());o.push([e.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const l=o},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var i=0;i<this.length;i++){var o=this[i][0];null!=o&&(a[o]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,i=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);o=!0);}catch(e){l=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(l)throw a}}return i}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=a[1],o=a[3];if(!o)return i;if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),s="/*# ".concat(u," */"),d=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[i].concat(d).concat([s]).join("\n")}return[i].join("\n")}},8679:(e,t,n)=>{"use strict";var r=n(9864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?o:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=o;var s=Object.defineProperty,d=Object.getOwnPropertyNames,c=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var o=d(n);c&&(o=o.concat(c(n)));for(var l=u(t),g=u(n),m=0;m<o.length;++m){var b=o[m];if(!(i[b]||r&&r[b]||g&&g[b]||l&&l[b])){var y=f(n,b);try{s(t,b,y)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var o,l,u=a(e),s=1;s<arguments.length;s++){for(var d in o=Object(arguments[s]))n.call(o,d)&&(u[d]=o[d]);if(t){l=t(o);for(var c=0;c<l.length;c++)r.call(o,l[c])&&(u[l[c]]=o[l[c]])}}return u}},4448:(e,t,n)=>{"use strict";var r=n(7294),a=n(7418),i=n(3840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var l=new Set,u={};function s(e,t){d(e,t),d(e+"Capture",t)}function d(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function m(e,t,n,r,a,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var b={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){b[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];b[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){b[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){b[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){b[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){b[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){b[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){b[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){b[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=b.hasOwnProperty(t)?b[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(g,e)||!p.call(h,e)&&(f.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),b.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=60103,E=60106,C=60107,S=60108,M=60114,k=60109,O=60110,P=60112,A=60113,T=60120,$=60115,I=60116,j=60121,D=60128,L=60129,N=60130,B=60131;if("function"==typeof Symbol&&Symbol.for){var R=Symbol.for;_=R("react.element"),E=R("react.portal"),C=R("react.fragment"),S=R("react.strict_mode"),M=R("react.profiler"),k=R("react.provider"),O=R("react.context"),P=R("react.forward_ref"),A=R("react.suspense"),T=R("react.suspense_list"),$=R("react.memo"),I=R("react.lazy"),j=R("react.block"),R("react.scope"),D=R("react.opaque.id"),L=R("react.debug_trace_mode"),N=R("react.offscreen"),B=R("react.legacy_hidden")}var z,F="function"==typeof Symbol&&Symbol.iterator;function H(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}function U(e){if(void 0===z)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var W=!1;function V(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,l=i.length-1;1<=o&&0<=l&&a[o]!==i[l];)l--;for(;1<=o&&0<=l;o--,l--)if(a[o]!==i[l]){if(1!==o||1!==l)do{if(o--,0>--l||a[o]!==i[l])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=l);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function q(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function Y(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case E:return"Portal";case M:return"Profiler";case S:return"StrictMode";case A:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case $:return Y(e.type);case j:return Y(e._render);case I:t=e._payload,e=e._init;try{return Y(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function G(e){e._valueTracker||(e._valueTracker=function(e){var t=Q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ie(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function de(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var ce="http://www.w3.org/1999/xhtml";function fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,ge,me=(ge=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ge(e,t)}))}:ge);function be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ve=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function xe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){ve.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var _e=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ee(e,t){if(t){if(_e[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function Ce(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Se(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Me=null,ke=null,Oe=null;function Pe(e){if(e=Zr(e)){if("function"!=typeof Me)throw Error(o(280));var t=e.stateNode;t&&(t=ta(t),Me(e.stateNode,e.type,t))}}function Ae(e){ke?Oe?Oe.push(e):Oe=[e]:ke=e}function Te(){if(ke){var e=ke,t=Oe;if(Oe=ke=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function $e(e,t){return e(t)}function Ie(e,t,n,r,a){return e(t,n,r,a)}function je(){}var De=$e,Le=!1,Ne=!1;function Be(){null===ke&&null===Oe||(je(),Te())}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var ze=!1;if(c)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){ze=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(ge){ze=!1}function He(e,t,n,r,a,i,o,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ue=!1,We=null,Ve=!1,qe=null,Ye={onError:function(e){Ue=!0,We=e}};function Ke(e,t,n,r,a,i,o,l,u){Ue=!1,We=null,He.apply(Ye,arguments)}function Qe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Je(e){if(Qe(e)!==e)throw Error(o(188))}function Xe(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Qe(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Je(a),e;if(i===r)return Je(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=i;break}if(u===r){l=!0,r=a,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=a;break}if(u===r){l=!0,r=i,n=a;break}u=u.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,it=[],ot=null,lt=null,ut=null,st=new Map,dt=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":dt.delete(t.pointerId)}}function gt(e,t,n,r,a,i){return null===e||e.nativeEvent!==i?(e=pt(t,n,r,a,i),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Xr(e.target);if(null!==t){var n=Qe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){bt(e)&&n.delete(t)}function vt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&it.shift()}null!==ot&&bt(ot)&&(ot=null),null!==lt&&bt(lt)&&(lt=null),null!==ut&&bt(ut)&&(ut=null),st.forEach(yt),dt.forEach(yt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,vt)))}function xt(e){function t(t){return wt(t,e)}if(0<it.length){wt(it[0],e);for(var n=1;n<it.length;n++){var r=it[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&wt(ot,e),null!==lt&&wt(lt,e),null!==ut&&wt(ut,e),st.forEach(t),dt.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)mt(n),null===n.blockedOn&&ct.shift()}function _t(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:_t("Animation","AnimationEnd"),animationiteration:_t("Animation","AnimationIteration"),animationstart:_t("Animation","AnimationStart"),transitionend:_t("Transition","TransitionEnd")},Ct={},St={};function Mt(e){if(Ct[e])return Ct[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in St)return Ct[e]=n[t];return e}c&&(St=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var kt=Mt("animationend"),Ot=Mt("animationiteration"),Pt=Mt("animationstart"),At=Mt("transitionend"),Tt=new Map,$t=new Map,It=["abort","abort",kt,"animationEnd",Ot,"animationIteration",Pt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",At,"transitionEnd","waiting","waiting"];function jt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),$t.set(r,t),Tt.set(r,a),s(a,[r])}}(0,i.unstable_now)();var Dt=8;function Lt(e){if(0!=(1&e))return Dt=15,1;if(0!=(2&e))return Dt=14,2;if(0!=(4&e))return Dt=13,4;var t=24&e;return 0!==t?(Dt=12,t):0!=(32&e)?(Dt=11,32):0!=(t=192&e)?(Dt=10,t):0!=(256&e)?(Dt=9,256):0!=(t=3584&e)?(Dt=8,t):0!=(4096&e)?(Dt=7,4096):0!=(t=4186112&e)?(Dt=6,t):0!=(t=62914560&e)?(Dt=5,t):67108864&e?(Dt=4,67108864):0!=(134217728&e)?(Dt=3,134217728):0!=(t=805306368&e)?(Dt=2,t):0!=(1073741824&e)?(Dt=1,1073741824):(Dt=8,e)}function Nt(e,t){var n=e.pendingLanes;if(0===n)return Dt=0;var r=0,a=0,i=e.expiredLanes,o=e.suspendedLanes,l=e.pingedLanes;if(0!==i)r=i,a=Dt=15;else if(0!=(i=134217727&n)){var u=i&~o;0!==u?(r=Lt(u),a=Dt):0!=(l&=i)&&(r=Lt(l),a=Dt)}else 0!=(i=n&~o)?(r=Lt(i),a=Dt):0!==l&&(r=Lt(l),a=Dt);if(0===r)return 0;if(r=n&((0>(r=31-Ut(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&o)){if(Lt(t),a<=Dt)return t;Dt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Ut(t)),r|=e[n],t&=~a;return r}function Bt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Rt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=zt(24&~t))?Rt(10,t):e;case 10:return 0===(e=zt(192&~t))?Rt(8,t):e;case 8:return 0===(e=zt(3584&~t))&&0===(e=zt(4186112&~t))&&(e=512),e;case 2:return 0===(t=zt(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function zt(e){return e&-e}function Ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ht(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/Vt|0)|0},Wt=Math.log,Vt=Math.LN2,qt=i.unstable_UserBlockingPriority,Yt=i.unstable_runWithPriority,Kt=!0;function Qt(e,t,n,r){Le||je();var a=Jt,i=Le;Le=!0;try{Ie(a,e,t,n,r)}finally{(Le=i)||Be()}}function Gt(e,t,n,r){Yt(qt,Jt.bind(null,e,t,n,r))}function Jt(e,t,n,r){var a;if(Kt)if((a=0==(4&t))&&0<it.length&&-1<ft.indexOf(e))e=pt(null,e,t,n,r),it.push(e);else{var i=Xt(e,t,n,r);if(null===i)a&&ht(e,r);else{if(a){if(-1<ft.indexOf(e))return e=pt(i,e,t,n,r),void it.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=gt(ot,e,t,n,r,a),!0;case"dragenter":return lt=gt(lt,e,t,n,r,a),!0;case"mouseover":return ut=gt(ut,e,t,n,r,a),!0;case"pointerover":var i=a.pointerId;return st.set(i,gt(st.get(i)||null,e,t,n,r,a)),!0;case"gotpointercapture":return i=a.pointerId,dt.set(i,gt(dt.get(i)||null,e,t,n,r,a)),!0}return!1}(i,e,t,n,r))return;ht(e,r)}Tr(e,t,r,null,n)}}}function Xt(e,t,n,r){var a=Se(r);if(null!==(a=Xr(a))){var i=Qe(a);if(null===i)a=null;else{var o=i.tag;if(13===o){if(null!==(a=Ge(i)))return a;a=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;a=null}else i!==a&&(a=null)}}return Tr(e,t,r,a,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,i){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,sn,dn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=ln(cn),pn=a({},cn,{view:0,detail:0}),hn=ln(pn),gn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Mn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==dn&&(dn&&"mousemove"===e.type?(un=e.screenX-dn.screenX,sn=e.screenY-dn.screenY):sn=un=0,dn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),mn=ln(gn),bn=ln(a({},gn,{dataTransfer:0})),yn=ln(a({},pn,{relatedTarget:0})),vn=ln(a({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(a({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),xn=ln(a({},cn,{data:0})),_n={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function Mn(){return Sn}var kn=ln(a({},pn,{key:function(e){if(e.key){var t=_n[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Mn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),On=ln(a({},gn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pn=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Mn})),An=ln(a({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=ln(a({},gn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),$n=[9,13,27,32],In=c&&"CompositionEvent"in window,jn=null;c&&"documentMode"in document&&(jn=document.documentMode);var Dn=c&&"TextEvent"in window&&!jn,Ln=c&&(!In||jn&&8<jn&&11>=jn),Nn=String.fromCharCode(32),Bn=!1;function Rn(e,t){switch(e){case"keyup":return-1!==$n.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function zn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Fn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function Wn(e,t,n,r){Ae(r),0<(t=Ir(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,qn=null;function Yn(e){Sr(e,0)}function Kn(e){if(J(ea(e)))return e}function Qn(e,t){if("change"===e)return t}var Gn=!1;if(c){var Jn;if(c){var Xn="oninput"in document;if(!Xn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Xn="function"==typeof Zn.oninput}Jn=Xn}else Jn=!1;Gn=Jn&&(!document.documentMode||9<document.documentMode)}function er(){Vn&&(Vn.detachEvent("onpropertychange",tr),qn=Vn=null)}function tr(e){if("value"===e.propertyName&&Kn(qn)){var t=[];if(Wn(t,qn,e,Se(e)),e=Yn,Le)e(t);else{Le=!0;try{$e(e,t)}finally{Le=!1,Be()}}}}function nr(e,t,n){"focusin"===e?(er(),qn=n,(Vn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(qn)}function ar(e,t){if("click"===e)return Kn(t)}function ir(e,t){if("input"===e||"change"===e)return Kn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,br=null,yr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==gr||gr!==X(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&ur(br,r)||(br=r,0<(r=Ir(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(It,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),xr=0;xr<wr.length;xr++)$t.set(wr[xr],0);d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var _r="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(_r));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,l,u,s){if(Ke.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var d=We;Ue=!1,We=null,Ve||(Ve=!0,qe=d)}}(r,t,void 0,e),e.currentTarget=null}function Sr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var o=r.length-1;0<=o;o--){var l=r[o],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==i&&a.isPropagationStopped())break e;Cr(a,l,s),i=u}else for(o=0;o<r.length;o++){if(u=(l=r[o]).instance,s=l.currentTarget,l=l.listener,u!==i&&a.isPropagationStopped())break e;Cr(a,l,s),i=u}}}if(Ve)throw e=qe,Ve=!1,qe=null,e}function Mr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Ar(t,e,2,!1),n.add(r))}var kr="_reactListening"+Math.random().toString(36).slice(2);function Or(e){e[kr]||(e[kr]=!0,l.forEach((function(t){Er.has(t)||Pr(t,!1,e,null),Pr(t,!0,e,null)})))}function Pr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=n;if("selectionchange"===e&&9!==n.nodeType&&(i=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;a|=2,i=r}var o=na(i),l=e+"__"+(t?"capture":"bubble");o.has(l)||(t&&(a|=4),Ar(i,e,a,t),o.add(l))}function Ar(e,t,n,r){var a=$t.get(t);switch(void 0===a?2:a){case 0:a=Qt;break;case 1:a=Gt;break;default:a=Jt}n=a.bind(null,t,n,e),a=void 0,!ze||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,a){var i=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==l;){if(null===(o=Xr(l)))return;if(5===(u=o.tag)||6===u){r=i=o;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ne)return e();Ne=!0;try{De(e,t,n)}finally{Ne=!1,Be()}}((function(){var r=i,a=Se(n),o=[];e:{var l=Tt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=kn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=bn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pn;break;case kt:case Ot:case Pt:u=vn;break;case At:u=An;break;case"scroll":u=hn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var d=0!=(4&t),c=!d&&"scroll"===e,f=d?null!==l?l+"Capture":null:l;d=[];for(var p,h=r;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==f&&null!=(g=Re(h,f))&&d.push($r(h,g,p))),c)break;h=h.return}0<d.length&&(l=new u(l,s,null,n,a),o.push({event:l,listeners:d}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Xr(s)&&!s[Gr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Xr(s):null)&&(s!==(c=Qe(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(d=mn,g="onMouseLeave",f="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(d=On,g="onPointerLeave",f="onPointerEnter",h="pointer"),c=null==u?l:ea(u),p=null==s?l:ea(s),(l=new d(g,h+"leave",u,n,a)).target=c,l.relatedTarget=p,g=null,Xr(a)===r&&((d=new d(f,h+"enter",s,n,a)).target=p,d.relatedTarget=c,g=d),c=g,u&&s)e:{for(f=s,h=0,p=d=u;p;p=jr(p))h++;for(p=0,g=f;g;g=jr(g))p++;for(;0<h-p;)d=jr(d),h--;for(;0<p-h;)f=jr(f),p--;for(;h--;){if(d===f||null!==f&&d===f.alternate)break e;d=jr(d),f=jr(f)}d=null}else d=null;null!==u&&Dr(o,l,u,d,!1),null!==s&&null!==c&&Dr(o,c,s,d,!0)}if("select"===(u=(l=r?ea(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var m=Qn;else if(Un(l))if(Gn)m=ir;else{m=rr;var b=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(m=ar);switch(m&&(m=m(e,r))?Wn(o,m,n,a):(b&&b(e,l,r),"focusout"===e&&(b=l._wrapperState)&&b.controlled&&"number"===l.type&&ae(l,"number",l.value)),b=r?ea(r):window,e){case"focusin":(Un(b)||"true"===b.contentEditable)&&(gr=b,mr=r,br=null);break;case"focusout":br=mr=gr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,vr(o,n,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":vr(o,n,a)}var y;if(In)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Fn?Rn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Ln&&"ko"!==n.locale&&(Fn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Fn&&(y=nn()):(en="value"in(Zt=a)?Zt.value:Zt.textContent,Fn=!0)),0<(b=Ir(r,v)).length&&(v=new xn(v,e,null,n,a),o.push({event:v,listeners:b}),(y||null!==(y=zn(n)))&&(v.data=y))),(y=Dn?function(e,t){switch(e){case"compositionend":return zn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Nn);case"textInput":return(e=t.data)===Nn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Fn)return"compositionend"===e||!In&&Rn(e,t)?(e=nn(),tn=en=Zt=null,Fn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Ir(r,"onBeforeInput")).length&&(a=new xn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y)}Sr(o,t)}))}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ir(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=Re(e,n))&&r.unshift($r(e,i,a)),null!=(i=Re(e,t))&&r.push($r(e,i,a))),e=e.return}return r}function jr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Dr(e,t,n,r,a){for(var i=t._reactName,o=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Re(n,i))&&o.unshift($r(n,u,l)):a||null!=(u=Re(n,i))&&o.push($r(n,u,l))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Lr(){}var Nr=null,Br=null;function Rr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function zr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Fr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Ur(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0,Yr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+Yr,Qr="__reactProps$"+Yr,Gr="__reactContainer$"+Yr,Jr="__reactEvents$"+Yr;function Xr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Gr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Vr(e);null!==e;){if(n=e[Kr])return n;e=Vr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Kr]||e[Gr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ta(e){return e[Qr]||null}function na(e){var t=e[Jr];return void 0===t&&(t=e[Jr]=new Set),t}var ra=[],aa=-1;function ia(e){return{current:e}}function oa(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function la(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},sa=ia(ua),da=ia(!1),ca=ua;function fa(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function pa(e){return null!=e.childContextTypes}function ha(){oa(da),oa(sa)}function ga(e,t,n){if(sa.current!==ua)throw Error(o(168));la(sa,t),la(da,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(o(108,Y(t)||"Unknown",i));return a({},n,r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,ca=sa.current,la(sa,e),la(da,da.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=ma(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(da),oa(sa),la(sa,e)):oa(da),la(da,n)}var va=null,wa=null,xa=i.unstable_runWithPriority,_a=i.unstable_scheduleCallback,Ea=i.unstable_cancelCallback,Ca=i.unstable_shouldYield,Sa=i.unstable_requestPaint,Ma=i.unstable_now,ka=i.unstable_getCurrentPriorityLevel,Oa=i.unstable_ImmediatePriority,Pa=i.unstable_UserBlockingPriority,Aa=i.unstable_NormalPriority,Ta=i.unstable_LowPriority,$a=i.unstable_IdlePriority,Ia={},ja=void 0!==Sa?Sa:function(){},Da=null,La=null,Na=!1,Ba=Ma(),Ra=1e4>Ba?Ma:function(){return Ma()-Ba};function za(){switch(ka()){case Oa:return 99;case Pa:return 98;case Aa:return 97;case Ta:return 96;case $a:return 95;default:throw Error(o(332))}}function Fa(e){switch(e){case 99:return Oa;case 98:return Pa;case 97:return Aa;case 96:return Ta;case 95:return $a;default:throw Error(o(332))}}function Ha(e,t){return e=Fa(e),xa(e,t)}function Ua(e,t,n){return e=Fa(e),_a(e,t,n)}function Wa(){if(null!==La){var e=La;La=null,Ea(e)}Va()}function Va(){if(!Na&&null!==Da){Na=!0;var e=0;try{var t=Da;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Da=null}catch(t){throw null!==Da&&(Da=Da.slice(e+1)),_a(Oa,Wa),t}finally{Na=!1}}}var qa=x.ReactCurrentBatchConfig;function Ya(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ka=ia(null),Qa=null,Ga=null,Ja=null;function Xa(){Ja=Ga=Qa=null}function Za(e){var t=Ka.current;oa(Ka),e.type._context._currentValue=t}function ei(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ti(e,t){Qa=e,Ja=Ga=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Io=!0),e.firstContext=null)}function ni(e,t){if(Ja!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ja=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ga){if(null===Qa)throw Error(o(308));Ga=t,Qa.dependencies={lanes:0,firstContext:t,responders:null}}else Ga=Ga.next=t;return e._currentValue}var ri=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ii(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oi(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function li(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ui(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?a=i=o:i=i.next=o,n=n.next}while(null!==n);null===i?a=i=t:i=i.next=t}else a=i=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function si(e,t,n,r){var i=e.updateQueue;ri=!1;var o=i.firstBaseUpdate,l=i.lastBaseUpdate,u=i.shared.pending;if(null!==u){i.shared.pending=null;var s=u,d=s.next;s.next=null,null===l?o=d:l.next=d,l=s;var c=e.alternate;if(null!==c){var f=(c=c.updateQueue).lastBaseUpdate;f!==l&&(null===f?c.firstBaseUpdate=d:f.next=d,c.lastBaseUpdate=s)}}if(null!==o){for(f=i.baseState,l=0,c=d=s=null;;){u=o.lane;var p=o.eventTime;if((r&u)===u){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,g=o;switch(u=t,p=n,g.tag){case 1:if("function"==typeof(h=g.payload)){f=h.call(p,f,u);break e}f=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=g.payload)?h.call(p,f,u):h))break e;f=a({},f,u);break e;case 2:ri=!0}}null!==o.callback&&(e.flags|=32,null===(u=i.effects)?i.effects=[o]:u.push(o))}else p={eventTime:p,lane:u,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(d=c=p,s=f):c=c.next=p,l|=u;if(null===(o=o.next)){if(null===(u=i.shared.pending))break;o=u.next,u.next=null,i.lastBaseUpdate=u,i.shared.pending=null}}null===c&&(s=f),i.baseState=s,i.firstBaseUpdate=d,i.lastBaseUpdate=c,Dl|=l,e.lanes=l,e.memoizedState=f}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var ci=(new r.Component).refs;function fi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pi={isMounted:function(e){return!!(e=e._reactInternals)&&Qe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),i=oi(r,a);i.payload=t,null!=n&&(i.callback=n),li(e,i),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),i=oi(r,a);i.tag=1,i.payload=t,null!=n&&(i.callback=n),li(e,i),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=lu(e),a=oi(n,r);a.tag=2,null!=t&&(a.callback=t),li(e,a),uu(e,r,n)}};function hi(e,t,n,r,a,i,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,i))}function gi(e,t,n){var r=!1,a=ua,i=t.contextType;return"object"==typeof i&&null!==i?i=ni(i):(a=pa(t)?ca:sa.current,i=(r=null!=(r=t.contextTypes))?fa(e,a):ua),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pi,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function mi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&pi.enqueueReplaceState(t,t.state,null)}function bi(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=ci,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?a.context=ni(i):(i=pa(t)?ca:sa.current,a.context=fa(e,i)),si(e,n,a,r),a.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(fi(e,t,i,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&pi.enqueueReplaceState(a,a.state,null),si(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yi=Array.isArray;function vi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===ci&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function wi(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=zu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=vi(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=vi(e,t,n),r.return=e,r)}function d(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function c(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=vi(e,null,t),n.return=e,n;case E:return(t=Vu(t,e.mode,n)).return=e,t}if(yi(t)||H(t))return(t=Hu(t,e.mode,n,null)).return=e,t;wi(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===a?n.type===C?c(e,t,n.props.children,r,a):s(e,t,n,r):null;case E:return n.key===a?d(e,t,n,r):null}if(yi(n)||H(n))return null!==a?null:c(e,t,n,r,null);wi(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return e=e.get(null===r.key?n:r.key)||null,r.type===C?c(t,e,r.props.children,a,r.key):s(t,e,r,a);case E:return d(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yi(r)||H(r))return c(t,e=e.get(n)||null,r,a,null);wi(t,r)}return null}function g(a,o,l,u){for(var s=null,d=null,c=o,g=o=0,m=null;null!==c&&g<l.length;g++){c.index>g?(m=c,c=null):m=c.sibling;var b=p(a,c,l[g],u);if(null===b){null===c&&(c=m);break}e&&c&&null===b.alternate&&t(a,c),o=i(b,o,g),null===d?s=b:d.sibling=b,d=b,c=m}if(g===l.length)return n(a,c),s;if(null===c){for(;g<l.length;g++)null!==(c=f(a,l[g],u))&&(o=i(c,o,g),null===d?s=c:d.sibling=c,d=c);return s}for(c=r(a,c);g<l.length;g++)null!==(m=h(c,a,g,l[g],u))&&(e&&null!==m.alternate&&c.delete(null===m.key?g:m.key),o=i(m,o,g),null===d?s=m:d.sibling=m,d=m);return e&&c.forEach((function(e){return t(a,e)})),s}function m(a,l,u,s){var d=H(u);if("function"!=typeof d)throw Error(o(150));if(null==(u=d.call(u)))throw Error(o(151));for(var c=d=null,g=l,m=l=0,b=null,y=u.next();null!==g&&!y.done;m++,y=u.next()){g.index>m?(b=g,g=null):b=g.sibling;var v=p(a,g,y.value,s);if(null===v){null===g&&(g=b);break}e&&g&&null===v.alternate&&t(a,g),l=i(v,l,m),null===c?d=v:c.sibling=v,c=v,g=b}if(y.done)return n(a,g),d;if(null===g){for(;!y.done;m++,y=u.next())null!==(y=f(a,y.value,s))&&(l=i(y,l,m),null===c?d=y:c.sibling=y,c=y);return d}for(g=r(a,g);!y.done;m++,y=u.next())null!==(y=h(g,a,m,y.value,s))&&(e&&null!==y.alternate&&g.delete(null===y.key?m:y.key),l=i(y,l,m),null===c?d=y:c.sibling=y,c=y);return e&&g.forEach((function(e){return t(a,e)})),d}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===C&&null===i.key;s&&(i=i.props.children);var d="object"==typeof i&&null!==i;if(d)switch(i.$$typeof){case _:e:{for(d=i.key,s=r;null!==s;){if(s.key===d){switch(s.tag){case 7:if(i.type===C){n(e,s.sibling),(r=a(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=a(s,i.props)).ref=vi(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===C?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Fu(i.type,i.key,i.props,null,e.mode,u)).ref=vi(e,r,i),u.return=e,e=u)}return l(e);case E:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=a(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,i)).return=e,e=r):(n(e,r),(r=Wu(i,e.mode,u)).return=e,e=r),l(e);if(yi(i))return g(e,r,i,u);if(H(i))return m(e,r,i,u);if(d&&wi(e,i),void 0===i&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,Y(e.type)||"Component"))}return n(e,r)}}var _i=xi(!0),Ei=xi(!1),Ci={},Si=ia(Ci),Mi=ia(Ci),ki=ia(Ci);function Oi(e){if(e===Ci)throw Error(o(174));return e}function Pi(e,t){switch(la(ki,t),la(Mi,e),la(Si,Ci),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(Si),la(Si,t)}function Ai(){oa(Si),oa(Mi),oa(ki)}function Ti(e){Oi(ki.current);var t=Oi(Si.current),n=pe(t,e.type);t!==n&&(la(Mi,e),la(Si,n))}function $i(e){Mi.current===e&&(oa(Si),oa(Mi))}var Ii=ia(0);function ji(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Di=null,Li=null,Ni=!1;function Bi(e,t){var n=Bu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ri(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function zi(e){if(Ni){var t=Li;if(t){var n=t;if(!Ri(e,t)){if(!(t=Wr(n.nextSibling))||!Ri(e,t))return e.flags=-1025&e.flags|2,Ni=!1,void(Di=e);Bi(Di,n)}Di=e,Li=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,Ni=!1,Di=e}}function Fi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Di=e}function Hi(e){if(e!==Di)return!1;if(!Ni)return Fi(e),Ni=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!zr(t,e.memoizedProps))for(t=Li;t;)Bi(e,t),t=Wr(t.nextSibling);if(Fi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Li=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Li=null}}else Li=Di?Wr(e.stateNode.nextSibling):null;return!0}function Ui(){Li=Di=null,Ni=!1}var Wi=[];function Vi(){for(var e=0;e<Wi.length;e++)Wi[e]._workInProgressVersionPrimary=null;Wi.length=0}var qi=x.ReactCurrentDispatcher,Yi=x.ReactCurrentBatchConfig,Ki=0,Qi=null,Gi=null,Ji=null,Xi=!1,Zi=!1;function eo(){throw Error(o(321))}function to(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function no(e,t,n,r,a,i){if(Ki=i,Qi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qi.current=null===e||null===e.memoizedState?Po:Ao,e=n(r,a),Zi){i=0;do{if(Zi=!1,!(25>i))throw Error(o(301));i+=1,Ji=Gi=null,t.updateQueue=null,qi.current=To,e=n(r,a)}while(Zi)}if(qi.current=Oo,t=null!==Gi&&null!==Gi.next,Ki=0,Ji=Gi=Qi=null,Xi=!1,t)throw Error(o(300));return e}function ro(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ji?Qi.memoizedState=Ji=e:Ji=Ji.next=e,Ji}function ao(){if(null===Gi){var e=Qi.alternate;e=null!==e?e.memoizedState:null}else e=Gi.next;var t=null===Ji?Qi.memoizedState:Ji.next;if(null!==t)Ji=t,Gi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Gi=e).memoizedState,baseState:Gi.baseState,baseQueue:Gi.baseQueue,queue:Gi.queue,next:null},null===Ji?Qi.memoizedState=Ji=e:Ji=Ji.next=e}return Ji}function io(e,t){return"function"==typeof t?t(e):t}function oo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Gi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var l=a.next;a.next=i.next,i.next=l}r.baseQueue=a=i,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=i=null,s=a;do{var d=s.lane;if((Ki&d)===d)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var c={lane:d,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=c,i=r):u=u.next=c,Qi.lanes|=d,Dl|=d}s=s.next}while(null!==s&&s!==a);null===u?i=r:u.next=l,or(r,t.memoizedState)||(Io=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function lo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{i=e(i,l.action),l=l.next}while(l!==a);or(i,t.memoizedState)||(Io=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function uo(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Ki&e)===e)&&(t._workInProgressVersionPrimary=r,Wi.push(t))),e)return n(t._source);throw Wi.push(t),Error(o(350))}function so(e,t,n,r){var a=kl;if(null===a)throw Error(o(349));var i=t._getVersion,l=i(t._source),u=qi.current,s=u.useState((function(){return uo(a,t,n)})),d=s[1],c=s[0];s=Ji;var f=e.memoizedState,p=f.refs,h=p.getSnapshot,g=f.source;f=f.subscribe;var m=Qi;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=d;var e=i(t._source);if(!or(l,e)){e=n(t._source),or(c,e)||(d(e),e=lu(m),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var u=31-Ut(o),s=1<<u;r[u]|=e,o&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(m);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(g,t)&&or(f,r)||((e={pending:null,dispatch:null,lastRenderedReducer:io,lastRenderedState:c}).dispatch=d=ko.bind(null,Qi,e),s.queue=e,s.baseQueue=null,c=uo(a,t,n),s.memoizedState=s.baseState=c),c}function co(e,t,n){return so(ao(),e,t,n)}function fo(e){var t=ro();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:io,lastRenderedState:e}).dispatch=ko.bind(null,Qi,e),[t.memoizedState,e]}function po(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Qi.updateQueue)?(t={lastEffect:null},Qi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ho(e){return e={current:e},ro().memoizedState=e}function go(){return ao().memoizedState}function mo(e,t,n,r){var a=ro();Qi.flags|=e,a.memoizedState=po(1|t,n,void 0,void 0===r?null:r)}function bo(e,t,n,r){var a=ao();r=void 0===r?null:r;var i=void 0;if(null!==Gi){var o=Gi.memoizedState;if(i=o.destroy,null!==r&&to(r,o.deps))return void po(t,n,i,r)}Qi.flags|=e,a.memoizedState=po(1|t,n,i,r)}function yo(e,t){return mo(516,4,e,t)}function vo(e,t){return bo(516,4,e,t)}function wo(e,t){return bo(4,2,e,t)}function xo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function _o(e,t,n){return n=null!=n?n.concat([e]):null,bo(4,2,xo.bind(null,t,e),n)}function Eo(){}function Co(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function So(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Mo(e,t){var n=za();Ha(98>n?98:n,(function(){e(!0)})),Ha(97<n?97:n,(function(){var n=Yi.transition;Yi.transition=1;try{e(!1),t()}finally{Yi.transition=n}}))}function ko(e,t,n){var r=ou(),a=lu(e),i={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Qi||null!==o&&o===Qi)Zi=Xi=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=o(l,n);if(i.eagerReducer=o,i.eagerState=u,or(u,l))return}catch(e){}uu(e,a,r)}}var Oo={readContext:ni,useCallback:eo,useContext:eo,useEffect:eo,useImperativeHandle:eo,useLayoutEffect:eo,useMemo:eo,useReducer:eo,useRef:eo,useState:eo,useDebugValue:eo,useDeferredValue:eo,useTransition:eo,useMutableSource:eo,useOpaqueIdentifier:eo,unstable_isNewReconciler:!1},Po={readContext:ni,useCallback:function(e,t){return ro().memoizedState=[e,void 0===t?null:t],e},useContext:ni,useEffect:yo,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mo(4,2,xo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mo(4,2,e,t)},useMemo:function(e,t){var n=ro();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ro();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ko.bind(null,Qi,e),[r.memoizedState,e]},useRef:ho,useState:fo,useDebugValue:Eo,useDeferredValue:function(e){var t=fo(e),n=t[0],r=t[1];return yo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=fo(!1),t=e[0];return ho(e=Mo.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ro();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},so(r,e,t,n)},useOpaqueIdentifier:function(){if(Ni){var e=!1,t=function(e){return{$$typeof:D,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(o(355))})),n=fo(t)[1];return 0==(2&Qi.mode)&&(Qi.flags|=516,po(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return fo(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Ao={readContext:ni,useCallback:Co,useContext:ni,useEffect:vo,useImperativeHandle:_o,useLayoutEffect:wo,useMemo:So,useReducer:oo,useRef:go,useState:function(){return oo(io)},useDebugValue:Eo,useDeferredValue:function(e){var t=oo(io),n=t[0],r=t[1];return vo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=oo(io)[0];return[go().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return oo(io)[0]},unstable_isNewReconciler:!1},To={readContext:ni,useCallback:Co,useContext:ni,useEffect:vo,useImperativeHandle:_o,useLayoutEffect:wo,useMemo:So,useReducer:lo,useRef:go,useState:function(){return lo(io)},useDebugValue:Eo,useDeferredValue:function(e){var t=lo(io),n=t[0],r=t[1];return vo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=lo(io)[0];return[go().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return lo(io)[0]},unstable_isNewReconciler:!1},$o=x.ReactCurrentOwner,Io=!1;function jo(e,t,n,r){t.child=null===e?Ei(t,null,n,r):_i(t,e.child,n,r)}function Do(e,t,n,r,a){n=n.render;var i=t.ref;return ti(t,a),r=no(e,t,n,r,i,a),null===e||Io?(t.flags|=1,jo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Lo(e,t,n,r,a,i){if(null===e){var o=n.type;return"function"!=typeof o||Ru(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,No(e,t,o,r,a,i))}return o=e.child,0==(a&i)&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Zo(e,t,i):(t.flags|=1,(e=zu(o,r)).ref=t.ref,e.return=t,t.child=e)}function No(e,t,n,r,a,i){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Io=!1,0==(i&a))return t.lanes=e.lanes,Zo(e,t,i);0!=(16384&e.flags)&&(Io=!0)}return zo(e,t,n,r,i)}function Bo(e,t,n){var r=t.pendingProps,a=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},mu(0,n);else{if(0==(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},mu(0,e),null;t.memoizedState={baseLanes:0},mu(0,null!==i?i.baseLanes:n)}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,mu(0,r);return jo(e,t,a,n),t.child}function Ro(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function zo(e,t,n,r,a){var i=pa(n)?ca:sa.current;return i=fa(t,i),ti(t,a),n=no(e,t,n,r,i,a),null===e||Io?(t.flags|=1,jo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Fo(e,t,n,r,a){if(pa(n)){var i=!0;ba(t)}else i=!1;if(ti(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),gi(t,n,r),bi(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,l=t.memoizedProps;o.props=l;var u=o.context,s=n.contextType;s="object"==typeof s&&null!==s?ni(s):fa(t,s=pa(n)?ca:sa.current);var d=n.getDerivedStateFromProps,c="function"==typeof d||"function"==typeof o.getSnapshotBeforeUpdate;c||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||u!==s)&&mi(t,o,r,s),ri=!1;var f=t.memoizedState;o.state=f,si(t,r,o,a),u=t.memoizedState,l!==r||f!==u||da.current||ri?("function"==typeof d&&(fi(t,n,d,r),u=t.memoizedState),(l=ri||hi(t,n,l,r,f,u,s))?(c||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4)):("function"==typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=s,r=l):("function"==typeof o.componentDidMount&&(t.flags|=4),r=!1)}else{o=t.stateNode,ii(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Ya(t.type,l),o.props=s,c=t.pendingProps,f=o.context,u="object"==typeof(u=n.contextType)&&null!==u?ni(u):fa(t,u=pa(n)?ca:sa.current);var p=n.getDerivedStateFromProps;(d="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==c||f!==u)&&mi(t,o,r,u),ri=!1,f=t.memoizedState,o.state=f,si(t,r,o,a);var h=t.memoizedState;l!==c||f!==h||da.current||ri?("function"==typeof p&&(fi(t,n,p,r),h=t.memoizedState),(s=ri||hi(t,n,s,r,f,h,u))?(d||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=u,r=s):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),r=!1)}return Ho(e,t,n,r,i,a)}function Ho(e,t,n,r,a,i){Ro(e,t);var o=0!=(64&t.flags);if(!r&&!o)return a&&ya(t,n,!1),Zo(e,t,i);r=t.stateNode,$o.current=t;var l=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=_i(t,e.child,null,i),t.child=_i(t,null,l,i)):jo(e,t,l,i),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Uo(e){var t=e.stateNode;t.pendingContext?ga(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ga(0,t.context,!1),Pi(e,t.containerInfo)}var Wo,Vo,qo,Yo={dehydrated:null,retryLane:0};function Ko(e,t,n){var r,a=t.pendingProps,i=Ii.current,o=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),la(Ii,1&i),null===e?(void 0!==a.fallback&&zi(t),e=a.children,i=a.fallback,o?(e=Qo(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Yo,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qo(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Yo,t.lanes=33554432,e):((n=Uu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(a=function(e,t,n,r,a){var i=t.mode,o=e.child;e=o.sibling;var l={mode:"hidden",children:n};return 0==(2&i)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=l,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=zu(o,l),null!==e?r=zu(e,r):(r=Hu(r,i,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?{baseLanes:n}:{baseLanes:i.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=Yo,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=zu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Qo(e,t,n,r){var a=e.mode,i=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==i?(i.childLanes=0,i.pendingProps=t):i=Uu(t,a,0,null),n=Hu(n,a,r,null),i.return=e,n.return=e,i.sibling=n,e.child=i,n}function Go(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ei(e.return,t)}function Jo(e,t,n,r,a,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a,o.lastEffect=i)}function Xo(e,t,n){var r=t.pendingProps,a=r.revealOrder,i=r.tail;if(jo(e,t,r.children,n),0!=(2&(r=Ii.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Go(e,n);else if(19===e.tag)Go(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(la(Ii,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ji(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Jo(t,!1,a,n,i,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ji(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Jo(t,!0,n,null,i,t.lastEffect);break;case"together":Jo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Dl|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=zu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=zu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function el(e,t){if(!Ni)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function tl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ha(),null;case 3:return Ai(),oa(da),oa(sa),Vi(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Hi(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:$i(t);var i=Oi(ki.current);if(n=t.type,null!==e&&null!=t.stateNode)Vo(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Oi(Si.current),Hi(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Kr]=t,r[Qr]=l,n){case"dialog":Mr("cancel",r),Mr("close",r);break;case"iframe":case"object":case"embed":Mr("load",r);break;case"video":case"audio":for(e=0;e<_r.length;e++)Mr(_r[e],r);break;case"source":Mr("error",r);break;case"img":case"image":case"link":Mr("error",r),Mr("load",r);break;case"details":Mr("toggle",r);break;case"input":ee(r,l),Mr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Mr("invalid",r);break;case"textarea":ue(r,l),Mr("invalid",r)}for(var s in Ee(n,l),e=null,l)l.hasOwnProperty(s)&&(i=l[s],"children"===s?"string"==typeof i?r.textContent!==i&&(e=["children",i]):"number"==typeof i&&r.textContent!==""+i&&(e=["children",""+i]):u.hasOwnProperty(s)&&null!=i&&"onScroll"===s&&Mr("scroll",r));switch(n){case"input":G(r),re(r,l,!0);break;case"textarea":G(r),de(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Lr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===i.nodeType?i:i.ownerDocument,e===ce&&(e=fe(n)),e===ce?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Kr]=t,e[Qr]=r,Wo(e,t),t.stateNode=e,s=Ce(n,r),n){case"dialog":Mr("cancel",e),Mr("close",e),i=r;break;case"iframe":case"object":case"embed":Mr("load",e),i=r;break;case"video":case"audio":for(i=0;i<_r.length;i++)Mr(_r[i],e);i=r;break;case"source":Mr("error",e),i=r;break;case"img":case"image":case"link":Mr("error",e),Mr("load",e),i=r;break;case"details":Mr("toggle",e),i=r;break;case"input":ee(e,r),i=Z(e,r),Mr("invalid",e);break;case"option":i=ie(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=a({},r,{value:void 0}),Mr("invalid",e);break;case"textarea":ue(e,r),i=le(e,r),Mr("invalid",e);break;default:i=r}Ee(n,i);var d=i;for(l in d)if(d.hasOwnProperty(l)){var c=d[l];"style"===l?xe(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&me(e,c):"children"===l?"string"==typeof c?("textarea"!==n||""!==c)&&be(e,c):"number"==typeof c&&be(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=c&&"onScroll"===l&&Mr("scroll",e):null!=c&&w(e,l,c,s))}switch(n){case"input":G(e),re(e,r,!1);break;case"textarea":G(e),de(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?oe(e,!!r.multiple,l,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Lr)}Rr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)qo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Oi(ki.current),Oi(Si.current),Hi(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return oa(Ii),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Hi(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ii.current)?0===$l&&($l=3):(0!==$l&&3!==$l||($l=4),null===kl||0==(134217727&Dl)&&0==(134217727&Ll)||fu(kl,Pl))),(r||n)&&(t.flags|=4),null);case 4:return Ai(),null===e&&Or(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return pa(t.type)&&ha(),null;case 19:if(oa(Ii),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)el(r,!1);else{if(0!==$l||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=ji(e))){for(t.flags|=64,el(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return la(Ii,1&Ii.current|2),t.child}e=e.sibling}null!==r.tail&&Ra()>zl&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=ji(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Ni)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ra()-r.renderingStartTime>zl&&1073741824!==n&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ra(),n.sibling=null,t=Ii.current,la(Ii,l?1&t|2:1&t),n):null;case 23:case 24:return bu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function nl(e){switch(e.tag){case 1:pa(e.type)&&ha();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ai(),oa(da),oa(sa),Vi(),0!=(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return $i(e),null;case 13:return oa(Ii),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Ii),null;case 4:return Ai(),null;case 10:return Za(e),null;case 23:case 24:return bu(),null;default:return null}}function rl(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function al(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vo=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Oi(Si.current);var o,l=null;switch(n){case"input":i=Z(e,i),r=Z(e,r),l=[];break;case"option":i=ie(e,i),r=ie(e,r),l=[];break;case"select":i=a({},i,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":i=le(e,i),r=le(e,r),l=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Lr)}for(c in Ee(n,r),n=null,i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&null!=i[c])if("style"===c){var s=i[c];for(o in s)s.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(u.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in r){var d=r[c];if(s=null!=i?i[c]:void 0,r.hasOwnProperty(c)&&d!==s&&(null!=d||null!=s))if("style"===c)if(s){for(o in s)!s.hasOwnProperty(o)||d&&d.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in d)d.hasOwnProperty(o)&&s[o]!==d[o]&&(n||(n={}),n[o]=d[o])}else n||(l||(l=[]),l.push(c,n)),n=d;else"dangerouslySetInnerHTML"===c?(d=d?d.__html:void 0,s=s?s.__html:void 0,null!=d&&s!==d&&(l=l||[]).push(c,d)):"children"===c?"string"!=typeof d&&"number"!=typeof d||(l=l||[]).push(c,""+d):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(u.hasOwnProperty(c)?(null!=d&&"onScroll"===c&&Mr("scroll",e),l||s===d||(l=[])):"object"==typeof d&&null!==d&&d.$$typeof===D?d.toString():(l=l||[]).push(c,d))}n&&(l=l||[]).push("style",n);var c=l;(t.updateQueue=c)&&(t.flags|=4)}},qo=function(e,t,n,r){n!==r&&(t.flags|=4)};var il="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oi(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Vl=r),al(0,t)},n}function ll(e,t,n){(n=oi(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return al(0,t),r(a)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===ql?ql=new Set([this]):ql.add(this),al(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ul="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ju(e,t)}else t.current=null}function dl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ya(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ur(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Tu(n,e),Au(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ya(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Rr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&xt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(e,t){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(va,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Tu(t,n);else{r=t;try{a()}catch(e){ju(r,e)}}n=n.next}while(n!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){ju(t,e)}break;case 5:sl(t);break;case 4:vl(e,t)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(gl(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.flags&&(be(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?bl(e,n,t):yl(e,n,t)}function bl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Lr));else if(4!==r&&null!==(e=e.child))for(bl(e,t,n),e=e.sibling;null!==e;)bl(e,t,n),e=e.sibling}function yl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function vl(e,t){for(var n,r,a=t,i=!1;;){if(!i){i=a.return;e:for(;;){if(null===i)throw Error(o(160));switch(n=i.stateNode,i.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}i=i.return}i=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(pl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(i=!1)}a.sibling.return=a.return,a=a.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ce(e,a),t=Ce(e,r),a=0;a<i.length;a+=2){var l=i[a],u=i[a+1];"style"===l?xe(n,u):"dangerouslySetInnerHTML"===l?me(n,u):"children"===l?be(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?oe(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(n,!!r.multiple,r.defaultValue,!0):oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,xt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Rl=Ra(),fl(t.child,!0)),void xl(t);case 19:return void xl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(o(163))}function xl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ul),t.forEach((function(t){var r=Lu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function _l(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var El=Math.ceil,Cl=x.ReactCurrentDispatcher,Sl=x.ReactCurrentOwner,Ml=0,kl=null,Ol=null,Pl=0,Al=0,Tl=ia(0),$l=0,Il=null,jl=0,Dl=0,Ll=0,Nl=0,Bl=null,Rl=0,zl=1/0;function Fl(){zl=Ra()+500}var Hl,Ul=null,Wl=!1,Vl=null,ql=null,Yl=!1,Kl=null,Ql=90,Gl=[],Jl=[],Xl=null,Zl=0,eu=null,tu=-1,nu=0,ru=0,au=null,iu=!1;function ou(){return 0!=(48&Ml)?Ra():-1!==tu?tu:tu=Ra()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===za()?1:2;if(0===nu&&(nu=jl),0!==qa.transition){0!==ru&&(ru=null!==Bl?Bl.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=za(),e=Rt(0!=(4&Ml)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zl)throw Zl=0,eu=null,Error(o(185));if(null===(e=su(e,t)))return null;Ht(e,t,n),e===kl&&(Ll|=t,4===$l&&fu(e,Pl));var r=za();1===t?0!=(8&Ml)&&0==(48&Ml)?pu(e):(du(e,n),0===Ml&&(Fl(),Wa())):(0==(4&Ml)||98!==r&&99!==r||(null===Xl?Xl=new Set([e]):Xl.add(e)),du(e,n)),Bl=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function du(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,i=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ut(l),s=1<<u,d=i[u];if(-1===d){if(0==(s&r)||0!=(s&a)){d=t,Lt(s);var c=Dt;i[u]=10<=c?d+250:6<=c?d+5e3:-1}}else d<=t&&(e.expiredLanes|=s);l&=~s}if(r=Nt(e,e===kl?Pl:0),t=Dt,0===r)null!==n&&(n!==Ia&&Ea(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ia&&Ea(n)}15===t?(n=pu.bind(null,e),null===Da?(Da=[n],La=_a(Oa,Va)):Da.push(n),n=Ia):n=14===t?Ua(99,pu.bind(null,e)):Ua(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(tu=-1,ru=nu=0,0!=(48&Ml))throw Error(o(327));var t=e.callbackNode;if(Pu()&&e.callbackNode!==t)return null;var n=Nt(e,e===kl?Pl:0);if(0===n)return null;var r=n,a=Ml;Ml|=16;var i=wu();for(kl===e&&Pl===r||(Fl(),yu(e,r));;)try{Eu();break}catch(t){vu(e,t)}if(Xa(),Cl.current=i,Ml=a,null!==Ol?r=0:(kl=null,Pl=0,r=$l),0!=(jl&Ll))yu(e,0);else if(0!==r){if(2===r&&(Ml|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(n=Bt(e))&&(r=xu(e,n))),1===r)throw t=Il,yu(e,0),fu(e,n),du(e,Ra()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(o(345));case 2:Mu(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Rl+500-Ra())){if(0!==Nt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Fr(Mu.bind(null,e),r);break}Mu(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-Ut(n);i=1<<l,(l=r[l])>a&&(a=l),n&=~i}if(n=a,10<(n=(120>(n=Ra()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*El(n/1960))-n)){e.timeoutHandle=Fr(Mu.bind(null,e),n);break}Mu(e);break;case 5:Mu(e);break;default:throw Error(o(329))}}return du(e,Ra()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~Nl,t&=~Ll,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ml))throw Error(o(327));if(Pu(),e===kl&&0!=(e.expiredLanes&Pl)){var t=Pl,n=xu(e,t);0!=(jl&Ll)&&(n=xu(e,t=Nt(e,t)))}else n=xu(e,t=Nt(e,0));if(0!==e.tag&&2===n&&(Ml|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(t=Bt(e))&&(n=xu(e,t))),1===n)throw n=Il,yu(e,0),fu(e,t),du(e,Ra()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Mu(e),du(e,Ra()),null}function hu(e,t){var n=Ml;Ml|=1;try{return e(t)}finally{0===(Ml=n)&&(Fl(),Wa())}}function gu(e,t){var n=Ml;Ml&=-2,Ml|=8;try{return e(t)}finally{0===(Ml=n)&&(Fl(),Wa())}}function mu(e,t){la(Tl,Al),Al|=t,jl|=t}function bu(){Al=Tl.current,oa(Tl)}function yu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Ol)for(n=Ol.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ha();break;case 3:Ai(),oa(da),oa(sa),Vi();break;case 5:$i(r);break;case 4:Ai();break;case 13:case 19:oa(Ii);break;case 10:Za(r);break;case 23:case 24:bu()}n=n.return}kl=e,Ol=zu(e.current,null),Pl=Al=jl=t,$l=0,Il=null,Nl=Ll=Dl=0}function vu(e,t){for(;;){var n=Ol;try{if(Xa(),qi.current=Oo,Xi){for(var r=Qi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Xi=!1}if(Ki=0,Ji=Gi=Qi=null,Zi=!1,Sl.current=null,null===n||null===n.return){$l=1,Il=t,Ol=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=Pl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var d=l.alternate;d?(l.updateQueue=d.updateQueue,l.memoizedState=d.memoizedState,l.lanes=d.lanes):(l.updateQueue=null,l.memoizedState=null)}var c=0!=(1&Ii.current),f=o;do{var p;if(p=13===f.tag){var h=f.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=f.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!c)}}if(p){var m=f.updateQueue;if(null===m){var b=new Set;b.add(s),f.updateQueue=b}else m.add(s);if(0==(2&f.mode)){if(f.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oi(-1,1);y.tag=2,li(l,y)}l.lanes|=1;break e}u=void 0,l=t;var v=i.pingCache;if(null===v?(v=i.pingCache=new il,u=new Set,v.set(s,u)):void 0===(u=v.get(s))&&(u=new Set,v.set(s,u)),!u.has(l)){u.add(l);var w=Du.bind(null,i,s,l);s.then(w,w)}f.flags|=4096,f.lanes=t;break e}f=f.return}while(null!==f);u=Error((Y(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==$l&&($l=2),u=rl(u,l),f=o;do{switch(f.tag){case 3:i=u,f.flags|=4096,t&=-t,f.lanes|=t,ui(f,ol(0,i,t));break e;case 1:i=u;var x=f.type,_=f.stateNode;if(0==(64&f.flags)&&("function"==typeof x.getDerivedStateFromError||null!==_&&"function"==typeof _.componentDidCatch&&(null===ql||!ql.has(_)))){f.flags|=4096,t&=-t,f.lanes|=t,ui(f,ll(f,i,t));break e}}f=f.return}while(null!==f)}Su(n)}catch(e){t=e,Ol===n&&null!==n&&(Ol=n=n.return);continue}break}}function wu(){var e=Cl.current;return Cl.current=Oo,null===e?Oo:e}function xu(e,t){var n=Ml;Ml|=16;var r=wu();for(kl===e&&Pl===t||yu(e,t);;)try{_u();break}catch(t){vu(e,t)}if(Xa(),Ml=n,Cl.current=r,null!==Ol)throw Error(o(261));return kl=null,Pl=0,$l}function _u(){for(;null!==Ol;)Cu(Ol)}function Eu(){for(;null!==Ol&&!Ca();)Cu(Ol)}function Cu(e){var t=Hl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Su(e):Ol=t,Sl.current=null}function Su(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=tl(n,t,Al)))return void(Ol=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Al)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=nl(t)))return n.flags&=2047,void(Ol=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ol=t);Ol=t=e}while(null!==t);0===$l&&($l=5)}function Mu(e){var t=za();return Ha(99,ku.bind(null,e,t)),null}function ku(e,t){do{Pu()}while(null!==Kl);if(0!=(48&Ml))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,i=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<i;){var s=31-Ut(i),d=1<<s;a[s]=0,l[s]=-1,u[s]=-1,i&=~d}if(null!==Xl&&0==(24&r)&&Xl.has(e)&&Xl.delete(e),e===kl&&(Ol=kl=null,Pl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ml,Ml|=32,Sl.current=null,Nr=Kt,pr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(d=u.getSelection&&u.getSelection())&&0!==d.rangeCount){u=d.anchorNode,i=d.anchorOffset,s=d.focusNode,d=d.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var c=0,f=-1,p=-1,h=0,g=0,m=l,b=null;t:for(;;){for(var y;m!==u||0!==i&&3!==m.nodeType||(f=c+i),m!==s||0!==d&&3!==m.nodeType||(p=c+d),3===m.nodeType&&(c+=m.nodeValue.length),null!==(y=m.firstChild);)b=m,m=y;for(;;){if(m===l)break t;if(b===u&&++h===i&&(f=c),b===s&&++g===d&&(p=c),null!==(y=m.nextSibling))break;b=(m=b).parentNode}m=y}u=-1===f||-1===p?null:{start:f,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Br={focusedElem:l,selectionRange:u},Kt=!1,au=null,iu=!1,Ul=r;do{try{Ou()}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);au=null,Ul=r;do{try{for(l=e;null!==Ul;){var v=Ul.flags;if(16&v&&be(Ul.stateNode,""),128&v){var w=Ul.alternate;if(null!==w){var x=w.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&v){case 2:ml(Ul),Ul.flags&=-3;break;case 6:ml(Ul),Ul.flags&=-3,wl(Ul.alternate,Ul);break;case 1024:Ul.flags&=-1025;break;case 1028:Ul.flags&=-1025,wl(Ul.alternate,Ul);break;case 4:wl(Ul.alternate,Ul);break;case 8:vl(l,u=Ul);var _=u.alternate;hl(u),null!==_&&hl(_)}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);if(x=Br,w=fr(),v=x.focusedElem,l=x.selectionRange,w!==v&&v&&v.ownerDocument&&cr(v.ownerDocument.documentElement,v)){null!==l&&pr(v)&&(w=l.start,void 0===(x=l.end)&&(x=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(x,v.value.length)):(x=(w=v.ownerDocument||document)&&w.defaultView||window).getSelection&&(x=x.getSelection(),u=v.textContent.length,_=Math.min(l.start,u),l=void 0===l.end?_:Math.min(l.end,u),!x.extend&&_>l&&(u=l,l=_,_=u),u=dr(v,_),i=dr(v,l),u&&i&&(1!==x.rangeCount||x.anchorNode!==u.node||x.anchorOffset!==u.offset||x.focusNode!==i.node||x.focusOffset!==i.offset)&&((w=w.createRange()).setStart(u.node,u.offset),x.removeAllRanges(),_>l?(x.addRange(w),x.extend(i.node,i.offset)):(w.setEnd(i.node,i.offset),x.addRange(w))))),w=[];for(x=v;x=x.parentNode;)1===x.nodeType&&w.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof v.focus&&v.focus(),v=0;v<w.length;v++)(x=w[v]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Kt=!!Nr,Br=Nr=null,e.current=n,Ul=r;do{try{for(v=e;null!==Ul;){var E=Ul.flags;if(36&E&&cl(v,Ul.alternate,Ul),128&E){w=void 0;var C=Ul.ref;if(null!==C){var S=Ul.stateNode;switch(Ul.tag){case 5:w=S;break;default:w=S}"function"==typeof C?C(w):C.current=w}}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);Ul=null,ja(),Ml=a}else e.current=n;if(Yl)Yl=!1,Kl=e,Ql=t;else for(Ul=r;null!==Ul;)t=Ul.nextEffect,Ul.nextEffect=null,8&Ul.flags&&((E=Ul).sibling=null,E.stateNode=null),Ul=t;if(0===(r=e.pendingLanes)&&(ql=null),1===r?e===eu?Zl++:(Zl=0,eu=e):Zl=0,n=n.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(va,n,void 0,64==(64&n.current.flags))}catch(e){}if(du(e,Ra()),Wl)throw Wl=!1,e=Vl,Vl=null,e;return 0!=(8&Ml)||Wa(),null}function Ou(){for(;null!==Ul;){var e=Ul.alternate;iu||null===au||(0!=(8&Ul.flags)?Ze(Ul,au)&&(iu=!0):13===Ul.tag&&_l(e,Ul)&&Ze(Ul,au)&&(iu=!0));var t=Ul.flags;0!=(256&t)&&dl(e,Ul),0==(512&t)||Yl||(Yl=!0,Ua(97,(function(){return Pu(),null}))),Ul=Ul.nextEffect}}function Pu(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Ha(e,$u)}return!1}function Au(e,t){Gl.push(t,e),Yl||(Yl=!0,Ua(97,(function(){return Pu(),null})))}function Tu(e,t){Jl.push(t,e),Yl||(Yl=!0,Ua(97,(function(){return Pu(),null})))}function $u(){if(null===Kl)return!1;var e=Kl;if(Kl=null,0!=(48&Ml))throw Error(o(331));var t=Ml;Ml|=32;var n=Jl;Jl=[];for(var r=0;r<n.length;r+=2){var a=n[r],i=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===i)throw Error(o(330));ju(i,e)}}for(n=Gl,Gl=[],r=0;r<n.length;r+=2){a=n[r],i=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===i)throw Error(o(330));ju(i,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ml=t,Wa(),!0}function Iu(e,t,n){li(e,t=ol(0,t=rl(n,t),1)),t=ou(),null!==(e=su(e,1))&&(Ht(e,1,t),du(e,t))}function ju(e,t){if(3===e.tag)Iu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Iu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r))){var a=ll(n,e=rl(t,e),1);if(li(n,a),a=ou(),null!==(n=su(n,1)))Ht(n,1,a),du(n,a);else if("function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Du(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,kl===e&&(Pl&n)===n&&(4===$l||3===$l&&(62914560&Pl)===Pl&&500>Ra()-Rl?yu(e,0):Nl|=n),du(e,t)}function Lu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===za()?1:2:(0===nu&&(nu=jl),0===(t=zt(62914560&~nu))&&(t=4194304))),n=ou(),null!==(e=su(e,t))&&(Ht(e,t,n),du(e,n))}function Nu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Bu(e,t,n,r){return new Nu(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function zu(e,t){var n=e.alternate;return null===n?((n=Bu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,i){var l=2;if(r=e,"function"==typeof e)Ru(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case C:return Hu(n.children,a,i,t);case L:l=8,a|=16;break;case S:l=8,a|=1;break;case M:return(e=Bu(12,n,t,8|a)).elementType=M,e.type=M,e.lanes=i,e;case A:return(e=Bu(13,n,t,a)).type=A,e.elementType=A,e.lanes=i,e;case T:return(e=Bu(19,n,t,a)).elementType=T,e.lanes=i,e;case N:return Uu(n,a,i,t);case B:return(e=Bu(24,n,t,a)).elementType=B,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:l=10;break e;case O:l=9;break e;case P:l=11;break e;case $:l=14;break e;case I:l=16,r=null;break e;case j:l=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Bu(l,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Hu(e,t,n,r){return(e=Bu(7,e,r,t)).lanes=n,e}function Uu(e,t,n,r){return(e=Bu(23,e,r,t)).elementType=N,e.lanes=n,e}function Wu(e,t,n){return(e=Bu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Bu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ft(0),this.expirationTimes=Ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ft(0),this.mutableSourceEagerHydrationData=null}function Yu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var a=t.current,i=ou(),l=lu(a);e:if(n){t:{if(Qe(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(o(171))}if(1===n.tag){var s=n.type;if(pa(s)){n=ma(n,s,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=oi(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),li(a,t),uu(a,l,i),l}function Qu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Gu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ju(e,t){Gu(e,t),(e=e.alternate)&&Gu(e,t)}function Xu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new qu(e,t,null!=n&&!0===n.hydrate),t=Bu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ai(t),e[Gr]=n.current,Or(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function es(e,t,n,r,a){var i=n._reactRootContainer;if(i){var o=i._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Qu(o);l.call(e)}}Ku(t,o,e,a)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Xu(e,0,t?{hydrate:!0}:void 0)}(n,r),o=i._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Qu(o);u.call(e)}}gu((function(){Ku(t,o,e,a)}))}return Qu(o)}function ts(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(o(200));return Yu(e,t,null,n)}Hl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||da.current)Io=!0;else{if(0==(n&r)){switch(Io=!1,t.tag){case 3:Uo(t),Ui();break;case 5:Ti(t);break;case 1:pa(t.type)&&ba(t);break;case 4:Pi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;la(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ko(e,t,n):(la(Ii,1&Ii.current),null!==(t=Zo(e,t,n))?t.sibling:null);la(Ii,1&Ii.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Xo(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),la(Ii,Ii.current),r)break;return null;case 23:case 24:return t.lanes=0,Bo(e,t,n)}return Zo(e,t,n)}Io=0!=(16384&e.flags)}else Io=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,sa.current),ti(t,n),a=no(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var i=!0;ba(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fi(t,r,l,e),a.updater=pi,t.stateNode=a,a._reactInternals=t,bi(t,r,e,n),t=Ho(null,t,r,!0,i,n)}else t.tag=0,jo(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(i=a._init)(a._payload),t.type=a,i=t.tag=function(e){if("function"==typeof e)return Ru(e)?1:0;if(null!=e){if((e=e.$$typeof)===P)return 11;if(e===$)return 14}return 2}(a),e=Ya(a,e),i){case 0:t=zo(null,t,a,e,n);break e;case 1:t=Fo(null,t,a,e,n);break e;case 11:t=Do(null,t,a,e,n);break e;case 14:t=Lo(null,t,a,Ya(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,zo(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 1:return r=t.type,a=t.pendingProps,Fo(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 3:if(Uo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ii(e,t),si(t,r,null,n),(r=t.memoizedState.element)===a)Ui(),t=Zo(e,t,n);else{if((i=(a=t.stateNode).hydrate)&&(Li=Wr(t.stateNode.containerInfo.firstChild),Di=t,i=Ni=!0),i){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(i=e[a])._workInProgressVersionPrimary=e[a+1],Wi.push(i);for(n=Ei(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else jo(e,t,r,n),Ui();t=t.child}return t;case 5:return Ti(t),null===e&&zi(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,l=a.children,zr(r,a)?l=null:null!==i&&zr(r,i)&&(t.flags|=16),Ro(e,t),jo(e,t,l,n),t.child;case 6:return null===e&&zi(t),null;case 13:return Ko(e,t,n);case 4:return Pi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=_i(t,null,r,n):jo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Do(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 7:return jo(e,t,t.pendingProps,n),t.child;case 8:case 12:return jo(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,i=a.value;var u=t.type._context;if(la(Ka,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0==(i=or(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===a.children&&!da.current){t=Zo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var d=s.firstContext;null!==d;){if(d.context===r&&0!=(d.observedBits&i)){1===u.tag&&((d=oi(-1,n&-n)).tag=2,li(u,d)),u.lanes|=n,null!==(d=u.alternate)&&(d.lanes|=n),ei(u.return,n),s.lanes|=n;break}d=d.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}jo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(i=t.pendingProps).children,ti(t,n),r=r(a=ni(a,i.unstable_observedBits)),t.flags|=1,jo(e,t,r,n),t.child;case 14:return i=Ya(a=t.type,t.pendingProps),Lo(e,t,a,i=Ya(a.type,i),r,n);case 15:return No(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ya(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ba(t)):e=!1,ti(t,n),gi(t,r,a),bi(t,r,a,n),Ho(null,t,r,!0,e,n);case 19:return Xo(e,t,n);case 23:case 24:return Bo(e,t,n)}throw Error(o(156,t.tag))},Xu.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Xu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Gr]=null}))},et=function(e){13===e.tag&&(uu(e,4,ou()),Ju(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,ou()),Ju(e,67108864))},nt=function(e){if(13===e.tag){var t=ou(),n=lu(e);uu(e,n,t),Ju(e,n)}},rt=function(e,t){return t()},Me=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(o(90));J(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},$e=hu,Ie=function(e,t,n,r,a){var i=Ml;Ml|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(Ml=i)&&(Fl(),Wa())}},je=function(){0==(49&Ml)&&(function(){if(null!==Xl){var e=Xl;Xl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,du(e,Ra())}))}Wa()}(),Pu())},De=function(e,t){var n=Ml;Ml|=2;try{return e(t)}finally{0===(Ml=n)&&(Fl(),Wa())}};var ns={Events:[Zr,ea,ta,Ae,Te,Pu,{current:!1}]},rs={findFiberByHostInstance:Xr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},as={bundleType:rs.bundleType,version:rs.version,rendererPackageName:rs.rendererPackageName,rendererConfig:rs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Xe(e))?null:e.stateNode},findFiberByHostInstance:rs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var is=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!is.isDisabled&&is.supportsFiber)try{va=is.inject(as),wa=is}catch(ge){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,t.createPortal=ts,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return null===(e=Xe(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ml;if(0!=(48&n))return e(t);Ml|=1;try{if(e)return Ha(99,e.bind(null,t))}finally{Ml=n,Wa()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(o(200));return es(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(o(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(o(40));return!!e._reactRootContainer&&(gu((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[Gr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return ts(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return es(e,t,n,!1,r)},t.version="17.0.2"},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,d=n?Symbol.for("react.async_mode"):60111,c=n?Symbol.for("react.concurrent_mode"):60111,f=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,g=n?Symbol.for("react.memo"):60115,m=n?Symbol.for("react.lazy"):60116,b=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,v=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case d:case c:case i:case l:case o:case p:return e;default:switch(e=e&&e.$$typeof){case s:case f:case m:case g:case u:return e;default:return t}}case a:return t}}}function _(e){return x(e)===c}t.AsyncMode=d,t.ConcurrentMode=c,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=f,t.Fragment=i,t.Lazy=m,t.Memo=g,t.Portal=a,t.Profiler=l,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return _(e)||x(e)===d},t.isConcurrentMode=_,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return x(e)===f},t.isFragment=function(e){return x(e)===i},t.isLazy=function(e){return x(e)===m},t.isMemo=function(e){return x(e)===g},t.isPortal=function(e){return x(e)===a},t.isProfiler=function(e){return x(e)===l},t.isStrictMode=function(e){return x(e)===o},t.isSuspense=function(e){return x(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===c||e===l||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===g||e.$$typeof===u||e.$$typeof===s||e.$$typeof===f||e.$$typeof===y||e.$$typeof===v||e.$$typeof===w||e.$$typeof===b)},t.typeOf=x},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},3692:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BrowserRouter:()=>ae,HashRouter:()=>ie,Link:()=>le,MemoryRouter:()=>q,NavLink:()=>ue,Navigate:()=>Y,NavigationType:()=>r,Outlet:()=>K,Route:()=>Q,Router:()=>G,Routes:()=>J,UNSAFE_LocationContext:()=>g,UNSAFE_NavigationContext:()=>h,UNSAFE_RouteContext:()=>m,createPath:()=>f,createRoutesFromChildren:()=>X,createSearchParams:()=>ce,generatePath:()=>y,matchPath:()=>S,matchRoutes:()=>v,parsePath:()=>p,renderMatches:()=>Z,resolvePath:()=>M,unstable_HistoryRouter:()=>oe,useHref:()=>I,useInRouterContext:()=>j,useLinkClickHandler:()=>se,useLocation:()=>D,useMatch:()=>N,useNavigate:()=>B,useNavigationType:()=>L,useOutlet:()=>F,useOutletContext:()=>z,useParams:()=>H,useResolvedPath:()=>U,useRoutes:()=>W,useSearchParams:()=>de});var r,a=n(7294);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(r||(r={}));var o="beforeunload",l="popstate";function u(e,t,n){return Math.min(Math.max(e,t),n)}function s(e){e.preventDefault(),e.returnValue=""}function d(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function c(){return Math.random().toString(36).substr(2,8)}function f(e){var t=e.pathname,n=void 0===t?"/":t,r=e.search,a=void 0===r?"":r,i=e.hash,o=void 0===i?"":i;return a&&"?"!==a&&(n+="?"===a.charAt(0)?a:"?"+a),o&&"#"!==o&&(n+="#"===o.charAt(0)?o:"#"+o),n}function p(e){var t={};if(e){var n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));var r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}const h=(0,a.createContext)(null),g=(0,a.createContext)(null),m=(0,a.createContext)({outlet:null,matches:[]});function b(e,t){if(!e)throw new Error(t)}function y(e,t){return void 0===t&&(t={}),e.replace(/:(\w+)/g,((e,n)=>(null==t[n]&&b(!1),t[n]))).replace(/\/*\*$/,(e=>null==t["*"]?"":t["*"].replace(/^\/*/,"/")))}function v(e,t,n){void 0===n&&(n="/");let r=O(("string"==typeof t?p(t):t).pathname||"/",n);if(null==r)return null;let a=w(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let i=null;for(let e=0;null==i&&e<a.length;++e)i=C(a[e],r);return i}function w(e,t,n,r){return void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===r&&(r=""),e.forEach(((e,a)=>{let i={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};i.relativePath.startsWith("/")&&(i.relativePath.startsWith(r)||b(!1),i.relativePath=i.relativePath.slice(r.length));let o=P([r,i.relativePath]),l=n.concat(i);e.children&&e.children.length>0&&(!0===e.index&&b(!1),w(e.children,t,l,o)),(null!=e.path||e.index)&&t.push({path:o,score:E(o,e.index),routesMeta:l})})),t}const x=/^:\w+$/,_=e=>"*"===e;function E(e,t){let n=e.split("/"),r=n.length;return n.some(_)&&(r+=-2),t&&(r+=2),n.filter((e=>!_(e))).reduce(((e,t)=>e+(x.test(t)?3:""===t?1:10)),r)}function C(e,t){let{routesMeta:n}=e,r={},a="/",i=[];for(let e=0;e<n.length;++e){let o=n[e],l=e===n.length-1,u="/"===a?t:t.slice(a.length)||"/",s=S({path:o.relativePath,caseSensitive:o.caseSensitive,end:l},u);if(!s)return null;Object.assign(r,s.params);let d=o.route;i.push({params:r,pathname:P([a,s.pathname]),pathnameBase:A(P([a,s.pathnameBase])),route:d}),"/"!==s.pathnameBase&&(a=P([a,s.pathnameBase]))}return i}function S(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0);let r=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(r.push(t),"([^\\/]+)")));return e.endsWith("*")?(r.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):a+=n?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(a,t?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),a=t.match(n);if(!a)return null;let i=a[0],o=i.replace(/(.)\/+$/,"$1"),l=a.slice(1);return{params:r.reduce(((e,t,n)=>{if("*"===t){let e=l[n]||"";o=i.slice(0,i.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(t){return e}}(l[n]||""),e}),{}),pathname:i,pathnameBase:o,pattern:e}}function M(e,t){void 0===t&&(t="/");let{pathname:n,search:r="",hash:a=""}="string"==typeof e?p(e):e;return{pathname:n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t,search:T(r),hash:$(a)}}function k(e,t,n){let r,a="string"==typeof e?p(e):e,i=""===e||""===a.pathname?"/":a.pathname;if(null==i)r=n;else{let e=t.length-1;if(i.startsWith("..")){let t=i.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}r=e>=0?t[e]:"/"}let o=M(a,r);return i&&"/"!==i&&i.endsWith("/")&&!o.pathname.endsWith("/")&&(o.pathname+="/"),o}function O(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=e.charAt(t.length);return n&&"/"!==n?null:e.slice(t.length)||"/"}const P=e=>e.join("/").replace(/\/\/+/g,"/"),A=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),T=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",$=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function I(e){j()||b(!1);let{basename:t,navigator:n}=(0,a.useContext)(h),{hash:r,pathname:i,search:o}=U(e),l=i;if("/"!==t){let n=function(e){return""===e||""===e.pathname?"/":"string"==typeof e?p(e).pathname:e.pathname}(e),r=null!=n&&n.endsWith("/");l="/"===i?t+(r?"/":""):P([t,i])}return n.createHref({pathname:l,search:o,hash:r})}function j(){return null!=(0,a.useContext)(g)}function D(){return j()||b(!1),(0,a.useContext)(g).location}function L(){return(0,a.useContext)(g).navigationType}function N(e){j()||b(!1);let{pathname:t}=D();return(0,a.useMemo)((()=>S(e,t)),[t,e])}function B(){j()||b(!1);let{basename:e,navigator:t}=(0,a.useContext)(h),{matches:n}=(0,a.useContext)(m),{pathname:r}=D(),i=JSON.stringify(n.map((e=>e.pathnameBase))),o=(0,a.useRef)(!1);return(0,a.useEffect)((()=>{o.current=!0})),(0,a.useCallback)((function(n,a){if(void 0===a&&(a={}),!o.current)return;if("number"==typeof n)return void t.go(n);let l=k(n,JSON.parse(i),r);"/"!==e&&(l.pathname=P([e,l.pathname])),(a.replace?t.replace:t.push)(l,a.state)}),[e,t,i,r])}const R=(0,a.createContext)(null);function z(){return(0,a.useContext)(R)}function F(e){let t=(0,a.useContext)(m).outlet;return t?(0,a.createElement)(R.Provider,{value:e},t):t}function H(){let{matches:e}=(0,a.useContext)(m),t=e[e.length-1];return t?t.params:{}}function U(e){let{matches:t}=(0,a.useContext)(m),{pathname:n}=D(),r=JSON.stringify(t.map((e=>e.pathnameBase)));return(0,a.useMemo)((()=>k(e,JSON.parse(r),n)),[e,r,n])}function W(e,t){j()||b(!1);let{matches:n}=(0,a.useContext)(m),r=n[n.length-1],i=r?r.params:{},o=(r&&r.pathname,r?r.pathnameBase:"/");r&&r.route;let l,u=D();if(t){var s;let e="string"==typeof t?p(t):t;"/"===o||(null==(s=e.pathname)?void 0:s.startsWith(o))||b(!1),l=e}else l=u;let d=l.pathname||"/",c=v(e,{pathname:"/"===o?d:d.slice(o.length)||"/"});return V(c&&c.map((e=>Object.assign({},e,{params:Object.assign({},i,e.params),pathname:P([o,e.pathname]),pathnameBase:"/"===e.pathnameBase?o:P([o,e.pathnameBase])}))),n)}function V(e,t){return void 0===t&&(t=[]),null==e?null:e.reduceRight(((n,r,i)=>(0,a.createElement)(m.Provider,{children:void 0!==r.route.element?r.route.element:n,value:{outlet:n,matches:t.concat(e.slice(0,i+1))}})),null)}function q(e){let{basename:t,children:n,initialEntries:o,initialIndex:l}=e,s=(0,a.useRef)();null==s.current&&(s.current=function(e){void 0===e&&(e={});var t=e,n=t.initialEntries,a=void 0===n?["/"]:n,o=t.initialIndex,l=a.map((function(e){return i({pathname:"/",search:"",hash:"",state:null,key:c()},"string"==typeof e?p(e):e)})),s=u(null==o?l.length-1:o,0,l.length-1),h=r.Pop,g=l[s],m=d(),b=d();function y(e,t){return void 0===t&&(t=null),i({pathname:g.pathname,search:"",hash:""},"string"==typeof e?p(e):e,{state:t,key:c()})}function v(e,t,n){return!b.length||(b.call({action:e,location:t,retry:n}),!1)}function w(e,t){h=e,g=t,m.call({action:h,location:g})}function x(e){var t=u(s+e,0,l.length-1),n=r.Pop,a=l[t];v(n,a,(function(){x(e)}))&&(s=t,w(n,a))}return{get index(){return s},get action(){return h},get location(){return g},createHref:function(e){return"string"==typeof e?e:f(e)},push:function e(t,n){var a=r.Push,i=y(t,n);v(a,i,(function(){e(t,n)}))&&(s+=1,l.splice(s,l.length,i),w(a,i))},replace:function e(t,n){var a=r.Replace,i=y(t,n);v(a,i,(function(){e(t,n)}))&&(l[s]=i,w(a,i))},go:x,back:function(){x(-1)},forward:function(){x(1)},listen:function(e){return m.push(e)},block:function(e){return b.push(e)}}}({initialEntries:o,initialIndex:l}));let h=s.current,[g,m]=(0,a.useState)({action:h.action,location:h.location});return(0,a.useLayoutEffect)((()=>h.listen(m)),[h]),(0,a.createElement)(G,{basename:t,children:n,location:g.location,navigationType:g.action,navigator:h})}function Y(e){let{to:t,replace:n,state:r}=e;j()||b(!1);let i=B();return(0,a.useEffect)((()=>{i(t,{replace:n,state:r})})),null}function K(e){return F(e.context)}function Q(e){b(!1)}function G(e){let{basename:t="/",children:n=null,location:i,navigationType:o=r.Pop,navigator:l,static:u=!1}=e;j()&&b(!1);let s=A(t),d=(0,a.useMemo)((()=>({basename:s,navigator:l,static:u})),[s,l,u]);"string"==typeof i&&(i=p(i));let{pathname:c="/",search:f="",hash:m="",state:y=null,key:v="default"}=i,w=(0,a.useMemo)((()=>{let e=O(c,s);return null==e?null:{pathname:e,search:f,hash:m,state:y,key:v}}),[s,c,f,m,y,v]);return null==w?null:(0,a.createElement)(h.Provider,{value:d},(0,a.createElement)(g.Provider,{children:n,value:{location:w,navigationType:o}}))}function J(e){let{children:t,location:n}=e;return W(X(t),n)}function X(e){let t=[];return a.Children.forEach(e,(e=>{if(!(0,a.isValidElement)(e))return;if(e.type===a.Fragment)return void t.push.apply(t,X(e.props.children));e.type!==Q&&b(!1);let n={caseSensitive:e.props.caseSensitive,element:e.props.element,index:e.props.index,path:e.props.path};e.props.children&&(n.children=X(e.props.children)),t.push(n)})),t}function Z(e){return V(e)}function ee(){return(ee=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function te(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}const ne=["onClick","reloadDocument","replace","state","target","to"],re=["aria-current","caseSensitive","className","end","style","to","children"];function ae(e){let{basename:t,children:n,window:u}=e,h=(0,a.useRef)();null==h.current&&(h.current=function(e){void 0===e&&(e={});var t=e.window,n=void 0===t?document.defaultView:t,a=n.history;function u(){var e=n.location,t=e.pathname,r=e.search,i=e.hash,o=a.state||{};return[o.idx,{pathname:t,search:r,hash:i,state:o.usr||null,key:o.key||"default"}]}var h=null;n.addEventListener(l,(function(){if(h)w.call(h),h=null;else{var e=r.Pop,t=u(),n=t[0],a=t[1];if(w.length){if(null!=n){var i=b-n;i&&(h={action:e,location:a,retry:function(){M(-1*i)}},M(i))}}else S(e)}}));var g=r.Pop,m=u(),b=m[0],y=m[1],v=d(),w=d();function x(e){return"string"==typeof e?e:f(e)}function _(e,t){return void 0===t&&(t=null),i({pathname:y.pathname,hash:"",search:""},"string"==typeof e?p(e):e,{state:t,key:c()})}function E(e,t){return[{usr:e.state,key:e.key,idx:t},x(e)]}function C(e,t,n){return!w.length||(w.call({action:e,location:t,retry:n}),!1)}function S(e){g=e;var t=u();b=t[0],y=t[1],v.call({action:g,location:y})}function M(e){a.go(e)}return null==b&&(b=0,a.replaceState(i({},a.state,{idx:b}),"")),{get action(){return g},get location(){return y},createHref:x,push:function e(t,i){var o=r.Push,l=_(t,i);if(C(o,l,(function(){e(t,i)}))){var u=E(l,b+1),s=u[0],d=u[1];try{a.pushState(s,"",d)}catch(e){n.location.assign(d)}S(o)}},replace:function e(t,n){var i=r.Replace,o=_(t,n);if(C(i,o,(function(){e(t,n)}))){var l=E(o,b),u=l[0],s=l[1];a.replaceState(u,"",s),S(i)}},go:M,back:function(){M(-1)},forward:function(){M(1)},listen:function(e){return v.push(e)},block:function(e){var t=w.push(e);return 1===w.length&&n.addEventListener(o,s),function(){t(),w.length||n.removeEventListener(o,s)}}}}({window:u}));let g=h.current,[m,b]=(0,a.useState)({action:g.action,location:g.location});return(0,a.useLayoutEffect)((()=>g.listen(b)),[g]),(0,a.createElement)(G,{basename:t,children:n,location:m.location,navigationType:m.action,navigator:g})}function ie(e){let{basename:t,children:n,window:u}=e,h=(0,a.useRef)();null==h.current&&(h.current=function(e){void 0===e&&(e={});var t=e.window,n=void 0===t?document.defaultView:t,a=n.history;function u(){var e=p(n.location.hash.substr(1)),t=e.pathname,r=void 0===t?"/":t,i=e.search,o=void 0===i?"":i,l=e.hash,u=void 0===l?"":l,s=a.state||{};return[s.idx,{pathname:r,search:o,hash:u,state:s.usr||null,key:s.key||"default"}]}var h=null;function g(){if(h)x.call(h),h=null;else{var e=r.Pop,t=u(),n=t[0],a=t[1];if(x.length){if(null!=n){var i=y-n;i&&(h={action:e,location:a,retry:function(){k(-1*i)}},k(i))}}else M(e)}}n.addEventListener(l,g),n.addEventListener("hashchange",(function(){f(u()[1])!==f(v)&&g()}));var m=r.Pop,b=u(),y=b[0],v=b[1],w=d(),x=d();function _(e){return function(){var e=document.querySelector("base"),t="";if(e&&e.getAttribute("href")){var r=n.location.href,a=r.indexOf("#");t=-1===a?r:r.slice(0,a)}return t}()+"#"+("string"==typeof e?e:f(e))}function E(e,t){return void 0===t&&(t=null),i({pathname:v.pathname,hash:"",search:""},"string"==typeof e?p(e):e,{state:t,key:c()})}function C(e,t){return[{usr:e.state,key:e.key,idx:t},_(e)]}function S(e,t,n){return!x.length||(x.call({action:e,location:t,retry:n}),!1)}function M(e){m=e;var t=u();y=t[0],v=t[1],w.call({action:m,location:v})}function k(e){a.go(e)}return null==y&&(y=0,a.replaceState(i({},a.state,{idx:y}),"")),{get action(){return m},get location(){return v},createHref:_,push:function e(t,i){var o=r.Push,l=E(t,i);if(S(o,l,(function(){e(t,i)}))){var u=C(l,y+1),s=u[0],d=u[1];try{a.pushState(s,"",d)}catch(e){n.location.assign(d)}M(o)}},replace:function e(t,n){var i=r.Replace,o=E(t,n);if(S(i,o,(function(){e(t,n)}))){var l=C(o,y),u=l[0],s=l[1];a.replaceState(u,"",s),M(i)}},go:k,back:function(){k(-1)},forward:function(){k(1)},listen:function(e){return w.push(e)},block:function(e){var t=x.push(e);return 1===x.length&&n.addEventListener(o,s),function(){t(),x.length||n.removeEventListener(o,s)}}}}({window:u}));let g=h.current,[m,b]=(0,a.useState)({action:g.action,location:g.location});return(0,a.useLayoutEffect)((()=>g.listen(b)),[g]),(0,a.createElement)(G,{basename:t,children:n,location:m.location,navigationType:m.action,navigator:g})}function oe(e){let{basename:t,children:n,history:r}=e;const[i,o]=(0,a.useState)({action:r.action,location:r.location});return(0,a.useLayoutEffect)((()=>r.listen(o)),[r]),(0,a.createElement)(G,{basename:t,children:n,location:i.location,navigationType:i.action,navigator:r})}const le=(0,a.forwardRef)((function(e,t){let{onClick:n,reloadDocument:r,replace:i=!1,state:o,target:l,to:u}=e,s=te(e,ne),d=I(u),c=se(u,{replace:i,state:o,target:l});return(0,a.createElement)("a",ee({},s,{href:d,onClick:function(e){n&&n(e),e.defaultPrevented||r||c(e)},ref:t,target:l}))})),ue=(0,a.forwardRef)((function(e,t){let{"aria-current":n="page",caseSensitive:r=!1,className:i="",end:o=!1,style:l,to:u,children:s}=e,d=te(e,re),c=D(),f=U(u),p=c.pathname,h=f.pathname;r||(p=p.toLowerCase(),h=h.toLowerCase());let g,m=p===h||!o&&p.startsWith(h)&&"/"===p.charAt(h.length),b=m?n:void 0;g="function"==typeof i?i({isActive:m}):[i,m?"active":null].filter(Boolean).join(" ");let y="function"==typeof l?l({isActive:m}):l;return(0,a.createElement)(le,ee({},d,{"aria-current":b,className:g,ref:t,style:y,to:u}),"function"==typeof s?s({isActive:m}):s)}));function se(e,t){let{target:n,replace:r,state:i}=void 0===t?{}:t,o=B(),l=D(),u=U(e);return(0,a.useCallback)((t=>{if(!(0!==t.button||n&&"_self"!==n||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(t))){t.preventDefault();let n=!!r||f(l)===f(u);o(e,{replace:n,state:i})}}),[l,o,u,r,i,n,e])}function de(e){let t=(0,a.useRef)(ce(e)),n=D(),r=(0,a.useMemo)((()=>{let e=ce(n.search);for(let n of t.current.keys())e.has(n)||t.current.getAll(n).forEach((t=>{e.append(n,t)}));return e}),[n.search]),i=B();return[r,(0,a.useCallback)(((e,t)=>{i("?"+ce(e),t)}),[i])]}function ce(e){return void 0===e&&(e=""),new URLSearchParams("string"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce(((t,n)=>{let r=e[n];return t.concat(Array.isArray(r)?r.map((e=>[n,e])):[[n,r]])}),[]))}},2408:(e,t,n)=>{"use strict";var r=n(7418),a=60103,i=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,d=60116;if("function"==typeof Symbol&&Symbol.for){var c=Symbol.for;a=c("react.element"),i=c("react.portal"),t.Fragment=c("react.fragment"),t.StrictMode=c("react.strict_mode"),t.Profiler=c("react.profiler"),o=c("react.provider"),l=c("react.context"),u=c("react.forward_ref"),t.Suspense=c("react.suspense"),s=c("react.memo"),d=c("react.lazy")}var f="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function m(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function b(){}function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=m.prototype;var v=y.prototype=new b;v.constructor=y,r(v,m.prototype),v.isPureReactComponent=!0;var w={current:null},x=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,i={},o=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)x.call(t,r)&&!_.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(1===u)i.children=n;else if(1<u){for(var s=Array(u),d=0;d<u;d++)s[d]=arguments[d+2];i.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===i[r]&&(i[r]=u[r]);return{$$typeof:a,type:e,key:o,ref:l,props:i,_owner:w.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var S=/\/+/g;function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function k(e,t,n,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case i:u=!0}}if(u)return o=o(u=e),e=""===r?"."+M(u,0):r,Array.isArray(o)?(n="",null!=e&&(n=e.replace(S,"$&/")+"/"),k(o,t,n,"",(function(e){return e}))):null!=o&&(C(o)&&(o=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(S,"$&/")+"/")+e)),t.push(o)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var d=r+M(l=e[s],s);u+=k(l,t,n,d,o)}else if("function"==typeof(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e)))for(e=d.call(e),s=0;!(l=e.next()).done;)u+=k(l=l.value,t,n,d=r+M(l,s++),o);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,n){if(null==e)return e;var r=[],a=0;return k(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var A={current:null};function T(){var e=A.current;if(null===e)throw Error(p(321));return e}var $={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!C(e))throw Error(p(143));return e}},t.Component=m,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var i=r({},e.props),o=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(d in t)x.call(t,d)&&!_.hasOwnProperty(d)&&(i[d]=void 0===t[d]&&void 0!==s?s[d]:t[d])}var d=arguments.length-2;if(1===d)i.children=n;else if(1<d){s=Array(d);for(var c=0;c<d;c++)s[c]=arguments[c+2];i.children=s}return{$$typeof:a,type:e.type,key:o,ref:l,props:i,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=C,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return T().useCallback(e,t)},t.useContext=function(e,t){return T().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return T().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return T().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return T().useLayoutEffect(e,t)},t.useMemo=function(e,t){return T().useMemo(e,t)},t.useReducer=function(e,t,n){return T().useReducer(e,t,n)},t.useRef=function(e){return T().useRef(e)},t.useState=function(e){return T().useState(e)},t.version="17.0.2"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";var n,r,a,i;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,d=null,c=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(c,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(c,0))},r=function(e,t){d=setTimeout(e,t)},a=function(){clearTimeout(d)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var f=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,m=null,b=-1,y=5,v=0;t.unstable_shouldYield=function(){return t.unstable_now()>=v},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,x=w.port2;w.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();v=e+y;try{m(!0,e)?x.postMessage(null):(g=!1,m=null)}catch(e){throw x.postMessage(null),e}}else g=!1},n=function(e){m=e,g||(g=!0,x.postMessage(null))},r=function(e,n){b=f((function(){e(t.unstable_now())}),n)},a=function(){p(b),b=-1}}function _(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<S(a,t)))break e;e[r]=t,e[n]=a,n=r}}function E(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var i=2*(r+1)-1,o=e[i],l=i+1,u=e[l];if(void 0!==o&&0>S(o,n))void 0!==u&&0>S(u,o)?(e[r]=u,e[l]=n,r=l):(e[r]=o,e[i]=n,r=i);else{if(!(void 0!==u&&0>S(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function S(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var M=[],k=[],O=1,P=null,A=3,T=!1,$=!1,I=!1;function j(e){for(var t=E(k);null!==t;){if(null===t.callback)C(k);else{if(!(t.startTime<=e))break;C(k),t.sortIndex=t.expirationTime,_(M,t)}t=E(k)}}function D(e){if(I=!1,j(e),!$)if(null!==E(M))$=!0,n(L);else{var t=E(k);null!==t&&r(D,t.startTime-e)}}function L(e,n){$=!1,I&&(I=!1,a()),T=!0;var i=A;try{for(j(n),P=E(M);null!==P&&(!(P.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=P.callback;if("function"==typeof o){P.callback=null,A=P.priorityLevel;var l=o(P.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?P.callback=l:P===E(M)&&C(M),j(n)}else C(M);P=E(M)}if(null!==P)var u=!0;else{var s=E(k);null!==s&&r(D,s.startTime-n),u=!1}return u}finally{P=null,A=i,T=!1}}var N=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){$||T||($=!0,n(L))},t.unstable_getCurrentPriorityLevel=function(){return A},t.unstable_getFirstCallbackNode=function(){return E(M)},t.unstable_next=function(e){switch(A){case 1:case 2:case 3:var t=3;break;default:t=A}var n=A;A=t;try{return e()}finally{A=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=N,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=A;A=e;try{return t()}finally{A=n}},t.unstable_scheduleCallback=function(e,i,o){var l=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?l+o:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:i,priorityLevel:e,startTime:o,expirationTime:u=o+u,sortIndex:-1},o>l?(e.sortIndex=o,_(k,e),null===E(M)&&e===E(k)&&(I?a():I=!0,r(D,o-l))):(e.sortIndex=u,_(M,e),$||T||($=!0,n(L))),e},t.unstable_wrapCallback=function(e){var t=A;return function(){var n=A;A=t;try{return e.apply(this,arguments)}finally{A=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},6774:e=>{e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var i=Object.keys(e),o=Object.keys(t);if(i.length!==o.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<i.length;u++){var s=i[u];if(!l(s))return!1;var d=e[s],c=t[s];if(!1===(a=n?n.call(r,d,c,s):void 0)||void 0===a&&d!==c)return!1}return!0}},9232:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>b});var r=n(3379),a=n.n(r),i=n(7795),o=n.n(i),l=n(569),u=n.n(l),s=n(3565),d=n.n(s),c=n(9216),f=n.n(c),p=n(4589),h=n.n(p),g=n(5735),m={};m.styleTagTransform=h(),m.setAttributes=d(),m.insert=u().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=f(),a()(g.Z,m);const b=g.Z&&g.Z.locals?g.Z.locals:void 0},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},o=[],l=0;l<e.length;l++){var u=e[l],s=r.base?u[0]+r.base:u[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var f=n(c),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==f)t[f].references++,t[f].updater(p);else{var h=a(p,r);r.byIndex=l,t.splice(l,0,{identifier:c,updater:h,references:1})}o.push(c)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var l=n(i[o]);t[l].references--}for(var u=r(e,a),s=0;s<i.length;s++){var d=n(i[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},9163:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ServerStyleSheet:()=>Fe,StyleSheetConsumer:()=>ie,StyleSheetContext:()=>ae,StyleSheetManager:()=>ce,ThemeConsumer:()=>Ie,ThemeContext:()=>$e,ThemeProvider:()=>je,__PRIVATE__:()=>We,createGlobalStyle:()=>Re,css:()=>xe,default:()=>Ve,isStyledComponent:()=>x,keyframes:()=>ze,useTheme:()=>Ue,version:()=>E,withTheme:()=>He});var r=n(9864),a=n(7294),i=n(6774),o=n.n(i);const l=function(e){function t(e,r,u,s,f){for(var p,h,g,m,w,_=0,E=0,C=0,S=0,M=0,$=0,j=g=p=0,L=0,N=0,B=0,R=0,z=u.length,F=z-1,H="",U="",W="",V="";L<z;){if(h=u.charCodeAt(L),L===F&&0!==E+S+C+_&&(0!==E&&(h=47===E?10:47),S=C=_=0,z++,F++),0===E+S+C+_){if(L===F&&(0<N&&(H=H.replace(c,"")),0<H.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:H+=u.charAt(L)}h=59}switch(h){case 123:for(p=(H=H.trim()).charCodeAt(0),g=1,R=++L;L<z;){switch(h=u.charCodeAt(L)){case 123:g++;break;case 125:g--;break;case 47:switch(h=u.charCodeAt(L+1)){case 42:case 47:e:{for(j=L+1;j<F;++j)switch(u.charCodeAt(j)){case 47:if(42===h&&42===u.charCodeAt(j-1)&&L+2!==j){L=j+1;break e}break;case 10:if(47===h){L=j+1;break e}}L=j}}break;case 91:h++;case 40:h++;case 34:case 39:for(;L++<F&&u.charCodeAt(L)!==h;);}if(0===g)break;L++}switch(g=u.substring(R,L),0===p&&(p=(H=H.replace(d,"").trim()).charCodeAt(0)),p){case 64:switch(0<N&&(H=H.replace(c,"")),h=H.charCodeAt(1)){case 100:case 109:case 115:case 45:N=r;break;default:N=T}if(R=(g=t(r,N,g,h,f+1)).length,0<I&&(w=l(3,g,N=n(T,H,B),r,O,k,R,h,f,s),H=N.join(""),void 0!==w&&0===(R=(g=w.trim()).length)&&(h=0,g="")),0<R)switch(h){case 115:H=H.replace(x,o);case 100:case 109:case 45:g=H+"{"+g+"}";break;case 107:g=(H=H.replace(b,"$1 $2"))+"{"+g+"}",g=1===A||2===A&&i("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=H+g,112===s&&(U+=g,g="")}else g="";break;default:g=t(r,n(r,H,B),g,s,f+1)}W+=g,g=B=N=j=p=0,H="",h=u.charCodeAt(++L);break;case 125:case 59:if(1<(R=(H=(0<N?H.replace(c,""):H).trim()).length))switch(0===j&&(p=H.charCodeAt(0),45===p||96<p&&123>p)&&(R=(H=H.replace(" ",":")).length),0<I&&void 0!==(w=l(1,H,r,e,O,k,U.length,s,f,s))&&0===(R=(H=w.trim()).length)&&(H="\0\0"),p=H.charCodeAt(0),h=H.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){V+=H+u.charAt(L);break}default:58!==H.charCodeAt(R-1)&&(U+=a(H,p,h,H.charCodeAt(2)))}B=N=j=p=0,H="",h=u.charCodeAt(++L)}}switch(h){case 13:case 10:47===E?E=0:0===1+p&&107!==s&&0<H.length&&(N=1,H+="\0"),0<I*D&&l(0,H,r,e,O,k,U.length,s,f,s),k=1,O++;break;case 59:case 125:if(0===E+S+C+_){k++;break}default:switch(k++,m=u.charAt(L),h){case 9:case 32:if(0===S+_+E)switch(M){case 44:case 58:case 9:case 32:m="";break;default:32!==h&&(m=" ")}break;case 0:m="\\0";break;case 12:m="\\f";break;case 11:m="\\v";break;case 38:0===S+E+_&&(N=B=1,m="\f"+m);break;case 108:if(0===S+E+_+P&&0<j)switch(L-j){case 2:112===M&&58===u.charCodeAt(L-3)&&(P=M);case 8:111===$&&(P=$)}break;case 58:0===S+E+_&&(j=L);break;case 44:0===E+C+S+_&&(N=1,m+="\r");break;case 34:case 39:0===E&&(S=S===h?0:0===S?h:S);break;case 91:0===S+E+C&&_++;break;case 93:0===S+E+C&&_--;break;case 41:0===S+E+_&&C--;break;case 40:if(0===S+E+_){if(0===p)switch(2*M+3*$){case 533:break;default:p=1}C++}break;case 64:0===E+C+S+_+j+g&&(g=1);break;case 42:case 47:if(!(0<S+_+C))switch(E){case 0:switch(2*h+3*u.charCodeAt(L+1)){case 235:E=47;break;case 220:R=L,E=42}break;case 42:47===h&&42===M&&R+2!==L&&(33===u.charCodeAt(R+2)&&(U+=u.substring(R,L+1)),m="",E=0)}}0===E&&(H+=m)}$=M,M=h,L++}if(0<(R=U.length)){if(N=r,0<I&&void 0!==(w=l(2,U,N,e,O,k,R,s,f,s))&&0===(U=w).length)return V+U+W;if(U=N.join(",")+"{"+U+"}",0!=A*P){switch(2!==A||i(U,2)||(P=0),P){case 111:U=U.replace(v,":-moz-$1")+U;break;case 112:U=U.replace(y,"::-webkit-input-$1")+U.replace(y,"::-moz-$1")+U.replace(y,":-ms-input-$1")+U}P=0}}return V+U+W}function n(e,t,n){var a=t.trim().split(g);t=a;var i=a.length,o=e.length;switch(o){case 0:case 1:var l=0;for(e=0===o?"":e[0]+" ";l<i;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<i;++l)for(var s=0;s<o;++s)t[u++]=r(e[s]+" ",a[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(m,"$1"+e.trim());case 58:return e.trim()+t.replace(m,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(m,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,n,r){var o=e+";",l=2*t+3*n+4*r;if(944===l){e=o.indexOf(":",9)+1;var u=o.substring(e,o.length-1).trim();return u=o.substring(0,e).trim()+u+";",1===A||2===A&&i(u,1)?"-webkit-"+u+u:u}if(0===A||2===A&&!i(o,1))return o;switch(l){case 1015:return 97===o.charCodeAt(10)?"-webkit-"+o+o:o;case 951:return 116===o.charCodeAt(3)?"-webkit-"+o+o:o;case 963:return 110===o.charCodeAt(5)?"-webkit-"+o+o:o;case 1009:if(100!==o.charCodeAt(4))break;case 969:case 942:return"-webkit-"+o+o;case 978:return"-webkit-"+o+"-moz-"+o+o;case 1019:case 983:return"-webkit-"+o+"-moz-"+o+"-ms-"+o+o;case 883:if(45===o.charCodeAt(8))return"-webkit-"+o+o;if(0<o.indexOf("image-set(",11))return o.replace(M,"$1-webkit-$2")+o;break;case 932:if(45===o.charCodeAt(4))switch(o.charCodeAt(5)){case 103:return"-webkit-box-"+o.replace("-grow","")+"-webkit-"+o+"-ms-"+o.replace("grow","positive")+o;case 115:return"-webkit-"+o+"-ms-"+o.replace("shrink","negative")+o;case 98:return"-webkit-"+o+"-ms-"+o.replace("basis","preferred-size")+o}return"-webkit-"+o+"-ms-"+o+o;case 964:return"-webkit-"+o+"-ms-flex-"+o+o;case 1023:if(99!==o.charCodeAt(8))break;return"-webkit-box-pack"+(u=o.substring(o.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+o+"-ms-flex-pack"+u+o;case 1005:return p.test(o)?o.replace(f,":-webkit-")+o.replace(f,":-moz-")+o:o;case 1e3:switch(t=(u=o.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=o.replace(w,"tb");break;case 232:u=o.replace(w,"tb-rl");break;case 220:u=o.replace(w,"lr");break;default:return o}return"-webkit-"+o+"-ms-"+u+o;case 1017:if(-1===o.indexOf("sticky",9))break;case 975:switch(t=(o=e).length-10,l=(u=(33===o.charCodeAt(t)?o.substring(0,t):o).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:o=o.replace(u,"-webkit-"+u)+";"+o;break;case 207:case 102:o=o.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+o.replace(u,"-webkit-"+u)+";"+o.replace(u,"-ms-"+u+"box")+";"+o}return o+";";case 938:if(45===o.charCodeAt(5))switch(o.charCodeAt(6)){case 105:return u=o.replace("-items",""),"-webkit-"+o+"-webkit-box-"+u+"-ms-flex-"+u+o;case 115:return"-webkit-"+o+"-ms-flex-item-"+o.replace(E,"")+o;default:return"-webkit-"+o+"-ms-flex-line-pack"+o.replace("align-content","").replace(E,"")+o}break;case 973:case 989:if(45!==o.charCodeAt(3)||122===o.charCodeAt(4))break;case 931:case 953:if(!0===S.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):o.replace(u,"-webkit-"+u)+o.replace(u,"-moz-"+u.replace("fill-",""))+o;break;case 962:if(o="-webkit-"+o+(102===o.charCodeAt(5)?"-ms-"+o:"")+o,211===n+r&&105===o.charCodeAt(13)&&0<o.indexOf("transform",10))return o.substring(0,o.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+o}return o}function i(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),j(2!==t?r:r.replace(C,"$1"),n,t)}function o(e,t){var n=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(_," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,a,i,o,l,u,d){for(var c,f=0,p=t;f<I;++f)switch(c=$[f].call(s,e,p,n,r,a,i,o,l,u,d)){case void 0:case!1:case!0:case null:break;default:p=c}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(j=null,e?"function"!=typeof e?A=1:(A=2,j=e):A=0),u}function s(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<I){var a=l(-1,n,r,r,O,k,0,0,0,0);void 0!==a&&"string"==typeof a&&(n=a)}var i=t(T,r,n,0,0);return 0<I&&void 0!==(a=l(-2,i,r,r,O,k,i.length,0,0,0))&&(i=a),P=0,k=O=1,i}var d=/^\0+/g,c=/[\0\r\f]/g,f=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,g=/,\r+?/g,m=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,v=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,x=/\(\s*(.*)\s*\)/g,_=/([\s\S]*?);/g,E=/-self|flex-/g,C=/[^]*?(:[rp][el]a[\w-]+)[^]*/,S=/stretch|:\s*\w+\-(?:conte|avail)/,M=/([^-])(image-set\()/,k=1,O=1,P=0,A=1,T=[],$=[],I=0,j=null,D=0;return s.use=function e(t){switch(t){case void 0:case null:I=$.length=0;break;default:if("function"==typeof t)$[I++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else D=0|!!t}return e},s.set=u,void 0!==e&&u(e),s},u={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var s=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const d=(c={},function(e){return void 0===c[e]&&(c[e]=(t=e,s.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),c[e];var t});var c,f=n(8679),p=n.n(f);function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var g=function(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n},m=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,r.typeOf)(e)},b=Object.freeze([]),y=Object.freeze({});function v(e){return"function"==typeof e}function w(e){return e.displayName||e.name||"Component"}function x(e){return e&&"string"==typeof e.styledComponentId}var _="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",E="5.3.1",C="undefined"!=typeof window&&"HTMLElement"in window,S=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),M={};function k(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var O=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,a=r;e>=a;)(a<<=1)<0&&k(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(n),this.length=a;for(var i=r;i<a;i++)this.groupSizes[i]=0}for(var o=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(o,t[l])&&(this.groupSizes[e]++,o++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var a=n;a<r;a++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),a=r+n,i=r;i<a;i++)t+=this.tag.getRule(i)+"/*!sc*/\n";return t},e}(),P=new Map,A=new Map,T=1,$=function(e){if(P.has(e))return P.get(e);for(;A.has(T);)T++;var t=T++;return P.set(e,t),A.set(t,e),t},I=function(e){return A.get(e)},j=function(e,t){t>=T&&(T=t+1),P.set(e,t),A.set(t,e)},D="style["+_+'][data-styled-version="5.3.1"]',L=new RegExp("^"+_+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),N=function(e,t,n){for(var r,a=n.split(","),i=0,o=a.length;i<o;i++)(r=a[i])&&e.registerName(t,r)},B=function(e,t){for(var n=(t.innerHTML||"").split("/*!sc*/\n"),r=[],a=0,i=n.length;a<i;a++){var o=n[a].trim();if(o){var l=o.match(L);if(l){var u=0|parseInt(l[1],10),s=l[2];0!==u&&(j(s,u),N(e,s,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(o)}}},R=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},z=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(_))return r}}(n),i=void 0!==a?a.nextSibling:null;r.setAttribute(_,"active"),r.setAttribute("data-styled-version","5.3.1");var o=R();return o&&r.setAttribute("nonce",o),n.insertBefore(r,i),r},F=function(){function e(e){var t=this.element=z(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var a=t[n];if(a.ownerNode===e)return a}k(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),H=function(){function e(e){var t=this.element=z(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),U=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),W=C,V={isServer:!C,useCSSOMInjection:!S},q=function(){function e(e,t,n){void 0===e&&(e=y),void 0===t&&(t={}),this.options=h({},V,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&C&&W&&(W=!1,function(e){for(var t=document.querySelectorAll(D),n=0,r=t.length;n<r;n++){var a=t[n];a&&"active"!==a.getAttribute(_)&&(B(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return $(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(h({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,a=t.target,e=n?new U(a):r?new F(a):new H(a),new O(e)));var e,t,n,r,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if($(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules($(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup($(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",a=0;a<n;a++){var i=I(a);if(void 0!==i){var o=e.names.get(i),l=t.getGroup(a);if(o&&l&&o.size){var u=_+".g"+a+'[id="'+i+'"]',s="";void 0!==o&&o.forEach((function(e){e.length>0&&(s+=e+",")})),r+=""+l+u+'{content:"'+s+'"}/*!sc*/\n'}}}return r}(this)},e}(),Y=/(a)(d)/gi,K=function(e){return String.fromCharCode(e+(e>25?39:97))};function Q(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=K(t%52)+n;return(K(t%52)+n).replace(Y,"$1-$2")}var G=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},J=function(e){return G(5381,e)};function X(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(v(n)&&!x(n))return!1}return!0}var Z=J("5.3.1"),ee=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&X(e),this.componentId=t,this.baseHash=G(Z,t),this.baseStyle=n,q.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))a.push(this.staticRulesId);else{var i=ve(this.rules,e,t,n).join(""),o=Q(G(this.baseHash,i)>>>0);if(!t.hasNameForId(r,o)){var l=n(i,"."+o,void 0,r);t.insertRules(r,o,l)}a.push(o),this.staticRulesId=o}else{for(var u=this.rules.length,s=G(this.baseHash,n.hash),d="",c=0;c<u;c++){var f=this.rules[c];if("string"==typeof f)d+=f;else if(f){var p=ve(f,e,t,n),h=Array.isArray(p)?p.join(""):p;s=G(s,h+c),d+=h}}if(d){var g=Q(s>>>0);if(!t.hasNameForId(r,g)){var m=n(d,"."+g,void 0,r);t.insertRules(r,g,m)}a.push(g)}}return a.join(" ")},e}(),te=/^\s*\/\/.*$/gm,ne=[":","[",".","#"];function re(e){var t,n,r,a,i=void 0===e?y:e,o=i.options,u=void 0===o?y:o,s=i.plugins,d=void 0===s?b:s,c=new l(u),f=[],p=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,a,i,o,l,u,s,d,c){switch(n){case 1:if(0===d&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(a[0]+r),"";default:return r+(0===c?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){f.push(e)})),h=function(e,r,i){return 0===r&&-1!==ne.indexOf(i[n.length])||i.match(a)?e:"."+t};function g(e,i,o,l){void 0===l&&(l="&");var u=e.replace(te,""),s=i&&o?o+" "+i+" { "+u+" }":u;return t=l,n=i,r=new RegExp("\\"+n+"\\b","g"),a=new RegExp("(\\"+n+"\\b){2,}"),c(o||!i?"":i,s)}return c.use([].concat(d,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(n)>0&&(a[0]=a[0].replace(r,h))},p,function(e){if(-2===e){var t=f;return f=[],t}}])),g.hash=d.length?d.reduce((function(e,t){return t.name||k(15),G(e,t.name)}),5381).toString():"",g}var ae=a.createContext(),ie=ae.Consumer,oe=a.createContext(),le=(oe.Consumer,new q),ue=re();function se(){return(0,a.useContext)(ae)||le}function de(){return(0,a.useContext)(oe)||ue}function ce(e){var t=(0,a.useState)(e.stylisPlugins),n=t[0],r=t[1],i=se(),l=(0,a.useMemo)((function(){var t=i;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),u=(0,a.useMemo)((function(){return re({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,a.useEffect)((function(){o()(n,e.stylisPlugins)||r(e.stylisPlugins)}),[e.stylisPlugins]),a.createElement(ae.Provider,{value:l},a.createElement(oe.Provider,{value:u},e.children))}var fe=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ue);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return k(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ue),this.name+e.hash},e}(),pe=/([A-Z])/,he=/([A-Z])/g,ge=/^ms-/,me=function(e){return"-"+e.toLowerCase()};function be(e){return pe.test(e)?e.replace(he,me).replace(ge,"-ms-"):e}var ye=function(e){return null==e||!1===e||""===e};function ve(e,t,n,r){if(Array.isArray(e)){for(var a,i=[],o=0,l=e.length;o<l;o+=1)""!==(a=ve(e[o],t,n,r))&&(Array.isArray(a)?i.push.apply(i,a):i.push(a));return i}return ye(e)?"":x(e)?"."+e.styledComponentId:v(e)?"function"!=typeof(s=e)||s.prototype&&s.prototype.isReactComponent||!t?e:ve(e(t),t,n,r):e instanceof fe?n?(e.inject(n,r),e.getName(r)):e:m(e)?function e(t,n){var r,a,i=[];for(var o in t)t.hasOwnProperty(o)&&!ye(t[o])&&(Array.isArray(t[o])&&t[o].isCss||v(t[o])?i.push(be(o)+":",t[o],";"):m(t[o])?i.push.apply(i,e(t[o],o)):i.push(be(o)+": "+(r=o,(null==(a=t[o])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||r in u?String(a).trim():a+"px")+";")));return n?[n+" {"].concat(i,["}"]):i}(e):e.toString();var s}var we=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function xe(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return v(e)||m(e)?we(ve(g(b,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:we(ve(g(e,n)))}new Set;var _e=function(e,t,n){return void 0===n&&(n=y),e.theme!==n.theme&&e.theme||t||n.theme},Ee=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,Ce=/(^-|-$)/g;function Se(e){return e.replace(Ee,"-").replace(Ce,"")}var Me=function(e){return Q(J(e)>>>0)};function ke(e){return"string"==typeof e&&!0}var Oe=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Pe=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Ae(e,t,n){var r=e[n];Oe(t)&&Oe(r)?Te(r,t):e[n]=t}function Te(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a=0,i=n;a<i.length;a++){var o=i[a];if(Oe(o))for(var l in o)Pe(l)&&Ae(e,o[l],l)}return e}var $e=a.createContext(),Ie=$e.Consumer;function je(e){var t=(0,a.useContext)($e),n=(0,a.useMemo)((function(){return function(e,t){return e?v(e)?e(t):Array.isArray(e)||"object"!=typeof e?k(8):t?h({},t,{},e):e:k(14)}(e.theme,t)}),[e.theme,t]);return e.children?a.createElement($e.Provider,{value:n},e.children):null}var De={};function Le(e,t,n){var r=x(e),i=!ke(e),o=t.attrs,l=void 0===o?b:o,u=t.componentId,s=void 0===u?function(e,t){var n="string"!=typeof e?"sc":Se(e);De[n]=(De[n]||0)+1;var r=n+"-"+Me("5.3.1"+n+De[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,c=t.displayName,f=void 0===c?function(e){return ke(e)?"styled."+e:"Styled("+w(e)+")"}(e):c,g=t.displayName&&t.componentId?Se(t.displayName)+"-"+t.componentId:t.componentId||s,m=r&&e.attrs?Array.prototype.concat(e.attrs,l).filter(Boolean):l,_=t.shouldForwardProp;r&&e.shouldForwardProp&&(_=t.shouldForwardProp?function(n,r,a){return e.shouldForwardProp(n,r,a)&&t.shouldForwardProp(n,r,a)}:e.shouldForwardProp);var E,C=new ee(n,g,r?e.componentStyle:void 0),S=C.isStatic&&0===l.length,M=function(e,t){return function(e,t,n,r){var i=e.attrs,o=e.componentStyle,l=e.defaultProps,u=e.foldedComponentIds,s=e.shouldForwardProp,c=e.styledComponentId,f=e.target,p=function(e,t,n){void 0===e&&(e=y);var r=h({},t,{theme:e}),a={};return n.forEach((function(e){var t,n,i,o=e;for(t in v(o)&&(o=o(r)),o)r[t]=a[t]="className"===t?(n=a[t],i=o[t],n&&i?n+" "+i:n||i):o[t]})),[r,a]}(_e(t,(0,a.useContext)($e),l)||y,t,i),g=p[0],m=p[1],b=function(e,t,n,r){var a=se(),i=de();return t?e.generateAndInjectStyles(y,a,i):e.generateAndInjectStyles(n,a,i)}(o,r,g),w=n,x=m.$as||t.$as||m.as||t.as||f,_=ke(x),E=m!==t?h({},t,{},m):t,C={};for(var S in E)"$"!==S[0]&&"as"!==S&&("forwardedAs"===S?C.as=E[S]:(s?s(S,d,x):!_||d(S))&&(C[S]=E[S]));return t.style&&m.style!==t.style&&(C.style=h({},t.style,{},m.style)),C.className=Array.prototype.concat(u,c,b!==c?b:null,t.className,m.className).filter(Boolean).join(" "),C.ref=w,(0,a.createElement)(x,C)}(E,e,t,S)};return M.displayName=f,(E=a.forwardRef(M)).attrs=m,E.componentStyle=C,E.displayName=f,E.shouldForwardProp=_,E.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):b,E.styledComponentId=g,E.target=r?e.target:e,E.withComponent=function(e){var r=t.componentId,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(t,["componentId"]),i=r&&r+"-"+(ke(e)?e:Se(w(e)));return Le(e,h({},a,{attrs:m,componentId:i}),n)},Object.defineProperty(E,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?Te({},e.defaultProps,t):t}}),E.toString=function(){return"."+E.styledComponentId},i&&p()(E,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),E}var Ne=function(e){return function e(t,n,a){if(void 0===a&&(a=y),!(0,r.isValidElementType)(n))return k(1,String(n));var i=function(){return t(n,a,xe.apply(void 0,arguments))};return i.withConfig=function(r){return e(t,n,h({},a,{},r))},i.attrs=function(r){return e(t,n,h({},a,{attrs:Array.prototype.concat(a.attrs,r).filter(Boolean)}))},i}(Le,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Ne[e]=Ne(e)}));var Be=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=X(e),q.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var a=r(ve(this.rules,t,n,r).join(""),""),i=this.componentId+e;n.insertRules(i,i,a)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&q.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function Re(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var i=xe.apply(void 0,[e].concat(n)),o="sc-global-"+Me(JSON.stringify(i)),l=new Be(i,o);function u(e){var t=se(),n=de(),r=(0,a.useContext)($e),i=(0,a.useRef)(t.allocateGSInstance(o)).current;return t.server&&s(i,e,t,r,n),(0,a.useLayoutEffect)((function(){if(!t.server)return s(i,e,t,r,n),function(){return l.removeStyles(i,t)}}),[i,e,t,r,n]),null}function s(e,t,n,r,a){if(l.isStatic)l.renderStyles(e,M,n,a);else{var i=h({},t,{theme:_e(t,r,u.defaultProps)});l.renderStyles(e,i,n,a)}}return a.memo(u)}function ze(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=xe.apply(void 0,[e].concat(n)).join(""),i=Me(a);return new fe(i,a)}var Fe=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var n=R();return"<style "+[n&&'nonce="'+n+'"',_+'="true"','data-styled-version="5.3.1"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?k(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return k(2);var n=((t={})[_]="",t["data-styled-version"]="5.3.1",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),r=R();return r&&(n.nonce=r),[a.createElement("style",h({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new q({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?k(2):a.createElement(ce,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return k(3)},e}(),He=function(e){var t=a.forwardRef((function(t,n){var r=(0,a.useContext)($e),i=e.defaultProps,o=_e(t,r,i);return a.createElement(e,h({},t,{theme:o,ref:n}))}));return p()(t,e),t.displayName="WithTheme("+w(e)+")",t},Ue=function(){return(0,a.useContext)($e)},We={StyleSheet:q,masterSheet:le};const Ve=Ne},4817:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(1960)),o=r(n(5537));class l extends a.default{constructor(e={},t=""){super(),this.offsetTimelineFindId=i.default.defaultFindId,this.offsetSingleFindId=i.default.defaultFindId,this.offsetMultiFindId=i.default.defaultFindId,this.offsetChildFindId=i.default.defaultFindId,this.offsetLogsFindId=i.default.defaultFindId;const n=e.ch?e.ch:"/",r=e.id?e.id:"",u=a.default.isSet(e.isMediaCh)?e.isMediaCh:l.getIsMediaCh(n),s=!!a.default.isSet(e.isLinkCh)&&e.isLinkCh,d=e.rootCh?e.rootCh:n,c=a.default.isSet(e.isRootCh)?e.isRootCh:d===n,f=e.rootTitle?e.rootTitle:"talkn",p=l.getMediaSrc(e.protocol,n),h=l.getMediaType(p,e),g=e&&e.tuned?e.tuned:"",m=l.getDispThreadType(e,u),b=!a.default.isSet(e.multistream)||e.multistream,y=e&&e.findType?e.findType:o.default.findTypeAll,v=e&&e.offsetFindId?e.offsetFindId:l.defaultOffsetFindId,w=e&&e.offsetTimelineFindId?e.offsetTimelineFindId:l.defaultOffsetFindId,x=e&&e.offsetSingleFindId?e.offsetSingleFindId:l.defaultOffsetFindId,_=e&&e.offsetMultiFindId?e.offsetMultiFindId:l.defaultOffsetFindId,E=e&&e.offsetChildFindId?e.offsetChildFindId:l.defaultOffsetFindId,C=e&&e.offsetLogsFindId?e.offsetLogsFindId:l.defaultOffsetFindId,S=e.inputPost?e.inputPost:"",M=!!e.inputStampId&&e.inputStampId,k=e.inputCurrentTime?e.inputCurrentTime:0,O=e.inputSearch?e.inputSearch:"",P=!!a.default.isSet(e.isToggleMultistream)&&e.isToggleMultistream,A=!!a.default.isSet(e.isRankDetailMode)&&e.isRankDetailMode,T=e&&e.actioned?e.actioned:"",$=a.default.isSet(e.debug)?e.debug:"";return this.create({id:r,isRootCh:c,isLinkCh:s,isMediaCh:u,rootCh:d,rootTitle:f,chType:h,dispThreadType:m,tuned:g,multistream:b,findType:y,offsetFindId:v,offsetTimelineFindId:w,offsetSingleFindId:x,offsetMultiFindId:_,offsetChildFindId:E,offsetLogsFindId:C,inputPost:S,inputStampId:M,inputCurrentTime:k,inputSearch:O,isToggleMultistream:P,isRankDetailMode:A,actioned:T,debug:$})}static get defaultOffsetFindId(){return i.default.defaultFindId}static get dispThreadTypeTimeline(){return"Timeline"}static get dispThreadTypeSingle(){return"Single"}static get dispThreadTypeMulti(){return"Multi"}static get dispThreadTypeChild(){return"Child"}static get dispThreadTypeLogs(){return"Logs"}static get mediaTagTypeNo(){return"html"}static get mediaTagTypeAudio(){return"audio"}static get mediaTagTypeVideo(){return"video"}static get mediaTypeMp3(){return"mp3"}static get mediaTypeMp4(){return"mp4"}static get mediaTypeM4a(){return"m4a"}static get mediaChs(){return[l.mediaTypeMp3,l.mediaTypeMp4,l.mediaTypeM4a]}static get mediaChTagTypes(){return{[l.mediaTypeMp3]:l.mediaTagTypeAudio,[l.mediaTypeMp4]:l.mediaTagTypeVideo,[l.mediaTypeM4a]:l.mediaTagTypeAudio}}static getMediaType(e,t){return t&&t.chType?t.chType:l.getMediaTypeFromSrc(e)}static getMediaTypeFromSrc(e){const t=Object.keys(l.mediaChTagTypes),n=t.length;let r="html";for(let a=0;a<n;a++){const n=new RegExp(`.${t[a]}$`);if(e.match(n)){r=l.mediaChTagTypes[t[a]];break}}return r}static validInputPost(e){return!!/\r\n$|\n$|\r$/gim.test(e)&&"LAST TYPE BREAK LINE."}static validPost(e){return""===e?"NO INPUT POST":/^\r\n+$|\n+$|\r+$/g.test(e)?"ONLY NEW LINE":/^\s+$/g.test(e)?"only space":!!/^\r\n+(\s|\S)+$|^\n+(\s|\S)+$|^\r+(\s|\S)+$/.test(e)&&"EMPTY POST"}static getWidth(e){return"object"==typeof window&&window.innerWidth?window.innerWidth:e.width?"string"==typeof e.width&&e.width.indexOf("px")>=0?Number(e.width.replace("px","")):e.width:0}static getHeight(e={}){return"object"==typeof window&&window.innerHeight?window.innerHeight:0}static isMediaContentType(e){return l.isAudioContentType(e)||l.isVideoContentType(e)}static isAudioContentType(e){return e.indexOf(l.mediaTagTypeAudio)>=0}static isVideoContentType(e){return e.indexOf(l.mediaTagTypeVideo)>=0}static getMediaSrc(e,t){return e+"/"+t.replace(/\/$/,"")}static getIsMediaCh(e){return l.mediaChs.some((t=>{const n=new RegExp(`.${t}/$|.${t}$`);return e.match(n)}))}static getDispThreadType(e,t){return e&&e.dispThreadType?e.dispThreadType:t?l.dispThreadTypeTimeline:l.dispThreadTypeMulti}static getOffsetFindId({posts:e}){return e&&e[0]&&e[0]._id?e[0]._id:i.default.defaultFindId}static getStepToDispThreadType({app:e,ranks:t},n,r,a=""){let i="";const o=e&&e.dispThreadType?e.dispThreadType:l.dispThreadTypeMulti;return i=(e=l.getStepDispThreadType({app:e,ranks:t},n,r,a)).dispThreadType,{app:e,stepTo:`${o} to ${i}`}}static getStepDispThreadType({app:e,ranks:t},n={},r,a){const i=e||{};if(i.offsetFindId=l.defaultOffsetFindId,n.isMediaCh)return i.dispThreadType=l.dispThreadTypeTimeline,i.offsetFindId=i.offsetTimelineFindId?i.offsetTimelineFindId:l.defaultOffsetFindId,i.isLinkCh="Links"===a||"findMediaCh"===a||"ToMedia"===a,i.isMediaCh=!0,i;if("BackToRootCh"===a&&(i.isLinkCh=!1),"Links"===a&&t.length>0){if(!t.some((e=>e.ch===r||e.ch===r+"/")))return i.offsetFindId=l.defaultOffsetFindId,i.dispThreadType=l.dispThreadTypeChild,i.isLinkCh=!0,i}return i.rootCh===r?i.multistream?i.dispThreadType=l.dispThreadTypeMulti:i.dispThreadType=l.dispThreadTypeSingle:i.dispThreadType=l.dispThreadTypeChild,i}}t.default=l},1960:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(300));class o extends a.default{constructor(e){super(),this.ch=o.defaultValues.ch,this.chs=o.defaultValues.chs,this.favicon=o.defaultValues.favicon,this.findType=o.defaultValues.findType,this.layer=o.defaultValues.layer,this.post=o.defaultValues.post,this.protocol=o.defaultValues.protocol,this.stampId=o.defaultValues.stampId,this.title=o.defaultValues.title,this.liveCnt=o.defaultValues.liveCnt,this.uid=o.defaultValues.uid,this.utype=o.defaultValues.utype,this.dispFlg=o.defaultValues.dispFlg,this.data=o.defaultValues.data,this.createTime=o.defaultValues.createTime,this.currentTime=o.defaultValues.currentTime,this.updateTime=o.defaultValues.updateTime;const t=e?{...o.defaultValues,...e}:o.defaultValues;return this.create(t)}static get defaultFindId(){return"000000000000000000000000"}static get defaultValues(){return{ch:"/",chs:["/"],favicon:i.default.defaultFavicon,findType:"Html",layer:1,post:"",protocol:"https:",stampId:0,title:"talkn",liveCnt:0,uid:"",utype:"",dispFlg:!0,data:null,createTime:new Date,currentTime:new Date,updateTime:new Date}}}t.default=o},5537:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(7771)),o=r(n(300)),l=r(n(4817));class u extends a.default{constructor(e={},t){super(),this.chs=["/"],this.protocol=i.default.TALKN_PROTOCOL,this.charset="UTF-8",this.host="",this.favicon=u.getDefaultFavicon(),this.findType=u.findTypeAll,this.title=u.getDefaultTitle(),this.metas=[],this.emotions={},this.serverMetas={},this.clientMetas={},this.links=[],this.h1s=[],this.audios=[],this.videos=[],this.layer=u.getLayer(),this.mediaIndex=[],this.postCnt=0,this.multiPostCnt=0,this.isSelfCh=!1,this.createTime="",this.updateTime="";const n=u.isWindowObj(e)?u.constructorFromWindow(e,t):e;return this.create(n)}static get findTypeAll(){return"All"}static get findTypeHtml(){return"Html"}static get findTypeMusic(){return"Music"}static get findTypeVideo(){return"Video"}static get findTypeOther(){return"Other"}static get findTypes(){return{[u.findTypeHtml]:["text/html"],[u.findTypeMusic]:["audio","audio/mpeg","audio/mp4","audio/x-wav","audio/midi","application/x-smaf"],[u.findTypeVideo]:["video","video/mpeg","video/mp4","video/quicktime","video/x-ms-wmv","application/x-shockwave-flash","video/3gpp2"]}}static getDefaultTitle(){return"talkn"}static getDefaultFavicon(){return`https://${o.default.assetsURL}/favicon.ico`}static isWindowObj(e){return!!e.alert}static constructorFromWindow(e,t){const n=!!t.ch&&t.ch,r=u.getCh(t);let i={};return i.ch=r,i.chs=["/"],i.hasSlash=!!t.hasslash&&a.default.getBool(t.hasslash),i.protocol="talkn:",i.contentType="",i.charset="UTF-8",i.host="",i.favicon=u.getDefaultFavicon(),i.findType=u.findTypeAll,n?(i.protocol=u.getProtocol(n),i.host=u.getHost(n),i.chs=n.chs&&n.chs.length>0?n.chs:u.getChs(r)):(i.protocol=location.protocol?location.protocol:"????:",i.chs=e.chs&&e.chs.length>0?e.chs:u.getChs(r),i.contentType=document.contentType?document.contentType:"",i.charset=document.charset?document.charset:"",i.host=location.host?location.host:"",i.favicon=u.getFaviconFromWindow(window)),i.title=u.getDefaultTitle(),i.metas=[],i.serverMetas={},i.clientMetas={},i.emotions={},i.links=[],i.h1s=[],i.audios=[],i.videos=[],i.layer=u.getLayer(i.ch),i.mediaIndex=[],i.postCnt=0,i.multiPostCnt=0,i.isSelfCh=u.getIsSelfCh("",i.ch),i.createTime="",i.updateTime="",i}static getCh(e){return e&&e.ch&&""!==e.ch?e.ch:"/"}static getChTop(e){return""!==e?"/"+e.split("/")[1]:""}static getChs(e){let t=["/"];if(""!==e){const r="/"===e.slice(-1)?e:e+"/";if("/"!==r){const e=r.split("/"),a=e.length;let i="";for(var n=1;n<a;n++)""!==e[n]&&(i+=e[n],i="/"===i.slice(-1)?i:i+"/",i="/"===i.slice(0,1)?i:"/"+i,t.push(i))}}return t}static getHost(e){return e.indexOf(".")>=0?(e=e.replace("https://","").replace("http://","")).replace(/^\//,"").replace(/\/.*$/,""):o.default.domain}static getProtocol(e){return e.indexOf("http:")>=0?"http:":e.indexOf("https:")>=0?"https:":location&&location.protocol?location.protocol:"????:"}static getIsSelfCh(e,t){return e.replace("http:/","").replace("https:/","").replace(/\u002f$/,"")===t}static getLayer(e="/"){return e.split("/").length-1}static getMediaSrc(e){return l.default.getMediaSrc(e.protocol,e.ch)}static getMediaTagType(e){const t=u.getMediaSrc(e);return l.default.getMediaType(t,null)}static getFaviconFromWindow(e){if(e&&e.document){const t=e.document.evaluate("//link[contains(@rel,'icon')or(contains(@rel,'ICON'))][1]/@href",e.document,null,2,null).stringValue,n="http://",r="https://",a=location.host;if(t.indexOf(n)||t.indexOf(r)){const e=n+a+(t||"/favicon.ico");return 1==e.split("//").length-1?e:t}return t}return""}static getStatus(e,t,n){let r={dispType:"",isCreate:!1,isRequireUpsert:!1,isMultistream:!1,isMediaCh:!1,isToggleMultistream:!1,getMore:!1};return r.isCreate=u.getStatusCreate(n),r.isRequireUpsert=u.getStatusIsRequireUpsert(e,r.isCreate),r.isMultistream=u.getStatusIsMultistream(t),r.isToggleMultistream=u.getStatusIsToggleMultistream(t),r.isMediaCh=u.getStatusIsMediaCh(e.ch),r}static getStatusCreate(e){return!e}static getStatusIsRequireUpsert(e,t=!1){if(!t)return!0;if(e.updateTime){const t=e.updateTime.getTime?e.updateTime.getTime():e.updateTime,n=new Date,r=n.getFullYear(),a=n.getMonth(),i=n.getDate(),l=n.getHours();return n.getMinutes(),t<new Date(r,a,i,l-o.default.findOneThreadActiveHour).getTime()}return!1}static getStatusIsMultistream(e){return void 0===e||void 0===e.dispThreadType||e.dispThreadType===l.default.dispThreadTypeMulti&&e.multistream}static getStatusIsMediaCh(e){return l.default.getIsMediaCh(e)}static getStatusIsToggleMultistream(e){return void 0!==e&&void 0!==e.actioned&&e.isToggleMultistream}static getContentTypeFromFindType(e){const t=u.findTypes[u.findTypeHtml],n=u.findTypes[u.findTypeMusic],r=u.findTypes[u.findTypeVideo];let a;if(e&&""!==e){let i="";e.indexOf(";")>0&&(i=e.split(";")[0]),(t.includes(e)||t.includes(i))&&(a=u.findTypeHtml),(n.includes(e)||n.includes(i))&&(a=u.findTypeMusic),(r.includes(e)||r.includes(i))&&(a=u.findTypeVideo)}return a}static getFindTypeFromSrc(e){const t=l.default.getMediaTypeFromSrc(e);return t.charAt(0).toUpperCase()+t.slice(1)}}t.default=u},7638:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(9573)),i=r(n(300)),o=r(n(1665));if("browser"===a.default.title){const{SUB_DOMAINS:e,DEVELOPMENT:t}=o.default,{env:n,domain:r}=i.default;i.default.mediaSecondInterval=200,i.default.screenSize={small:600,middle:960},i.default.defaultFavicon=`//${e.ASSETS}.${r}/favicon.ico`,i.default.portalPath=n===t?`//${e.CLIENT}.${r}/`:`//${e.PORTAL}.${r}/`,i.default.clientPath=`//${e.CLIENT}.${r}/`,i.default.assetsPath=`//${e.ASSETS}.${r}/`,i.default.sessionPath=`//${e.SESSION}.${r}/`,i.default.cacheKey={index:"talknIndexList",setting:"talknSettingParams"}}t.default=i.default},7865:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(4817)),o=r(n(7638));class l extends a.default{constructor(e={}){super();const t=e.iFrameId?e.iFrameId:"",n=l.getWidth(e),r=l.getHeight(e),i=e.postsHeight?e.postsHeight:0,o=l.getScreenSize(n),u=e.extensionMode?e.extensionMode:l.extensionModeNone,s=e.extensionWidth?e.extensionWidth:"0%",d=e.extensionHeight?e.extensionHeight:0,c=e&&e.threadScrollY?e.threadScrollY:0,f=l.getIsOpenPosts({height:r,extensionMode:u,extensionHeight:d}),p=!!e.isOpenSetting&&e.isOpenSetting,h=a.default.isSet(e.isOpenMenu)?e.isOpenMenu:l.getIsOpenMenu({screenSize:o}),g=o===l.screenSizeDetailLabel||!!a.default.isSet(e.isOpenDetail)&&e.isOpenDetail,m=!!e.isOpenNewPost&&e.isOpenNewPost,b=!!e.isOpenNotif&&e.isOpenNotif,y=!!a.default.isSet(e.isOpenPostsSupporter)&&e.isOpenPostsSupporter,v=a.default.isSet(e.isOpenBoard)?e.isOpenBoard:l.getIsOpenBoard({screenSize:o}),w=!!a.default.isSet(e.isOpenSetChModal)&&e.isOpenSetChModal,x=!a.default.isSet(e.isBubblePost)||e.isBubblePost,_=!!a.default.isSet(e.isDispPosts)&&e.isDispPosts,E=!!a.default.isSet(e.isOpenLinks)&&e.isOpenLinks,C=!a.default.isSet(e.isTransition)||e.isTransition,S=e.menuComponent?e.menuComponent:l.getDefaultMenuComponent(),M=e.openLockMenu?e.openLockMenu:l.openLockMenuLabelNo,k=e.openInnerNotif?e.openInnerNotif:"",O=e.clicked?e.clicked:"",P=e.detailCh?e.detailCh:"/",A=e.inputPost?e.inputPost:"",T=!!e.inputStampId&&e.inputStampId,$=e.inputCurrentTime?e.inputCurrentTime:0,I=e.inputSearch?e.inputSearch:"",j=!a.default.isSet(e.isLoading)||e.isLoading;return this.create({iFrameId:t,width:n,height:r,postsHeight:i,screenSize:o,extensionMode:u,extensionWidth:s,extensionHeight:d,threadScrollY:c,isOpenPosts:f,isOpenSetting:p,isOpenMenu:h,isOpenDetail:g,isOpenNewPost:m,isOpenNotif:b,isOpenPostsSupporter:y,isOpenBoard:v,isOpenSetChModal:w,isBubblePost:x,isDispPosts:_,isOpenLinks:E,isTransition:C,menuComponent:S,openLockMenu:M,openInnerNotif:k,clicked:O,detailCh:P,inputPost:A,inputStampId:T,inputCurrentTime:$,inputSearch:I,isLoading:j})}static get openLockMenuLabelNo(){return"No"}static get openLockMenuLabelLike(){return"Like"}static get openLockMenuLabelShare(){return"Share"}static get openLockMenuLabelAbout(){return"About"}static get screenSizeSmallLabel(){return"SMALL"}static get screenSizeMiddleLabel(){return"MIDDLE"}static get screenSizeLargeLabel(){return"LARGE"}static get screenSizeIndexLabel(){return"MENU"}static get screenSizeThreadLabel(){return"THREAD"}static get screenSizeDetailLabel(){return"DETAIL"}static get screenSizeSmallWidthPx(){return o.default.screenSize.small}static get screenSizeMiddleWidthPx(){return o.default.screenSize.middle}static get extensionModeModal(){return"Modal"}static get extensionModeBottom(){return"Bottom"}static get extensionModeEmbed(){return"Embed"}static get extensionModeLiveMedia(){return"LiveMedia"}static get extensionModeOutWindow(){return"OutWindow"}static get extensionModeNone(){return"None"}static get menuComponentUsersLabel(){return"Users"}static get menuComponentRankLabel(){return"Rank"}static get menuComponentLogsLabel(){return"Logs"}static get menuComponentSettingLabel(){return"Setting"}static getDefaultMenuComponent(){return l.menuComponentRankLabel}static getWidth(e){return e&&e.extensionWidth>0?e.extensionWidth:e&&e.width>0?e.width:"object"==typeof window&&window.innerWidth?window.innerWidth:e.width?"string"==typeof e.width&&e.width.indexOf("px")>=0?Number(e.width.replace("px","")):e.width:0}static getHeight(e={}){return e&&e.extensionHeigt>0?e.extensionHeigt:e&&e.height>0?e.height:"object"==typeof window&&window.innerHeight?window.innerHeight:0}static getScreenSize(e=0){if(!e){if(window&&0===window.innerWidth||0===window.innerHeight)return;window&&window.innerWidth>0&&(e=window.innerWidth)}return"string"==typeof e&&(e=e.replace("px","")),l.screenSizeSmallWidthPx>=e?l.screenSizeSmallLabel:l.screenSizeSmallWidthPx<=e&&l.screenSizeMiddleWidthPx>=e?l.screenSizeMiddleLabel:l.screenSizeLargeLabel}static getIsOpenMenu(e){switch(e.screenSize){case l.screenSizeSmallLabel:return!1;case l.screenSizeMiddleLabel:case l.screenSizeLargeLabel:return!0}}static getIsOpenBoard(e){switch(e.screenSize){case l.screenSizeSmallLabel:return!1;case l.screenSizeMiddleLabel:case l.screenSizeLargeLabel:return!0}}static getIsOpenPosts(e,t=""){let{extensionMode:n,height:r,extensionHeight:a,extensionCloseHeight:i}=e;return n!==l.extensionModeBottom&&n!==l.extensionModeModal||("number"!=typeof r&&(r=Number(r)),"number"!=typeof a&&(a=Number(a)),0!==r&&a<=r)}static getUiUpdatedOpenFlgs({app:e,ui:t},n=""){switch(n){case"toggleMain":case"headerDetailIcon":switch(t.screenSize){case l.screenSizeSmallLabel:t.isOpenDetail=!t.isOpenDetail;break;case l.screenSizeMiddleLabel:t.isOpenDetail?e.detailCh===e.rootCh?(t.isOpenDetail=!1,t.isOpenMenu=!0):(t.isOpenMenu=!1,t.isOpenDetail=!1):(t.isOpenMenu=!1,t.isOpenDetail=!0)}break;case"headerMenuIcon":switch(t.screenSize){case l.screenSizeMiddleLabel:t.isOpenDetail,t.isOpenMenu=!0,t.isOpenDetail=!1}break;case"changeThreadDetail":case"post":switch(t.screenSize){case l.screenSizeSmallLabel:t.isOpenDetail=!t.isOpenDetail;break;case l.screenSizeMiddleLabel:t.isOpenMenu=!1,t.isOpenDetail=!0;case l.screenSizeLargeLabel:t.isOpenMenu=!0,t.isOpenDetail=!0}}return t}static isActiveMultistream({app:e,ui:t},n=""){return t.menuComponent===l.menuComponentRankLabel&&e.dispThreadType===i.default.dispThreadTypeMulti}}t.default=l},453:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getMyHost=t.getMediaType=t.getNetwork=t.NetworkList=t.defaultMediaType=t.NetworkCategoryList=t.NetworkCategoryListBuzzCycleBelongType=t.NetworkCategoryListRankingBelongType=t.NetworkCategoryListBaseBelongType=t.MediaTypeTrendWord=t.MediaTypeGirlsNews=t.MediaTypeNews=t.MediaTypeBooks=t.MediaTypeApps=t.MediaTypeMovies=t.MediaTypeMusic=t.MediaTypeContents=t.MediaTypeArtists=t.defaultMediaTypeCategory=t.MediaTypeCategoryBuzzCycle=t.MediaTypeCategoryRanking=t.MediaTypeCategoryBase=t.talknLiveMediaHost=t.producthost=t.localhost=void 0;const a=r(n(8399)),i=r(n(6365)),o="production",l=a.default.env.ENVIROMENT;t.localhost="localhost",t.producthost="talkn.io",t.talknLiveMediaHost="development"===l?t.localhost:t.producthost,t.MediaTypeCategoryBase="Base Media",t.MediaTypeCategoryRanking="Rank Media",t.MediaTypeCategoryBuzzCycle="Buzz Media",t.defaultMediaTypeCategory=t.MediaTypeCategoryBuzzCycle,t.MediaTypeArtists="artists",t.MediaTypeContents="contents",t.MediaTypeMusic="music",t.MediaTypeMovies="movies",t.MediaTypeApps="apps",t.MediaTypeBooks="books",t.MediaTypeNews="news",t.MediaTypeGirlsNews="girls-news",t.MediaTypeTrendWord="trend-word",t.NetworkCategoryListBaseBelongType=[t.MediaTypeArtists,t.MediaTypeContents],t.NetworkCategoryListRankingBelongType=[t.MediaTypeMusic,t.MediaTypeMovies,t.MediaTypeApps,t.MediaTypeBooks],t.NetworkCategoryListBuzzCycleBelongType=[t.MediaTypeNews,t.MediaTypeGirlsNews,t.MediaTypeTrendWord],t.NetworkCategoryList={[t.MediaTypeCategoryBase]:t.NetworkCategoryListBaseBelongType,[t.MediaTypeCategoryRanking]:t.NetworkCategoryListRankingBelongType,[t.MediaTypeCategoryBuzzCycle]:t.NetworkCategoryListBuzzCycleBelongType},t.defaultMediaType=t.MediaTypeNews;const u={subDomain:"news",label:"News",method:"GET",endpoint:`https://${String(i.default.news.endpointHost)}`,headers:{"x-rapidapi-host":String(i.default.news.endpointHost),"x-rapidapi-key":i.default.news.endpointKey,useQueryString:"true"},devPort:6001,getImageParams:"&w=300&dpr=2&qlt=190",count:50};t.NetworkList={[t.MediaTypeArtists]:{subDomain:"artists",label:"Artists",method:"GET",endpoint:"",headers:{},devPort:4001,getImageParams:"",count:50},[t.MediaTypeContents]:{subDomain:"contents",label:"Contents",method:"GET",endpoint:"",headers:{},devPort:4002,getImageParams:"",count:50},[t.MediaTypeMusic]:{subDomain:"music",label:"Music Rank",method:"GET",endpoint:"",headers:{},devPort:5001,getImageParams:"",count:50},[t.MediaTypeMovies]:{subDomain:"movies",label:"Movies Rank",method:"GET",endpoint:"",headers:{},devPort:5002,getImageParams:"",count:50},[t.MediaTypeApps]:{subDomain:"apps",label:"Apps Rank",method:"GET",endpoint:"",headers:{},devPort:5003,getImageParams:"",count:50},[t.MediaTypeBooks]:{subDomain:"books",label:"Books Rank",method:"GET",endpoint:"",headers:{},devPort:5004,getImageParams:"",count:50},[t.MediaTypeNews]:u,[t.MediaTypeGirlsNews]:{subDomain:"girls-news",label:"Girls News",method:"GET",endpoint:"",headers:{},devPort:6002,getImageParams:"",count:50},[t.MediaTypeTrendWord]:{subDomain:"trend-word",label:"Trend Word",method:"GET",endpoint:"",headers:{},devPort:6003,getImageParams:"",count:50}},t.getNetwork=e=>t.NetworkList[e]?t.NetworkList[e]:t.NetworkList[t.defaultMediaType],t.getMediaType=e=>{const n=l===o?n=>e.indexOf(`${t.NetworkList[n].subDomain}.${t.producthost}`)>=0:n=>e.indexOf(`${t.localhost}:${t.NetworkList[n].devPort}`)>=0,r=Object.keys(t.NetworkList).find(n);return t.NetworkList[r]?r:t.defaultMediaType},t.getMyHost=e=>l===o?`https://${e}.${t.producthost}`:`http://${t.localhost}:${(0,t.getNetwork)(e).devPort}`},1216:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e={}){}static getType(e){return null===e?"Null":void 0===e?"Undefined":e.constructor.name}static isSet(e){return"Undefined"!==n.getType(e)&&"Null"!==n.getType(e)}static getBool(e){return"boolean"==typeof e?e:"true"===e}static isAnonymousFunc(e){const t=e.toString();return"function(){}"===t||"function() {}"===t||"function (){}"===t||"function () {}"===t||"()=>{}"===t}create(e){const t=this.constructor.name;return n.getType(e),Object.keys(e).forEach((r=>{let a,i,o=null,l=!1,u=!1,s=()=>{},d=null;if("Object"===n.getType(e[r])){a=e[r];let t=0===Object.keys(a).length;l=a.isAcceptNull?a.isAcceptNull:l,u=a.isAcceptBlank?a.isAcceptBlank:u,o=!t&&a.def?a.def:o,d=t||!a.value&&""!==a.value?a:a.value,d=t&&o?o:d,i=n.getType(d),s=a.valid?a.valid:s}else d=e[r],o=d,l=l,u=u,i=n.getType(d),s=s;const c=e=>{let a=null;const o=`${t}.${r}`,c=d,f=i,p=e,h=n.getType(e);return h!==i&&(a=`SCHEMA_TYPE : ${o} [validType: ${i}][paramsType: ${h}]`),l&&null===e&&(a=`SCHEMA_IS_ACCEPT_NULL :  ${o}`),u&&""===e&&(a=`SCHEMA_IS_ACCEPT_BLANK :  ${o}`),"Function"===n.getType(s)&&s(e)&&(a=`SCHEMA_YOUR_VALID_METHOD :  ${o}`),{pointer:o,validValue:c,validType:f,paramsValue:p,paramsType:h,error:a}},{pointer:f,validValue:p,validType:h,paramsValue:g,paramsType:m,error:b}=c(d);if(null===b)Object.defineProperty(this,r,{get:()=>d,set:e=>{const t=c(d);if(null===b)return d=e,{...this,[r]:d};throw this.validWarn(t),b},enumerable:!0,configurable:!0});else{if(this.errorThrow)throw b;console.warn(b)}})),this}canSet(e,t){try{const n=this[e];if(void 0===n)return!0;if(null===n)return!0;if(void 0===t)return!0;if(null===t)return!0;const{error:r}=this[e]=t;return!r&&(this[e]=n,!0)}catch(n){throw console.warn("BAD CAN SET KEY: "+this.constructor.name+" "+e),console.warn("BEFOER VALUE"),console.warn(typeof this[e]),console.warn(this[e]),console.warn("AFTER VALUE"),console.warn(typeof t),console.warn(t),`BAD CAN SET: ${n}`}}merge(e={},t=!0){try{const r=n.getType(e),a=Object.keys(e);if(a.length>0){let n={...this};return a.forEach((t=>{this[t]!==e[t]&&(this.canSet(t,e[t])?n[t]=e[t]:console.warn("BAD MERGE A : "+t+" "+e[t]+" "+typeof e[t]))})),"Array"===r?(n=Object.values(n),t?new this.constructor(n):n):t?new this.constructor(n):n}return new this.constructor}catch(t){if(this.errorThrow)throw console.warn(e),console.warn(t),`BAD MERGE B : ${n.getType(e)} ${t}`;return console.warn(e),console.warn(t),console.warn(`BAD MERGE C : ${n.getType(e)} ${t}`),e}}toJSON(e=this){let t={};return Object.keys(e).forEach((n=>{let r=e[n];"Object"===r.constructor.name&&(r.type||r.default||(r=this.toJSON(r))),r.default||""===r.default||0===r.default?t[n]=r.default:t[n]=r})),t}forEach(e){return Object.values(this).forEach(e)}concat(e){return this.returnImmutable(Object.values(this).concat(e),e)}map(e){return this.returnImmutable(Object.values(this).map(e),e)}filter(e){return this.returnImmutable(Object.values(this).filter(e),e)}reduce(e){return this.returnImmutable(Object.values(this).reduce(e),e)}find(e){return Object.values(this).find(e)}sort(e){return Object.values(this).sort(e)}push(e){const t=Object.values(this);return t.push(e),this.returnImmutable(t)}unshift(e){const t=Object.values(this);return t.unshift(e),this.returnImmutable(t)}getShift(){const e=Object.values(this).shift();return this.returnImmutable(e)}pop(e){const t=Object.values(this);return t.pop(e),this.returnImmutable(t)}returnImmutable(e,t=(()=>{})){return void 0===e?new this.constructor:0===e.length&&0===Object.keys(this).length?String(t).indexOf("createElement")>0?[]:new this.constructor(e):e[0]&&e[0].$$typeof&&"Symbol"===e[0].$$typeof.constructor.name?e:new this.constructor(e)}validWarn(e){console.warn("##########################"),console.warn("#"+e.pointer),console.warn("##########################"),console.warn("### initializedValidType"),console.warn(e.validType),console.warn("### initializedValidValue"),console.warn(e.validValue),console.warn("### paramsType"),console.warn(e.paramsType),console.warn("### paramsValue"),console.warn(e.paramsValue),console.warn("##########################")}}t.default=n},7771:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216));class i{static get TALKN_PROTOCOL(){return"talkn:"}static get HTTP_PROTOCOL(){return"http:"}static get HTTPS_PROTOCOL(){return"https:"}static get UNKNOWN_PROTOCOL(){return"????:"}static get CATCH_ME_KEY(){return"@CATCH_ME"}static get API_SEPARATE_IO_TYPE_START(){return"["}static get API_SEPARATE_IO_TYPE_END(){return"]"}static get API_REQUEST_TYPE(){return"REQUEST"}static get API_RESPONSE_TYPE_EMIT(){return"EMIT"}static get API_RESPONSE_TYPE_BROADCAST(){return"BROADCAST"}static get API_SETUP(){return"API_SETUP"}static get UNKNOWN(){return"UNKNOWN"}static get CONNECTION_SERVER_KEY(){return"CONNECTION_SERVER"}static get API_TO_SERVER_REQUEST(){return`API_TO_SERVER[${i.API_REQUEST_TYPE}]${i.METHOD_COLON}`}static get SERVER_TO_API_EMIT(){return`SERVER_TO_API[${i.API_RESPONSE_TYPE_EMIT}]${i.METHOD_COLON}`}static get SERVER_TO_API_BROADCAST(){return`SERVER_TO_API[${i.API_RESPONSE_TYPE_BROADCAST}]${i.METHOD_COLON}`}static get API_TO_CLIENT_REQUEST(){return`API_TO_CLIENT[${i.API_REQUEST_TYPE}]${i.METHOD_COLON}`}static get API_TO_CLIENT_EMIT(){return`API_TO_CLIENT[${i.API_RESPONSE_TYPE_EMIT}]${i.METHOD_COLON}`}static get API_TO_CLIENT_BROADCAST(){return`API_TO_CLIENT[${i.API_RESPONSE_TYPE_BROADCAST}]${i.METHOD_COLON}`}static get API_BROADCAST_CALLBACK(){return"tune"}static get REDUX_ACTION_KEY(){return"type"}static get METHOD_COLON(){return":"}static get ADD_CLIENT_ACTION_PREFIX(){return"API_TO_CLIENT"}static get map(){return{tune:{requestPublicState:{},requestPrivateState:{thread:["ch","hasSlash","protocol"],app:["multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{user:["uid"],setting:"*",thread:"*"},responseBroadcastState:{thread:["liveCnt","ch"]}},fetchPosts:{requestPublicState:{},requestPrivateState:{thread:["ch","protocol","host","hasSlash"],app:["multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{posts:"*",thread:"*"},responseBroadcastState:{}},getMore:{requestPublicState:{},requestPrivateState:{thread:["ch"],app:["multistream","dispThreadType","offsetFindId"]},responseEmitState:{app:["dispThreadType","offsetFindId"],posts:"*"},responseBroadcastState:{}},updateThread:{requestPublicState:{},requestPrivateState:{thread:["ch","protocol","host","hasSlash"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},changeThread:{requestPublicState:{},requestPrivateState:{thread:["ch","hasSlash","protocol"],app:["tuned","multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{thread:"*"},responseBroadcastState:{thread:["liveCnt","ch"]}},changeThreadDetail:{requestPublicState:{},requestPrivateState:{thread:["ch"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},addFindChild:{requestPublicState:{},requestPrivateState:{thread:["ch"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},rank:{requestPublicState:{},requestPrivateState:{app:["findType","rootCh","isRankDetailMode"]},responseEmitState:{rank:"*"},responseBroadcastState:{}},post:{requestPublicState:{},requestPrivateState:{user:["uid","utype"],app:["inputPost","inputStampId","inputCurrentTime","dispThreadType"],thread:["findType","title","protocol","ch","chs","emotions","favicon","contentType"]},responseEmitState:{},responseBroadcastState:{posts:"*",thread:["ch","emotions","postCnt"],user:["uid"]}},updateThreadServerMetas:{requestPublicState:{thread:["serverMetas"]},requestPrivateState:{thread:["host","protocol","ch"],user:["uid"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},disconnect:{requestPublicState:{},requestPrivateState:{},responseEmitState:{},responseBroadcastState:{thread:["liveCnt","ch"]}}}}static getSequenceActionMap(e){const t=e.split(i.METHOD_COLON),n=t[0].split("[")[0];let r;return r=t[0].indexOf(`[${i.API_REQUEST_TYPE}]`)>0?i.API_REQUEST_TYPE:t[0].indexOf(`[${i.API_RESPONSE_TYPE_EMIT}]`)>0?i.API_RESPONSE_TYPE_EMIT:i.API_RESPONSE_TYPE_BROADCAST,{sequence:n,actionType:r,actionName:t[1]}}static updateCallbackExeConditionMap(e){let t={emit:!0,broadcast:!0};return i.map[e]&&(t.emit=!(Object.keys(i.map[e].responseEmitState).length>0),t.broadcast=!(Object.keys(i.map[e].responseBroadcastState).length>0)),t}static convertServerToApiIoType(e,t){return t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_REQUEST_TYPE}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_REQUEST_TYPE:t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_RESPONSE_TYPE_BROADCAST}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_RESPONSE_TYPE_BROADCAST:t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_RESPONSE_TYPE_EMIT}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_RESPONSE_TYPE_EMIT:i.API_SETUP}static convertExtToClientActionType(e,t){return i.convertApiToClientActionType(t)}static convertApiToClientActionType(e){return 0===e.indexOf(i.API_TO_SERVER_REQUEST)?e.replace(i.API_TO_SERVER_REQUEST,i.API_TO_CLIENT_REQUEST):0===e.indexOf(i.SERVER_TO_API_EMIT)?e.replace(i.SERVER_TO_API_EMIT,i.API_TO_CLIENT_EMIT):0===e.indexOf(i.SERVER_TO_API_BROADCAST)?e.replace(i.SERVER_TO_API_BROADCAST,i.API_TO_CLIENT_BROADCAST):e}static getRequestState(e,t,n){const r=e.replace(i.API_TO_SERVER_REQUEST,""),{requestPublicState:o,requestPrivateState:l}=i.map[r];let u={[i.REDUX_ACTION_KEY]:r};return Object.keys(l).forEach((e=>{u[e]||(u[e]={}),l[e].forEach((r=>{if(!u[e][r]){let i=t[e][r];n&&n[e]&&a.default.isSet(n[e][r])&&(i=n[e][r]),u[e][r]=i}}))})),Object.keys(o).forEach((e=>{u[e]||(u[e]={}),o[e].forEach((t=>{u[e][t]||(u[e][t]=n)}))})),u}static getResponseState(e,t,n){const r=t.type,a=i.map[r][`response${e}State`];let o={[i.REDUX_ACTION_KEY]:r};return Object.keys(a).forEach((e=>{if(!n[e])throw`SEQUENCE ERROR: NO_UPDATE_STATE_KEY: ${t.type}: ${e}`;{const r=a[e];let i=n[e];switch(i.constructor.name){case"model":i=i.toJSON(),delete i._id,delete i.__v}"*"===r?o={...o,[e]:i}:r.forEach((r=>{if(void 0===n[e][r])throw`SEQUENCE ERROR: NO_UPDATE_STATE_COLUMN_NAME: ${t.type}: ${e}.${r}`;o={...o,[e]:{...o[e],[r]:n[e][r]}}}))}})),o}static getRequestActionState(e,t=null,n=null){return"string"==typeof t&&null===n?{type:e}:"object"==typeof t&&"object"==typeof n?{...t,...n,type:e}:"string"==typeof t&&"object"==typeof n?{...n,type:e}:{...t,type:e}}}t.default=i},300:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(6894)),i=r(n(8399)),o=r(n(1665)),{PRODUCTION:l,DEVELOPMENT:u,PRODUCTION_DOMAIN:s,DEVELOPMENT_DOMAIN:d,SUB_DOMAINS:c,PORTS:f}=o.default,p=a.default.hasOwnProperty("hostname")?a.default.hostname():d,h=function(e){if("browser"===i.default.title){if(location.href.indexOf(o.default.DEVELOPMENT_DOMAIN)>=0){const e=Number(location.port);return e===o.default.PORTS.DEVELOPMENT_CLIENT||e===o.default.PORTS.DEVELOPMENT_API||e===o.default.PORTS.DEVELOPMENT_COVER||e===o.default.PORTS.DEVELOPMENT_COMPONENTS||e===o.default.PORTS.DEVELOPMENT_TUNE?o.default.DEVELOPMENT:o.default.LOCALHOST}return o.default.PRODUCTION}return e.indexOf(o.default.AWS_HOST_KEY)>=0?o.default.PRODUCTION:o.default.DEVELOPMENT}(p),g={client:"talkn.client.js",api:"talkn.api.js",wsWorker:"ws.api.worker.js",ext:"talkn.ext.js",cover:"talkn.cover.js",tune:"talkn.tune.js",components:"talkn.components.js"},m=h===u,b=h===l?s:d,y=`${c.WWW}.${b}`,v=`${c.COVER}.${b}`,w=`${c.API}.${b}`,x=m?`${b}:${f.DEVELOPMENT_API}/${g.api}`:`${w}/v1`,_=m?`${b}:${f.DEVELOPMENT_CLIENT}/${g.client}`:`${c.CLIENT}.${b}`,E=`${c.DESC}.${b}`,C=`${c.PORTAL}.${b}`,S=`${c.ASSETS}.${b}`,M=`${c.AUTO}.${b}`,k=`${c.EXT}.${b}`,O=`${c.COMP}.${b}`,P=`${c.OWN}.${b}`,A=`${c.NEWS}.${b}`,T=`${c.TUNE}.${b}`,$=`${c.COMPONENTS}.${b}`,I=`${S}/img/`,j={domain:b,isDev:m,env:h,files:g,hostName:p,apiURL:w,apiAccessURL:x,coverURL:v,wwwURL:y,descURL:E,portalURL:C,clientURL:_,assetsURL:S,autoURL:M,extURL:k,compURL:O,ownURL:P,newsURL:A,tuneURL:T,bannerURL:`${c.BANNER}.${b}`,componentsURL:$,transactionURL:`${c.TRANSACTION}.${b}`,assetsImgPath:I,assetsCoverPath:`${S}/cover/`,assetsIconPath:`${S}/icon/`,assetsJsPath:`${S}/js/`,sessionURL:`${c.SESSION}.${b}`,description:"talkn can share comments with users watching the same WEB page. Please enjoy the world of talkn.",apiVer:1,lpLanguages:["en","zh","ja","de","fr","hi","pt","it","ru","ko","es","id","tr","nl","ar","zh-TW","pl","sv","th","fa","nn","ga","he","mr"],defaultBirthdayUnixtime:1e12,findOneThreadActiveHour:1,findOnePostCnt:30,findOneLimitCnt:300,ogpImages:{Html:`//${I}talkn_logo_html.png`,Music:`//${I}talkn_logo_music.png`,Video:`//${I}talkn_logo_video.png`},defaultFavicon:`//${c.ASSETS}.${b}/favicon.ico`};t.default={...j}},1665:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(8399)),i={APP_NAME:"talkn",PRODUCTION:"PRODUCTION",LOCALHOST:"LOCALHOST",DEVELOPMENT:"DEVELOPMENT",PRODUCTION_IP:a.default.env.HOSTNAME?a.default.env.HOSTNAME:"localhost",PRODUCTION_DOMAIN:"talkn.io",DEVELOPMENT_DOMAIN:"localhost",AWS_HOST_KEY:"ec2.internal",PORTS:{HTTP:80,HTTPS:443,DEVELOPMENT_COVER:8e3,DEVELOPMENT_API:8001,DEVELOPMENT_COMPONENTS:8002,DEVELOPMENT_TUNE:8003,DEVELOPMENT_CLIENT:8080,REDIS:6379,MONGO:27017,SOCKET_IO:10443},SUB_DOMAINS:{WWW:"www",API:"api",DESC:"desc",PORTAL:"portal",CLIENT:"client",ASSETS:"assets",SESSION:"session",AUTO:"auto",OWN:"own",NEWS:"news",BANNER:"banner",COVER:"cover",RANK:"rank",EXT:"ext",COMPONENTS:"components",TUNE:"tune",TRANSACTION:"transaction"},APP_TYPES:{CLIENT:"CLIENT",PORTAL:"PORTAL",EXTENSION:"EXTENSION",API:"API",COVER:"COVER",COMPONENTS:"COMPONENTS",TUNE:"TUNE"},URL:{twitter:"https://twitter.com/",facebook:"https://www.facebook.com/",appstore:"https://itunes.apple.com/app/id",playstore:"https://play.google.com/store/apps/details?id=",chromeExtension:"https://chrome.google.com/webstore/detail/talkn-for-chrome/dkngnmdlcofambpfaccepbnjgfholgbo?hl=en"},talknClientJs:"talkn.client.js",talknApiJs:"talkn.api.js",talknRankJs:"talkn.rank.js",noInnerNotif:"Sorry, No Function.",bannerClass:"talkn_banner",storageKey:{baseKey:"@talkn@",postsTimelineZero:"postsTimelineZero",postsTimeline:"postsTimeline",postsSingle:"postsSingle",postsMulti:"postsMulti",postsChild:"postsChild",postsLogs:"postsLogs",threads:"threads"}};t.default=i},6365:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={news:{endpointHost:"microsoft-azure-bing-news-search-v1.p.rapidapi.com",endpointSearchHost:"microsoft-azure-bing-news-search-v1.p.rapidapi.com/search?q=",endpointKey:"2ca25813c0msh9db483c3530c143p1009bdjsnde50b6575cf1"},music:{endpointHost:"https://rss.itunes.apple.com/api/v1/${country}/${media}/${genre}/all/${limit}/explicit.json",endpointSearchHost:"",endpointKey:""}}},2865:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.storiesInit=t.configInit=t.configStoriesLimit=t.configUserCategoryChLimit=void 0,t.configUserCategoryChLimit=10,t.configStoriesLimit=10,t.configInit={version:"1.0.0",stories:[],userCategoryChs:[],favicon:"",ogpImage:"",iamTags:[],relationTags:[]},t.storiesInit={title:"",eyeCatch:"",interview:""}},6562:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7548)),i=r(n(7865));t.default={isUrl:e=>!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*|\\/)?$","i").test(e),getSaveFaviconName:e=>{if(e){const t=e.replace(/\u002f/g,"_");return t.indexOf(".png")>0?t:t+".png"}},trimPx:e=>e.toString().replace("px",""),getUpperPrefix:e=>{let t=e.charAt(0).toUpperCase()+e.slice(1);return t.substring(0,1).toUpperCase()+t.substring(1)},timeAgoFormatter:(e,t,n,r=i.default.extensionModeNone)=>{let a=String(t);switch(String(t)){case"year":a="YR";break;case"month":a="mo";break;case"week":a="wk";break;case"hour":a="hr";break;case"minute":a="min";break;case"second":a="sec"}return`${e} ${a} ${r===i.default.extensionModeNone?n:n.replace("ago","")}`},parseJwt:e=>{if(null===e)return null;const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent((0,a.default)(t).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join(""));return JSON.parse(n)},deepCopy:e=>JSON.parse(JSON.stringify(e)),deepEquals:(e,t)=>JSON.stringify(e)===JSON.stringify(t),getAgeByBirthday:e=>{let t;if(0!==e){const n=new Date(e),r=new Date;t=r.getFullYear()-n.getFullYear()+(new Date(r.getFullYear(),n.getMonth(),n.getDate()).getTime()>r.getTime()?-1:0)}return t||"-"},getUniqueId:(e,t=1e3)=>`${e}_${(new Date).getTime().toString(16)+Math.floor(t*Math.random()).toString(16)}`,getHeadUpper:e=>"string"==typeof e&&e?e.charAt(0).toUpperCase()+e.slice(1).toLowerCase():e}},8957:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(3935)),o=r(n(7303));t.default=()=>{i.default.render(a.default.createElement(a.default.StrictMode,null,a.default.createElement(o.default,null)),document.querySelector("div#talkn"))}},8203:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.formData=t.json=void 0;const a=r(n(300)),i="POST",o="cors";t.json=async(e,t={})=>{const n=JSON.stringify(t);if(JSON.parse(n)){const t=await fetch(`https://${a.default.coverURL}/api/${e}`,{method:i,mode:o,headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded; charset=utf-8"},cache:"no-cache",body:n}),r=await t.json();return r.error&&""!==r.error&&console.warn(r.error),r.response}},t.formData=async(e,t,n)=>{const r=await fetch(`https://${a.default.coverURL}/api/${e}`,{method:i,mode:o,cache:"no-cache",body:n});200!==r.status&&console.warn(r)},t.default={json:t.json,formData:t.formData}},4034:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Button=t.buttonThemeDefault=t.buttonThemeBase=t.buttonThemeBright=t.buttonThemeCold=t.buttonThemeFlat=t.buttonThemeHot=void 0;const l=i(n(7294)),u=o(n(9163)),s=n(2740),d=o(n(6032));t.buttonThemeHot=d.default.hotColor,t.buttonThemeFlat=d.default.flatColor,t.buttonThemeCold=d.default.coldColor,t.buttonThemeBright=d.default.brightColor,t.buttonThemeBase=d.default.baseColor,t.buttonThemeDefault=d.default.themeColor,t.default=e=>{const[n,r]=(0,l.useState)(!1),a={...s.flexLayoutCenterPropsInit,...s.boxLayoutPropsInit,theme:t.buttonThemeDefault,animation:!0,className:"Button",width:"auto",...e};return(0,l.useEffect)((()=>{r(!0)}),[]),l.default.createElement(t.Button,{...a,didMount:n},a.children)},t.Button=u.default.button`
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
  min-height: ${d.default.baseHeight}px;
  ${s.BoxLayoutCss};
  min-width: auto;
  padding: ${d.default.doublePadding}px ${2*d.default.doublePadding}px;
  color: ${e=>c(e)};
  outline: none;
  cursor: ${e=>e.disabled||void 0===e.onClick?"normal":"pointer"};
  background: ${e=>f(e)};
  border: ${e=>e.disabled?1:0}px solid ${d.default.borderColor};
  border-radius: ${d.default.baseSize}px;
  transition: ${e=>e.didMount&&e.animation?d.default.transitionDuration:0}ms;
  white-space: nowrap;
  font-weight: 200;
  user-select: none;
  :hover {
    box-shadow: ${e=>e.disabled||void 0===e.onClick?0:d.default.shadowHorizonBright};
  }
  @media (max-width: ${d.default.spLayoutStrictWidth}px) {
    padding: ${d.default.basePadding}px ${1.5*d.default.doublePadding}px;
  }
`;const c=e=>{if(e.disabled)return d.default.brightColor;switch(e.theme){case t.buttonThemeDefault:case t.buttonThemeHot:case t.buttonThemeCold:case t.buttonThemeBright:return d.default.whiteColor}},f=e=>e.disabled?"none":e.theme},5780:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=i(n(9163)),s=o(n(6032));t.default=e=>{const t=(e=>{const t=void 0!==e.close&&e.close,n=void 0===e.focusAnimation||e.focusAnimation;return{close:t,onClick:e.onClick?e.onClick:()=>{},focusAnimation:n,className:e.className&&e.className}})(e);return l.createElement(c,{...t},l.createElement(h,{close:t.close}))};const d=22,c=u.default.a`
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: ${50}px;
  min-width: ${50}px;
  height: ${50}px;
  min-height: ${50}px;
  border-radius: ${25}px;
  transition: ${s.default.transitionDuration}ms;
  &:hover {
    box-shadow: ${e=>e.focusAnimation?"0 0 10px rgba(230, 230, 230, 1) inset":"none"};
  }
`,f=u.css`
  display: flex;
  align-items: center;
  justify-content: center;
  &::before {
    position: absolute;
    width: 4px;
    height: 14px;
    content: '';
    background: ${s.default.brightColor};
    border-radius: 6px;
    transition: ${s.default.transitionDuration}ms;
    transform: rotate(45deg) translate(0, 14px);
  }
  &::after {
    position: relative;
    width: ${d}px;
    min-width: ${d}px;
    max-width: ${d}px;
    height: ${d}px;
    min-height: ${d}px;
    max-height: ${d}px;
    margin: 0 0 6px 6px;
    cursor: pointer;
    content: '';
    border: 4px solid ${s.default.brightColor};
    border-radius: 50%;
    transition: ${s.default.transitionDuration}ms;
    transform: rotate(0deg) translate(0px, 0px);
  }
`,p=u.css`
  display: flex;
  align-items: center;
  justify-content: center;
  &::before {
    position: absolute;
    width: 4px;
    min-width: 4px;
    max-width: 4px;
    height: 33px;
    min-height: 33px;
    max-height: 3px;
    content: '';
    background: ${s.default.brightColor};
    border-radius: 3px;
    transition: ${s.default.transitionDuration}ms;
    transform: rotate(45deg) translate(-0.5px, 0.5px);
  }
  &::after {
    position: relative;
    width: 0px;
    min-width: 0px;
    max-width: 0px;
    height: 30px;
    min-height: 30px;
    max-height: 30px;
    content: '';
    border: 2px solid ${s.default.brightColor};
    border-radius: 3px;
    transition: ${s.default.transitionDuration}ms;
    transform: rotate(-45deg);
  }
`,h=u.default.div`
  ${e=>e.close?p:f};
`},3660:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)).default.div`
  width: ${e=>e.size}px;
  height: ${e=>e.size}px;
  border-top: 0.3em solid rgba(79, 174, 159, 0.7);
  border-right: 0.3em solid rgba(0, 0, 0, 0);
  border-bottom: 0.3em solid rgba(0, 0, 0, 0);
  border-left: 0.3em solid rgba(0, 0, 0, 0);
  border-radius: 50%;
  animation: load8 1s infinite cubic-bezier(0.39, 0.58, 0.57, 1);
  @keyframes load8 {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
`;t.default=({size:e="60"})=>a.default.createElement(i,{size:e})},1434:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(2740)),d=n(3549);t.default=({name:e,value:t=0,label:n,disabled:r=!1,width:a="auto",className:i="InputDate",onChange:o})=>{const u=`InputDate${e}`,[d,h]=(0,l.useState)(p(t));return(0,l.useEffect)((()=>{const e=p(t);h(e)}),[t]),l.default.createElement(c,{className:i||e,width:a,flow:"row wrap",alignItems:"center",justifyContent:"flex-start"},n&&l.default.createElement(s.Label,{htmlFor:u,display:"inline",sideMargin:!0},n),l.default.createElement(f,{type:"date",id:u,name:e,className:i,value:d,onChange:e=>{const t=e.target.value,n=new Date(t).getTime();h(t),o&&o(n)},disabled:r}))};const c=(0,u.default)((e=>l.default.createElement(s.default,{...e})))`
  label {
    flex: 1 1 auto;
  }
  input {
    flex: 1 1 auto;
  }
`,f=u.default.input`
  ${d.InputCss};
`,p=e=>{const t=new Date(e);return t.getFullYear()+"-"+("00"+(t.getMonth()+1)).slice(-2)+"-"+("00"+t.getDate()).slice(-2)}},2584:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.imageDefault=t.imageIcon=t.imageBg=void 0;const l=i(n(7294)),u=i(n(9163)),s=o(n(300)),d=o(n(6032)),c="dragover",f="dragleave";t.imageBg="bg",t.imageIcon="icon",t.imageDefault=t.imageBg,t.default=({type:e=t.imageDefault,id:n,value:r="",className:a,onChange:i})=>{const o=(0,l.useRef)(l.default.createElement("div",null)),u=(0,l.useRef)(l.default.createElement("input",null)),[s,d]=(0,l.useState)("dragleave"),p=t=>{if(u.current){const r=o.current;let a=new FileReader;a.onload=()=>{const o=new FormData,l=String(a.result),u=new File([l],n,{type:t.type,lastModified:(new Date).getTime()});let s=t.type.split("/")[1];s="jpeg"===s?"jpg":s;const d=`${e}.${s}`;r.style.backgroundImage=`url(${l})`,o.append(e,u),i(o,d)},t&&a.readAsDataURL(t)}d(f)};return l.default.createElement(g,{ref:o,id:n,type:e,dragStatus:s,className:a,value:r},l.default.createElement(m,{ref:u,type:"file",className:e,accept:"image/*",name:"photo",dragStatus:s,onDragOver:e=>{e.preventDefault(),d(c)},onDragLeave:e=>{e.preventDefault(),d(f)},onDrag:e=>{e.preventDefault(),d("draged");let t=e.dataTransfer.files;p(t[0])},onChange:e=>{const t=e.target.files[0];p(t)}}))};const p=u.css`
  width: 100%;
  height: 230px;
  background-color: ${d.default.brightColor};
  border: ${e=>e.dragStatus===c?3:0}px dashed ${d.default.themeColor};
  :hover {
    box-shadow: ${d.default.shadowHorizonBright};
  }
`,h=u.css`
  width: 90px;
  height: 90px;
  border-radius: 50%;
  background-color: rgb(190, 190, 190, 0.9);
  border: ${e=>e.dragStatus===c?3:0}px dashed ${d.default.themeColor};
  :hover {
    box-shadow: 0px 0px 15px rgb(150 150 150);
  }
`,g=u.default.div`
  display: flex;
  align-items: center;
  justify-content: center;
  ${e=>e.type===t.imageBg?p:h}
  background-size: cover;
  background-repeat: no-repeat;
  background-image: ${e=>b({id:e.id,image:e.value})};
  background-position: center;
  transition: ${d.default.transitionDuration}ms;
`,m=u.default.input`
  display: flex;
  align-items: center;
  justify-content: center;
  width: inherit;
  height: inherit;
  opacity: 0;
  cursor: pointer;
`,b=({id:e,image:t})=>t&&""!==t?`url(https://${s.default.assetsCoverPath}${e}/${t}), url(https://${s.default.assetsCoverPath}${t}) `:`https://${s.default.assetsCoverPath}/${t}`},752:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032)),c=n(3549);t.default=({name:e,value:t="",label:n,width:r="auto",className:a="InputText",onChange:i})=>{const o=`InputText${e}`,[u,d]=(0,l.useState)(t);return l.default.createElement(f,{className:a||e,width:r,flow:"row wrap",alignItems:"center",justifyContent:"flex-start"},n&&l.default.createElement(s.Label,{htmlFor:o,sideMargin:!0},n),l.default.createElement(p,{type:"text",id:o,name:e,className:a,value:u,onChange:e=>{d(e.target.value),i&&i(e.target.value)}}))};const f=(0,u.default)((e=>l.default.createElement(s.default,{...e})))`
  label {
    flex: 1 1 auto;
  }
  input {
    flex: 1 1 auto;
  }
`,p=u.default.input`
  ${c.InputCss};
  appearance: none;
  -webkit-appearance: none;
  margin: ${d.default.baseMargin}px 0;
`},3549:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InputCss=void 0;const a=n(9163),i=r(n(6032)),o=n(2404);i.default.getRgbaColor,t.InputCss=a.css`
  display: block;
  min-width: fit-content;
  max-width: calc(100% - ${i.default.quadMargin}px);
  padding: ${i.default.doublePadding}px;
  margin-left: ${i.default.quadMargin}px;
  margin-right: ${i.default.quadMargin}px;
  outline-color: ${(0,o.getRgbaColor)(i.default.themeRgb)};
  color: ${i.default.fontColor};
  border-radius: ${i.default.baseSize}px;
  border: 1px solid ${i.default.borderColor};
  background: rgb(250, 250, 250, 0.4);
  cursor: ${e=>!0===e.disabled&&void 0!==e.disabled?"normal":"pointer"};
  transition: ${i.default.transitionDuration}ms;
  appearance: none;
  -webkit-appearance: none;
  margin: ${i.default.baseMargin}px 0;
  font-weight: 200;
  :focus {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :hover {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
`},6490:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1434)),i=r(n(2584)),o=r(n(752));t.default={DropImage:i.default,Text:o.default,Date:a.default}},723:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294));t.default=({value:e,children:t})=>a.default.createElement("option",{value:e},t)},962:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=n(5391),l=r(n(6032)),u=n(6392);t.default=({name:e,value:t,className:n="Select",disabled:r=!1,noSelectOption:i=!1,width:l="auto",onChange:u,children:d})=>a.default.createElement(s,{className:n,name:e,onChange:e=>{const t=e.target.value===o.noSelectOptionLabel?"":String(e.target.value);u&&u(t)},disabled:r,value:t,width:l},i&&(0,o.getNoSelectOption)(),d);const s=i.default.select`
  ${u.InputCss};
  width: ${e=>e.width};
  margin: 0 ${l.default.baseMargin}px ${l.default.baseMargin}px 0;
`},6392:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InputCss=void 0;const a=n(9163),i=r(n(6032)),o=n(2404),l=i.default.baseTension/3,u=`rgb(${l} ${l} ${l})`;t.InputCss=a.css`
  display: block;
  min-width: fit-content;
  max-width: calc(100% - ${i.default.quadMargin}px);
  padding: ${i.default.doublePadding}px;
  margin-left: ${i.default.quadMargin}px;
  margin-right: ${i.default.quadMargin}px;
  outline-color: ${(0,o.getRgbaColor)(i.default.themeRgb)};
  color: ${i.default.fontColor};
  border-radius: ${i.default.baseSize}px;
  border: 1px solid ${i.default.borderColor};
  background: rgb(250, 250, 250, 0.4);
  cursor: ${e=>!0===e.disabled&&void 0!==e.disabled?"normal":"pointer"};
  transition: ${i.default.transitionDuration}ms;
  appearance: none;
  -webkit-appearance: none;
  margin: ${i.default.baseMargin}px 0;
  font-weight: 200;
  :focus {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :hover {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :disabled {
    color: ${u};
  }
`},5391:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getNoSelectOption=t.noSelectOptionLabel=void 0;const a=r(n(7294)),i=r(n(723)),o=r(n(962));t.noSelectOptionLabel="-",t.getNoSelectOption=()=>a.default.createElement("option",{value:void 0},t.noSelectOptionLabel),t.default={Single:o.default,Option:i.default}},1187:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(2740)),l=r(n(6032));t.default=()=>a.default.createElement(u,{className:"checkwrapper",alignItems:"center",justifyContent:"center"},a.default.createElement("svg",{version:"1.1",id:"Layer_1",x:"0px",y:"0px",viewBox:"0 0 98.5 98.5",enableBackground:"new 0 0 98.5 98.5"},a.default.createElement("path",{className:"checkmark",fill:"none",strokeWidth:"4",strokeMiterlimit:"50",d:"M81.7,17.8C73.5,9.3,62,4,49.2,4\n\tC24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3"})));const u=(0,i.default)(o.default)`
  position: absolute;
  width: 100%;
  height: 100%;

  svg {
    width: 100px;
    height: 100px;
  }

  .checkmark {
    stroke: ${l.default.saveCheckColor};
    stroke-dashoffset: 745.74853515625;
    stroke-dasharray: 745.74853515625;
    animation: dash 2s ease-out forwards;
  }

  @keyframes dash {
    0% {
      stroke-dashoffset: 745.74853515625;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
`},8273:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032));t.default=e=>{const t={...s.flexLayoutCenterPropsInit,...e};return l.default.createElement(c,{...t},l.default.createElement("svg",{version:"1.0",xmlns:"http://www.w3.org/2000/svg",width:"512.000000pt",height:"512.000000pt",viewBox:"0 0 512.000000 512.000000",preserveAspectRatio:"xMidYMid meet"},l.default.createElement("g",{transform:"translate(0.000000,512.000000) scale(0.100000,-0.100000)",fill:"#000000",stroke:"none"},l.default.createElement("path",{d:"M2332 5110 c-611 -59 -1163 -320 -1589 -751 -406 -411 -648 -908\n-725 -1489 -16 -123 -16 -497 0 -620 77 -581 319 -1078 725 -1489 214 -216\n414 -360 692 -496 366 -181 705 -259 1120 -259 224 0 326 9 510 46 603 121\n1134 450 1525 946 141 179 292 455 374 684 529 1471 -349 3055 -1874 3382\n-209 45 -554 65 -758 46z m485 -405 c158 -20 289 -48 414 -89 708 -230 1253\n-816 1428 -1537 338 -1395 -732 -2722 -2159 -2676 -246 8 -416 37 -633 109\n-592 196 -1086 666 -1321 1258 -106 269 -152 539 -143 850 6 220 26 356 81\n545 106 367 296 678 582 955 339 327 744 521 1224 584 142 19 383 19 527 1z"}),l.default.createElement("path",{d:"M1781 3448 c-49 -24 -95 -87 -105 -144 -5 -21 -1 -55 8 -87 14 -48\n36 -73 311 -347 l295 -295 -289 -290 c-159 -159 -296 -304 -304 -320 -51 -101\n-12 -221 87 -272 42 -22 132 -21 176 2 19 10 166 147 325 306 l291 289 284\n-286 c162 -162 302 -294 325 -306 85 -45 200 -16 252 63 35 53 43 140 18 190\n-9 19 -148 166 -308 326 l-292 293 292 293 c191 191 298 305 308 329 69 166\n-100 334 -260 259 -26 -12 -141 -120 -325 -305 -157 -157 -289 -286 -295 -286\n-5 0 -140 130 -300 290 -192 191 -303 294 -327 305 -52 21 -115 19 -167 -7z"}))))};const c=(0,u.default)(s.default)`
  width: 36pxx;
  height: 36px;
  svg {
    width: inherit;
    height: inherit;
    cursor: pointer;
  }
  path {
    fill: ${d.default.baseColor};
  }
`},9946:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740));t.default=e=>{const t={...s.boxLayoutPropsInit,...e};return l.default.createElement(d,{...t},l.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},l.default.createElement("g",null,l.default.createElement("path",{d:"M165.628,461.127c0,0,0.827-0.828,1.838-1.839l194.742-194.742c1.012-1.011,1.92-1.92,2.019-2.019\n\t\tc0.099-0.099,1.008-1.008,2.019-2.019l103.182-103.182c0.018-0.018,0.018-0.048,0-0.067L354.259,42.092\n\t\tc-0.018-0.018-0.048-0.018-0.067,0L251.01,145.274c-1.011,1.011-1.92,1.92-2.019,2.019c-0.099,0.099-1.008,1.008-2.019,2.019\n\t\tL50.401,345.884c-0.006,0.006-0.01,0.012-0.012,0.02L0.002,511.459c-0.011,0.036,0.023,0.07,0.059,0.059l163.079-49.633\n\t\tC164.508,461.468,165.628,461.127,165.628,461.127z M36.734,474.727l25.159-82.666c0.01-0.034,0.053-0.045,0.078-0.02\n\t\tl57.507,57.507c0.025,0.025,0.014,0.068-0.02,0.078l-82.666,25.16C36.756,474.797,36.722,474.764,36.734,474.727z"}),l.default.createElement("path",{d:"M502.398,104.432c12.803-12.804,12.803-33.754,0-46.558l-47.791-47.792c-12.804-12.803-33.754-12.803-46.558,0\n\t\tl-23.862,23.862c-0.018,0.018-0.018,0.048,0,0.067l94.282,94.282c0.018,0.018,0.048,0.018,0.067,0L502.398,104.432z"}))))};const d=(0,u.default)(s.default)`
  width: 100%;
  height: 100%;
`},9315:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740));t.default=e=>{const t={...s.boxLayoutPropsInit,...e};return l.default.createElement(d,{...t,alignItems:"center",justifyContent:"center"},l.default.createElement("svg",{version:"1.1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 48 48"},l.default.createElement("g",null,l.default.createElement("path",{fill:"#EA4335",d:"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"}),l.default.createElement("path",{fill:"#4285F4",d:"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"}),l.default.createElement("path",{fill:"#FBBC05",d:"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"}),l.default.createElement("path",{fill:"#34A853",d:"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"}),l.default.createElement("path",{fill:"none",d:"M0 0h48v48H0z"}))))};const d=(0,u.default)(s.default)`
  width: 100%;
  height: 100%;
`},4782:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(3660)),l=r(n(2740)),u=r(n(6032));t.default=()=>a.default.createElement(s,{className:"checkwrapper",alignItems:"center",justifyContent:"center"},a.default.createElement(o.default,null));const s=(0,i.default)(l.default)`
  position: absolute;
  width: 100%;
  height: 100%;

  svg {
    width: 100px;
    height: 100px;
  }

  .checkmark {
    stroke: ${u.default.saveCheckColor};
    stroke-dashoffset: 745.74853515625;
    stroke-dasharray: 745.74853515625;
    animation: dash 2s ease-out forwards;
  }

  @keyframes dash {
    0% {
      stroke-dashoffset: 745.74853515625;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
`},7621:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032));t.default=e=>{const t={...s.flexLayoutCenterPropsInit,...e};return l.default.createElement(c,{...t},l.default.createElement("svg",{version:"1.0",xmlns:"http://www.w3.org/2000/svg",width:"64.000000pt",height:"64.000000pt",viewBox:"0 0 64.000000 64.000000",preserveAspectRatio:"xMidYMid meet"},l.default.createElement("g",{transform:"translate(0.000000,64.000000) scale(0.100000,-0.100000)",fill:"#000000",stroke:"none"},l.default.createElement("path",{d:"M288 629 c-10 -5 -20 -25 -24 -44 -3 -19 -11 -35 -17 -35 -21 0 -78\n-52 -96 -88 -11 -22 -21 -70 -24 -120 -7 -87 -32 -159 -69 -199 -11 -12 -18\n-29 -15 -37 6 -14 42 -16 277 -16 235 0 271 2 277 16 3 8 -4 25 -15 37 -38 40\n-64 115 -69 201 -4 49 -13 95 -24 118 -18 36 -75 88 -96 88 -6 0 -14 16 -17\n35 -9 48 -48 68 -88 44z m48 -40 c10 -17 -13 -36 -27 -22 -12 12 -4 33 11 33\n5 0 12 -5 16 -11z"}),l.default.createElement("path",{d:"M108 552 c-14 -15 -33 -42 -42 -60 -22 -44 -32 -127 -17 -137 18 -10\n23 -1 32 57 5 32 20 70 39 96 16 23 30 47 30 52 0 21 -19 17 -42 -8z"}),l.default.createElement("path",{d:"M494 567 c-3 -10 3 -28 16 -44 28 -36 50 -89 50 -122 0 -33 14 -56\n29 -47 30 19 -9 153 -59 201 -25 24 -30 26 -36 12z"}),l.default.createElement("path",{d:"M240 51 c0 -18 53 -51 80 -51 27 0 80 33 80 51 0 5 -36 9 -80 9 -44\n0 -80 -4 -80 -9z"}))))};const c=(0,u.default)(s.default)`
  width: 36px;
  height: 36px;
  svg {
    width: inherit;
    height: inherit;
    cursor: pointer;
  }
  path {
    fill: ${d.default.baseColor};
  }
  :hover {
    path {
      fill: ${d.default.themeColor};
    }
  }
`},5246:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740));t.default=e=>{const t={...s.boxLayoutPropsInit,...e};return l.default.createElement(d,{...t},l.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},l.default.createElement("g",null,l.default.createElement("path",{d:"M446.025,92.206c-40.762-42.394-97.487-69.642-160.383-72.182c-15.791-0.638-29.114,11.648-29.752,27.433\n\t\tc-0.638,15.791,11.648,29.114,27.426,29.76c47.715,1.943,90.45,22.481,121.479,54.681c30.987,32.235,49.956,75.765,49.971,124.011\n\t\tc-0.015,49.481-19.977,94.011-52.383,126.474c-32.462,32.413-76.999,52.368-126.472,52.382\n\t\tc-49.474-0.015-94.025-19.97-126.474-52.382c-32.405-32.463-52.368-76.992-52.382-126.474c0-3.483,0.106-6.938,0.302-10.364\n\t\tl34.091,16.827c3.702,1.824,8.002,1.852,11.35,0.086c3.362-1.788,5.349-5.137,5.264-8.896l-3.362-149.834\n\t\tc-0.114-4.285-2.88-8.357-7.094-10.464c-4.242-2.071-9.166-1.809-12.613,0.738L4.008,182.45c-3.05,2.221-4.498,5.831-3.86,9.577\n\t\tc0.61,3.759,3.249,7.143,6.966,8.974l35.722,17.629c-1.937,12.166-3.018,24.602-3.018,37.279\n\t\tc-0.014,65.102,26.475,124.31,69.153,166.944C151.607,465.525,210.8,492.013,275.91,492\n\t\tc65.095,0.014,124.302-26.475,166.937-69.146c42.678-42.635,69.167-101.842,69.154-166.944\n\t\tC512.014,192.446,486.844,134.565,446.025,92.206z"}))))};const d=(0,u.default)(s.default)`
  width: 100%;
  height: 100%;
`},9819:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032));t.default=e=>{const t={...s.boxLayoutPropsInit,...e};return l.default.createElement(c,{...t},l.default.createElement("svg",{version:"1.0",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 64.000000 64.000000",preserveAspectRatio:"xMidYMid meet"},l.default.createElement("g",{transform:"translate(0.000000,64.000000) scale(0.100000,-0.100000)",stroke:"none"},l.default.createElement("path",{d:"M77 545 c-4 -9 -7 -90 -7 -180 0 -182 4 -195 64 -195 41 0 121 -27\n137 -46 6 -8 15 -14 20 -14 5 0 9 82 9 183 0 178 -1 184 -22 203 -45 40 -82\n56 -138 61 -47 5 -58 3 -63 -12z"}),l.default.createElement("path",{d:"M455 553 c-23 -6 -62 -30 -92 -57 -22 -19 -23 -25 -23 -203 0 -101 4\n-183 9 -183 5 0 14 6 20 14 16 19 96 46 137 46 60 0 64 13 64 195 0 90 -3 170\n-6 179 -6 16 -63 20 -109 9z"}),l.default.createElement("path",{d:"M11 476 c-8 -9 -11 -72 -9 -202 l3 -189 127 0 c100 0 124 3 116 12\n-13 16 -101 43 -138 43 -14 0 -36 7 -48 16 -21 15 -22 21 -22 169 0 150 -6\n179 -29 151z"}),l.default.createElement("path",{d:"M607 483 c-4 -3 -7 -75 -7 -159 0 -147 -1 -154 -22 -168 -12 -9 -34\n-16 -48 -16 -37 0 -125 -27 -138 -43 -8 -9 16 -12 116 -12 l127 0 3 191 c2\n152 0 194 -11 203 -8 6 -17 8 -20 4z"}))))};const c=(0,u.default)(s.default)`
  width: 32px;
  height: 32px;
  svg {
    width: inherit;
    height: inherit;
  }
  path {
    fill: ${d.default.baseColor};
  }
`},4827:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032));t.default=e=>{const t={...s.boxLayoutPropsInit,...e};return l.default.createElement(c,{...t},l.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},l.default.createElement("g",null,l.default.createElement("path",{d:"M490.249,308.087v-0.01L348.89,449.436c-17.525,17.525-40.416,26.237-63.459,26.256\n\t\tc-23.042-0.02-45.935-8.732-63.458-26.256L21.751,249.215L0,270.984l200.222,200.211c23.472,23.474,54.416,35.27,85.209,35.26\n\t\tc30.794,0.01,61.737-11.776,85.21-35.26L512,329.838L490.249,308.087z"}),l.default.createElement("path",{d:"M54.376,228.916l200.221,200.222c17.024,17.024,44.643,17.024,61.667,0l141.358-141.369\n\t\tc17.044-17.034,17.024-44.643,0-61.656L257.422,25.891c-7.651-7.631-17.846-12.168-28.62-12.708L79.852,5.601\n\t\tC67.535,4.971,55.538,9.597,46.805,18.32c-8.712,8.722-13.339,20.73-12.698,33.046l7.571,148.939\n\t\tC42.22,211.09,46.746,221.285,54.376,228.916z M115.041,86.535c14.02-14.02,36.732-14.02,50.751,0\n\t\tc14.02,14.02,14.02,36.742,0,50.761c-14.02,14.02-36.731,14.02-50.751,0C101.022,123.277,101.022,100.555,115.041,86.535z"}))))};const c=(0,u.default)(s.default)`
  width: 24px;
  height: 24px;
  svg {
    width: inherit;
    height: inherit;
  }
  path {
    fill: ${d.default.baseColor};
  }
`},5570:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740));t.default=e=>{const t={...s.flexLayoutCenterPropsInit,...e};return l.default.createElement(d,{...t},l.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},l.default.createElement("g",null,l.default.createElement("path",{d:"M256,265.308c73.252,0,132.644-59.391,132.644-132.654C388.644,59.412,329.252,0,256,0\n\t\tc-73.262,0-132.643,59.412-132.643,132.654C123.357,205.917,182.738,265.308,256,265.308z"}),l.default.createElement("path",{d:"M425.874,393.104c-5.922-35.474-36-84.509-57.552-107.465c-5.829-6.212-15.948-3.628-19.504-1.427\n\t\tc-27.04,16.672-58.782,26.399-92.819,26.399c-34.036,0-65.778-9.727-92.818-26.399c-3.555-2.201-13.675-4.785-19.505,1.427\n\t\tc-21.55,22.956-51.628,71.991-57.551,107.465C71.573,480.444,164.877,512,256,512C347.123,512,440.427,480.444,425.874,393.104z"}))))};const d=(0,u.default)(s.default)`
  width: 100%;
  height: 100%;
`},5565:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.svgCss=void 0;const a=n(9163),i=r(n(1187)),o=r(n(8273)),l=r(n(9946)),u=r(n(9315)),s=r(n(4782)),d=r(n(7621)),c=r(n(5246)),f=r(n(9819)),p=r(n(4827)),h=r(n(5570));t.svgCss=a.css`
  width: 32px;
  height: 32px;
`,t.default={Checkmark:i.default,Edit:l.default,Google:u.default,Reset:c.default,Tag:p.default,User:h.default,Story:f.default,Notif:d.default,Close:o.default,Loarding:s.default}},6874:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6562)),d=o(n(3954)),c=o(n(8203)),f=o(n(5565)),p=o(n(1765)),h=o(n(2740)),g=n(4065),m=o(n(1633)),b=n(8904),y=()=>{const e=localStorage.getItem(b.myUserKey);return new m.default(JSON.parse(e))};t.default=({myUser:e,setMyUser:t})=>{const[n,r]=(0,l.useState)(!1),a=async e=>{const t=s.default.parseJwt(e.credential),n=t.picture,r=s.default.deepCopy(t);if(delete r.iss,delete r.nbf,delete r.aud,delete r.sub,delete r.azp,delete r.picture,delete r.iat,delete r.exp,delete r.jti,delete r.given_name,delete r.family_name,r.email_verified){delete r.email_verified;const e=await c.default.json("login",r),t=new m.default({...e,snsIcon:n});localStorage.setItem(b.myUserKey,JSON.stringify(t))}window.location.reload()};return(0,l.useEffect)((()=>{}),[e]),(0,l.useEffect)((()=>{const e=y();e&&t(e),window.google&&(window.google.accounts.id.initialize({client_id:d.default.clientId,cancel_on_tap_outside:!0,callback:a}),null===e&&window.google.accounts.id.prompt((e=>{e.isNotDisplayed()||e.isSkippedMoment()})))}),[]),l.default.createElement(l.default.Fragment,null,l.default.createElement(v,{className:"Account",onClick:()=>{document.cookie=b.googleAccountCookieKey;const e=y();null===e?window.google.accounts.id.prompt():r(!0),e&&t(e)},alt:{label:e.name,type:"bottom right"}},""===e.snsIcon?l.default.createElement(w,{alignItems:"center",justifyContent:"center",width:"48px",height:"48px",border:!0,borderRadius:"circle"},l.default.createElement(f.default.Google,null)):l.default.createElement(x,{className:"MyAccount",backgroundImage:e.snsIcon})),l.default.createElement(p.default,{show:n,setShow:r,menus:g.AccountMenus,onClick:t=>{switch(location.pathname.split("/")[1],t){case g.AccountMenusMyMenu:console.log(e.id);break;case g.AccountMenusSelectAccount:window.google.accounts.id.prompt();break;case g.AccountMenusLogout:window.google.accounts.id.disableAutoSelect(),document.cookie=b.googleAccountCookieKey,localStorage.removeItem(b.myUserKey),window.location.reload()}r(!1)},fitRight:!0}))};const v=(0,u.default)(h.default)`
  width: 38px;
  height: 38px;
  min-width: 38px;
  min-height: 38px;
  cursor: pointer;
`,w=(0,u.default)(h.default)`
  width: inherit;
  height: inherit;
  min-width: inherit;
  min-height: inherit;
  svg {
    width: 24px;
    height: 24px;
  }
`,x=u.default.div`
  width: 38px;
  height: 38px;
  background-position: center;
  background-image: url(${e=>e.backgroundImage});
  background-size: 38px;
  background-repeat: no-repeat;
  border-radius: 50%;
`},990:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032)),d="green",c=e=>l.createElement(l.Fragment,null,l.createElement("label",null,e.label),l.createElement("div",{className:"lamp"}," ")),f=e=>l.createElement("button",{onClick:t=>e.onClick&&e.onClick(t)},l.createElement(c,{label:e.label})),p=e=>l.createElement("a",{href:e.href},l.createElement(c,{label:e.label})),h=e=>e.href?l.createElement(p,{...e}):l.createElement(f,{...e}),g=e=>{const t=e.className?e.className:"",n=e.active?`${t} active`:t;return l.createElement(m,{key:e.label,theme:e.theme,className:n},l.createElement(h,{...e}))};g.defaultProps={active:!1,theme:d},t.default=g;const m=u.default.li`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  width: auto;
  min-width: 180px;
  height: 70px;
  padding: ${s.default.basePadding}px;
  margin: ${s.default.baseMargin}px;
  button {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: inherit;
    color: ${e=>e.theme===d?"rgba(0, 0, 0, 1)":"rgba(255, 255, 255, 1)"};
    cursor: pointer;
    background: ${e=>e.theme===d?"rgba(255, 255, 255, 1)":"rgba(68, 68, 68, 1)"};
    border: 0;
    outline: 0;
    transition: ${s.default.transitionDuration}ms;
  }
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: inherit;
    padding: 15px;
    color: #ddd;
    cursor: pointer;
    transition: ${s.default.transitionDuration}ms;
    background: ${e=>e.theme===d?"rgba(255, 255, 255, 1)":"rgba(68, 68, 68, 1)"};
    text-decoration: none;
  }
  a:hover,
  button:hover {
    background: ${e=>e.theme===d?"rgba(245, 245, 245, 1)":"rgba(98, 98, 98, 1)"};
  }
  .lamp {
    position: relative;
    width: 50%;
    max-width: 50px;
    height: 10px;
    max-height: 10px;
    cursor: pointer;
    background: ${e=>e.theme===d?s.default.markupColor:"rgba(155, 155, 155, 1)"};
    border-radius: 10px;
    transition: ${s.default.transitionDuration}ms;
  }
  label {
    position: relative;
    margin-bottom: 10px;
    cursor: pointer;
  }

  &.active div.lamp {
    cursor: pointer;
    background: ${e=>(e.theme,"rgba(79, 174, 159, 1)")};
  }
`},9425:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=o(n(5565)),d=o(n(1187)),c=i(n(2740)),f=o(n(6032));t.default=({title:e,headerMenu:t,content:n,iconType:r="Tag",checkAnimation:a})=>(s.default[r],l.default.createElement(p,{className:"HeaderSection",width:"100%",flow:"column nowrap",alignItems:"center",resetOrigin:!0,border:!0,borderRadius:!0,upperMargin:!0,sideMargin:!0,sidePadding:!0,bottomPadding:!0,bottomMargin:!0},l.default.createElement(h,{className:"HeaderSectionHeader",width:"100%",alignItems:"center",justifyContent:"space-between",border:"underline",upperPadding:!0,sidePadding:!0,bottomPadding:!0},l.default.createElement(c.H5,{className:e,upperMargin:!0,bottomMargin:!0},e),t&&l.default.createElement(c.default,{className:"ProfileSectionMenu",flow:"column nowrap"},t)),l.default.createElement(g,{className:"HeaderSectionContent",flow:"column nowrap",justifyContent:"center",upperPadding:!0,sidePadding:!0,sideMargin:!0,bottomPadding:!0},n),a&&l.default.createElement(d.default,null)));const p=(0,u.default)(c.Section)`
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    margin-right: 0;
    margin-left: 0;
    padding-right: 0;
    padding-left: 0;
    border-right: 0;
    border-left: 0;
    border-radius: 0;
    .HeaderSection {
      margin: 0;
    }
    .HeaderSectionContent {
      padding: ${f.default.basePadding}px;
      margin: 0;
    }
  }
`,h=(0,u.default)(c.default)`
  .ProfileSectionSvgIcon {
    margin: 0 ${f.default.doubleMargin}px 0 0;
  }
`,g=(0,u.default)(c.default)`
  width: 100%;
  height: auto;
  min-height: 200px;
`},3991:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AdvertUnder=t.AdvertLeft=t.AdvertRight=t.Under=t.Left=t.Right=t.Header=void 0;const l=o(n(7294)),u=i(n(9163)),s=i(n(2740)),d=o(n(6032));t.Header=({showAdvert:e,handleOnClickControlAdvert:t})=>l.default.createElement(p,{showAdvert:e},l.default.createElement(h,{showAdvert:e,onClick:t},"AD",l.default.createElement("br",null),e?"OFF":"ON"));const c=()=>l.default.createElement(l.default.Fragment,null,"スポンサー",l.default.createElement("br",null),"募集中",l.default.createElement("br",null),l.default.createElement("br",null),"¥0~");t.Right=({showAdvert:e})=>l.default.createElement(t.AdvertRight,{className:"AdvertRight",showAdvert:e},l.default.createElement(c,null)),t.Left=({showAdvert:e=!0})=>l.default.createElement(t.AdvertLeft,{className:"AdvertLeft",showAdvert:e},l.default.createElement(c,null)),t.Under=()=>{const e=(0,s.useFlexesContext)();return l.default.createElement(t.AdvertUnder,{className:"AdvertUnder",showAdvert:e.isScrollTop},l.default.createElement(v,{flow:"row nowrap",alignItems:"center",justifyContent:"flex-start",width:"100%",sideMargin:"huge",border:!0},l.default.createElement("div",{className:"picture"}),l.default.createElement("div",{className:"description"}," DESCRIPTION ")))},t.default={Header:t.Header,Right:t.Right,Left:t.Left,Under:t.Under};const f=u.css`
  position: sticky;
  top: ${2*d.default.baseHeight+d.default.baseMargin}px;
  flex: 1 1 ${d.default.advertWidth}px;
  display: ${e=>e.showAdvert?"flex":"none"};
  opacity: ${e=>e.showAdvert?1:0};
  align-items: center;
  justify-content: center;
  width: ${d.default.advertWidth}px;
  min-width: ${d.default.advertWidth}px;
  max-width: ${d.default.advertWidth}px;
  height: calc(100vh - ${2*d.default.baseHeight+2*d.default.baseMargin}px);
  margin-top: ${d.default.doubleMargin}px;
  background: ${d.default.advertColor};
  color: #fff;
  text-align: center;
  transition-property: background, transform;
  transition-duration: ${d.default.transitionDuration}ms, ${d.default.transitionDuration}ms;
  cursor: pointer;
  :hover {
    background: ${d.default.advertHoverColor};
  }
  @media (max-width: ${d.default.spLayoutWidth}px) {
    display: flex;
    position: relative;
    top: 0;
    width: calc(100% - ${d.default.doubleMargin}px);
    max-width: calc(100% - ${d.default.doubleMargin}px);
    margin: 0 ${d.default.baseMargin}px;
  }
`,p=u.default.div`
  display: flex;
  align-items: center;
  justify-content: flex-end;
  width: 100%;
  padding-top: ${d.default.doublePadding}px;
  padding-right: ${d.default.doublePadding}px;
  cursor: pointer;
  @media (max-width: ${d.default.doubleAdvertWidth}px) {
    padding-right: ${d.default.basePadding}px;
  }
`,h=u.default.div`
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  background: ${d.default.advertColor};
  color: #fff;
  font-size: 10px;
  text-align: center;
  line-height: 14px;
  border-radius: 5px;
  cursor: pointer;
  transition: ${d.default.transitionDuration}ms;
  cursor: pointer;
  :hover {
    background: ${d.default.advertHoverColor};
    box-shadow: ${d.default.shadowHorizonBright};
  }
  @media (max-width: ${d.default.spLayoutWidth}px) {
    display: none;
  }
`;t.AdvertRight=u.default.div`
  ${f};
`,t.AdvertLeft=u.default.div`
  ${f};
  @media (max-width: ${d.default.doubleAdvertWidth}px) {
    display: none;
  }
  @media (max-width: ${d.default.spLayoutWidth}px) {
    display: flex;
    margin-bottom: ${d.default.baseMargin}px;
  }
`;const g=2*d.default.baseHeight,m=2*d.default.doubleMargin,b=g+m,y=g-m;t.AdvertUnder=(0,u.default)(s.default)`
  position: fixed;
  bottom: ${d.default.doubleMargin}px;
  width: 100%;
  max-width: ${d.default.appWidth}px;
  height: ${g}px;
  padding: 0 64px;
  transition: ${d.default.transitionDuration}ms;
  transform: translate(0px, ${e=>e.showAdvert?0:b}px);
  .picture {
    width: ${y}px;
    min-width: ${y}px;
    max-width: ${y}px;
    height: ${y}px;
    min-height: ${y}px;
    max-height: ${y}px;
    margin: ${d.default.doubleMargin}px;
    border: 1px solid ${d.default.borderColor};
    border-radius: ${d.default.borderRadius}px;
  }
  .description {
    width: 100%;
    height: 100%;
    padding: ${d.default.doublePadding}px;
    color: ${d.default.fontColor};
  }
`;const v=(0,u.default)(s.default)`
  height: 100%;
  ${d.default.alphaLightBgSet};
  border-radius: ${d.default.borderRadius}px;
  cursor: pointer;
  :hover {
    box-shadow: ${d.default.shadowHorizonBright};
  }
`},8385:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(6562)),s=o(n(9425)),d=o(n(704)),c=o(n(3190)),f=o(n(4829)),p=n(8690),h=i(n(2740)),g={industory:"",industoryParent:"",startupSeries:"",jobParent:"",job:"",story:""};t.default=({isMyPage:e=!1,tagParent:t,someTags:n,isSavedAnimations:r,handleOnClickOpenTag:a,handleOnClickRemove:i})=>l.default.createElement(s.default,{key:`${t} Tags`,title:u.default.getHeadUpper(`${t} Tags`),content:t===p.tagParentStory?l.default.createElement(h.Section,{key:`${p.tagParentStory}`,flow:"column nowrap",upperPadding:!0},l.default.createElement(h.default,{className:`TagSection ${t}`,flow:"row wrap",alignItems:"center",width:"100%",upperMargin:!0,bottomMargin:!0},n&&n[p.tagParentStory]&&n[p.tagParentStory].map(((n,r)=>{const o=m(p.tagStory,n);return l.default.createElement(f.default,{key:`story_${n.storyId}`,onClick:()=>a(p.tagStory,p.tagStory,r,n),onClickRemove:()=>e&&i(t,p.tagStory,r),label:o.story})})),e&&l.default.createElement(d.default,{show:!0,alt:"Add",onClick:()=>a(p.tagStory,p.tagStory,n&&n[p.tagParentStory]?n[p.tagParentStory].length:0)}))):p.tagTypes.map(((r,o)=>{if(r!==p.tagStory){const s=n&&n[r]?n[r].length:0;return l.default.createElement(h.Section,{key:`${r}_${o}`,className:`${r}_${o}`,flow:"column nowrap"},l.default.createElement(h.H5,null,u.default.getHeadUpper(r)),l.default.createElement(h.default,{className:`TagSection ${t}`,flow:"row wrap",alignItems:"center",width:"100%",upperMargin:!0,bottomMargin:!0},n&&n[r]&&n[r].map(((n,o)=>((t,n,r,o)=>{const u=m(n,o),s=`${t}_${n}_${r}`,d=u.industoryParent,f=u.industory,h=n===p.tagMember?u.job:u.startupSeries,g=`(${o.year})`;return l.default.createElement(c.default,{key:s,onClick:()=>a(t,n,r,o),onClickRemove:()=>e&&i(t,n,r),upperLeft:d,upperRight:f,bottomLeft:h,bottomRight:g})})(t,r,o,n))),e&&l.default.createElement(d.default,{show:e,onClick:()=>a(t,r,s),alt:"Add"})))}})),checkAnimation:r});const m=(e,t)=>{let n="",r="",a="",i="",o="",l="",u={...g};switch(e){case p.tagInvestor:case p.tagFounder:n=t.industoryId,r=n.split("-")[0],a=t.startupSeriesId,u.industory=window.talknDatas.staticTagsById.industory[n].ja,u.industoryParent=window.talknDatas.staticTagsById.industoryParent[r].ja,u.startupSeries=window.talknDatas.staticTagsById.startupSeries[a].ja;break;case p.tagMember:n=t.industoryId,r=n.split("-")[0],i=t.jobId,o=i.split("-")[0],u.industory=window.talknDatas.staticTagsById.industory[n].ja,u.industoryParent=window.talknDatas.staticTagsById.industoryParent[r].ja,u.job=window.talknDatas.staticTagsById.jobs[i].ja,u.jobParent=window.talknDatas.staticTagsById.jobParents[o].ja;break;case p.tagStory:l=t.storyId,u.story=window.talknDatas.staticTagsById.story[l].ja}return u}},9639:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getAllFillInputs=t.ModalFooter=t.Profiles=t.TagId=t.getNoSelectOption=t.NoSetComponens=t.noSelectOptionLabel=void 0;const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=o(n(5015)),c=o(n(5226)),f=o(n(5993)),p=o(n(2740)),h=o(n(6032));t.noSelectOptionLabel="-",t.NoSetComponens=()=>l.default.createElement(s.default,{className:"NoSetButton",disabled:!0,bottomMargin:!0},"NO SET"),t.getNoSelectOption=()=>l.default.createElement("option",{value:void 0},t.noSelectOptionLabel),t.TagId=(0,u.default)(p.default)`
  margin-top: ${h.default.doubleMargin}px;
  font-size: 12px;
  font-weight: 300;
  user-select: text;
`,t.Profiles=({type:e="Profiles",id:n,isEditable:r=!1,sexes:a,languages:i,birthday:o,handleOnChangeLanguages:u,handleOnChangeSexes:s,handleOnChangeBirthday:h,underline:g=!1,isHorizon:m})=>{const[b,y]=(0,l.useState)("");return l.default.createElement(p.default,{flow:"column nowrap",width:"100%",border:g?"underline":void 0,mouted:e=>{m&&y(String(e.clientWidth))},bottomPadding:!0,bottomMargin:!0},l.default.createElement(f.default,{type:e,isEditable:r,isHorizon:m,sexes:a,onChange:s}),l.default.createElement(c.default,{type:e,isEditable:r,isHorizon:m,languages:i,onChange:u,width:b}),l.default.createElement(d.default,{type:e,isEditable:r,isHorizon:m,birthday:o,onChange:h}),n&&""!==n&&l.default.createElement(t.TagId,{className:"TagId",select:!0},"ID: ",""!==n?n:"-"))},t.ModalFooter=({isMyPage:e,handleOnClickRemove:t,handleOnClickSave:n})=>l.default.createElement(p.default,{flow:"row nowrap",width:"100%",alignItems:"center",justifyContent:"space-between"},e&&l.default.createElement(l.default.Fragment,null,l.default.createElement(s.default,{disabled:!1,theme:s.buttonThemeCold,onClick:t,sideMargin:!0},"REMOVE"),l.default.createElement(s.default,{disabled:!1,onClick:n,sideMargin:!0},"EDIT"))),t.getAllFillInputs=(e,t)=>!Object.keys(e).find((t=>{switch(typeof e[t]){case"object":return 0===e[t].length;case"string":return""===e[t]||"-"===e[t];case"number":return 0===e[t]||isNaN(e[t]);default:return console.warn(`Confirm type ${t} ${e[t]} ${typeof e[t]}`),!0}}))},9416:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(6562)),s=o(n(2376)),d=n(8690),c=o(n(8385)),f=o(n(5837));let p={},h={};d.tagParentTypes.forEach((e=>{p[e]=!1,h[e]=!1})),t.default=({isMyPage:e,userId:t,user:n,userTags:r,userTagsInit:a,setUser:i,setUserTags:o,setUserTagsInit:p})=>{const[b,y]=(0,l.useState)({...d.openModalOptionInit}),[v,w]=(0,l.useState)(h),x=(e,r,a,i)=>{let o="",l="",u="";i&&(o=m(i),l=i.industoryId&&""!==i.industoryId?i.industoryId.split("-")[0]:void 0,u=i.jobId&&""!==i.jobId?i.jobId.split("-")[0]:void 0),e===d.tagParentSelf?y({...d.openModalOptionInit,...i,userId:t,sexes:n.sexes,languages:n.languages,birthday:n.birthday,jobParentId:u,industoryParentId:l,tagId:o,tagParentType:e,tagType:r,index:a}):y({...d.openModalOptionInit,...i,userId:t,jobParentId:u,industoryParentId:l,tagId:o,tagParentType:e,tagType:r,index:a})},_=(e,t,a,l)=>{r[e][t][a]&&(r[e][t].splice(a,1),o({...r,[e]:{...r[e],[t]:[...r[e][t]]}})),l&&e===d.tagParentSelf&&i({...n,hasSelfTags:l})};return(0,l.useEffect)((()=>{g(r)&&void 0===a&&p(u.default.deepCopy(r))}),[r]),l.default.createElement(l.default.Fragment,null,l.default.createElement(s.default,{isMyPage:e,userId:t,slide:!0}),d.tagParentTypes.map((t=>{const n=r?r[t]:[];return l.default.createElement(c.default,{isMyPage:e,key:t,tagParent:t,someTags:n,isSavedAnimations:v[t],handleOnClickOpenTag:x,handleOnClickRemove:_})})),void 0!==b.index&&l.default.createElement(f.default,{show:void 0!==b.index,isMyPage:e,userTags:r,openModalOptions:b,handleOnClickRemove:_,handleOnClickSaveUserTag:(e,t)=>{const{tagParentType:a,tagType:l,userId:u,tagId:s,index:c,industoryId:f,sexes:p,languages:h,birthday:g,storyId:m}=e,b=Number(e.year);let v=r[a][l];if(a!==d.tagParentStory){const t=l===d.tagMember?"jobId":"startupSeriesId",n=e[t];r[a][l][c]?v=r[a][l].map(((e,r)=>c===r?{...e,userId:u,tagId:s,industoryId:f,[t]:n,sexes:p,languages:h,birthday:g,year:b}:e)):v.push({tagParentType:a,tagType:l,userId:u,tagId:s,sexes:p,languages:h,birthday:g,industoryId:f,[t]:n,year:b})}else r[a][l][c]?v=r[a][l].map(((e,t)=>c===t?{...e,tagId:s,userId:u,sexes:p,languages:h,birthday:g,storyId:m}:e)):v.push({tagParentType:a,tagType:l,userId:u,tagId:s,sexes:p,languages:h,birthday:g,storyId:m});t&&a===d.tagParentSelf&&i({...n,hasSelfTags:t}),y({...e}),o({...r,[a]:{...r[a],[l]:v}})},handleOnClickCancel:()=>y({...d.openModalOptionInit})}))};const g=e=>!!e&&Boolean(d.tagParentTypes.find((t=>e[t]))),m=e=>e.tagId&&""!==e.tagId?e.tagId:e._id&&""!==e._id?e._id:""},2671:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=n(9639),o=r(n(3940)),l=r(n(2834));t.default=({type:e,isEditable:t=!1,fixValues:n,setFixValues:r})=>a.default.createElement(a.default.Fragment,null,a.default.createElement(i.Profiles,{type:e,isEditable:t,isHorizon:!0,sexes:n.sexes,languages:n.languages,birthday:n.birthday,handleOnChangeLanguages:e=>{r({...n,languages:e})},handleOnChangeSexes:e=>{r({...n,sexes:e})},handleOnChangeBirthday:e=>{r({...n,birthday:e})},underline:!0}),a.default.createElement(o.default,{type:e,isEditable:t,industoryParentId:n.industoryParentId,industoryId:n.industoryId,onChange:(e,t)=>{r({...n,industoryParentId:e,industoryId:t})}}),a.default.createElement(l.default,{type:e,isEditable:t,startupSeriesId:n.startupSeriesId,year:n.year,onChangeStartupSeriesId:e=>{r({...n,startupSeriesId:e})},onChangeYear:e=>{r({...n,year:Number(e)})}}))},9188:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=n(9639),o=r(n(3940)),l=r(n(2834));t.default=({type:e,isEditable:t=!1,fixValues:n,setFixValues:r})=>a.default.createElement(a.default.Fragment,null,a.default.createElement(i.Profiles,{type:e,isEditable:t,isHorizon:!0,sexes:n.sexes,languages:n.languages,birthday:n.birthday,handleOnChangeLanguages:e=>{r({...n,languages:e})},handleOnChangeSexes:e=>{r({...n,sexes:e})},handleOnChangeBirthday:e=>{r({...n,birthday:e})},underline:!0}),a.default.createElement(o.default,{type:e,isEditable:t,industoryParentId:n.industoryParentId,industoryId:n.industoryId,onChange:(e,t)=>{r({...n,industoryParentId:e,industoryId:t})}}),a.default.createElement(l.default,{type:e,isEditable:t,startupSeriesId:n.startupSeriesId,year:n.year,onChangeStartupSeriesId:e=>{r({...n,startupSeriesId:e})},onChangeYear:e=>{r({...n,year:Number(e)})}}))},1726:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=n(9639),o=r(n(3940)),l=r(n(6412));t.default=({type:e,isEditable:t=!1,fixValues:n,setFixValues:r})=>a.default.createElement(a.default.Fragment,null,a.default.createElement(i.Profiles,{type:e,isEditable:t,isHorizon:!0,sexes:n.sexes,languages:n.languages,birthday:n.birthday,handleOnChangeLanguages:e=>{r({...n,languages:e})},handleOnChangeSexes:e=>{r({...n,sexes:e})},handleOnChangeBirthday:e=>{r({...n,birthday:e})},underline:!0}),a.default.createElement(o.default,{type:e,isEditable:t,industoryParentId:n.industoryParentId,industoryId:n.industoryId,onChange:(e,t)=>{r({...n,industoryParentId:e,industoryId:t})}}),a.default.createElement(l.default,{type:e,isEditable:t,jobParentId:n.jobParentId,jobId:n.jobId,year:n.year,onChangeJob:(e,t)=>{r({...n,jobParentId:e,jobId:t})},onChangeYear:e=>{r({...n,year:Number(e)})}}))},5945:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(7596));t.default=({type:e,optionStoryId:t,fixValues:n,userTags:r,setFixValues:o})=>a.default.createElement(i.default,{isEditable:!0,clickedStoryId:t,selected:r?r.story.story.map((e=>e.storyId)):[],storyId:n.storyId,onChange:e=>{o({...n,storyId:e})}})},5837:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(6562)),c=o(n(8203)),f=o(n(5565)),p=n(9639),h=o(n(2068)),g=i(n(4160)),m=i(n(2740)),b=n(8690),y=n(6581),v=o(n(2671)),w=o(n(9188)),x=o(n(1726)),_=o(n(5945));t.default=({show:e,openModalOptions:t,isMyPage:n=!1,userTags:r,handleOnClickRemove:a,handleOnClickCancel:i,handleOnClickSaveUserTag:o})=>{const{tagParentType:u,tagType:C,tagId:S,userId:M,index:k}=t,O=((0,m.useFlexesContext)(),(0,y.getFixValuesEmpty)(C)),[P,A]=(0,l.useState)(!1),[T,$]=(0,l.useState)(!0),[I,j]=(0,l.useState)(!1),[D,L]=(0,l.useState)(0),[N,B]=(0,l.useState)([]),[R,z]=(0,l.useState)(!1),[F,H]=(0,l.useState)(!0),[U,W]=(0,l.useState)(O),[V,q]=(0,l.useState)(O);return d.default.deepEquals(V,U),t.tagParentType,b.tagParentSelf,(0,l.useEffect)((()=>{e&&(P?(H((()=>{const e=(0,p.getAllFillInputs)(U,C),t=d.default.deepEquals(V,U);return!(e&&!t)})()),z(!(0,p.getAllFillInputs)(U,C))):A(!0))}),[e,U]),(0,l.useEffect)((()=>{(e=>{$(!0);const n=d.default.deepCopy({...t,...e});delete n.isEditable,delete n.index,(async()=>{const e=await c.default.json("search",n);B(e),$(!1)})().catch((e=>{$(!1),console.error(e)}))})(t);const e=(0,y.getExtractFixValues)(t);W(e),q(e)}),[]),l.default.createElement(h.default.Full,{show:e,width:"100%",overflow:"hidden",flow:"column nowrap",contentIndex:D,handleOnClickClose:i,handleOnChangeContentIndex:e=>{L(e)},isCheckAnimation:I,isLoading:T,header:l.default.createElement(l.default.Fragment,null,l.default.createElement(m.H5,null,u," - ",C,void 0!==k&&` (No${k+1})`),l.default.createElement(m.default,{width:"25%",maxWidth:"120px",justifyContent:"space-around"},n&&l.default.createElement(f.default.Notif,null),l.default.createElement(f.default.Close,{onClick:i}))),menu:(()=>{const e=`${u}_${C}`;let n;switch(C){case b.tagInvestor:n=l.default.createElement(w.default,{type:e,fixValues:U,setFixValues:W});break;case b.tagFounder:n=l.default.createElement(v.default,{type:e,fixValues:U,setFixValues:W});break;case b.tagMember:n=l.default.createElement(x.default,{type:e,fixValues:U,setFixValues:W});break;case b.tagStory:n=l.default.createElement(_.default,{type:e,optionStoryId:t.storyId,fixValues:U,userTags:r,setFixValues:W})}return l.default.createElement(l.default.Fragment,null,n,l.default.createElement(p.TagId,{className:"TagId",select:!0},"ID: ",""!==S?S:"-"))})(),content:l.default.createElement(l.default.Fragment,null,N&&N.map(((e,t)=>l.default.createElement(E,{key:`UserContent_${t}`,href:`https://${s.default.coverURL}/${M}/`,display:"block"},l.default.createElement(g.default,{className:"SearchUserContent",user:e,fullWidth:!1,layout:"search",hoverAnimationType:g.hoverAnimationBoxShadow}))))),footer:l.default.createElement(p.ModalFooter,{isMyPage:n,handleOnClickRemove:()=>{const e=(0,y.getHasSelfTags)(r,"remove",C);c.default.json("removeUserTag",{userTags:{_id:S},user:{_id:M,hasSelfTags:e}}),a(u,C,k,e),i()},handleOnClickSave:async()=>{$(!0);const e=(0,y.getHasSelfTags)(r,"save",C),n=d.default.deepCopy({...t,...U}),a={userTags:{...n},user:{_id:M,hasSelfTags:e}},i=await c.default.json("upsertUserTag",a);$(!1),i.upsertedId&&(n.tagId=i.upsertedId),o(n,e),q((0,y.getExtractFixValues)(n)),j(!0),setTimeout((()=>{j(!1)}),2e3)}}),upperPadding:!0,sidePadding:!0,bottomPadding:!0})};const E=(0,u.default)(m.A)`
  width: 100%;
  min-width: 100%;
  max-width: 100%;
`},5015:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6562)),d=o(n(6490)),c=n(9639),f=i(n(2740)),p=o(n(6032)),h=({value:e})=>l.default.createElement(g,{className:"AgeParam"},"AGE: ",e);t.default=({type:e,isEditable:t,birthday:n,onChange:r,isHorizon:a,width:i})=>{const[o,u]=(0,l.useState)(n),[p,g]=(0,l.useState)(s.default.getAgeByBirthday(o)),m=e=>{u(e),g(s.default.getAgeByBirthday(e)),r(e)};return(0,l.useEffect)((()=>{u(n),g(s.default.getAgeByBirthday(n))}),[n]),t?l.default.createElement(f.default,{flow:"column nowrap"},l.default.createElement(f.Label,{bottomMargin:!0},"Birthday"),l.default.createElement(f.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(d.default.Date,{name:e,onChange:m,value:o,disabled:!t}),0!==o&&l.default.createElement(h,{value:p}))):0===o?l.default.createElement(f.default,{flow:"column nowrap"},l.default.createElement(f.Label,{bottomMargin:!0},"Birthday"),l.default.createElement(c.NoSetComponens,null)):l.default.createElement(f.default,{flow:"column nowrap"},l.default.createElement(f.Label,{bottomMargin:!0},"Birthday"),l.default.createElement(f.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(d.default.Date,{name:e,onChange:m,value:o,disabled:!t}),0!==o&&l.default.createElement(h,{value:p})))};const g=(0,u.default)(f.P)`
  text-indent: ${p.default.doubleSize}px;
`},3940:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(5391)),s=i(n(2740));t.default=({type:e,isEditable:t,industoryParentId:n,industoryId:r,onChange:a})=>{const[i,o]=(0,l.useState)(n),[d,c]=(0,l.useState)(r),[f,p]=(0,l.useState)([]);return(0,l.useEffect)((()=>{o(n)}),[n]),(0,l.useEffect)((()=>{c(r)}),[r]),(0,l.useEffect)((()=>{const e=window.talknDatas.staticTags.industory.filter((e=>e.parentId===i));p(e)}),[i]),l.default.createElement(s.default,{flow:"column nowrap"},l.default.createElement(s.Label,{bottomMargin:!0},"Industory"),l.default.createElement(s.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(u.default.Single,{name:`${e}_industoryParent}`,disabled:!t,label:"Industory",onChange:e=>{o(e),c(""),a(e,"")},value:i,noSelectOption:!0},window.talknDatas.staticTags.industoryParent.map((e=>l.default.createElement(u.default.Option,{key:`IndustoryParentId_${e.uniqueId}`,value:e.uniqueId},e.ja)))),l.default.createElement(u.default.Single,{name:"industory[]",disabled:!t,onChange:e=>{c(e),a(i,e)},value:d,noSelectOption:!0},f.map((e=>l.default.createElement(u.default.Option,{key:`IndustoryId_${e.uniqueId}`,value:e.uniqueId},e.ja))))))}},6412:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(5391)),s=o(n(1579)),d=i(n(2740));t.default=({type:e,isEditable:t,jobParentId:n,jobId:r,year:a,onChangeJob:i,onChangeYear:o})=>{const[c,f]=(0,l.useState)(n),[p,h]=(0,l.useState)(r),[g,m]=(0,l.useState)([]),[b,y]=(0,l.useState)(a);return(0,l.useEffect)((()=>{f(n)}),[n]),(0,l.useEffect)((()=>{h(r)}),[r]),(0,l.useEffect)((()=>{y(a)}),[a]),(0,l.useEffect)((()=>{const e=window.talknDatas.staticTags.jobs.filter((e=>e.parentId===c));m(e)}),[c]),l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(d.Label,{bottomMargin:!0},"Job"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(u.default.Single,{name:`${e}_jobParent}`,disabled:!t,label:"Job",onChange:e=>{f(e),h(""),i(e,"")},value:c,noSelectOption:!0},window.talknDatas.staticTags.jobParents.map(((t,n)=>l.default.createElement(u.default.Option,{key:`JobParents_${e}_${t.uniqueId}_${n}`,value:t.uniqueId},t.ja)))),l.default.createElement(u.default.Single,{name:"job[]",disabled:!t,onChange:e=>{h(e),i(c,e)},value:p,noSelectOption:!0},g.map(((t,n)=>l.default.createElement(u.default.Option,{key:`Job_${e}_${t.uniqueId}_${n}`,value:t.uniqueId},t.ja)))),l.default.createElement(s.default,{type:e,isEditable:t,year:b,onChange:e=>{y(b),o(e)}})))}},5226:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.languagesInit=void 0;const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=n(9639),c=i(n(2740)),f=n(2211),p=o(n(6032));t.languagesInit=f.defaultLanguages.map((e=>e.uniqueId)),t.default=({type:e,isEditable:t,languages:n,onChange:r,isHorizon:a=!1,width:i="auto"})=>{const[o,u]=(0,l.useState)(!1),[s,p]=(0,l.useState)(n);return(0,l.useEffect)((()=>{if(n){const e=n.length===f.defaultLanguages.length,t=e?g():[...n];u(e),p(t)}}),[n]),s?l.default.createElement(c.default,{flow:"column nowrap",overflow:"hidden"},l.default.createElement(c.Label,{bottomMargin:!0},"Language"),t?l.default.createElement(h,{className:"languages",alignItems:"center",overflow:"scroll hidden",isHorizon:a,width:i},l.default.createElement(b,{key:`${e}_${f.allLanguage.uniqueId}`,className:`ButtonCustom${e}_${f.allLanguage.uniqueId}`,theme:m(o),onClick:()=>{const e=o?new Array:g();u(!o),p(e),r(e)}},f.allLanguage.ja),f.defaultLanguages.map((t=>l.default.createElement(b,{key:`${e}_${t.uniqueId}`,className:`ButtonCustom${e}_${f.allLanguage.uniqueId}`,theme:m(s.includes(t.uniqueId)),onClick:()=>(e=>{let t=[...s];s.includes(e)?t=s.filter((t=>t!==e)):t.push(e),u(t.length===f.defaultLanguages.length),p(t),r(t)})(t.uniqueId)},t.ja)))):0===s.length?l.default.createElement(d.NoSetComponens,null):l.default.createElement(h,{className:"languages",alignItems:"center",overflow:"scroll hidden",isHorizon:a,width:i},f.defaultLanguages.map((t=>s.includes(t.uniqueId)&&l.default.createElement(b,{key:`${e}_${t.uniqueId}`,className:`ButtonCustom${e}_${f.allLanguage.uniqueId}`,theme:m()},t.ja))))):null};const h=(0,u.default)(c.default)`
  flex-flow: ${e=>e.isHorizon?"row nowrap":"row wrap"};

  width: ${e=>e.isHorizon?p.default.menuPcWidth-2*p.default.doubleMargin+"px":"auto"};
`,g=()=>f.defaultLanguages.map((e=>e.uniqueId)),m=(e=!0)=>e?s.buttonThemeDefault:s.buttonThemeBright,b=(0,u.default)(s.default)`
  margin-top: 0;
  margin-right: ${p.default.doubleMargin}px;
  margin-bottom: ${p.default.doubleMargin}px;
  margin-left: 0;
`},8145:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(6562)),s=o(n(5391)),d=i(n(2740)),c=n(8690);t.default=({type:e,isEditable:t,searchType:n,underline:r=!1,onChange:a})=>{const[i,o]=(0,l.useState)(n);return l.default.createElement(d.default,{flow:"column nowrap",width:"100%",border:r?"underline":"none",bottomPadding:!0,bottomMargin:!0},l.default.createElement(d.Label,{bottomMargin:!0},"Search Types"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(s.default.Single,{name:"SearchType",disabled:!t,onChange:e=>{o(e),a(e)},value:i,noSelectOption:!0},c.tagTypes.map((e=>{const t=u.default.getHeadUpper(e);return l.default.createElement(s.default.Option,{key:`SearchType${t}`,value:e},t)})))))}},5993:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=n(9639),c=i(n(2740)),f=n(2211),p=o(n(6032));t.default=({type:e,isEditable:t,sexes:n,onChange:r,isHorizon:a,width:i="auto"})=>{const[o,u]=(0,l.useState)(!1),[s,p]=(0,l.useState)(n);return(0,l.useEffect)((()=>{if(n){const e=n.length===f.defaultSexes.length,t=e?g():[...n];u(e),p(t)}}),[n]),s?l.default.createElement(c.default,{flow:"column wrap"},l.default.createElement(c.Label,{bottomMargin:!0},"Sex"),t?l.default.createElement(h,{className:"languages",flow:"row wrap",alignItems:"center",isHorizon:a},l.default.createElement(b,{key:`${e}_${f.allSex.uniqueId}`,theme:m(o),onClick:()=>{const e=o?new Array:g();u(!o),p(e),r(e)}},f.allSex.ja),f.defaultSexes.map((t=>l.default.createElement(b,{key:`${e}_${t.uniqueId}`,theme:m(s.includes(t.uniqueId)),onClick:()=>(e=>{let t=[...s];s.includes(e)?t=s.filter((t=>t!==e)):t.push(e),u(t.length===f.defaultSexes.length),p(t),r(t)})(t.uniqueId)},t.ja)))):0===s.length?l.default.createElement(d.NoSetComponens,null):l.default.createElement(h,{className:"languages",flow:"row wrap",alignItems:"center",isHorizon:a},f.defaultSexes.map((t=>s.includes(t.uniqueId)&&l.default.createElement(b,{key:`${e}_${t.uniqueId}`,theme:m()},t.ja))))):null};const h=(0,u.default)(c.default)`
  flex-flow: ${e=>e.isHorizon?"row nowrap":"row wrap"};
`,g=()=>f.defaultSexes.map((e=>e.uniqueId)),m=(e=!0)=>e?s.buttonThemeDefault:s.buttonThemeBright,b=(0,u.default)(s.default)`
  margin-top: 0;
  margin-right: ${p.default.doubleMargin}px;
  margin-bottom: ${p.default.doubleMargin}px;
  margin-left: 0;
`},2834:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(5391)),s=o(n(1579)),d=i(n(2740));t.default=({type:e,isEditable:t,startupSeriesId:n,year:r,onChangeStartupSeriesId:a,onChangeYear:i})=>{const[o,c]=(0,l.useState)(n),[f,p]=(0,l.useState)(r);return(0,l.useEffect)((()=>{c(n)}),[n]),(0,l.useEffect)((()=>{p(r)}),[r]),l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(d.Label,{bottomMargin:!0},"Phase"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(u.default.Single,{onChange:e=>{c(e),a(e)},disabled:!t,name:"startupSeries[]",value:o,noSelectOption:!0},window.talknDatas.staticTags.startupSeries.map((e=>l.default.createElement(u.default.Option,{key:`StartupSeries_${e.uniqueId}`,value:e.uniqueId},e.ja)))),l.default.createElement(s.default,{type:e,isEditable:t,year:f,onChange:e=>{p(e),i(e)}})))}},7596:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(5391));t.default=({storyId:e,isEditable:t,selected:n,onChange:r,clickedStoryId:a})=>{const[i,o]=(0,l.useState)(e);return(0,l.useEffect)((()=>{o(e)}),[e]),l.default.createElement(u.default.Single,{name:"story[]",disabled:!t,onChange:e=>{o(e),r(e)},value:i,noSelectOption:!0},window.talknDatas.staticTags.story.map((e=>s(t,n,a,e.uniqueId)&&l.default.createElement(u.default.Option,{key:`StartupSeries_${e.uniqueId}`,value:String(e.uniqueId)},e.ja))))};const s=(e,t,n,r)=>!e||n===r||!t.includes(r)},1579:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.defaultYears=void 0;const l=i(n(7294)),u=o(n(5391));t.defaultYears=[{uniqueId:"1",ja:1},{uniqueId:"2",ja:2},{uniqueId:"3",ja:3},{uniqueId:"4",ja:4},{uniqueId:"5",ja:5},{uniqueId:"6",ja:6},{uniqueId:"7",ja:7},{uniqueId:"8",ja:8},{uniqueId:"9",ja:9},{uniqueId:"10",ja:10},{uniqueId:"11",ja:11},{uniqueId:"12",ja:12},{uniqueId:"13",ja:13},{uniqueId:"14",ja:14},{uniqueId:"15",ja:15},{uniqueId:"16",ja:16},{uniqueId:"17",ja:17},{uniqueId:"18",ja:18},{uniqueId:"19",ja:19},{uniqueId:"20",ja:20}],t.default=({type:e,isEditable:n,year:r,onChange:a})=>{const[i,o]=(0,l.useState)(r);return(0,l.useEffect)((()=>{o(r)}),[r]),l.default.createElement(u.default.Single,{name:e,disabled:!n,onChange:e=>{o(e),a(e)},value:String(i),noSelectOption:!0},t.defaultYears.map((t=>l.default.createElement(u.default.Option,{key:`Year_${e}_${t.uniqueId}`,value:String(t.uniqueId)},String(t.ja)))))}},704:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=i(n(9163)),s=o(n(2740)),d=o(n(6032));t.default=({show:e,onClick:t,alt:n,showForceHover:r=!1})=>l.default.createElement(p,{className:"AddTag",alignItems:"center",justifyContent:"center",onClick:t,show:e,showForceHover:r,alt:n},l.default.createElement("div",{className:"addLineHorizon"}),l.default.createElement("div",{className:"addLineVertical"}));const c=u.css`
  background: ${d.default.themeColor};
  box-shadow: ${d.default.shadowCircleBase};
`,f=u.css`
  background: ${d.default.themeColor};
`,p=(0,u.default)(s.default)`
  width: ${e=>e.show?"54":0}px;
  height: ${e=>e.show?"54":0}px;
  min-width: ${e=>e.show?"54":0}px;
  min-height: ${e=>e.show?"54":0}px;
  margin: ${e=>e.show?d.default.baseMargin:0}px;
  background: ${d.default.tagBgColor};
  border: 3px solid #fff;
  border-radius: 50%;
  cursor: pointer;
  transform: ${e=>e.show?"rotate(0deg) scale(1)":"rotate(0deg) scale(0)"};
  transition: ${e=>h(e)};
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  ${e=>e.showForceHover&&f};
  :hover {
    ${e=>!e.showForceHover&&c};
  }
  .addLineHorizon {
    position: relative;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .addLineVertical {
    position: absolute;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`,h=e=>e.show?`transform ${d.default.transitionDuration}ms, background ${d.default.transitionDuration}ms, box-shadow ${d.default.transitionDuration}ms`:"0"},3190:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(2740)),d=o(n(6032));t.default=({onClick:e,onClickRemove:t,upperLeft:n,upperRight:r,bottomLeft:a,bottomRight:i})=>{const[o,u]=(0,l.useState)(!1);return l.default.createElement(c,{className:"Complexity",flow:"column nowrap",alt:"View",onMouseOver:()=>u(!0),onMouseLeave:()=>u(!1)},l.default.createElement(f,{className:"CloseHeaeer",alignItems:"center",justifyContent:"flex-end"},l.default.createElement(p,{className:"CloseIcon",onClick:t,show:!1},l.default.createElement("div",{className:"lineHorizon"}),l.default.createElement("div",{className:"lineVertical"}))),l.default.createElement(h,{flow:"column nowrap",onClick:e},l.default.createElement(g,{flow:"row nowrap"},l.default.createElement(b,null,n),l.default.createElement("span",null,"/"),l.default.createElement(y,null,r)),l.default.createElement(m,{flow:"row nowrap","align-items":"center"},l.default.createElement(v,null,a),l.default.createElement(w,null,i))))};const c=(0,u.default)(s.default)`
  transform: translate(0px, 0px);
`,f=(0,u.default)(s.default)``,p=u.default.div`
  position: absolute;
  top: -5px;
  right: -5px;
  width: 38px;
  height: 38px;
  background: ${d.default.themeColor};
  border: 3px solid #fff;
  border-radius: 50%;
  opacity: 0.9;
  transform: ${e=>e.show?"rotate(45deg) scale(1)":"rotate(45deg) scale(0)"};
  transition: transform ${d.default.transitionDuration}ms, background ${d.default.transitionDuration}ms, box-shadow ${d.default.transitionDuration}ms;
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  cursor: pointer;
  :hover {
    box-shadow: ${d.default.shadowCircleDark};
  }
  .lineHorizon {
    position: relative;
    top: 25%;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .lineVertical {
    position: relative;
    top: -4%;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`,h=(0,u.default)(s.default)`
  height: inherit;
  padding: 10px 30px;
  margin: 10px;
  background: ${d.default.tagBgColor};
  border-radius: 30px;
  color: #fff;
  cursor: pointer;
  transition: background ${d.default.transitionDuration}ms, box-shadow ${d.default.transitionDuration}ms;
  :hover {
    box-shadow: ${d.default.shadowHorizonBright};
    background: ${d.default.themeColor};
  }
`,g=(0,u.default)(s.default)`
  font-size: 10px;
  line-height: 15px;
`,m=(0,u.default)(s.default)`
  line-height: 20px;
`,b=u.default.div``,y=u.default.div``,v=u.default.div``,w=u.default.div``},4829:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(2740)),l=r(n(6032));t.default=({onClick:e,onClickRemove:t,label:n})=>a.default.createElement(u,{className:"SimplyTag",alt:"View",flow:"column nowrap"},a.default.createElement(s,{className:"CloseHeaeer",alignItems:"center",justifyContent:"flex-end"},a.default.createElement(d,{className:"CloseIcon",onClick:t,show:!1},a.default.createElement("div",{className:"lineHorizon"}),a.default.createElement("div",{className:"lineVertical"}))),a.default.createElement(c,{flow:"column nowrap",alignItems:"center",justifyContent:"center",onClick:e},n));const u=(0,i.default)(o.default)`
  transform: translate(0px, 0px);
`,s=(0,i.default)(o.default)``,d=i.default.div`
  position: absolute;
  top: -5px;
  right: -5px;
  width: 38px;
  height: 38px;
  background: ${l.default.themeColor};
  border: 3px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  opacity: 0.9;
  transform: ${e=>e.show?"rotate(45deg) scale(1)":"rotate(45deg) scale(0)"};
  transition: transform ${l.default.transitionDuration}ms, background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  cursor: pointer;
  :hover {
    box-shadow: ${l.default.shadowCircleDark};
  }
  .lineHorizon {
    position: relative;
    top: 25%;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .lineVertical {
    position: relative;
    top: -4%;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`,c=(0,i.default)(o.default)`
  height: 55px;
  padding: 10px 30px;
  margin: 10px;
  background: ${l.default.tagBgColor};
  border-radius: 30px;
  color: #fff;
  cursor: pointer;
  transition: background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  :hover {
    background: ${l.default.themeColor};
    box-shadow: ${l.default.shadowHorizonBright};
  }
`},9237:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Container=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(704)),c=n(2740),f=o(n(6032)),p=n(2376);t.default=({userId:e,isMyPage:n,title:r="",eyeCatch:a="",create:i=!1,slide:o=!1})=>{const[u,f]=(0,l.useState)(!1);return l.default.createElement(t.Container,{key:"HeadEyeCatchListNo",eyeCatch:a,isMyPage:n,create:i,slide:o,alt:""!==r?r:"Add",onMouseOver:()=>f(!0),onMouseLeave:()=>f(!1)},l.default.createElement(c.A,{href:`https://${s.default.coverURL}/story/${e}/create`},l.default.createElement("div",{className:"bg"},(e=>i?l.default.createElement(d.default,{onClick:()=>{},show:i,showForceHover:u}):""===e&&l.default.createElement("span",{className:"noImage"},"NO IMAGE"))(a)),l.default.createElement("div",{className:"description"},r)))},t.Container=(0,u.default)(c.Li)`
  flex-flow: column nowrap;
  align-items: ${e=>e.create?"center":"flex-start"};
  justify-content: ${e=>(e.create,"flex-start")};
  width: 33%;
  min-width: 360px;
  height: 256px;
  min-height: 256px;
  max-height: 256px;
  margin: ${p.scrollBaseLeft}px;
  overflow: visible;
  text-align: right;
  ${e=>e.slide||e.create?"scroll-snap-align: start":""};
  list-style: none;
  border-radius: ${f.default.doubleSize}px;
  transition: ${f.default.transitionDuration}ms;
  transform: translate(0px, 0px);
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: ${e=>e.create?"center":"flex-start"};
    justify-content: center;
    width: 100%;
    padding: ${f.default.basePadding}px;
    border-radius: 16px;
    transition: ${f.default.transitionDuration}ms;
    cursor: pointer;
  }
  .bg {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 160px;
    background-color: ${e=>e.create?"none":f.default.articleBgColor};
    background-size: cover;
    background-image: url('${e=>""!==e.eyeCatch?e.eyeCatch:"none"}');
    background-position: 50%;
    background-repeat: no-repeat;
    border: 1px solid ${f.default.borderColor};
    border-radius: ${f.default.doubleSize}px;
    transition: ${f.default.transitionDuration}ms;
    color: ${f.default.whiteColor};
  }
  .description {
    display: -webkit-box;
    margin: ${f.default.baseMargin}px 0;
    text-align: left;
    line-height: 30px;
    font-size: 100%;
    font-weight: 200;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    color: ${f.default.fontColor};
    overflow: hidden;
  }
  う :hover {
    a {
    }
    .description {
      text-decoration: underline solid ${e=>e.isMyPage&&!e.create?f.default.whiteColor:f.default.fontColor}
        ${e=>e.isMyPage&&!e.create?0:1}px;
    }
    .bg {
      box-shadow: ${f.default.shadowHorizonBright};
      opacity: 0.8;
    }
  }

  @media (max-width: ${f.default.spLayoutWidth}px) {
    width: 50%;
    min-width: 50%;
  }
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    width: 100%;
    min-width: 100%;
  }
`},2376:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getScrollWidth=t.storiesInit=t.scrollBaseLeft=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=n(2865),c=o(n(9425)),f=o(n(9237)),p=i(n(2740)),h=o(n(6032));let g;t.scrollBaseLeft=h.default.baseMargin,t.storiesInit=[],t.getScrollWidth=()=>window.innerWidth>h.default.appWidth?h.default.appWidth:window.innerWidth,t.default=({userId:e,isMyPage:n=!1,slide:r=!1})=>{const a=(0,l.useRef)(),[i,o]=(0,l.useState)(t.storiesInit),[u,h]=(0,l.useState)(0),v=window.talknDatas.config&&window.talknDatas.config.stories?window.talknDatas.config.stories.length:0;(0,l.useEffect)((()=>{const e=window.talknDatas.storiesPointer-d.configStoriesLimit/2,t=0<=e?e:0,n=d.configStoriesLimit,r=[...window.talknDatas.config.stories].map(((e,t)=>e)).splice(t,n).reverse();o(r)}),[window.talknDatas.config.stories]);const w=e=>{a.current&&g.scrollTo({left:(0,t.getScrollWidth)()*e.target.dataset.index,behavior:"smooth"})};return l.default.createElement(c.default,{title:"My Stories",iconType:"Story",content:l.default.createElement(l.default.Fragment,null,l.default.createElement(m,{className:"StoryOrder",mouted:e=>g=e,onScroll:e=>{const n=e.target;if(n.children.length>0){const e=window.innerWidth-2*t.scrollBaseLeft,r=n.scrollLeft/e;Number.isInteger(r)&&h(r)}},slide:r,indexCnt:window.talknDatas.config.stories.length},n&&l.default.createElement(f.default,{key:"StoryListCreate",userId:e,isMyPage:n,create:!0}),i.length>0&&i.map(((t,a)=>l.default.createElement(f.default,{key:`StoryList${a}`,userId:e,title:t.title,eyeCatch:t.eyeCatch,isMyPage:n,"data-no":t.no,slide:r})))),v>0?l.default.createElement(l.default.Fragment,null,l.default.createElement(b,{indexCnt:v,index:u},n&&l.default.createElement("li",{key:"CircleOrderCreate","data-index":0,onClick:w}),window.talknDatas.config&&window.talknDatas.config.stories.map(((e,t)=>l.default.createElement("li",{key:`${e.no}-${t}`,"data-index":n?t+1:t,onClick:w})))),r&&l.default.createElement(p.default,{width:"100%",justifyContent:"flex-end",sidePadding:!0},l.default.createElement(y,{href:`//${s.default.coverURL}${e}story`},"More →"))):"NO DATA")})};const m=(0,u.default)(p.Ol)`
  ${e=>e.slide?"overflow: scroll visible":""};
  flex-flow: row ${e=>e.slide?"nowrap":"wrap"};
  align-items: flex-start;
  justify-content: ${e=>e.slide&&e.indexCnt<3&&0!==e.indexCnt?"center":"flex-start"};
  width: 100%;
  padding-top: 100px;
  margin-top: -100px;
  ${e=>e.slide?"scroll-snap-type: x mandatory":""};
  @media (max-width: ${h.default.spLayoutWidth}px) {
    justify-content: flex-start;
  }
  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    justify-content: flex-start;
  }
`,b=u.default.ol`
  display: none;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-around;
  width: calc(${e=>v(e.indexCnt)}% - ${h.default.doubleMargin}px);
  padding: 0;
  margin: 0 auto;
  li {
    width: ${h.default.baseSize}px;
    height: ${h.default.baseSize}px;
    margin: ${h.default.baseSize}px;
    background: ${h.default.borderColor};
    border-radius: ${h.default.baseSize}px;
    list-style: none;
    cursor: pointer;
  }
  li[data-index='${e=>e.index}'] {
    background: ${h.default.fontColor};
  }
  @media (max-width: ${h.default.spLayoutWidth}px) {
    li {
      margin: ${h.default.baseSize/2}px;
    }
  }
  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    display: flex;
    li {
      width: 10px;
      min-width: 10px;
      height: 10px;
      min-height: 10px;
      margin: 10px;
    }
  }
`,y=(0,u.default)(p.A)`
  :visited,
  :hover,
  :active {
    cursor: pointer;
    user-select: none;
    text-decoration: ${h.default.brightColor} solid underline;
  }
`,v=e=>e<10?Number(`${e}0`):100},1765:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032));t.default=e=>{const[t,n]=(0,l.useState)(!1),r={...s.boxLayoutPropsInit,...s.flexLayoutPropsInit,fitRight:!1,...e};return(0,l.useEffect)((()=>{n(r.show)}),[r.show]),l.default.createElement(l.default.Fragment,null,l.default.createElement(c,{show:r.show,onClick:()=>r.setShow(!1)}),l.default.createElement(s.default,{flow:"column nowrap",className:"FloatMenuContainer"},r.label&&l.default.createElement(s.Label,{onClick:()=>r.setShow(!0)},r.label),r.show&&l.default.createElement(f,{show:r.show,fitRight:r.fitRight,didMount:t,className:"MenuOl"},r.menus.map((e=>l.default.createElement(s.Li,{key:e.key,onClick:()=>r.onClick(e.key),lineHeight:"36px",sidePadding:!0,pointer:!0,hover:!0},e.label))))))};const c=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: ${e=>e.show?"flex":"none"};
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
`,f=u.default.ol`
  position: absolute;
  ${e=>e.show&&e.fitRight?"right: 0":""};
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: fit-content;
  height: fit-content;
  padding: ${d.default.doublePadding}px ${d.default.basePadding}px;
  margin: ${d.default.doubleMargin}px;
  ${d.default.alphaBgSet};
  border: 1px solid ${d.default.borderColor};
  border-radius: ${d.default.borderRadius}px;
  box-shadow: ${d.default.shadowHorizonBase};
  transition: transform ${d.default.transitionDuration}ms;
  z-index: ${e=>e.show?1001:-1};
  opacity: ${e=>e.show?1:0};
  transform: translateY(${e=>e.show&&!e.didMount?0:2*d.default.baseSize+"px"});
`},456:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(990)),c=i(n(2740)),f=o(n(6032));t.default=({ch:e})=>{const[t,n]=(0,l.useState)(!1),r=e=>{e.target.select(),document.execCommand("copy"),n(!0),setTimeout((()=>{n(!1)}),2e3)};return l.default.createElement(p,null,l.default.createElement(c.H5,{color:f.default.fontLightColor},"- Actions -"),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("h3",null,"Update"),l.default.createElement(c.default,{flow:"row wrap",alignItems:"center",justifyContent:"center"},l.default.createElement(d.default,{label:"Live Pages",theme:"dark",href:`https://${s.default.coverURL}${e}build`}),l.default.createElement(d.default,{label:"Config",theme:"dark",href:`https://${s.default.coverURL}${e}updateConfig`})),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("h3",null,"Include your site"),l.default.createElement(h,{copied:t},t&&"Copied"),l.default.createElement("ul",null,l.default.createElement("li",null,l.default.createElement("span",null,"LiveCntをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//tune.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"Componentをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//components.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"Full Packageをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//ext.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"talknAPIをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//api.talkn.io/" type="text/javascript" />'}))))};const p=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: ${f.default.doublePadding}px;
  background: rgb(80, 80, 80);
  color: #fff;

  ul {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    max-width: ${f.default.appWidth/1.5}px;
    padding: 0;
    margin: 0;
    text-align: center;
    list-style: none;

    li {
      display: flex;
      flex-flow: column wrap;
      align-items: flex-start;
      justify-content: flex-start;
      width: 320px;
      margin: ${f.default.baseMargin}px;
    }
    span {
      text-indent: ${2*f.default.baseSize}px;
    }
    input {
      width: 100%;
      min-width: 230px;
      max-width: 320px;
      padding: 10px ${f.default.basePadding}px;
      margin: ${f.default.baseMargin}px;
      border: 0;
      border-radius: ${2*f.default.baseSize}px;
      outline: none;
      cursor: pointer;
      transition: ${f.default.transitionDuration}ms;
      :hover {
        background: ${f.default.themeColor};
        color: #fff;
      }
    }
  }
`,h=u.default.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: ${f.default.baseHeight}px;
  padding: 0 ${f.default.doublePadding}px;
  border-radius: ${f.default.baseSize}px;
  opacity: ${e=>e.copied?1:0};
  transition: ${f.default.transitionDuration}ms;
`},1693:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,null,l.createElement(c,null,l.createElement(f,null,l.createElement(p,null),l.createElement(h,null)),l.createElement(g,null)));const d=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  height: 1680px;
  margin: 0 auto;
  background: #111;
`,c=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  max-width: ${s.default.appWidth}px;
  height: inherit;
  margin: 0 auto;
  background: url(https://assets.talkn.io/img/walk2.png) 10% 85% / 240px no-repeat;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    background: url(https://assets.talkn.io/img/walk2.png) 50% 100% / 240px no-repeat;
  }
`,f=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: flex-start;
  justify-content: flex-start;
  width: 300px;
  height: calc(80% + 190px);
  margin-left: -45%;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    height: calc(100% + 190px);
    margin-left: 0;
  }
`,p=u.default.div`
  width: 40px;
  height: 80%;
  background: rgb(35, 35, 35);
`,h=u.default.div`
  width: 150px;
  height: 150px;
  padding: 0;
  margin: 0;
  border-color: transparent transparent rgb(35, 35, 35) transparent;
  border-style: solid;
  border-width: 150px 150px 150px 0;
  transform: translate3d(-104px, -203px, 0) rotate(315deg);
`,g=u.default.div`
  position: absolute;
  width: 512px;
  height: 512px;
  background: url(https://assets.talkn.io/img/logo_glay.png) 100% / 512px no-repeat;
  opacity: 0.2;
  transform: translate3d(-100px, 640px, 0);
  @media (max-width: ${s.default.spLayoutWidth}px) {
    transform: translate3d(-100px, 780px, 0);
  }
`},2435:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,null,l.createElement(c,null,"- Update the internet for creators -"),l.createElement(f,null,"Copyright © talkn."));const d=u.default.section`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: ${s.default.sepMargin}px 0;
  color: #fff;
  background: #111;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    padding: 60px 0 120px;
  }
`,c=u.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  margin: 20px;
`,f=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin: 20px;
`},3953:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=n(453),d=o(n(990)),c=n(2740),f=o(n(6032));t.default=()=>(Array.from(Object.keys(s.NetworkList)).map((e=>{const t=e,n=s.NetworkList[t].label,r=t===s.MediaTypeNews;return l.createElement(d.default,{label:n,key:n,active:r,theme:"dark",href:"https://news.talkn.io"})})),l.createElement(l.Fragment,null)),(0,u.default)(c.Section)`
  background: rgb(35, 35, 35);
  color: #fff;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    padding: 20px 0;
  }
`},7010:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=n(2740),d=o(n(6032));t.default=()=>l.createElement(c,null,l.createElement(s.H5,{color:d.default.fontLightColor},"- Domain Profile Project -"),l.createElement("br",null),l.createElement("h3",null,"Concept"),l.createElement(f,null,l.createElement("p",null,"ドメインの中でもの作りをする人をピックアップするWEBメディアです。 TOPドメインが保有する「Metaタグ」「Ogpタグ」を編集することで自由に作成・編集が出来ます。")),l.createElement("h3",null,"Mission"),l.createElement(f,null,l.createElement("p",null,"もの作りに関わる人・繋がりたい人をタグ付けで可視化、AIマッチングすることで、インターネット上で不要な「仲介」や「需給ギャップ」を無くします。")),l.createElement("h3",null,"Sponser"),l.createElement(p,null,l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null)),l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null)),l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null))),l.createElement("h3",null,"Member"),l.createElement(p,null,l.createElement(h,{href:"https://twitter.com/mirazle",bgSrc:"https://pbs.twimg.com/profile_images/1725640801/baba_x96.png"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"},"mirazle@talkn")),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"}))));const c=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  padding: ${d.default.doublePadding}px ${d.default.doublePadding}px ${d.default.sepMargin}px ${d.default.doublePadding}px;
  background: rgb(68, 68, 68);
  color: #fff;
  line-height: 30px;
  h3 {
    margin: 45px 0;
  }
`,f=u.default.div`
  width: 100%;
  max-width: 600px;
  p {
    font-size: 100%;
  }
`,p=u.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  max-width: ${d.default.appWidth}px;
`,h=u.default.a`
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  margin: ${d.default.baseMargin}px;
  font-size: 60%;
  color: #fff;
  opacity: 1;
  transition: ${d.default.transitionDuration}ms;
  :hover {
    opacity: 0.6;
    .icon {
      background-size: 74px;
    }
  }
  .icon {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    cursor: pointer;
    background: url(${e=>e.bgSrc});
    background-position: center;
    background-size: 64px;
    background-color: ${d.default.fontColor};
    transition: ${d.default.transitionDuration}ms;
  }
  .name {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
  }
`},8530:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,{onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},l.createElement("div",{className:"ToTopArrow"}),l.createElement("div",{className:"ToTopArrowUnderBar"}));const d=u.default.div`
  z-index: ${s.default.zIndex.toTop};
  position: sticky;
  top: calc(100vh - 110px);
  right: 70px;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: ${s.default.quintSize}px;
  height: ${s.default.quintSize}px;
  padding: ${s.default.quintSize}px;
  margin: 0 0 60px auto;
  background: ${s.default.whiteColor};
  border: 1px solid ${s.default.fontColor};
  border-radius: ${s.default.baseSize}px;
  transition: ${s.default.transitionDuration}ms;
  div.ToTopArrow {
    position: relative;
    top: -4px;
    border-right: 15px solid transparent;
    border-bottom: 25px solid ${s.default.fontColor};
    border-left: 15px solid transparent;
  }
  div.ToTopArrowUnderBar {
    width: 30px;
    height: 5px;
    min-height: 5px;
    background: ${s.default.fontColor};
    border-radius: 10px;
  }
  :hover {
    background: ${s.default.fontColor};
    border: 1px solid ${s.default.fontColor};
    div.ToTopArrow {
      border-bottom: 25px solid #fff;
    }
    div.ToTopArrowUnderBar {
      background: #fff;
    }
  }
  @media (max-width: ${s.default.spLayoutStrictWidth}px) {
    right: 15px;
    margin-right: 0;
  }
`},3237:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(456)),d=o(n(1693)),c=o(n(2435)),f=o(n(3953)),p=o(n(7010)),h=o(n(8530));t.default=({ch:e})=>l.createElement(g,null,l.createElement(h.default,null),l.createElement(s.default,{ch:e}),l.createElement(p.default,null),l.createElement(f.default,null),l.createElement(d.default,null),l.createElement(c.default,null));const g=u.default.footer`
  display: flex;
  flex-flow: column;
  justify-content: center;
  width: 100%;
`},3814:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(5780)),c=i(n(2740)),f=o(n(6032));t.default=({ch:e,openMenu:t,account:n,handleOnClickMenu:r})=>l.createElement(p,{className:"Header",width:"100%",height:`${f.default.appHeaderHeight}px`,alignItems:"center",justifyContent:"space-between",border:"underline"},l.createElement(h,{flow:"column wrap",alignItems:"center",justifyContent:"center",className:t&&"open",alt:{label:"Search",type:"bottom left"},sideMargin:!0},l.createElement(d.default,{onClick:e=>{e.preventDefault(),e.stopPropagation(),r(e)},close:t})),l.createElement(c.H1,{id:"AppHeader"},l.createElement(m,{href:`https:/${e}`,alignItems:"center",justifyContent:"center"},l.createElement(c.Img,{src:`//${s.default.assetsURL}/cover/logo.png`,width:"32px",className:"logo"}),"STARTUP-HUB")),l.createElement(g,{flow:"column wrap",alignItems:"center",justifyContent:"center",sideMargin:!0},n));const p=(0,u.default)(c.Header)`
  box-sizing: border-box;
  z-index: ${f.default.zIndex.header};
  position: sticky;
  top: 0;
  ${f.default.alphaBgSet};
  a {
    display: flex;
    flex-flow: row wrap;
    color: ${f.default.fontColor};
  }
`,h=(0,u.default)(c.default)`
  width: 60px;
  height: 60px;
  margin-right: 10px;
  transition: ${f.default.transitionDuration}ms;
  cursor: pointer;
  .HeaderMenuLine {
    width: 70%;
    height: 1px;
    margin: 5px;
    background: #bbb;
    transition: ${f.default.transitionDuration}ms;
  }
  &.open {
    .HeaderMenuLine:nth-child(1) {
      transform: rotate(45deg) translate(8px, 8px);
    }
    .HeaderMenuLine:nth-child(2) {
      transform: rotate(45deg) translate(0px, 0px);
    }
    .HeaderMenuLine:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -8px);
    }
  }
`,g=(0,u.default)(c.default)`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 60px;
  height: 60px;
`,m=(0,u.default)(c.A)`
  position: relative;
  left: -32px;
  letter-spacing: 3px;
  .hub {
    margin-left: 4px;
  }
  .logo {
    margin-right: 12px;
  }
`},2784:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=n(2740),c=n(3785),f=o(n(6032));t.default=({ch:e,selectContentMenu:t})=>l.createElement(p,{className:"ContentMenu"},l.createElement(h,null,l.createElement(g,{className:t===c.selectContentMenuUsers&&"active"},l.createElement(d.A,{href:`//${s.default.coverURL}${e}dashboard`},l.createElement(d.H2,null,"DASHBOARD"),l.createElement("div",{className:"underBar"}))),l.createElement(g,{className:t===c.selectContentMenuBusiness&&"active"},l.createElement(d.A,{href:`//${s.default.coverURL}${e}business`},l.createElement(d.H2,null,"BUSINESS"),l.createElement("div",{className:"underBar"}))),l.createElement(g,{className:t===c.selectContentMenuStories&&"active"},l.createElement(d.A,{href:`//${s.default.coverURL}${e}story`},l.createElement(d.H2,null,"STORY"),l.createElement("div",{className:"underBar"})))));const p=(0,u.default)(d.Menu)`
  position: sticky;
  top: ${f.default.baseHeight}px;
  z-index: ${f.default.zIndex.contentsMenu};
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: ${f.default.baseHeight}px;
  margin-top: ${f.default.doubleMargin}px;
  margin-right: 0;
  margin-left: 0;
  margin-bottom: 0;
  padding-right: 0;
  padding-left: 0;
  ${f.default.alphaBgSet};
  box-shadow: 0 0 0 1px ${f.default.borderColor};
`,h=u.default.ul`
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  height: inherit;
  max-width: ${f.default.appWidth}px;
  padding: 0;
  margin: 0;
  color: ${f.default.fontColor};
  border-left: 1px solid ${f.default.borderColor};
  font-size: 100%;
  font-weight: 200;
  letter-spacing: 5px;
  list-style: none;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    border-left: 0px solid ${f.default.borderColor};
  }
`,g=u.default.li`
  display: flex;
  flex-flow: column nowrap;
  flex: 1 1 auto;
  align-items: center;
  justify-content: center;
  width: 25%;
  height: inherit;
  border-right: 1px solid ${f.default.borderColor};
  cursor: pointer;
  .underBar {
    width: 35%;
    min-width: 60px;
    height: 8px;
    margin-top: 8px;
    background: rgba(0, 0, 0, 0.25);
    border-radius: ${f.default.baseSize}px;
    transition: ${2*f.default.transitionDuration}ms;
  }
  @media (max-width: ${f.default.spLayoutWidth}px) {
    &:last-child {
      border-right: 0px solid ${f.default.borderColor};
    }
  }

  :hover {
    .underBar {
      background: ${f.default.darkColor};
    }
  }
  &.active {
    .underBar {
      background: ${f.default.themeColor};
      color: #fff;
    }
  }
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: #666;
  }
`},4058:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=o(n(2671)),c=o(n(9188)),f=o(n(1726)),p=o(n(5945)),h=o(n(8145)),g=i(n(2740)),m=n(8690),b=o(n(6032)),y=n(6581);t.default=({openMenu:e,userTags:t})=>{const[n,r]=(0,l.useState)(!1),[a,i]=(0,l.useState)(),o=(0,y.getFixValuesEmpty)(a,!0),[u,g]=(0,l.useState)(o),[b,S]=(0,l.useState)(0),M=(0,l.useMemo)((()=>{switch(a){case m.tagInvestor:return l.default.createElement(c.default,{type:"SearchInvestorMenu",isEditable:!0,fixValues:u,setFixValues:g});case m.tagFounder:return l.default.createElement(d.default,{type:"SearchFounderMenu",isEditable:!0,fixValues:u,setFixValues:g});case m.tagMember:return l.default.createElement(f.default,{type:"SearchMemberMenu",isEditable:!0,fixValues:u,setFixValues:g});case m.tagStory:return l.default.createElement(p.default,{type:"SearchStoryMenu",userTags:t,fixValues:u,setFixValues:g})}}),[u]);return(0,l.useEffect)((()=>(e&&r(!0),()=>r(!1))),[e]),(0,l.useEffect)((()=>{g(o)}),[a]),l.default.createElement(v,null,l.default.createElement(w,{openMenu:e,show:n}),l.default.createElement(x,{className:"SideMenuOrder",openMenu:e,width:"100%",flow:"column nowrap",alignItems:"flex-start",justifyContent:"flex-start",border:"rightline"},l.default.createElement(_,{className:"SearchContent",flow:"column nowrap",overflow:"hidden scroll",width:"100%",marginBottom:b,upperPadding:!0,sidePadding:!0,bottomPadding:!0},l.default.createElement(h.default,{type:"SelectSearchType",isEditable:!0,underline:!0,searchType:a,onChange:e=>i(e)}),M),l.default.createElement(E,{alignItems:"center",justifyContent:"center",width:"100%",className:"FixedFooter",mouted:e=>{S(e.clientHeight)},border:"topline",upperPadding:!0,bottomPadding:!0},l.default.createElement(s.default,{disabled:!1,theme:s.buttonThemeBright,onClick:()=>{g({...o})},sideMargin:!0},"CLEAR"),l.default.createElement(s.default,{className:"SearchButton",sideMargin:!0},l.default.createElement(C,{href:"https://yahoo.co.jp/"},"SEARCH")))))};const v=(0,u.default)(g.default)``,w=(0,u.default)(g.default)`
  position: fixed;
  top: 0;
  left: 0;
  z-index: ${b.default.zIndex.sideMenu-1};
  display: ${e=>e.openMenu?"block":"none"};
  width: 100vw;
  height: 100vh;
  background-color: ${e=>e.show?b.default.fullBackgroundColor:"rgba(0,0,0,0)"};
  transition: ${b.default.transitionDuration}ms;
`,x=(0,u.default)(g.default)`
  position: fixed;
  z-index: ${b.default.zIndex.sideMenu};
  top: ${b.default.appHeaderHeight}px;
  left: -${b.default.menuPcWidth}px;
  color: ${b.default.fontColor};
  width: ${b.default.menuPcWidth}px;
  height: calc(100% - ${b.default.appHeaderHeight}px);
  min-height: calc(100% - ${b.default.appHeaderHeight}px);
  max-height: calc(100% - ${b.default.appHeaderHeight}px);
  ${b.default.alphaBgSet};
  transition: ${b.default.transitionDuration}ms;
  transform: translate(${e=>e.openMenu?`${b.default.menuPcWidth}px`:0}, 0px);

  @media (max-width: ${b.default.spLayoutWidth}px) {
    transform: translate(${e=>e.openMenu?`${b.default.menuPcWidth}px`:0}, 0px);
  }
  @media (max-width: ${b.default.spLayoutStrictWidth}px) {
    left: -100%;
    width: 100%;
    transform: translate(${e=>e.openMenu?"100%":0}, 0px);
  }
`,_=(0,u.default)(g.default)`
  margin-bottom: ${e=>e.marginBottom}px;
`,E=(0,u.default)(g.Footer)`
  position: fixed;
  bottom: 0;
`,C=(0,u.default)(g.A)`
  color: #fff;
`},720:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(3660)),d=o(n(1187)),c=i(n(2740)),f=o(n(6032)),p=f.default.doubleMargin,h="ModalFull";t.default=e=>{const t=(0,l.useRef)(l.default.createElement("div",null)),n=(0,c.useFlexesContext)(),[r,a]=(0,l.useState)(e.contentIndex?e.contentIndex:0),i={...c.boxLayoutPropsInit,...c.flexLayoutPropsInit,overflow:"hidden scroll",width:f.default.spLayoutStrictWidthPx,...e},o=_(i),u=E(n,o),p=i.isLoading||n.isSpLayout&&0===r;return i.isLoading&&!n.isSpLayout&&n.isSpLayoutStrict,(0,l.useEffect)((()=>{if(void 0!==e.contentIndex&&(a(e.contentIndex),1===e.contentIndex)){const e=t.current;e.scrollTo({left:e.scrollWidth,behavior:"smooth"})}}),[e.contentIndex]),l.default.createElement(g,{className:h,show:i.show,onClick:e=>{const t=e.target;Boolean(Array.from(t.classList).find((e=>e===h)))&&i.handleOnClickClose&&i.handleOnClickClose()}},l.default.createElement(m,{className:"ModalFullBoard",show:i.show,width:i.width},i.header&&l.default.createElement(b,{className:"ModalFullHeader",width:"100%",alignItems:"center",justifyContent:"space-between",border:"underline",sidePadding:!0},i.header),l.default.createElement(y,{ref:t,className:"ModalFullBodyOrder",contentHeight:u,onScroll:e=>{const t=e.target;0===t.scrollLeft?(a(0),i.handleOnChangeContentIndex&&i.handleOnChangeContentIndex(0)):t.scrollLeft===t.scrollWidth/2&&(a(1),i.handleOnChangeContentIndex&&i.handleOnChangeContentIndex(1))}},l.default.createElement(v,{className:"ModalFullMenu",width:`${f.default.appMenuMinWidth}px`,flow:"column nowrap",overflow:"hidden scroll",upperPadding:!0,sidePadding:!0,bottomPadding:!0},i.menu),l.default.createElement(w,{className:"ModalFullContent",width:"100%",flow:"row nowrap",overflow:"hidden scroll",border:"leftline"},p?l.default.createElement(c.default,{flow:"column nowrap",width:"100%",height:"100%",alignItems:"center",justifyContent:"center"},l.default.createElement(s.default,null)):i.content)),i.footer&&l.default.createElement(x,{className:"ModalFullFooter",width:"100%",alignItems:"center",justifyContent:"center",border:"topline",sidePadding:!0},i.footer)),i.isCheckAnimation&&l.default.createElement(d.default,null))};const g=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  background-color: ${f.default.fullBackgroundColor};
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
  transition: background-color ${f.default.transitionDuration}ms;
`,m=u.default.section`
  overflow: hidden;
  width: ${e=>e.width?e.width:"fit-content"};
  max-width: ${f.default.appWidth}px;
  height: fit-content;
  max-height: calc(100vh - ${2*p}px);
  padding: 0;
  margin: ${p}px;
  ${f.default.alphaBgSet};
  border-radius: ${f.default.borderRadius}px;
  box-shadow: ${f.default.shadowHorizonBase};
  transition: transform ${f.default.transitionDuration}ms;
  transform: translateY(${e=>e.show?0:2*f.default.baseSize+"px"});
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    max-height: none;
    padding: 0;
    margin: 0;
    border-radius: 0;
  }
`,b=(0,u.default)(c.default)`
  height: ${80}px;
`,y=u.default.ol`
  overflow: hidden;
  flex-flow: row nowrap;
  display: flex;
  width: 100%;
  height: ${e=>e.contentHeight};
  min-height: ${e=>e.contentHeight};
  max-height: ${e=>e.contentHeight};
  padding: 0;
  margin: 0;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    overflow: scroll hidden;
    width: 100%;
    min-width: 100%;
    max-width: 100%;
    scroll-snap-type: x mandatory;
  }
`,v=(0,u.default)(c.default)`
  width: ${e=>e.width};
  min-width: ${e=>e.width};
  max-width: ${e=>e.width};
  @media (max-width: ${f.default.spLayoutWidth}px) {
    width: 100%;
    min-width: 100%;
    max-width: 100%;
    scroll-snap-align: start;
  }
`,w=(0,u.default)(c.default)`
  @media (max-width: ${f.default.spLayoutWidth}px) {
    width: 100%;
    min-width: 100%;
    max-width: 100%;
    scroll-snap-align: start;
  }
`,x=(0,u.default)(c.default)`
  height: ${80}px;
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    position: fixed;
    bottom: 0;
  }
`,_=e=>{let t=0;return Boolean(e.header)&&t++,Boolean(e.footer)&&t++,t},E=(e,t)=>{const n=e.isSpLayoutStrict?0:p;return e.innerHeight-(80+n)*t+"px"}},7289:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032)),c="ModalContainer";t.default=e=>{const t={...s.boxLayoutPropsInit,...s.flexLayoutPropsInit,width:d.default.spLayoutStrictWidthPx,...e};return l.default.createElement(f,{className:c,show:t.show,onClick:e=>{e.target.className.indexOf(c)>=0&&t.closeModal()},onTransitionEnd:()=>{}},l.default.createElement(p,{className:"ModalContainerBoard",show:t.show,width:t.width},l.default.createElement(s.default,{className:"ModalContainerFlex",flow:t.flow},t.children)))};const f=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  background-color: rgb(0, 0, 0, 0.3);
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
  transition: background-color ${d.default.transitionDuration}ms;
`,p=u.default.section`
  width: ${e=>e.width?e.width:"fit-content"};
  height: fit-content;
  padding: ${d.default.basePadding}px;
  ${d.default.alphaBgSet};
  border-radius: ${d.default.borderRadius}px;
  box-shadow: ${d.default.shadowHorizonBase};
  transition: transform ${d.default.transitionDuration}ms;
  transform: translateY(${e=>e.show?0:2*d.default.baseSize+"px"});
  @media (max-width: ${d.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    border-radius: 0;
  }
`},960:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(2740)),d=o(n(6032)),c=d.default.doubleMargin,f="ModalContainer";t.default=e=>{const t=(0,s.useFlexesContext)(),n={...s.boxLayoutPropsInit,...s.flexLayoutPropsInit,overflow:"hidden scroll",width:d.default.spLayoutStrictWidthPx,...e},r=y(n);return l.default.createElement(p,{className:f,show:n.show,alignItems:"center",justifyContent:"center",width:"100vw",height:"100vh",onClick:e=>{const t=e.target;Boolean(Array.from(t.classList).find((e=>e===f)))&&n.closeModal()}},l.default.createElement(h,{className:"ModalContainerBoard",show:n.show,width:n.width},n.header&&l.default.createElement(g,{className:"ModalContainerHeader",alignItems:"center",justifyContent:"flex-start",border:"underline",sidePadding:!0},n.header),l.default.createElement(m,{className:"ModalContainerContent",flow:n.flow,windowInnerHeight:t.innerHeight,fullHeight:n.fullHeight,optinalPartCnt:r,overflow:n.overflow,upperPadding:!0,sidePadding:!0,bottomPadding:!0},n.content),n.footer&&l.default.createElement(b,{className:"ModalContainerFooter",width:"100%",alignItems:"center",justifyContent:"center",border:"topline",sidePadding:!0},n.footer)))};const p=(0,u.default)(s.default)`
  position: fixed;
  top: 0;
  left: 0;

  background-color: rgb(0, 0, 0, 0.3);
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
  transition: background-color ${d.default.transitionDuration}ms;
`,h=u.default.section`
  overflow: hidden;
  width: ${e=>e.width?e.width:"fit-content"};
  height: fit-content;
  max-height: calc(100vh - ${2*c}px);
  padding: 0 ${c}px;
  margin: ${c}px;
  ${d.default.alphaBgSet};
  border-radius: ${d.default.borderRadius}px;
  box-shadow: ${d.default.shadowHorizonBase};
  transition: transform ${d.default.transitionDuration}ms;
  transform: translateY(${e=>e.show?0:2*d.default.baseSize+"px"});
  @media (max-width: ${d.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    max-height: none;
    padding: 0;
    margin: 0;
    border-radius: 0;
  }
`,g=(0,u.default)(s.default)`
  height: ${80}px;
`,m=(0,u.default)(s.default)`
  overflow: ${e=>e.overflow};
  ${e=>e.fullHeight?"height: 100vh":""};
  max-height: ${e=>e.windowInnerHeight-(80+c)*e.optinalPartCnt}px;
  @media (max-width: ${d.default.spLayoutStrictWidth}px) {
    max-height: ${e=>e.windowInnerHeight-80*e.optinalPartCnt}px;
  }
`,b=(0,u.default)(s.default)`
  height: ${80}px;
  @media (max-width: ${d.default.spLayoutStrictWidth}px) {
    position: fixed;
    bottom: 0;
  }
`,y=e=>{let t=0;return Boolean(e.header)&&t++,Boolean(e.footer)&&t++,t}},2068:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(720)),i=r(n(7289)),o=r(n(960));t.default={Plain:i.default,Structure:o.default,Full:a.default}},4022:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(6032));t.default=({ch:e})=>a.default.createElement(l,null,a.default.createElement(u,{className:"twitter"},a.default.createElement("a",{href:"https://twitter.com/share?ref_src=twsrc%5Etfw&url=https://cover.talkn.io/www.sunbridge.com/",className:"twitter-share-button","data-show-count":"false"},a.default.createElement(s,null),"Tweet"),a.default.createElement("script",{async:!0,src:"https://platform.twitter.com/widgets.js",charSet:"utf-8"})),a.default.createElement("div",{className:"facebook"},a.default.createElement("div",{className:"fb-share-button","data-href":`https://cover.talkn.io${e}`,"data-layout":"button_count","data-size":"large"},a.default.createElement("a",{target:"_blank",href:`https://www.facebook.com/sharer/sharer.php?u=https://cover.talkn.io${e};src=sdkpreparse`,className:"fb-xfbml-parse-ignore",rel:"noreferrer"},"Share"))));const l=i.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  margin: ${o.default.doubleMargin}px ${o.default.doubleMargin}px ${o.default.doubleMargin}px;
`,u=i.default.div`
  padding: 5px 10px;
  margin-right: 10px;
  background: #1da1f2;
  border-radius: 5px;
  font-size: 13px;
  color: #fff;
  i {
    margin-top: 2px;
    margin-right: 5px;
  }
  a {
    display: flex;
    color: #fff;
  }
`,s=i.default.i`
  display: inline-flex;
  background: url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2072%2072%22%3E%3Cpath%20fill%3D%22none%22%20d%3D%22M0%200h72v72H0z%22%2F%3E%3Cpath%20class%3D%22icon%22%20fill%3D%22%23fff%22%20d%3D%22M68.812%2015.14c-2.348%201.04-4.87%201.744-7.52%202.06%202.704-1.62%204.78-4.186%205.757-7.243-2.53%201.5-5.33%202.592-8.314%203.176C56.35%2010.59%2052.948%209%2049.182%209c-7.23%200-13.092%205.86-13.092%2013.093%200%201.026.118%202.02.338%202.98C25.543%2024.527%2015.9%2019.318%209.44%2011.396c-1.125%201.936-1.77%204.184-1.77%206.58%200%204.543%202.312%208.552%205.824%2010.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163%200%206.345%204.513%2011.638%2010.504%2012.84-1.1.298-2.256.457-3.45.457-.845%200-1.666-.078-2.464-.23%201.667%205.2%206.5%208.985%2012.23%209.09-4.482%203.51-10.13%205.605-16.26%205.605-1.055%200-2.096-.06-3.122-.184%205.794%203.717%2012.676%205.882%2020.067%205.882%2024.083%200%2037.25-19.95%2037.25-37.25%200-.565-.013-1.133-.038-1.693%202.558-1.847%204.778-4.15%206.532-6.774z%22%2F%3E%3C%2Fsvg%3E);
  min-width: 14px;
  min-height: 14px;
  width: 14px;
  height: 14px;
`},4160:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.hoverAnimationDefault=t.hoverAnimationBlur=t.hoverAnimationBoxShadow=t.layoutDefault=t.layoutSearch=t.layoutTop=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(6562)),c=o(n(1187)),f=i(n(2740)),p=o(n(6032));t.layoutTop="top",t.layoutSearch="search",t.layoutDefault=t.layoutTop,t.hoverAnimationBoxShadow="shadow",t.hoverAnimationBlur="blur",t.hoverAnimationDefault=t.hoverAnimationBlur;const h=({label:e})=>l.default.createElement(y,{className:"mark"},e);t.default=({className:e="UserContent",user:n,layout:r=t.layoutDefault,isSavedAnimation:a,hoverAnimationType:i=t.hoverAnimationDefault,fullWidth:o=!0,handleOnClick:u})=>{const{innerWidth:s,innerHeight:p}=(0,f.useFlexesContext)(),[y,w]=(0,l.useState)(!1),[x,_]=(0,l.useState)(!1),E=v(s,p);return(0,l.useEffect)((()=>{_(!0)}),[]),l.default.createElement(l.default.Fragment,null,l.default.createElement(g,{className:e,id:n.id,image:n.bg,isHover:y,hoverAnimationType:i,controlHeight:E,fullWidth:o,pointer:!0,overflow:"hidden",flow:"row nowrap",alignItems:"flex-start",justifyContent:"flex-start"}),x&&l.default.createElement(m,{className:"UserContentBody",onMouseOver:()=>w(!0),onMouseLeave:()=>w(!1),isHover:y,hoverAnimationType:i,onClick:u&&u,fullWidth:o,pointer:!0,alignItems:"center",justifyContent:"center",controlHeight:E},l.default.createElement(b,{className:`ProfileContent ${r}`,flow:"row wrap",alignItems:"center",justifyContent:"flex-start",id:n.id,image:n.icon},l.default.createElement("div",{className:"userIcon"}),l.default.createElement(f.default,{className:"userDataWrap",flow:"column nowrap"},l.default.createElement(f.default,{className:"userData",flow:"column nowrap"},l.default.createElement("div",{className:"name"},n.name),l.default.createElement("div",{className:"age"},"AGE: ",d.default.getAgeByBirthday(n.birthday))),l.default.createElement(f.default,{className:"userDetailData",flow:"column nowrap"},l.default.createElement(f.default,{className:"userTags",flow:"row wrap",upperMargin:!0},Object.keys(n.hasSelfTags).map((e=>n.hasSelfTags[e]&&l.default.createElement(h,{key:e,label:d.default.getHeadUpper(e)})))),l.default.createElement(f.default,{className:"selfIntro",flow:"row wrap",upperMargin:!0},n.description)))),a&&l.default.createElement(c.default,null)))};const g=(0,u.default)(f.default)`
  width: ${e=>e.fullWidth?`${p.default.eyeCatchVwValue}vw`:"100%"};
  height: ${e=>e.controlHeight}px;
  min-height: ${p.default.eyeCatchMinHeightPxValue}px;
  max-height: ${p.default.eyeCatchMinHeightPxValue}px;
  background-size: cover;
  background-image: ${e=>w({id:e.id,image:e.image})};
  background-position: center;
  color: ${p.default.whiteColor};
  opacity: 1;
  box-shadow: ${e=>E(e)};
  transition: ${p.default.transitionDuration}ms;
  transform: ${e=>x(e)};
  :before {
    ${p.default.beforeBlur};
  }
  @media (max-width: ${p.default.spLayoutWidth}px) {
    width: 100%;
    min-width: 100%;
    max-width: 100%;
  }
  @media (max-width: ${p.default.spLayoutStrictWidth}px) {
    height: ${p.default.eyeCatchVhValue}vh;
    min-height: unset;
  }
`,m=(0,u.default)(f.default)`
  overflow: hidden;
  width: ${e=>e.fullWidth?`${p.default.eyeCatchVwValue}vw`:"100%"};
  height: ${e=>e.controlHeight}px;
  min-height: ${p.default.eyeCatchMinHeightPxValue}px;
  margin-top: -${e=>e.controlHeight}px;
  z-index: ${p.default.zIndex.eyeCatch};
  cursor: pointer;
  backdrop-filter: ${e=>_(e)};
  transition: ${p.default.transitionDuration}ms;
  transform: ${e=>x(e)};
  @media (max-width: ${p.default.spLayoutStrictWidth}px) {
    width: 100%;
    min-width: 100%;
    max-width: 100%;
    height: ${p.default.eyeCatchVhValue}vh;
    min-height: unset;
  }
`,b=(0,u.default)(f.default)`
  width: 100%;
  min-width: unset;
  max-width: ${p.default.appWidth}px;
  color: ${p.default.whiteColor};
  .userDataWrap {
    flex: 1 1 auto;
  }
  .userIcon {
    flex: 1 1 120px;
    width: 120px;
    min-width: 120px;
    max-width: 120px;
    height: 120px;
    min-height: 120px;
    max-height: 120px;
    margin: 0 30px;
    background-size: cover;
    background-image: ${e=>w({id:e.id,image:e.image})};
    background-position: center;
    border-radius: 50%;
  }
  .name {
    font-weight: 500;
    font-size: 175%;
  }
  .age {
    margin-top: ${p.default.baseMargin}px;
  }
  @media (max-width: ${p.default.spLayoutWidth}px) {
    .userIcon {
      margin: 0 30px;
    }
    .name {
      font-weight: 400;
      font-size: 150%;
    }
  }
  @media (max-width: ${p.default.spLayoutStrictWidth}px) {
    align-items: center;
    font-weight: 300;
    .userDataWrap {
      display: contents;
    }
    .userIcon {
      flex: 1 1 60px;
      width: 60px;
      min-width: 60px;
      max-width: 60px;
      height: 60px;
      min-height: 60px;
      max-height: 60px;
      margin: 0 0 0 20px;
    }
    .userData {
      margin: 0 0 0 20px;
    }
    .userDetailData {
      margin: 0 0 0 20px;
    }
    .name {
      font-weight: 500;
      font-size: 150%;
    }
    .userTags {
      font-size: 90%;
    }
    .selfIntro {
      margin-top: ${p.default.baseMargin}px;
      font-size: 90%;
    }
    .mark {
      padding: ${p.default.basePadding/2}px ${p.default.doublePadding}px;
    }
  }
`,y=(0,u.default)(f.default)`
  background: ${p.default.themeColor};
  padding: ${p.default.basePadding}px ${2*p.default.basePadding}px;
  margin-right: ${p.default.doubleMargin}px;
  color: ${p.default.whiteColor};
  border-radius: 30px;
  line-height: 26px;
`,v=(e,t)=>{const{spLayoutStrictWidth:n,eyeCatchMinHeightPxValue:r}=p.default;let a=Math.floor(t*(p.default.eyeCatchVhValue/100));return e<n?a:a<r?r:a},w=({id:e,image:t})=>t&&""!==t?`url(https://${s.default.assetsCoverPath}${e}/${t}), url(https://${s.default.assetsCoverPath}${t}) `:`https://${s.default.assetsCoverPath}/${t}`,x=e=>e.isHover?e.hoverAnimationType===t.hoverAnimationBlur?"scale(1.03)":(e.hoverAnimationType,t.hoverAnimationBoxShadow,"scale(1)"):"scale(1)",_=({isHover:e})=>e?"blur(3px) brightness(0.7)":"blur(0) brightness(1)",E=e=>e.isHover&&e.hoverAnimationType===t.hoverAnimationBoxShadow?p.default.shadowHorizonBase:"none"},3215:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(8203)),c=i(n(4034)),f=o(n(6490)),p=n(2584),h=n(9639),g=o(n(2068)),m=o(n(4160)),b=i(n(2740)),y=o(n(1633)),v=n(8690);t.fixValuesInit={bg:"",icon:"",sexes:[],languages:[],birthday:s.default.defaultBirthdayUnixtime},t.default=({isMyPage:e,openModalOptions:n,user:r,setMyUser:a,setShowProfileModalOption:i})=>{const[o,u]=(0,l.useState)(!1),[s,x]=(0,l.useState)(!1),[_,E]=(0,l.useState)(!1),[C,S]=(0,l.useState)(new FormData),[M,k]=(0,l.useState)(new FormData),[O,P]=(0,l.useState)(t.fixValuesInit);return(0,l.useEffect)((()=>{O&&O.languages&&O.sexes&&""!==O.icon&&""!==O.bg&&O.languages.length>0&&O.sexes.length>0&&0!==O.birthday?x(!1):x(!0)}),[O]),(0,l.useEffect)((()=>{P({...O,bg:n.bg,icon:n.icon,languages:n.languages,sexes:n.sexes,birthday:n.birthday})}),[n]),l.default.createElement(l.default.Fragment,null,l.default.createElement(m.default,{user:r,handleOnClick:()=>e&&E(!_),isSavedAnimation:o}),l.default.createElement(g.default.Structure,{show:_,closeModal:()=>E(!1),header:l.default.createElement(b.H5,null,"Profile"),content:l.default.createElement(b.default,{flow:"column nowrap"},l.default.createElement(f.default.DropImage,{type:p.imageBg,id:r.id,className:"InputDropImageBg",onChange:(e,t)=>{S(e),P({...O,bg:t})},value:n.bg}),l.default.createElement(w,{type:p.imageIcon,id:r.id,className:"InputDropImageIcon",onChange:(e,t)=>{k(e),P({...O,icon:t})},value:n.icon}),l.default.createElement("br",null),l.default.createElement(h.Profiles,{type:"UserTop",id:r.id,isEditable:n.tagParentType!==v.tagParentSelf,sexes:O.sexes,languages:O.languages,birthday:O.birthday,handleOnChangeLanguages:e=>{P({...O,languages:e})},handleOnChangeSexes:e=>{P({...O,sexes:e})},handleOnChangeBirthday:e=>{P({...O,birthday:e})}})),footer:l.default.createElement(l.default.Fragment,null,l.default.createElement(c.default,{disabled:!1,theme:c.buttonThemeBright,onClick:()=>E(!1),sideMargin:!0},"CLOSE"),l.default.createElement(c.default,{disabled:s,theme:c.buttonThemeHot,onClick:()=>{(()=>{const e=[],t=new y.default({...r,...O});let o=!1;a&&a(t),i({...n,bg:t.bg,icon:t.icon,languages:t.languages,sexes:t.sexes,birthday:t.birthday}),M.has("icon")&&(o=!0,M.set("userId",r.id),e.push(d.default.formData("saveUserIcon",r.id,M))),C.has("bg")&&(o=!0,C.set("userId",r.id),e.push(d.default.formData("saveUserBg",r.id,C))),e.push(d.default.json("saveUser",t)),Promise.all(e).then((()=>{u(!0),setTimeout((()=>{window.location.reload(),u(!1)}),1e3)}))})(),E(!1)},sideMargin:!0},"SAVE"))}))};const w=(0,u.default)(f.default.DropImage)`
  margin-top: -190px;
  margin-left: 32px;
  margin-bottom: 100px;
`},450:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294));t.default=()=>a.default.createElement(a.default.Fragment,null,"TOP!")},1686:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useGlobalContext=void 0;const l=i(n(7294)),u=n(3692),s=o(n(9163)),d=n(2865),c=o(n(3991)),f=o(n(9416)),p=o(n(3237)),h=o(n(3814)),g=o(n(2784)),m=o(n(4058)),b=o(n(4022)),y=o(n(3215)),v=i(n(2740)),w=n(3785),x=i(n(1633)),_=n(8690),E=o(n(6032)),C=l.default.createContext({innerWidth:0,innerHeight:0,isScrollTop:!1,isSpLayout:!1,isSpLayoutStrict:!1,isTransition:!0});t.useGlobalContext=()=>(0,l.useContext)(C);const S={version:"",createTime:"",css:"",head:"",sections:[]};let M=[];t.default=({account:e,isMyPage:t})=>{const n=(0,u.useParams)().userId,[r,a]=l.default.useState(!1),[i,o]=(0,l.useState)({}),[s,v]=(0,l.useState)({}),[C,T]=(0,l.useState)({}),[$,I]=(0,l.useState)(S),[j,D]=(0,l.useState)(x.userInit),[L,N]=(0,l.useState)(),[B,R]=(0,l.useState)(),[z,F]=(0,l.useState)({..._.openModalOptionInit}),[H,U]=(0,l.useState)(!1),[W,V]=(0,l.useState)(!0),[q,Y]=(0,l.useState)({..._.openModalOptionInit}),[K,Q]=(0,l.useState)([]),[G,J]=(0,l.useState)(!1),[X,Z]=(0,l.useState)(),[ee,te]=(0,l.useState)(),ne=(0,l.useRef)(),re=location.pathname,ae=(0,l.useCallback)((()=>{const e=M.findIndex((e=>e.offsetTop<=window.scrollY+E.default.baseHeight&&window.scrollY+E.default.baseHeight<e.offsetBottom));Z(e)}),[M]);return(0,l.useEffect)((()=>{if(ne.current&&window.talknDatas.stories&&window.talknDatas.stories.sections.length>0&&E.default.spLayoutWidth<window.innerWidth){const e=ne.current,t=getComputedStyle(e),n=E.default.getTrimUnitNumber(t.width),r=E.default.getTrimUnitNumber(t.marginTop),a=E.default.getTrimUnitNumber(t.marginRight),i=E.default.getTrimUnitNumber(t.marginBottom),o=E.default.getTrimUnitNumber(t.marginLeft),l=E.default.getTrimUnitNumber(t.paddingTop),u=E.default.getTrimUnitNumber(t.paddingRight),s=E.default.getTrimUnitNumber(t.paddingBottom),d=E.default.getTrimUnitNumber(t.paddingLeft);te({width:n,marginTop:r,marginRight:a,marginBottom:i,marginLeft:o,paddingTop:l,paddingRight:u,paddingBottom:s,paddingLeft:d})}}),[window.innerWidth,$&&$.sections.length]),(0,l.useEffect)((()=>{F({..._.openModalOptionInit,...j}),Y({..._.openModalOptionInit,...j})}),[j]),(0,l.useEffect)((()=>{a(!0);const e=window.talknDatas.config.userCategoryChs.length;window.talknDatas.config.userCategoryChs=window.talknDatas.config.userCategoryChs.concat(new Array(d.configUserCategoryChLimit-e).fill("")),o(window.talknDatas.config),v(window.talknDatas.thread),T(window.talknDatas.serverMetas),I(window.talknDatas.stories),Z(window.talknDatas.storiesPointer),Q(window.talknDatas.config.userCategoryChs),D(new x.default(window.talknDatas.user)),R(window.talknDatas.userTags),window.addEventListener("scroll",ae)}),[]),l.default.createElement(k,{className:"Container",width:"100%",flow:"column",alignItems:"center",justifyContent:"center",onClick:e=>{G&&E.default.menuPcWidth<e.clientX&&J(!1)}},l.default.createElement(m.default,{openMenu:G,userTags:B}),l.default.createElement(h.default,{openMenu:G,ch:re,account:e,handleOnClickMenu:e=>{J(!G)}}),l.default.createElement(y.default,{isMyPage:t,openModalOptions:z,user:j,setMyUser:D,setShowProfileModalOption:F}),l.default.createElement(O,{className:"MainContentsBoard",flow:"row wrap",justifyContent:"center"},l.default.createElement(g.default,{ch:re,selectContentMenu:w.selectContentMenuUsers}),l.default.createElement(c.default.Header,{showAdvert:W,handleOnClickControlAdvert:()=>{W?(V(!1),U(!0)):(U(!1),setTimeout((()=>{V(!0)}),E.default.transitionDuration))}}),l.default.createElement(P,{className:"MainContentsWrap",showAdvert:W,alignItems:"flex-start",justifyContent:"center"},l.default.createElement(c.default.Left,{showAdvert:W}),l.default.createElement(A,{className:"MainContents",flow:"column wrap",maxMain:H,showAdvert:W},l.default.createElement(f.default,{isMyPage:t,userId:n,user:j,userTags:B,userTagsInit:L,showProfileModalOption:z,setUser:D,setUserTags:R,setUserTagsInit:N,setShowSearchModalOption:Y})),l.default.createElement(c.default.Right,{showAdvert:W})),l.default.createElement(c.default.Under,{showAdvert:!0})),l.default.createElement(b.default,{ch:re}),l.default.createElement(p.default,{ch:re}))};const k=(0,s.default)(v.default)`
  min-width: ${E.default.appMinWidth}px;
  max-width: 100%;
  margin: 0 auto;
  font-size: ${E.default.fontBaseSize}px;
  font-weight: ${E.default.fontBaseWeight};
  color: ${E.default.fontColor};
  * {
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Hiragino Sans', 'Noto Sans CJK JP', 'Original Yu Gothic',
      'Yu Gothic', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Sans Emoji';
    ::selection {
      background: ${E.default.themeColor};
      color: #fff;
    }
  }
  ::-webkit-scrollbar {
    width: 0.5em;
  }
  ::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }
  ::-webkit-scrollbar-thumb {
    background-color: darkgrey;
    outline: 1px solid slategrey;
  }
  ::-webkit-scrollbar:hover {
    width: 0.7em;
  }
  @media (max-width: ${E.default.spLayoutStrictWidth}px) {
    font-size: ${E.default.fontBaseSpSize}px;
  }
`,O=(0,s.default)(v.default)`
  width: 100%;
`,P=(0,s.default)(v.default)`
  flex-flow: row nowrap;
  width: 100%;
  @media (max-width: ${E.default.spLayoutWidth}px) {
    flex-flow: column nowrap;
  }
`,A=(0,s.default)(v.Main)`
  width: 100%;
  max-width: ${e=>e.maxMain?"100%":`${E.default.appWidth}px`};
  transition: max-width ${E.default.transitionDuration}ms ease 0s;
  @media (max-width: ${E.default.doubleAdvertWidth}px) {
    width: ${e=>e.showAdvert?`calc( 100% - ${E.default.advertWidth+2*E.default.baseMargin}px)`:"100%"};
  }
  @media (max-width: ${E.default.spLayoutWidth}px) {
    width: 100%;
  }
`},5460:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useGlobalContext=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(9425)),c=o(n(3991)),f=o(n(3237)),p=o(n(3814)),h=o(n(2784)),g=o(n(4058)),m=o(n(4022)),b=i(n(4160)),y=o(n(3215)),v=i(n(2740)),w=n(3785),x=o(n(1633)),_=n(8690),E=o(n(6032)),C=l.default.createContext({innerWidth:0,innerHeight:0,isScrollTop:!1,isSpLayout:!1,isSpLayoutStrict:!1,isTransition:!0});t.useGlobalContext=()=>(0,l.useContext)(C),t.default=({isMyPage:e,myUser:t,setMyUser:n,account:r})=>{const[a,i]=(0,l.useState)([]),[o,u]=(0,l.useState)({..._.openModalOptionInit}),[C,P]=(0,l.useState)(!1),[A,T]=(0,l.useState)(!0),[$,I]=(0,l.useState)(!1),[j,D]=(0,l.useState)(),L=location.pathname;return(0,l.useEffect)((()=>{i(window.talknDatas.users.map((e=>new x.default(e))))}),[]),l.default.createElement(S,{className:"Container",width:"100%",flow:"column",alignItems:"center",justifyContent:"center",onClick:e=>{$&&E.default.menuPcWidth<e.clientX&&I(!1)}},l.default.createElement(g.default,{openMenu:$,userTags:j}),l.default.createElement(p.default,{openMenu:$,ch:L,account:r,handleOnClickMenu:e=>{I(!$)}}),l.default.createElement(y.default,{isMyPage:e,openModalOptions:o,user:t,setMyUser:n,setShowProfileModalOption:u}),l.default.createElement(M,{className:"MainContentsBoard",flow:"row wrap",justifyContent:"center"},l.default.createElement(h.default,{ch:L,selectContentMenu:w.selectContentMenuUsers}),l.default.createElement(c.default.Header,{showAdvert:A,handleOnClickControlAdvert:()=>{A?(T(!1),P(!0)):(P(!1),setTimeout((()=>{T(!0)}),E.default.transitionDuration))}}),l.default.createElement(k,{className:"MainContentsWrap",showAdvert:A,alignItems:"flex-start",justifyContent:"center"},l.default.createElement(c.default.Left,{showAdvert:A}),l.default.createElement(O,{className:"MainContents",flow:"column wrap",maxMain:C,showAdvert:A},l.default.createElement(d.default,{key:"Users",title:"Users",content:l.default.createElement(l.default.Fragment,null,a&&a.map(((e,t)=>l.default.createElement(v.A,{key:`UserContent_${t}`,href:`https://${s.default.coverURL}/users/${e.id}/`,display:"block",width:"100%"},l.default.createElement(b.default,{className:"UserIndex",user:e,fullWidth:!1,hoverAnimationType:b.hoverAnimationBoxShadow})))))})),l.default.createElement(c.default.Right,{showAdvert:A})),l.default.createElement(c.default.Under,{showAdvert:!0})),l.default.createElement(m.default,{ch:L}),l.default.createElement(f.default,{ch:L}))};const S=(0,u.default)(v.default)`
  min-width: ${E.default.appMinWidth}px;
  max-width: 100%;
  margin: 0 auto;
  font-size: ${E.default.fontBaseSize}px;
  font-weight: ${E.default.fontBaseWeight};
  color: ${E.default.fontColor};
  * {
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Hiragino Sans', 'Noto Sans CJK JP', 'Original Yu Gothic',
      'Yu Gothic', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Sans Emoji';
    ::selection {
      background: ${E.default.themeColor};
      color: #fff;
    }
  }
  ::-webkit-scrollbar {
    width: 0.5em;
  }
  ::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }
  ::-webkit-scrollbar-thumb {
    background-color: darkgrey;
    outline: 1px solid slategrey;
  }
  ::-webkit-scrollbar:hover {
    width: 0.7em;
  }
  @media (max-width: ${E.default.spLayoutStrictWidth}px) {
    font-size: ${E.default.fontBaseSpSize}px;
  }
`,M=(0,u.default)(v.default)`
  width: 100%;
`,k=(0,u.default)(v.default)`
  flex-flow: row nowrap;
  width: 100%;
  @media (max-width: ${E.default.spLayoutWidth}px) {
    flex-flow: column nowrap;
  }
`,O=(0,u.default)(v.Main)`
  width: 100%;
  max-width: ${e=>e.maxMain?"100%":`${E.default.appWidth}px`};
  transition: max-width ${E.default.transitionDuration}ms ease 0s;
  @media (max-width: ${E.default.doubleAdvertWidth}px) {
    width: ${e=>e.showAdvert?`calc( 100% - ${E.default.advertWidth+2*E.default.baseMargin}px)`:"100%"};
  }
  @media (max-width: ${E.default.spLayoutWidth}px) {
    width: 100%;
  }
`},7303:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(9232);const l=i(n(7294)),u=n(3692),s=o(n(6874)),d=o(n(450)),c=o(n(5460)),f=o(n(1686)),p=n(2740),h=n(1633);t.default=()=>{const[e,t]=(0,l.useState)(!1),[n,r]=(0,l.useState)(h.userInit),a={isMyPage:e,myUser:n,setMyUser:r,account:l.default.createElement(s.default,{myUser:n,setMyUser:r,setIsMyPage:t})};return l.default.createElement(p.FlexesContext.Provider,{value:(0,p.getFlexesValue)()},l.default.createElement(u.BrowserRouter,null,l.default.createElement(u.Routes,null,l.default.createElement(u.Route,{path:"/",element:l.default.createElement(d.default,{...a})}),l.default.createElement(u.Route,{path:"/users",element:l.default.createElement(c.default,{...a})}),l.default.createElement(u.Route,{path:"/users/:userId",element:l.default.createElement(f.default,{...a})}),l.default.createElement(u.Route,{path:"/*/",element:l.default.createElement(d.default,{...a})}))))}},211:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={libName:"flexes",useTheme:"classic",baseMargin:16,basePadding:16,baseFontSize:18}},8522:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.flexesPropsInit=t.flexLayoutCenterPropsInit=t.flexLayoutPropsInit=void 0;const a=r(n(7294)),i=n(107),o=n(3493);t.flexLayoutPropsInit={display:"flex",flow:"row nowrap",alignItems:"flex-start",justifyContent:"flex-start"},t.flexLayoutCenterPropsInit={display:"flex",flow:"row nowrap",alignItems:"center",justifyContent:"center"},t.flexesPropsInit={children:a.default.createElement(a.default.Fragment,null),...i.boxLayoutPropsInit,...t.flexLayoutPropsInit,...o.contentPropsInit}},9487:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.scrollWindowTopAnimation=t.scrollLeftAnimation=void 0;const n=(e,t,n,r)=>t<n?((e,t,n,r)=>(e/=r/2)<1?n/2*e*e+t:-n/2*(--e*(e-2)-1)+t)(e,t,n,r):((e,t,n,r)=>(e/=r/2)<1?t-t/2*e*e+n:t- -t/2*(--e*(e-2)-1)+n)(e,t,n,r);t.scrollLeftAnimation=(e,t,r,a)=>{let i,o=0;const l=e.scrollLeft;let u=0;const s=()=>{o+=20,u=n(o,l,t,3e3),e.scrollLeft=Math.floor(u),o<3e3?i=window.setTimeout(s,20):(clearTimeout(i),a&&a())};r&&r(),s()},t.scrollWindowTopAnimation=(e,t)=>{const r=window.scrollY;let a=0;const i=e-r,o=()=>{a+=20;const e=n(a,r,i,300);window.scrollTo(0,e),a<300?window.setTimeout(o,20):t&&t(!0)};t&&t(!1),o()}},107:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getRadius=t.getBorder=t.getMargin=t.getPadding=t.getHeight=t.getMinMaxSize=t.getWidth=t.getBackground=t.BoxLayoutCss=t.boxLayoutPropsInit=t.sizeDefault=t.sizeHuge=t.sizeLarge=t.sizeMiddle=t.sizeSmall=t.sizeOff=t.radiusInput=t.radiusButton=t.radiusCircle=t.leftline=t.rightline=t.underline=t.topline=t.none=void 0;const a=n(9163),i=r(n(6032));t.none="none",t.topline="topline",t.underline="underline",t.rightline="rightline",t.leftline="leftline",t.radiusCircle="circle",t.radiusButton="button",t.radiusInput="input",t.sizeOff="off",t.sizeSmall="small",t.sizeMiddle="middle",t.sizeLarge="large",t.sizeHuge="huge",t.sizeDefault=!1,t.boxLayoutPropsInit={width:"auto",minWidth:0,maxWidth:"none",height:"auto",upperPadding:t.sizeDefault,sidePadding:t.sizeDefault,bottomPadding:t.sizeDefault,upperMargin:t.sizeDefault,sideMargin:t.sizeDefault,bottomMargin:t.sizeDefault,border:!1,borderRadius:!1,hover:!1,resetOrigin:!1,overflow:"visible"},t.BoxLayoutCss=a.css`
  overflow: ${e=>e.overflow};
  width: ${e=>(0,t.getWidth)(e)};
  min-width: ${e=>(0,t.getMinMaxSize)(e.minWidth)};
  max-width: ${e=>(0,t.getMinMaxSize)(e.maxWidth)};
  height: ${e=>(0,t.getHeight)(e)};
  padding: ${e=>(0,t.getPadding)(e)};
  margin: ${e=>(0,t.getMargin)(e)};
  ${e=>(0,t.getBorder)(e)};
  ${e=>(0,t.getRadius)(e)};
  ${e=>(0,t.getBackground)(e)};
  ${e=>e.resetOrigin?"transform: translate(0px, 0px)":""};
  transition: ${i.default.transitionDuration}ms;
`,t.getBackground=e=>!0===e.hover?`:hover {\n      background: ${i.default.whiteHoverColor};\n    }`:e.hover?`:hover {\n      background: ${e.hover};\n    }`:"",t.getWidth=e=>"auto"===e.width?e.width:e.display&&0===e.display.indexOf("inline")?"auto":e.sideMargin===t.sizeSmall?`calc( 100% - ${2*i.default.baseMargin}px )`:!0===e.sideMargin||e.sideMargin===t.sizeMiddle?`calc( 100% - ${2*i.default.doubleMargin}px )`:e.sideMargin===t.sizeLarge?`calc( 100% - ${2*i.default.tripleMargin}px )`:e.sideMargin===t.sizeHuge?`calc( 100% - ${2*i.default.quadMargin}px )`:e.width,t.getMinMaxSize=e=>"string"==typeof e?e:`${e}px`,t.getHeight=e=>e.height?e.height:"auto",t.getPadding=e=>{let n=0,r=0,a=0,o=0;return e.upperPadding===t.sizeSmall?n=i.default.basePadding:e.upperPadding===t.sizeMiddle||!0===e.upperPadding?n=i.default.doublePadding:e.upperPadding===t.sizeLarge?n=i.default.triplePadding:e.upperPadding===t.sizeHuge&&(n=i.default.quadPadding),e.sidePadding===t.sizeSmall?(r=i.default.basePadding,o=i.default.basePadding):e.sidePadding===t.sizeMiddle||!0===e.sidePadding?(r=i.default.doublePadding,o=i.default.doublePadding):e.sidePadding===t.sizeLarge?(r=i.default.triplePadding,o=i.default.triplePadding):e.sidePadding===t.sizeHuge&&(r=i.default.quadPadding,o=i.default.quadPadding),e.bottomPadding===t.sizeSmall?a=i.default.basePadding:e.bottomPadding===t.sizeMiddle||!0===e.bottomPadding?a=i.default.doublePadding:e.bottomPadding===t.sizeLarge?a=i.default.triplePadding:e.bottomPadding===t.sizeHuge&&(a=i.default.quadPadding),`${n}px ${r}px ${a}px ${o}px`},t.getMargin=e=>{let n=0,r=0,a=0,o=0;return e.upperMargin===t.sizeSmall?n=i.default.basePadding:e.upperMargin===t.sizeMiddle||!0===e.upperMargin?n=i.default.doublePadding:e.upperMargin===t.sizeLarge?n=i.default.triplePadding:e.upperMargin===t.sizeHuge&&(n=i.default.quadPadding),e.sideMargin===t.sizeSmall?(r=i.default.basePadding,o=i.default.basePadding):e.sideMargin===t.sizeMiddle||!0===e.sideMargin?(r=i.default.doublePadding,o=i.default.doublePadding):e.sideMargin===t.sizeLarge?(r=i.default.triplePadding,o=i.default.triplePadding):e.sideMargin===t.sizeHuge&&(r=i.default.quadPadding,o=i.default.quadPadding),e.bottomMargin===t.sizeSmall?a=i.default.basePadding:e.bottomMargin===t.sizeMiddle||!0===e.bottomMargin?a=i.default.doublePadding:e.bottomMargin===t.sizeLarge?a=i.default.triplePadding:e.bottomMargin===t.sizeHuge&&(a=i.default.quadPadding),`${n}px ${r}px ${a}px ${o}px`},t.getBorder=e=>e.border===t.underline?`border-bottom: 1px solid ${i.default.borderColor}`:e.border===t.rightline?`border-right: 1px solid ${i.default.borderColor}`:e.border===t.leftline?`border-left: 1px solid ${i.default.borderColor}`:e.border===t.topline?`border-top: 1px solid ${i.default.borderColor}`:!0===e.border?`border: 1px solid ${i.default.borderColor}`:(!1===e.border||(e.border,t.none),""),t.getRadius=e=>!0===e.borderRadius?`border-radius: ${i.default.borderRadius}px`:e.borderRadius===t.radiusCircle?"border-radius: 50%":e.borderRadius===t.radiusButton?"border-radius: 6px":e.borderRadius===t.radiusInput?"border-radius: 3px":""},3493:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ContentCss=t.contentPropsInit=void 0;const r=n(9163);t.contentPropsInit={color:"inherit",fontSize:"inherit",fontWeight:"inherit",lineHeight:"inherit",letterSpacing:"2px",useSelect:!1,pointer:!1},t.ContentCss=r.css`
  color: ${e=>e.color};
  font-size: ${e=>e.fontSize};
  font-weight: ${e=>e.fontWeight};
  line-height: ${e=>e.lineHeight};
  use-select: ${e=>e.useSelect?"auto":"none"};
  cursor: ${e=>e.pointer?"pointer":"inherit"};
  letter-spacing: ${e=>e.letterSpacing};
`},784:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FlexesBaseCss=t.FlexCss=void 0;const r=n(9163),a=n(107),i=n(3493),o=n(2188);t.FlexCss=r.css`
  display: ${e=>e.display};
  flex-flow: ${e=>e.flow};
  align-items: ${e=>e.alignItems};
  justify-content: ${e=>e.justifyContent};
  user-select: ${e=>e.select?"text":"none"};
`,t.FlexesBaseCss=r.css`
  ${t.FlexCss};
  ${a.BoxLayoutCss};
  ${i.ContentCss};
  ${e=>e.alt&&""!==e.alt&&(0,o.getHoverAltCss)(e)};
`},6824:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onScrollEnd=void 0,t.onScrollEnd=()=>{let e=Number(sessionStorage.getItem("flexesOnScrollEnd"));e=window.setTimeout((()=>{}),200),sessionStorage.setItem("flexesOnScrollEnd",String(e))}},1399:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const u=i(n(7294)),s=l(n(211)),d=n(8522),c=n(1663),f=l(n(9602));o(n(8864),t),o(n(8522),t),o(n(784),t);const{libName:p}=s.default,h=["Img"];let g={Div:()=>{}};Object.keys(f.default).forEach((e=>{Object.keys(f.default[e]).forEach((t=>{const n=f.default[e][t];g[t]=(e,r)=>(h.includes(t)&&delete e.children,u.default.createElement(n,{...e,...r},e.children))}))})),t.default=e=>t=>{const n=(0,c.useFlexesContext)();let r={ref:(0,u.useRef)(),...d.flexesPropsInit,...t,className:t.className?`${p} ${e} ${t.className}`:`${p} ${e}`};const[a,i]=(0,u.useState)({height:r.height}),o=r.overflow.split(" ")[1]&&"scroll"===r.overflow.split(" ")[1],l=r.ref.current;return(0,u.useEffect)((()=>{if(l&&o){const e=l.parentElement;i({...a,height:`${e.clientHeight}px`})}}),[o&&n.innerHeight]),(0,u.useEffect)((()=>{l&&(r.mouted&&r.mouted(l),i({...a,clientWidth:l.clientWidth,clientHeight:l.clientHeight}))}),[l]),g[e]?g[e](r,a):g.Div(r,a)}},2740:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Span=t.Bdo=t.Rp=t.Rt=t.Ruby=t.Mark=t.B=t.I=t.Sup=t.Sub=t.Kbd=t.Samp=t.Var=t.Code=t.Time=t.Abbr=t.Dfn=t.Q=t.Cite=t.S=t.Small=t.Strong=t.Em=t.A=t.P=t.Hr=t.Figcaption=t.Figure=t.Dd=t.Dt=t.Dl=t.Li=t.U=t.Ol=t.Blockquote=t.Pre=t.Div=t.H6=t.H5=t.H4=t.H3=t.H2=t.H1=t.Address=t.Main=t.Footer=t.Header=t.Article=t.Nav=t.Section=void 0,t.Menu=t.Summary=t.Details=t.Meter=t.Progress=t.Output=t.Keygen=t.Textarea=t.Option=t.Optgroup=t.Datalist=t.Select=t.Button=t.Label=t.Legend=t.Fieldset=t.Input=t.Form=t.Th=t.Td=t.Tr=t.Tfoot=t.Thead=t.Tbody=t.Col=t.Colgroup=t.Caption=t.Table=t.Area=t.Map=t.Canvas=t.Source=t.Audio=t.Video=t.Param=t.Object=t.Embed=t.Iframe=t.Img=t.Del=t.Ins=t.Wbr=t.Br=void 0;const o=i(n(1399));a(n(8864),t),a(n(8522),t),a(n(784),t),a(n(107),t),a(n(3493),t),a(n(6824),t),a(n(9487),t),a(n(1663),t),a(n(2188),t),a(n(9602),t),t.Section=(0,o.default)("Section"),t.Nav=(0,o.default)("Nav"),t.Article=(0,o.default)("Article"),t.Header=(0,o.default)("Header"),t.Footer=(0,o.default)("Footer"),t.Main=(0,o.default)("Main"),t.Address=(0,o.default)("Address"),t.H1=(0,o.default)("H1"),t.H2=(0,o.default)("H2"),t.H3=(0,o.default)("H3"),t.H4=(0,o.default)("H4"),t.H5=(0,o.default)("H5"),t.H6=(0,o.default)("H6"),t.Div=(0,o.default)("Div"),t.Pre=(0,o.default)("Pre"),t.Blockquote=(0,o.default)("Blockquote"),t.Ol=(0,o.default)("Ol"),t.U=(0,o.default)("Ul"),t.Li=(0,o.default)("Li"),t.Dl=(0,o.default)("Dl"),t.Dt=(0,o.default)("Dt"),t.Dd=(0,o.default)("Dd"),t.Figure=(0,o.default)("Figure"),t.Figcaption=(0,o.default)("Figcaption"),t.Hr=(0,o.default)("Hr"),t.P=(0,o.default)("P"),t.A=(0,o.default)("A"),t.Em=(0,o.default)("Em"),t.Strong=(0,o.default)("Strong"),t.Small=(0,o.default)("Small"),t.S=(0,o.default)("S"),t.Cite=(0,o.default)("Cite"),t.Q=(0,o.default)("Q"),t.Dfn=(0,o.default)("Dfn"),t.Abbr=(0,o.default)("Abbr"),t.Time=(0,o.default)("Time"),t.Code=(0,o.default)("Code"),t.Var=(0,o.default)("Var"),t.Samp=(0,o.default)("Samp"),t.Kbd=(0,o.default)("Kbd"),t.Sub=(0,o.default)("Sub"),t.Sup=(0,o.default)("Sup"),t.I=(0,o.default)("I"),t.B=(0,o.default)("B"),t.Mark=(0,o.default)("Mark"),t.Ruby=(0,o.default)("Ruby"),t.Rt=(0,o.default)("Rt"),t.Rp=(0,o.default)("Rp"),t.Bdo=(0,o.default)("Bdo"),t.Span=(0,o.default)("Span"),t.Br=(0,o.default)("Br"),t.Wbr=(0,o.default)("Wbr"),t.Ins=(0,o.default)("Ins"),t.Del=(0,o.default)("Del"),t.Img=(0,o.default)("Img"),t.Iframe=(0,o.default)("Iframe"),t.Embed=(0,o.default)("Embed"),t.Object=(0,o.default)("Object"),t.Param=(0,o.default)("Param"),t.Video=(0,o.default)("Video"),t.Audio=(0,o.default)("Audio"),t.Source=(0,o.default)("Source"),t.Canvas=(0,o.default)("Canvas"),t.Map=(0,o.default)("Map"),t.Area=(0,o.default)("Area"),t.Table=(0,o.default)("Table"),t.Caption=(0,o.default)("Caption"),t.Colgroup=(0,o.default)("Colgroup"),t.Col=(0,o.default)("Col"),t.Tbody=(0,o.default)("Tbody"),t.Thead=(0,o.default)("Thead"),t.Tfoot=(0,o.default)("Tfoot"),t.Tr=(0,o.default)("Tr"),t.Td=(0,o.default)("Td"),t.Th=(0,o.default)("Th"),t.Form=(0,o.default)("Form"),t.Input=(0,o.default)("Input"),t.Fieldset=(0,o.default)("Fieldset"),t.Legend=(0,o.default)("Legend"),t.Label=(0,o.default)("Label"),t.Button=(0,o.default)("Button"),t.Select=(0,o.default)("Select"),t.Datalist=(0,o.default)("Datalist"),t.Optgroup=(0,o.default)("Optgroup"),t.Option=(0,o.default)("Option"),t.Textarea=(0,o.default)("Textarea"),t.Keygen=(0,o.default)("Keygen"),t.Output=(0,o.default)("Output"),t.Progress=(0,o.default)("Progress"),t.Meter=(0,o.default)("Meter"),t.Details=(0,o.default)("Details"),t.Summary=(0,o.default)("Summary"),t.Menu=(0,o.default)("Menu"),t.default=(0,o.default)("Div")},1663:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getFlexesValue=t.useFlexesContext=t.FlexesContext=t.flexesContextinit=void 0;const l=i(n(7294)),u=o(n(6032));t.flexesContextinit={innerWidth:0,innerHeight:0,isScrollTop:!1,isSpLayout:!1,isSpLayoutStrict:!1,isTransition:!0},t.FlexesContext=l.default.createContext(t.flexesContextinit),t.useFlexesContext=()=>(0,l.useContext)(t.FlexesContext),t.getFlexesValue=()=>{const[e,n]=(0,l.useState)(t.flexesContextinit);return(0,l.useEffect)((()=>{const e=()=>{n({innerWidth:window.innerWidth,innerHeight:window.innerHeight,isScrollTop:0===window.scrollY,isSpLayout:window.innerWidth<=u.default.spLayoutWidth,isSpLayoutStrict:window.innerWidth<=u.default.spLayoutStrictWidth,isTransition:!1})};return window.addEventListener("resize",e),window.addEventListener("scroll",e),e(),()=>{window.removeEventListener("resize",e),window.removeEventListener("scroll",e)}}),[]),e}},2188:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getHoverAltCss=void 0;const a=n(9163),i=r(n(6032));t.getHoverAltCss=e=>{if(e.alt){let t,n,r,o,l;if("string"==typeof e.alt)t="before",n="bottom: 100%",r="left: 0",o=e.alt,l=-8;else{if("string"!=typeof e.alt.label||!e.alt.type||""===e.alt.type)return"";t=0===e.alt.type.indexOf("upper")?"before":"after",n="before"===t?"bottom: 100%":"top: 100%",r=e.alt.type.indexOf("right")>0?"right: 0":"left: 0",o=e.alt.label,l="before"===t?-8:8}return""===o?"":a.css`
      transform: translate(0, 0);
      :${t} {
        position: absolute;
        ${n};
        ${r};
        display: contents;
        align-items: center;
        justify-content: flex-start;
        width: auto;
        height: 0;
        min-height: 0;
        max-height: 0;
        padding: 8px 16px;
        margin: 0 8px;
        background: rgba(0, 0, 0, 0.6);
        color: #fff;
        font-size: 75%;
        box-shadow: none;
        border-radius: 8px;
        content: '';
        text-align: left;
        white-space: normal;
        transition: ${i.default.transitionDuration}ms;
        transform: translate(0, 0);
      }
      :hover {
        :${t} {
          position: absolute;
          ${n};
          ${r};
          display: flex;
          align-items: center;
          justify-content: flex-start;
          width: auto;
          height: auto;
          min-height: auto;
          max-height: unset;
          padding: 8px 16px;
          margin: 0 8px;
          background: rgba(0, 0, 0, 0.6);
          color: #fff;
          font-size: 75%;
          box-shadow: ${i.default.shadowHorizonBase};
          border-radius: 8px;
          content: '${o}';
          text-align: left;
          white-space: normal;
          transition: ${i.default.transitionDuration}ms;
          transform: translate(0px, ${l}px);
        }
      }
    `}return""}},5742:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Area=t.Map=t.Canvas=t.Source=t.Audio=t.Video=t.Param=t.Object=t.Embed=t.Iframe=t.Img=void 0;const a=r(n(9163)),i=n(784);t.Img=a.default.img`
  ${i.FlexesBaseCss};
`,t.Iframe=a.default.iframe`
  ${i.FlexesBaseCss};
`,t.Embed=a.default.embed`
  ${i.FlexesBaseCss};
`,t.Object=a.default.object`
  ${i.FlexesBaseCss};
`,t.Param=a.default.param`
  ${i.FlexesBaseCss};
`,t.Video=a.default.video`
  ${i.FlexesBaseCss};
`,t.Audio=a.default.audio`
  ${i.FlexesBaseCss};
`,t.Source=a.default.source`
  ${i.FlexesBaseCss};
`,t.Canvas=a.default.canvas`
  ${i.FlexesBaseCss};
`,t.Map=a.default.map`
  ${i.FlexesBaseCss};
`,t.Area=a.default.area`
  ${i.FlexesBaseCss};
`,t.default={Img:t.Img,Iframe:t.Iframe,Embed:t.Embed,Object:t.Object,Param:t.Param,Video:t.Video,Audio:t.Audio,Source:t.Source,Canvas:t.Canvas,Map:t.Map,Area:t.Area}},9618:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Meter=t.Progress=t.Output=t.Keygen=t.Textarea=t.Option=t.Optgroup=t.Datalist=t.Select=t.Button=t.Label=t.Legend=t.Fieldset=t.Input=t.Form=void 0;const a=r(n(9163)),i=n(784);t.Form=a.default.form`
  ${i.FlexesBaseCss};
`,t.Input=a.default.input`
  ${i.FlexesBaseCss};
`,t.Fieldset=a.default.fieldset`
  ${i.FlexesBaseCss};
`,t.Legend=a.default.legend`
  ${i.FlexesBaseCss};
`,t.Label=a.default.label`
  ${i.FlexesBaseCss};
`,t.Button=a.default.button`
  ${i.FlexesBaseCss};
`,t.Select=a.default.select`
  ${i.FlexesBaseCss};
`,t.Datalist=a.default.datalist`
  ${i.FlexesBaseCss};
`,t.Optgroup=a.default.optgroup`
  ${i.FlexesBaseCss};
`,t.Option=a.default.option`
  ${i.FlexesBaseCss};
`,t.Textarea=a.default.textarea`
  ${i.FlexesBaseCss};
`,t.Keygen=a.default.keygen`
  ${i.FlexesBaseCss};
`,t.Output=a.default.output`
  ${i.FlexesBaseCss};
`,t.Progress=a.default.progress`
  ${i.FlexesBaseCss};
`,t.Meter=a.default.meter`
  ${i.FlexesBaseCss};
`,t.default={Form:t.Form,Input:t.Input,Fieldset:t.Fieldset,Legend:t.Legend,Label:t.Label,Button:t.Button,Select:t.Select,Datalist:t.Datalist,Optgroup:t.Optgroup,Option:t.Option,Textarea:t.Textarea,Keygen:t.Keygen,Output:t.Output,Progress:t.Progress,Meter:t.Meter}},8723:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Hr=t.Figcaption=t.Figure=t.Dd=t.Dt=t.Dl=t.Li=t.Ul=t.Ol=t.Blockquote=t.Pre=t.Div=void 0;const a=r(n(9163)),i=n(784);t.Div=a.default.div`
  ${i.FlexesBaseCss};
`,t.Pre=a.default.pre`
  ${i.FlexesBaseCss};
`,t.Blockquote=a.default.blockquote`
  ${i.FlexesBaseCss};
`,t.Ol=a.default.ol`
  ${i.FlexesBaseCss};
`,t.Ul=a.default.ul`
  ${i.FlexesBaseCss};
`,t.Li=a.default.li`
  ${i.FlexesBaseCss};
`,t.Dl=a.default.dl`
  ${i.FlexesBaseCss};
`,t.Dt=a.default.dt`
  ${i.FlexesBaseCss};
`,t.Dd=a.default.dd`
  ${i.FlexesBaseCss};
`,t.Figure=a.default.figure`
  ${i.FlexesBaseCss};
`,t.Figcaption=a.default.figcaption`
  ${i.FlexesBaseCss};
`,t.Hr=a.default.hr`
  ${i.FlexesBaseCss};
`,t.default={Div:t.Div,Pre:t.Pre,Blockquote:t.Blockquote,Ol:t.Ol,Ul:t.Ul,Li:t.Li,Dl:t.Dl,Dt:t.Dt,Dd:t.Dd,Figure:t.Figure,Figcaption:t.Figcaption,Hr:t.Hr}},1674:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.H6=t.H5=t.H4=t.H3=t.H2=t.H1=void 0;const a=r(n(9163)),i=n(784);t.H1=a.default.h1`
  ${i.FlexesBaseCss};
  font-size: 125%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.H2=a.default.h2`
  ${i.FlexesBaseCss};
  font-size: 100%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.H3=a.default.h3`
  ${i.FlexesBaseCss};
  font-size: 120%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.H4=a.default.h4`
  ${i.FlexesBaseCss};
  font-size: 120%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.H5=a.default.h5`
  ${i.FlexesBaseCss};
  font-size: 120%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.H6=a.default.h6`
  ${i.FlexesBaseCss};
  font-size: 120%;
  font-weight: 200;
  line-height: 24px;
  color: inherit;
`,t.default={H1:t.H1,H2:t.H2,H3:t.H3,H4:t.H4,H5:t.H5,H6:t.H6}},9602:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(n(5742)),l=i(n(9618)),u=i(n(8723)),s=i(n(1674)),d=i(n(8513)),c=i(n(4887)),f=i(n(3438)),p=i(n(7682));a(n(5742),t),a(n(9618),t),a(n(8723),t),a(n(1674),t),a(n(8513),t),a(n(4887),t),a(n(3438),t),a(n(7682),t),t.default={embeds:o.default,forms:l.default,groups:u.default,heads:s.default,interactive:d.default,sections:c.default,tables:f.default,texts:p.default}},8513:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Menu=t.Summary=t.Details=void 0;const a=r(n(9163)),i=n(784);t.Details=a.default.details`
  ${i.FlexesBaseCss};
`,t.Summary=a.default.summary`
  ${i.FlexesBaseCss};
`,t.Menu=a.default.menu`
  ${i.FlexesBaseCss};
`,t.default={Details:t.Details,Summary:t.Summary,Menu:t.Menu}},4887:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Address=t.Main=t.Footer=t.Header=t.Article=t.Nav=t.Section=void 0;const a=r(n(9163)),i=n(784);t.Section=a.default.section`
  ${i.FlexesBaseCss};
`,t.Nav=a.default.nav`
  ${i.FlexesBaseCss};
`,t.Article=a.default.article`
  ${i.FlexesBaseCss};
`,t.Header=a.default.header`
  ${i.FlexesBaseCss};
`,t.Footer=a.default.footer`
  ${i.FlexesBaseCss};
`,t.Main=a.default.main`
  ${i.FlexesBaseCss};
`,t.Address=a.default.address`
  ${i.FlexesBaseCss};
`,t.default={Section:t.Section,Nav:t.Nav,Article:t.Article,Header:t.Header,Footer:t.Footer,Main:t.Main,Address:t.Address}},3438:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Th=t.Td=t.Tr=t.Tfoot=t.Thead=t.Tbody=t.Col=t.Colgroup=t.Caption=t.Table=void 0;const a=r(n(9163)),i=n(784);t.Table=a.default.table`
  ${i.FlexesBaseCss};
`,t.Caption=a.default.caption`
  ${i.FlexesBaseCss};
`,t.Colgroup=a.default.colgroup`
  ${i.FlexesBaseCss};
`,t.Col=a.default.col`
  ${i.FlexesBaseCss};
`,t.Tbody=a.default.tbody`
  ${i.FlexesBaseCss};
`,t.Thead=a.default.thead`
  ${i.FlexesBaseCss};
`,t.Tfoot=a.default.tfoot`
  ${i.FlexesBaseCss};
`,t.Tr=a.default.tr`
  ${i.FlexesBaseCss};
`,t.Td=a.default.td`
  ${i.FlexesBaseCss};
`,t.Th=a.default.th`
  ${i.FlexesBaseCss};
`,t.default={Table:t.Table,Caption:t.Caption,Colgroup:t.Colgroup,Col:t.Col,Tbody:t.Tbody,Thead:t.Thead,Tfoot:t.Tfoot,Tr:t.Tr,Td:t.Td,Th:t.Th}},7682:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Del=t.Ins=t.Wbr=t.Br=t.Span=t.Bdo=t.Rp=t.Rt=t.Ruby=t.Mark=t.B=t.I=t.Sup=t.Sub=t.Kbd=t.Samp=t.Var=t.Code=t.Time=t.Abbr=t.Dfn=t.Q=t.Cite=t.S=t.Small=t.Strong=t.Em=t.A=t.P=void 0;const a=r(n(9163)),i=n(784);t.P=a.default.p`
  ${i.FlexesBaseCss};
`,t.A=a.default.a`
  ${i.FlexesBaseCss};
  text-decoration: none;
`,t.Em=a.default.em`
  ${i.FlexesBaseCss};
`,t.Strong=a.default.strong`
  ${i.FlexesBaseCss};
`,t.Small=a.default.small`
  ${i.FlexesBaseCss};
`,t.S=a.default.s`
  ${i.FlexesBaseCss};
`,t.Cite=a.default.cite`
  ${i.FlexesBaseCss};
`,t.Q=a.default.q`
  ${i.FlexesBaseCss};
`,t.Dfn=a.default.dfn`
  ${i.FlexesBaseCss};
`,t.Abbr=a.default.abbr`
  ${i.FlexesBaseCss};
`,t.Time=a.default.time`
  ${i.FlexesBaseCss};
`,t.Code=a.default.code`
  ${i.FlexesBaseCss};
`,t.Var=a.default.var`
  ${i.FlexesBaseCss};
`,t.Samp=a.default.samp`
  ${i.FlexesBaseCss};
`,t.Kbd=a.default.kbd`
  ${i.FlexesBaseCss};
`,t.Sub=a.default.sub`
  ${i.FlexesBaseCss};
`,t.Sup=a.default.sup`
  ${i.FlexesBaseCss};
`,t.I=a.default.i`
  ${i.FlexesBaseCss};
`,t.B=a.default.b`
  ${i.FlexesBaseCss};
`,t.Mark=a.default.mark`
  ${i.FlexesBaseCss};
`,t.Ruby=a.default.ruby`
  ${i.FlexesBaseCss};
`,t.Rt=a.default.rt`
  ${i.FlexesBaseCss};
`,t.Rp=a.default.rp`
  ${i.FlexesBaseCss};
`,t.Bdo=a.default.bdo`
  ${i.FlexesBaseCss};
`,t.Span=a.default.span`
  ${i.FlexesBaseCss};
`,t.Br=a.default.br`
  ${i.FlexesBaseCss};
`,t.Wbr=a.default.wbr`
  ${i.FlexesBaseCss};
`,t.Ins=a.default.ins`
  ${i.FlexesBaseCss};
`,t.Del=a.default.del`
  ${i.FlexesBaseCss};
`,t.default={P:t.P,A:t.A,Em:t.Em,Strong:t.Strong,Small:t.Small,S:t.S,Cite:t.Cite,Q:t.Q,Dfn:t.Dfn,Abbr:t.Abbr,Time:t.Time,Code:t.Code,Var:t.Var,Samp:t.Samp,Kbd:t.Kbd,Sub:t.Sub,Sup:t.Sup,I:t.I,B:t.B,Mark:t.Mark,Ruby:t.Ruby,Rt:t.Rt,Rp:t.Rp,Bdo:t.Bdo,Span:t.Span,Br:t.Br,Wbr:t.Wbr,Ins:t.Ins,Del:t.Del}},8864:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},9461:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{toJson(){return JSON.parse(JSON.stringify(this))}isFilled(){return Boolean(Object.values(this).findIndex((e=>void 0===e||""===e)))}}},4065:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AccountMenus=t.AccountMenusLogout=t.AccountMenusSelectAccount=t.AccountMenusMyMenu=void 0,t.AccountMenusMyMenu="myMenu",t.AccountMenusSelectAccount="selectAccount",t.AccountMenusLogout="logout",t.AccountMenus=[{key:t.AccountMenusMyMenu,label:"MY PAGE"},{key:t.AccountMenusSelectAccount,label:"ACCOUNTS"},{key:t.AccountMenusLogout,label:"LOGOUT"}]},3785:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectContentMenuDefault=t.selectContentMenuUsers=t.selectContentMenuStories=t.selectContentMenuBusiness=t.selectContentMenuConfig=t.selectContentMenuCreators=t.selectContentMenuLivePages=void 0,t.selectContentMenuLivePages="livePages",t.selectContentMenuCreators="stories",t.selectContentMenuConfig="config",t.selectContentMenuBusiness="business",t.selectContentMenuStories="stories",t.selectContentMenuUsers="users",t.selectContentMenuDefault=t.selectContentMenuBusiness},1633:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userHasSelfTagsInit=t.userInit=void 0;const a=r(n(300)),i=r(n(9461));class o extends i.default{constructor(e){super(),this.id=this.resolveId(e),this.name=e&&e.name?e.name:"",this.email=e&&e.email?e.email:"",this.bg=e&&e.bg?e.bg:"",this.icon=e&&e.icon?e.icon:"",this.snsIcon=e&&e.snsIcon?e.snsIcon:"",this.birthday=e&&e.birthday?e.birthday:a.default.defaultBirthdayUnixtime,this.languages=e&&e.languages?e.languages:[],this.sexes=e&&e.sexes?e.sexes:[],this.description=e&&e.description?e.description:"Self Introduction Text......",this.hasSelfTags=e&&e.hasSelfTags?e.hasSelfTags:t.userHasSelfTagsInit}resolveId(e){if(e){if(e.id)return e.id;if(e._id)return e._id}return""}}t.default=o,t.userInit=new o,t.userHasSelfTagsInit={investor:!1,founder:!1,member:!1}},6753:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixFounderValuesInit=void 0;const a=r(n(300));t.fixFounderValuesInit={sexes:[],languages:[],birthday:a.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",startupSeriesId:"",year:0}},4341:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixInvestorValuesInit=void 0;const a=r(n(300));t.fixInvestorValuesInit={sexes:[],languages:[],birthday:a.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",startupSeriesId:"",year:0}},2523:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixMemberValuesInit=void 0;const a=r(n(300));t.fixMemberValuesInit={sexes:[],languages:[],birthday:a.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",jobParentId:"",jobId:"",year:0}},2211:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fixProfileValuesInit=t.defaultLanguages=t.allLanguage=t.sexesInit=t.defaultSexes=t.allSex=void 0,t.allSex={uniqueId:"All",ja:"全て",en:"All"},t.defaultSexes=[{uniqueId:"1",ja:"男",en:"Man"},{uniqueId:"2",ja:"女",en:"Woman"}],t.sexesInit=["1","2"],t.allLanguage={uniqueId:"All",ja:"全て",en:"All"},t.defaultLanguages=[{uniqueId:"1",ja:"英語",en:"English"},{uniqueId:"2",ja:"中国語",en:"German"},{uniqueId:"3",ja:"日本語",en:"Japanease"},{uniqueId:"4",ja:"イギリス語",en:"British"},{uniqueId:"5",ja:"ヒンドゥー語",en:"Hindu"}],t.fixProfileValuesInit={sexes:["1","2"],languages:["1","2","3","4","5"]}},1134:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fixStoryValuesInit=void 0,t.fixStoryValuesInit={storyId:""}},8690:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.openModalOptionInit=t.tagTypes=t.tagStory=t.tagMember=t.tagFounder=t.tagInvestor=t.tagModeEdit=t.tagModeView=t.tagParentTypes=t.tagParentStory=t.tagParentSearch=t.tagParentSelf=void 0;const a=r(n(300));t.tagParentSelf="self",t.tagParentSearch="search",t.tagParentStory="story",t.tagParentTypes=[t.tagParentSelf,t.tagParentSearch,t.tagParentStory],t.tagModeView="view",t.tagModeEdit="edit",t.tagInvestor="investor",t.tagFounder="founder",t.tagMember="member",t.tagStory="story",t.tagTypes=[t.tagInvestor,t.tagFounder,t.tagMember,t.tagStory],t.openModalOptionInit={tagId:"",userId:"",isEditable:!1,tagParentType:"",tagType:"",index:void 0,bg:"",icon:"",languages:[],sexes:[],birthday:a.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",jobParentId:"",jobCategoryId:"",jobId:"",startupSeriesId:"",storyId:"",year:0},t.default={}},5778:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.transitionDuration=void 0,t.transitionDuration=300,t.default={transitionDuration:t.transitionDuration}},4014:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.borderRadius=t.lineHeight=t.fontWeight=t.fontSize=t.fontBaseWeight=t.fontBaseSpSize=t.fontBaseSize=t.shadowSize=t.sepPadding=t.sexPadding=t.quintPadding=t.quadPadding=t.triplePadding=t.doublePadding=t.basePadding=t.sepMargin=t.sexMargin=t.quintMargin=t.quadMargin=t.tripleMargin=t.doubleMargin=t.baseMargin=t.sepSize=t.sixSize=t.quintSize=t.quadSize=t.tripleSize=t.doubleSize=t.baseSize=void 0,t.baseSize=8,t.doubleSize=2*t.baseSize,t.tripleSize=3*t.baseSize,t.quadSize=4*t.baseSize,t.quintSize=5*t.baseSize,t.sixSize=6*t.baseSize,t.sepSize=7*t.baseSize,t.baseMargin=t.baseSize,t.doubleMargin=2*t.baseMargin,t.tripleMargin=3*t.baseMargin,t.quadMargin=4*t.baseMargin,t.quintMargin=5*t.baseMargin,t.sexMargin=6*t.baseMargin,t.sepMargin=7*t.baseMargin,t.basePadding=t.baseSize,t.doublePadding=2*t.basePadding,t.triplePadding=3*t.basePadding,t.quadPadding=4*t.basePadding,t.quintPadding=5*t.baseMargin,t.sexPadding=6*t.baseMargin,t.sepPadding=7*t.baseMargin,t.shadowSize=10,t.fontBaseSize=20,t.fontBaseSpSize=16,t.fontBaseWeight=200,t.fontSize="100%",t.fontWeight="200",t.lineHeight="30px",t.borderRadius=t.doubleSize,t.default={baseSize:t.baseSize,doubleSize:t.doubleSize,tripleSize:t.tripleSize,quadSize:t.quadSize,quintSize:t.quintSize,sixSize:t.sixSize,sepSize:t.sepSize,baseMargin:t.baseMargin,doubleMargin:t.doubleMargin,tripleMargin:t.tripleMargin,quadMargin:t.quadMargin,quintMargin:t.quintMargin,sexMargin:t.sexMargin,sepMargin:t.sepMargin,basePadding:t.basePadding,doublePadding:t.doublePadding,triplePadding:t.triplePadding,quadPadding:t.quadPadding,quintPadding:t.quintPadding,sexPadding:t.sexPadding,sepPadding:t.sepPadding,shadowSize:t.shadowSize,fontBaseSize:t.fontBaseSize,fontBaseSpSize:t.fontBaseSpSize,fontBaseWeight:t.fontBaseWeight,fontSize:t.fontSize,fontWeight:t.fontWeight,lineHeight:t.lineHeight,borderRadius:t.borderRadius}},2404:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fullBackgroundColor=t.saveCheckColor=t.saveColor=t.articleBgHoverColor=t.articleBgColor=t.advertHoverColor=t.advertColor=t.tagBgColor=t.whiteHoverColor=t.componentBgColor=t.borderColor=t.markupColor=t.fontDarkColor=t.fontColor=t.fontLightColor=t.blackColor=t.darkerColor=t.darkColor=t.baseColor=t.brightColor=t.brighterColor=t.whiteColor=t.coldColor=t.flatColor=t.hotColor=t.themeColor=t.coldRgb=t.flatRgb=t.hotRgb=t.themeRgb=t.deepDarkAlpha=t.darkAlpha=t.baseAlpha=t.brightAlpha=t.blackRgb=t.darkerRgb=t.darkRgb=t.baseRgb=t.brightRgb=t.brighterRgb=t.whiteRgb=t.darkerDepth=t.darkDepth=t.baseTension=t.getRgbaColor=t.getRgbColor=void 0,t.getRgbColor=e=>`rgb(${e})`,t.getRgbaColor=(e,n=t.baseAlpha)=>`rgba(${e}, ${n})`,t.baseTension=100,t.darkDepth=20,t.darkerDepth=2*t.darkDepth,t.whiteRgb="255, 255, 255",t.brighterRgb="240, 240, 240",t.brightRgb=`${2*t.baseTension}, ${2*t.baseTension}, ${2*t.baseTension}`,t.baseRgb=`${t.baseTension}, ${t.baseTension}, ${t.baseTension}`,t.darkRgb=`${t.baseTension-t.darkDepth}, ${t.baseTension-t.darkDepth}, ${t.baseTension-t.darkDepth}`,t.darkerRgb=`${t.baseTension-t.darkerDepth}, ${t.baseTension-t.darkerDepth}, ${t.baseTension-t.darkerDepth}`,t.blackRgb="0, 0, 0",t.brightAlpha="0.96",t.baseAlpha="0.9",t.darkAlpha="0.6",t.deepDarkAlpha="0.3",t.themeRgb="79, 174, 159",t.hotRgb=`255, ${t.baseTension}, 0`,t.flatRgb=`${t.baseTension}, ${t.baseTension}, ${t.baseTension}`,t.coldRgb="0, 150, 255",t.themeColor=(0,t.getRgbaColor)(t.themeRgb),t.hotColor=(0,t.getRgbaColor)(t.hotRgb),t.flatColor=(0,t.getRgbaColor)(t.flatRgb),t.coldColor=(0,t.getRgbaColor)(t.coldRgb),t.whiteColor=(0,t.getRgbaColor)(t.whiteRgb),t.brighterColor=(0,t.getRgbaColor)(t.brighterRgb),t.brightColor=(0,t.getRgbaColor)(t.brightRgb),t.baseColor=(0,t.getRgbaColor)(t.baseRgb),t.darkColor=(0,t.getRgbaColor)(t.darkRgb),t.darkerColor=(0,t.getRgbaColor)(t.darkerRgb),t.blackColor=(0,t.getRgbaColor)(t.blackRgb),t.fontLightColor=(0,t.getRgbColor)(t.brighterRgb),t.fontColor=(0,t.getRgbColor)(t.baseRgb),t.fontDarkColor=(0,t.getRgbColor)(t.darkerRgb),t.markupColor=(0,t.getRgbColor)(t.brighterRgb),t.borderColor=(0,t.getRgbColor)(t.brightRgb),t.componentBgColor=(0,t.getRgbaColor)(t.whiteRgb),t.whiteHoverColor=(0,t.getRgbaColor)(t.brightRgb,t.darkAlpha),t.tagBgColor=(0,t.getRgbaColor)(t.darkRgb),t.advertColor=(0,t.getRgbaColor)(t.brightRgb),t.advertHoverColor=(0,t.getRgbaColor)(t.darkRgb),t.articleBgColor=(0,t.getRgbaColor)(t.brightRgb),t.articleBgHoverColor=(0,t.getRgbaColor)(t.darkRgb),t.saveColor=(0,t.getRgbaColor)(t.hotRgb),t.saveCheckColor=(0,t.getRgbaColor)(t.themeRgb),t.fullBackgroundColor=(0,t.getRgbaColor)(t.blackRgb,t.deepDarkAlpha),t.default={baseTension:t.baseTension,darkDepth:t.darkDepth,darkerDepth:t.darkerDepth,whiteRgb:t.whiteRgb,brighterRgb:t.brighterRgb,brightRgb:t.brightRgb,baseRgb:t.baseRgb,darkRgb:t.darkRgb,darkerRgb:t.darkerRgb,blackRgb:t.blackRgb,brightAlpha:t.brightAlpha,baseAlpha:t.baseAlpha,darkAlpha:t.darkAlpha,deepDarkAlpha:t.deepDarkAlpha,themeRgb:t.themeRgb,hotRgb:t.hotRgb,flatRgb:t.flatRgb,coldRgb:t.coldRgb,themeColor:t.themeColor,hotColor:t.hotColor,flatColor:t.flatColor,coldColor:t.coldColor,whiteColor:t.whiteColor,brighterColor:t.brighterColor,brightColor:t.brightColor,baseColor:t.baseColor,darkColor:t.darkColor,darkerColor:t.darkerColor,blackColor:t.blackColor,fontLightColor:t.fontLightColor,fontColor:t.fontColor,fontDarkColor:t.fontDarkColor,markupColor:t.markupColor,borderColor:t.borderColor,componentBgColor:t.componentBgColor,whiteHoverColor:t.whiteHoverColor,advertColor:t.advertColor,advertHoverColor:t.advertHoverColor,articleBgColor:t.articleBgColor,articleBgHoverColor:t.articleBgHoverColor,tagBgColor:t.tagBgColor,saveColor:t.saveColor,saveCheckColor:t.saveCheckColor,fullBackgroundColor:t.fullBackgroundColor,getRgbColor:t.getRgbColor,getRgbaColor:t.getRgbaColor}},8469:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.getBackdropFilter=t.beforeBlur=t.alphaLightBgSet=t.alphaBgSet=void 0;const o=n(5778),l=i(n(2404));t.alphaBgSet=`\n    background: ${(0,l.getRgbaColor)(l.default.whiteRgb)};\n    backdrop-filter: blur(5px);\n`,t.alphaLightBgSet=`\n    background: ${(0,l.getRgbaColor)(l.default.whiteRgb)};\n    backdrop-filter: blur(2.5px);\n`,t.beforeBlur=`\n    background-color: rgba(0, 0, 0, 0.3);\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    content: ' ';\n    backdrop-filter: ${e=>(0,t.getBackdropFilter)(e)};\n    transition: ${o.transitionDuration}ms;\n`,t.getBackdropFilter=e=>e.isHover?"blur(2px) brightness(0.7)":"blur(0) brightness(1)",t.default={alphaBgSet:t.alphaBgSet,alphaLightBgSet:t.alphaLightBgSet,beforeBlur:t.beforeBlur,getBackdropFilter:t.getBackdropFilter}},6032:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getTrimUnitNumber=void 0;const a=r(n(5778)),i=r(n(4014)),o=r(n(2404)),l=r(n(8469)),u=r(n(1932)),s=r(n(2893)),d=r(n(294));t.getTrimUnitNumber=e=>Number(e.replace("px","")),t.default={zIndex:d.default,...a.default,...u.default,...o.default,...l.default,...i.default,...s.default,getTrimUnitNumber:t.getTrimUnitNumber}},1932:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.imageWidth=t.articleShadowColor=t.articleOpenScale=t.articleOpenHeight=t.articleCloseHeight=t.articleTotalWidth=t.articleWidth=t.articleOrderHeight=t.eyeCatchMinHeightPxValue=t.eyeCatchVhValue=t.eyeCatchVwValue=t.doubleAdvertWidth=t.spLayoutWidth=t.spLayoutStrictWidthPx=t.spLayoutStrictWidth=t.advertWidth=t.appWidth=t.appMinWidth=t.appMenuMinWidth=t.appHeaderHeight=t.baseHeight=t.menuTabWidth=t.menuPcWidth=t.sectionMarginColumn=t.sectionPadding=void 0;const a=r(n(4014));t.sectionPadding=a.default.doubleSize,t.sectionMarginColumn=a.default.quadMargin,t.menuPcWidth=375,t.menuTabWidth=430,t.baseHeight=60,t.appHeaderHeight=t.baseHeight,t.appMenuMinWidth=359,t.appMinWidth=375,t.appWidth=1200,t.advertWidth=200,t.spLayoutStrictWidth=680,t.spLayoutStrictWidthPx=`${t.spLayoutStrictWidth}px`,t.spLayoutWidth=980,t.doubleAdvertWidth=t.appWidth+1.5*t.advertWidth,t.eyeCatchVwValue=100,t.eyeCatchVhValue=20,t.eyeCatchMinHeightPxValue=280,t.articleOrderHeight=290,t.articleWidth=300,t.articleTotalWidth=t.articleWidth+2*a.default.baseSize,t.articleCloseHeight=260,t.articleOpenHeight="auto",t.articleOpenScale=1.05,t.articleShadowColor="#444",t.imageWidth=200,t.default={sectionPadding:t.sectionPadding,sectionMarginColumn:t.sectionMarginColumn,menuPcWidth:t.menuPcWidth,menuTabWidth:t.menuTabWidth,baseHeight:t.baseHeight,appHeaderHeight:t.appHeaderHeight,appMenuMinWidth:t.appMenuMinWidth,appMinWidth:t.appMinWidth,appWidth:t.appWidth,advertWidth:t.advertWidth,spLayoutStrictWidth:t.spLayoutStrictWidth,spLayoutStrictWidthPx:t.spLayoutStrictWidthPx,spLayoutWidth:t.spLayoutWidth,doubleAdvertWidth:t.doubleAdvertWidth,eyeCatchVwValue:t.eyeCatchVwValue,eyeCatchVhValue:t.eyeCatchVhValue,eyeCatchMinHeightPxValue:t.eyeCatchMinHeightPxValue,articleOrderHeight:t.articleOrderHeight,articleWidth:t.articleWidth,articleTotalWidth:t.articleTotalWidth,articleCloseHeight:t.articleCloseHeight,articleOpenHeight:t.articleOpenHeight,articleOpenScale:t.articleOpenScale,articleShadowColor:t.articleShadowColor,imageWidth:t.imageWidth}},2893:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.shadowHorizonDark=t.shadowHorizonBase=t.shadowHorizonBright=t.shadowHorizonBrighter=t.shadowCircleDark=t.shadowCircleBase=t.shadowCircleBright=t.shadowCircleBrighter=t.baseTextShadow=t.shadowSize=void 0;const o=i(n(2404));t.shadowSize=10;const l=`0 0 ${t.shadowSize}px 0`,u=`0 ${t.shadowSize/2}px ${t.shadowSize}px 0`;t.baseTextShadow=`1px 1px ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.shadowCircleBrighter=`${l} ${(0,o.getRgbColor)(o.default.brighterRgb)}`,t.shadowCircleBright=`${l} ${(0,o.getRgbColor)(o.default.brightRgb)}`,t.shadowCircleBase=`${l} ${(0,o.getRgbColor)(o.default.baseRgb)}`,t.shadowCircleDark=`${l} ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.shadowHorizonBrighter=`${u} ${(0,o.getRgbColor)(o.default.brighterRgb)}`,t.shadowHorizonBright=`${u} ${(0,o.getRgbColor)(o.default.brightRgb)}`,t.shadowHorizonBase=`${u} ${(0,o.getRgbColor)(o.default.baseRgb)}`,t.shadowHorizonDark=`${u} ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.default={shadowSize:t.shadowSize,baseTextShadow:t.baseTextShadow,shadowCircleBrighter:t.shadowCircleBrighter,shadowCircleBright:t.shadowCircleBright,shadowCircleBase:t.shadowCircleBase,shadowCircleDark:t.shadowCircleDark,shadowHorizonBrighter:t.shadowHorizonBrighter,shadowHorizonBright:t.shadowHorizonBright,shadowHorizonBase:t.shadowHorizonBase,shadowHorizonDark:t.shadowHorizonDark}},294:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zIndex=void 0,t.zIndex={header:1e3,sideMenu:980,toTop:101,contentsMenu:100,eyeCatch:100},t.default=t.zIndex},9293:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(300)),i=r(n(1665)),o=r(n(8957)),l=String(window.location.href),u=l.split("/"),s=u.length;let d="/";if(window.talknDatas.storiesPointer=window.talknDatas.config&&window.talknDatas.config.stories?window.talknDatas.config.stories.length:0,""===u[s-1])d=l;else{const e=l.lastIndexOf("/"),t=Number(l.substr(e+1,e));d=l.substr(0,e+1),t<=0&&(window.talknDatas.storiesPointer=1),window.talknDatas.storiesPointer<window.talknDatas.config.stories.length?window.talknDatas.storiesPointer=window.talknDatas.config.stories.length:window.talknDatas.storiesPointer=t}d=a.default.domain===i.default.DEVELOPMENT_DOMAIN?d.indexOf(i.default.PORTS.DEVELOPMENT_COVER)>=0?d.replace(`https://${i.default.DEVELOPMENT_DOMAIN}:${i.default.PORTS.DEVELOPMENT_COVER}`,""):d.replace(`https://${i.default.SUB_DOMAINS.COVER}.${i.default.DEVELOPMENT_DOMAIN}`,""):d.replace(`https://${i.default.SUB_DOMAINS.COVER}.${i.default.PRODUCTION_DOMAIN}`,""),(0,o.default)()},8904:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.idSeparator=t.googleAccountCookieKey=t.myUserKey=void 0,t.myUserKey="talknMyUserSession",t.googleAccountCookieKey="g_state=''",t.idSeparator="@"},6581:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getHasSelfTags=t.getExtractFixValues=t.getFixValuesEmpty=void 0;const r=n(8690),a=n(6753),i=n(4341),o=n(2523),l=n(2211),u=n(1134);t.getFixValuesEmpty=(e,t=!1)=>{let n;switch(e){case r.tagInvestor:n={...i.fixInvestorValuesInit};break;case r.tagFounder:n={...a.fixFounderValuesInit};break;case r.tagMember:n={...o.fixMemberValuesInit};break;case r.tagStory:n={...u.fixStoryValuesInit}}return t?{...n,...l.fixProfileValuesInit}:n},t.getExtractFixValues=e=>{let n={},r=(0,t.getFixValuesEmpty)(e.tagType);return Object.keys(e).forEach((t=>{void 0!==r[t]&&(n[t]=e[t])})),n},t.getHasSelfTags=(e,t,n)=>{const{investor:a,founder:i,member:o}=e.self;let l=a.length,u=i.length,s=o.length;return n===r.tagInvestor?l="remove"===t?a.length-1:a.length+1:n===r.tagFounder?u="remove"===t?i.length-1:i.length+1:n===r.tagMember&&(s="remove"===t?o.length-1:o.length+1),{investor:l>0,founder:u>0,member:s>0}}},3954:e=>{"use strict";e.exports=JSON.parse('{"clientId":"429873683760-v2hk18nua5vgf37ae0ovuhfbdrmah42d.apps.googleusercontent.com"}')}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(9293)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bW1HLEtBQ2pDLElBQUksSUFBSTc3RixLQUFPNjdGLEVBQ1hQLEVBQW9CdC9GLEVBQUU2L0YsRUFBWTc3RixLQUFTczdGLEVBQW9CdC9GLEVBQUV0RyxFQUFTc0ssSUFDNUU3RCxPQUFPK0MsZUFBZXhKLEVBQVNzSyxFQUFLLENBQUVtSCxZQUFZLEVBQU1GLElBQUs0MEYsRUFBVzc3RixNQ0ozRXM3RixFQUFvQnQvRixFQUFJLENBQUM0L0MsRUFBS3NDLElBQVUvaEQsT0FBT3hFLFVBQVV1SSxlQUFlaEssS0FBSzBsRCxFQUFLc0MsR0NDbEZvOUMsRUFBb0JqNkYsRUFBSzNMLElBQ0gsb0JBQVgwRixRQUEwQkEsT0FBTzBnRyxhQUMxQzMvRixPQUFPK0MsZUFBZXhKLEVBQVMwRixPQUFPMGdHLFlBQWEsQ0FBRWpnRyxNQUFPLFdBRTdETSxPQUFPK0MsZUFBZXhKLEVBQVMsYUFBYyxDQUFFbUcsT0FBTyxLQ0x2RHkvRixFQUFvQlMsSUFBT3RtRyxJQUMxQkEsRUFBTzg0QyxNQUFRLEdBQ1Y5NEMsRUFBT2tULFdBQVVsVCxFQUFPa1QsU0FBVyxJQUNqQ2xULEdDQWtCNmxHLEVBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY2xpZW50L25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL25vZGVfbW9kdWxlcy9hdG9iL2Jyb3dzZXItYXRvYi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vbm9kZV9tb2R1bGVzL29zL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NvbW1vbi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvc2hhbGxvd2VxdWFsL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz8zNDJmIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvc3R5bGVkLWNvbXBvbmVudHMvZGlzdC9zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9hcGkvc3JjL3N0b3JlL0FwcC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9hcGkvc3JjL3N0b3JlL1Bvc3QudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vYXBpL3NyYy9zdG9yZS9UaHJlYWQudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY2xpZW50L3NyYy9jb25mL2luZGV4LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NsaWVudC9zcmMvc3RvcmUvVWkudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL3NyYy9OZXR3b3Jrcy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL1NjaGVtYS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL1NlcXVlbmNlLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NvbW1vbi9zcmMvY29uZi50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL2RlZmluZS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL21lZGlhVHlwZXMudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL3NyYy90YWxrbkNvbmZpZy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL3V0aWwudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvQXBwLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9hcGkudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9CdXR0b24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaWNvbi9TZWFyY2gudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaWNvbi9TcGlubmVyLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL2lucHV0L0RhdGUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQvRHJvcEltYWdlLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL2lucHV0L1RleHQudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQvY29tbW9uLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zZWxlY3QvT3B0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3NlbGVjdC9TaW5nbGUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0L2NvbW1vbi50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3NlbGVjdC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvQ2hlY2ttYXJrLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9DbG9zZS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvRWRpdC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvR29vZ2xlLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9Mb2FyZGluZy50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvTm90aWYudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc3ZnL1Jlc2V0LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9TdG9yeS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvVGFnLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9Vc2VyLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9BY2NvdW50LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9Cb3hMaXN0LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9IZWFkZXJTZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9BZHZlcnRzL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL1RhZ1NlY3Rpb25zLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2NvbW1vbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9Gb3VuZGVyTWVudS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9JbnZlc3Rvck1lbnUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvTWVtYmVyTWVudS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9TdG9yeU1lbnUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvVmlld1RhZ01vZGFsLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdEJpcnRoZGF5LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdEluZHVzdG9yeS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RKb2IudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0TGFuZ3VhZ2VzLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFNlYXJjaFR5cGUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0U2V4ZXMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0U3RhcnR1cFNlcmllcy50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdG9yeS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RZZWFyLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL3RpcC9BZGQudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL0NvbXBsZXhpdHkudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL1NpbXBseS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvTGlzdC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zsb2F0TWVudS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL0FjdGlvbnNTZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvRGVzaWduU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL01lc3NhZ2VTZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvT3RoZXJDb250ZW50c1NlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9TZXJ2aWNlQ29uY2VwdFNlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9Ub1RvcFNlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvSGVhZGVyL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9NZW51L0NvbnRlbnRNZW51LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9NZW51L1NpZGVNZW51LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbC9Nb2RhbEZ1bGwudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsL01vZGFsUGxhaW4udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsL01vZGFsU3RydWN0dXJlLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvU25zU2hhcmUvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL1VzZXIvQ29udGVudC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvVXNlci9Ub3AudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvcGFnZXMvVG9wL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL3BhZ2VzL1VzZXJzL0Rhc2hib2FyZC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9wYWdlcy9Vc2Vycy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29udGFpbmVyL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvY29uZmlnLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9jb25zdGFudHMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9lbnRpdHkvQW5pbWF0aW9uLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9lbnRpdHkvQm94TGF5b3V0LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9lbnRpdHkvQ29udGVudC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvZW50aXR5L0ZsZXhMYXlvdXQudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvZmxleGVzL2VudGl0eS9PbkhhbmRsZS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvZ2VuZXJhdGUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvZmxleGVzL25vZGVzL2NvbnRleHQudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvZmxleGVzL3BsdWdpbi9ob3ZlckFsdC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvc3R5bGVkQ29tcG9uZW50cy9lbWJlZHMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9zdHlsZWRDb21wb25lbnRzL2Zvcm1zLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvc3R5bGVkQ29tcG9uZW50cy9ncm91cHMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9zdHlsZWRDb21wb25lbnRzL2hlYWRzLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvc3R5bGVkQ29tcG9uZW50cy9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9mbGV4ZXMvc3R5bGVkQ29tcG9uZW50cy9pbnRlcmFjdGl2ZS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvZmxleGVzL3N0eWxlZENvbXBvbmVudHMvc2VjdGlvbnMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2ZsZXhlcy9zdHlsZWRDb21wb25lbnRzL3RhYmxlcy50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvZmxleGVzL3N0eWxlZENvbXBvbmVudHMvdGV4dHMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL21vZGVsL0NvbW1vbi50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9tb2RlbC9NZW51LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL21vZGVsL01lbnVzLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL21vZGVsL1VzZXIudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvbW9kZWwvdXNlclRhZ3MvRm91bmRlci50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9tb2RlbC91c2VyVGFncy9JbnZlc3Rvci50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9tb2RlbC91c2VyVGFncy9NZW1iZXIudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvbW9kZWwvdXNlclRhZ3MvUHJvZmlsZS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9tb2RlbC91c2VyVGFncy9TdG9yeS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9tb2RlbC91c2VyVGFncy9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9zdHlsZXMvYW5pbWF0aW9ucy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9zdHlsZXMvYmxvY2tzLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL3N0eWxlcy9jb2xvcnMudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvc3R5bGVzL2Ryb3BGaWx0ZXIudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvc3R5bGVzL2luZGV4LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL3N0eWxlcy9sYXlvdXRzLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL3N0eWxlcy9zaGFkb3cudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvc3R5bGVzL3pJbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy90YWxrbi5jb3Zlci50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy91dGlscy9jb25zdGFudHMvc3RvcmFnZS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy91dGlscy91c2VyVGFncy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3RhbGtuLWNvdmVyL3dlYnBhY2svcnVudGltZS9ub2RlIG1vZHVsZSBkZWNvcmF0b3IiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIoZnVuY3Rpb24gKHcpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgZnVuY3Rpb24gZmluZEJlc3QoYXRvYk5hdGl2ZSkge1xuICAgIC8vIG5vcm1hbCB3aW5kb3dcbiAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGF0b2JOYXRpdmUpIHsgcmV0dXJuIGF0b2JOYXRpdmU7IH1cblxuXG4gICAgLy8gYnJvd3NlcmlmeSAod2ViIHdvcmtlcilcbiAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIEJ1ZmZlcikge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGF0b2JCcm93c2VyaWZ5KGEpIHtcbiAgICAgICAgLy8hISBEZWxpYmVyYXRlbHkgdXNpbmcgYW4gQVBJIHRoYXQncyBkZXByZWNhdGVkIGluIG5vZGUuanMgYmVjYXVzZVxuICAgICAgICAvLyEhIHRoaXMgZmlsZSBpcyBmb3IgYnJvd3NlcnMgYW5kIHdlIGV4cGVjdCB0aGVtIHRvIGNvcGUgd2l0aCBpdC5cbiAgICAgICAgLy8hISBEaXNjdXNzaW9uOiBnaXRodWIuY29tL25vZGUtYnJvd3Nlci1jb21wYXQvYXRvYi9wdWxsLzlcbiAgICAgICAgcmV0dXJuIG5ldyBCdWZmZXIoYSwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCdiaW5hcnknKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gaW9zIHdlYiB3b3JrZXIgd2l0aCBiYXNlNjRqc1xuICAgIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIHcuYmFzZTY0anMpIHtcbiAgICAgIC8vIGJ1ZmZlclRvQmluYXJ5U3RyaW5nXG4gICAgICAvLyBodHRwczovL2dpdC5jb29sYWo4Ni5jb20vY29vbGFqODYvdW5pYmFiZWwuanMvYmxvYi9tYXN0ZXIvaW5kZXguanMjTDUwXG4gICAgICByZXR1cm4gZnVuY3Rpb24gYXRvYldlYldvcmtlcl9pT1MoYSkge1xuICAgICAgICB2YXIgYnVmID0gdy5iYXNlNjRqcy5iNjRUb0J5dGVBcnJheShhKTtcbiAgICAgICAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChidWYsIGZ1bmN0aW9uIChjaCkge1xuICAgICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoKTtcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgICB9O1xuICAgIH1cblxuXHRcdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0XHQvLyBpb3Mgd2ViIHdvcmtlciB3aXRob3V0IGJhc2U2NGpzXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJZb3UncmUgcHJvYmFibHkgaW4gYW4gb2xkIGJyb3dzZXIgb3IgYW4gaU9TIHdlYndvcmtlci5cIiArXG5cdFx0XHRcdFwiIEl0IG1pZ2h0IGhlbHAgdG8gaW5jbHVkZSBiZWF0Z2FtbWl0J3MgYmFzZTY0LWpzLlwiKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGF0b2JCZXN0ID0gZmluZEJlc3Qody5hdG9iKTtcbiAgdy5hdG9iID0gYXRvYkJlc3Q7XG5cbiAgaWYgKCh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JykgJiYgbW9kdWxlICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBhdG9iQmVzdDtcbiAgfVxufSh3aW5kb3cpKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnb3MnKVxuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cXG5cXG4vKiBEb2N1bWVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiAqL1xcblxcbmh0bWwge1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbn1cXG5cXG4vKiBTZWN0aW9uc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cXG4gKi9cXG5cXG5tYWluIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcblxcbi8qIEdyb3VwaW5nIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXFxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXFxuICovXFxuXFxuaHIge1xcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cXG4gIGhlaWdodDogMDsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxucHJlIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5hIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmIsXFxuc3Ryb25nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zbWFsbCB7XFxuICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLyoqXFxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXFxuICogYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG4gIGJvdHRvbTogLTAuMjVlbTtcXG59XFxuXFxuc3VwIHtcXG4gIHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKiBFbWJlZGRlZCBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcblxcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxufVxcblxcbi8qIEZvcm1zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcbiAgbWFyZ2luOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0IHsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b24sXFxuc2VsZWN0IHsgLyogMSAqL1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXSxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXSxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiAqL1xcblxcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmZpZWxkc2V0IHtcXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXFxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmxlZ2VuZCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMyAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxcbiAqL1xcblxcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXFxuICovXFxuXFxudGV4dGFyZWEge1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSxcXG5bdHlwZT1cXFwicmFkaW9cXFwiXSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBwYWRkaW5nOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXFxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXFxuICovXFxuXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKiBJbnRlcmFjdGl2ZVxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxcbiAqL1xcblxcbmRldGFpbHMge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1bW1hcnkge1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG5cXG4vKiBNaXNjXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXFxuICovXFxuXFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXFxuICovXFxuXFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSwyRUFBMkU7O0FBRTNFOytFQUMrRTs7QUFFL0U7OztFQUdFOztBQUVGO0VBQ0UsaUJBQWlCLEVBQUUsTUFBTTtFQUN6Qiw4QkFBOEIsRUFBRSxNQUFNO0FBQ3hDOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7RUFDRSx1QkFBdUIsRUFBRSxNQUFNO0VBQy9CLFNBQVMsRUFBRSxNQUFNO0VBQ2pCLGlCQUFpQixFQUFFLE1BQU07QUFDM0I7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsaUNBQWlDLEVBQUUsTUFBTTtFQUN6QyxjQUFjLEVBQUUsTUFBTTtBQUN4Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxpQ0FBaUMsRUFBRSxNQUFNO0FBQzNDOztBQUVBOztFQUVFOztBQUVGOztFQUVFLG1CQUFtQjtBQUNyQjs7QUFFQTs7O0VBR0U7O0FBRUY7OztFQUdFLGlDQUFpQyxFQUFFLE1BQU07RUFDekMsY0FBYyxFQUFFLE1BQU07QUFDeEI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGtCQUFrQjtFQUNsQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBOytFQUMrRTs7QUFFL0U7O0VBRUU7O0FBRUY7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7K0VBQytFOztBQUUvRTs7O0VBR0U7O0FBRUY7Ozs7O0VBS0Usb0JBQW9CLEVBQUUsTUFBTTtFQUM1QixlQUFlLEVBQUUsTUFBTTtFQUN2QixpQkFBaUIsRUFBRSxNQUFNO0VBQ3pCLFNBQVMsRUFBRSxNQUFNO0FBQ25COztBQUVBOzs7RUFHRTs7QUFFRjtRQUNRLE1BQU07RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7OztFQUdFOztBQUVGO1NBQ1MsTUFBTTtFQUNiLG9CQUFvQjtBQUN0Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLDBCQUEwQjtBQUM1Qjs7QUFFQTs7RUFFRTs7QUFFRjs7OztFQUlFLGtCQUFrQjtFQUNsQixVQUFVO0FBQ1o7O0FBRUE7O0VBRUU7O0FBRUY7Ozs7RUFJRSw4QkFBOEI7QUFDaEM7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSw4QkFBOEI7QUFDaEM7O0FBRUE7Ozs7O0VBS0U7O0FBRUY7RUFDRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGVBQWUsRUFBRSxNQUFNO0VBQ3ZCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLG1CQUFtQixFQUFFLE1BQU07QUFDN0I7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7RUFHRTs7QUFFRjs7RUFFRSxzQkFBc0IsRUFBRSxNQUFNO0VBQzlCLFVBQVUsRUFBRSxNQUFNO0FBQ3BCOztBQUVBOztFQUVFOztBQUVGOztFQUVFLFlBQVk7QUFDZDs7QUFFQTs7O0VBR0U7O0FBRUY7RUFDRSw2QkFBNkIsRUFBRSxNQUFNO0VBQ3JDLG9CQUFvQixFQUFFLE1BQU07QUFDOUI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsMEJBQTBCLEVBQUUsTUFBTTtFQUNsQyxhQUFhLEVBQUUsTUFBTTtBQUN2Qjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7RUFFRTs7QUFFRjtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsYUFBYTtBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cXG5cXG4vKiBEb2N1bWVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiAqL1xcblxcbmh0bWwge1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbn1cXG5cXG4vKiBTZWN0aW9uc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cXG4gKi9cXG5cXG5tYWluIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcblxcbi8qIEdyb3VwaW5nIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXFxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXFxuICovXFxuXFxuaHIge1xcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cXG4gIGhlaWdodDogMDsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxucHJlIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5hIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmIsXFxuc3Ryb25nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zbWFsbCB7XFxuICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLyoqXFxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXFxuICogYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG4gIGJvdHRvbTogLTAuMjVlbTtcXG59XFxuXFxuc3VwIHtcXG4gIHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKiBFbWJlZGRlZCBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcblxcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxufVxcblxcbi8qIEZvcm1zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcbiAgbWFyZ2luOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0IHsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b24sXFxuc2VsZWN0IHsgLyogMSAqL1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXSxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXSxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiAqL1xcblxcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmZpZWxkc2V0IHtcXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXFxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmxlZ2VuZCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMyAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxcbiAqL1xcblxcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXFxuICovXFxuXFxudGV4dGFyZWEge1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSxcXG5bdHlwZT1cXFwicmFkaW9cXFwiXSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBwYWRkaW5nOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXFxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXFxuICovXFxuXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKiBJbnRlcmFjdGl2ZVxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxcbiAqL1xcblxcbmRldGFpbHMge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1bW1hcnkge1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG5cXG4vKiBNaXNjXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXFxuICovXFxuXFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXFxuICovXFxuXFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5NZW1vXSA9IE1FTU9fU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgLy8gUmVhY3QgdjE2LjExIGFuZCBiZWxvd1xuICBpZiAocmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gIH0gLy8gUmVhY3QgdjE2LjEyIGFuZCBhYm92ZVxuXG5cbiAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG4gICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgIH1cblxuICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcblxuICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcblxuLyoqXHJcbiAqIEFjdGlvbnMgcmVwcmVzZW50IHRoZSB0eXBlIG9mIGNoYW5nZSB0byBhIGxvY2F0aW9uIHZhbHVlLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2FjdGlvblxyXG4gKi9cbnZhciBBY3Rpb247XG5cbihmdW5jdGlvbiAoQWN0aW9uKSB7XG4gIC8qKlxyXG4gICAqIEEgUE9QIGluZGljYXRlcyBhIGNoYW5nZSB0byBhbiBhcmJpdHJhcnkgaW5kZXggaW4gdGhlIGhpc3Rvcnkgc3RhY2ssIHN1Y2hcclxuICAgKiBhcyBhIGJhY2sgb3IgZm9yd2FyZCBuYXZpZ2F0aW9uLiBJdCBkb2VzIG5vdCBkZXNjcmliZSB0aGUgZGlyZWN0aW9uIG9mIHRoZVxyXG4gICAqIG5hdmlnYXRpb24sIG9ubHkgdGhhdCB0aGUgY3VycmVudCBpbmRleCBjaGFuZ2VkLlxyXG4gICAqXHJcbiAgICogTm90ZTogVGhpcyBpcyB0aGUgZGVmYXVsdCBhY3Rpb24gZm9yIG5ld2x5IGNyZWF0ZWQgaGlzdG9yeSBvYmplY3RzLlxyXG4gICAqL1xuICBBY3Rpb25bXCJQb3BcIl0gPSBcIlBPUFwiO1xuICAvKipcclxuICAgKiBBIFBVU0ggaW5kaWNhdGVzIGEgbmV3IGVudHJ5IGJlaW5nIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrLCBzdWNoIGFzIHdoZW5cclxuICAgKiBhIGxpbmsgaXMgY2xpY2tlZCBhbmQgYSBuZXcgcGFnZSBsb2Fkcy4gV2hlbiB0aGlzIGhhcHBlbnMsIGFsbCBzdWJzZXF1ZW50XHJcbiAgICogZW50cmllcyBpbiB0aGUgc3RhY2sgYXJlIGxvc3QuXHJcbiAgICovXG5cbiAgQWN0aW9uW1wiUHVzaFwiXSA9IFwiUFVTSFwiO1xuICAvKipcclxuICAgKiBBIFJFUExBQ0UgaW5kaWNhdGVzIHRoZSBlbnRyeSBhdCB0aGUgY3VycmVudCBpbmRleCBpbiB0aGUgaGlzdG9yeSBzdGFja1xyXG4gICAqIGJlaW5nIHJlcGxhY2VkIGJ5IGEgbmV3IG9uZS5cclxuICAgKi9cblxuICBBY3Rpb25bXCJSZXBsYWNlXCJdID0gXCJSRVBMQUNFXCI7XG59KShBY3Rpb24gfHwgKEFjdGlvbiA9IHt9KSk7XG5cbnZhciByZWFkT25seSA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5mcmVlemUob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmo7XG59O1xuXG5mdW5jdGlvbiB3YXJuaW5nKGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSBjb25zb2xlLndhcm4obWVzc2FnZSk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gV2VsY29tZSB0byBkZWJ1Z2dpbmcgaGlzdG9yeSFcbiAgICAgIC8vXG4gICAgICAvLyBUaGlzIGVycm9yIGlzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHlvdSBjYW4gbW9yZSBlYXNpbHlcbiAgICAgIC8vIGZpbmQgdGhlIHNvdXJjZSBmb3IgYSB3YXJuaW5nIHRoYXQgYXBwZWFycyBpbiB0aGUgY29uc29sZSBieVxuICAgICAgLy8gZW5hYmxpbmcgXCJwYXVzZSBvbiBleGNlcHRpb25zXCIgaW4geW91ciBKYXZhU2NyaXB0IGRlYnVnZ2VyLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG59XG5cbnZhciBCZWZvcmVVbmxvYWRFdmVudFR5cGUgPSAnYmVmb3JldW5sb2FkJztcbnZhciBIYXNoQ2hhbmdlRXZlbnRUeXBlID0gJ2hhc2hjaGFuZ2UnO1xudmFyIFBvcFN0YXRlRXZlbnRUeXBlID0gJ3BvcHN0YXRlJztcbi8qKlxyXG4gKiBCcm93c2VyIGhpc3Rvcnkgc3RvcmVzIHRoZSBsb2NhdGlvbiBpbiByZWd1bGFyIFVSTHMuIFRoaXMgaXMgdGhlIHN0YW5kYXJkIGZvclxyXG4gKiBtb3N0IHdlYiBhcHBzLCBidXQgaXQgcmVxdWlyZXMgc29tZSBjb25maWd1cmF0aW9uIG9uIHRoZSBzZXJ2ZXIgdG8gZW5zdXJlIHlvdVxyXG4gKiBzZXJ2ZSB0aGUgc2FtZSBhcHAgYXQgbXVsdGlwbGUgVVJMcy5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNjcmVhdGVicm93c2VyaGlzdG9yeVxyXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3Rvcnkob3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zJHdpbmRvdyA9IF9vcHRpb25zLndpbmRvdyxcbiAgICAgIHdpbmRvdyA9IF9vcHRpb25zJHdpbmRvdyA9PT0gdm9pZCAwID8gZG9jdW1lbnQuZGVmYXVsdFZpZXcgOiBfb3B0aW9ucyR3aW5kb3c7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG5cbiAgZnVuY3Rpb24gZ2V0SW5kZXhBbmRMb2NhdGlvbigpIHtcbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgc3RhdGUgPSBnbG9iYWxIaXN0b3J5LnN0YXRlIHx8IHt9O1xuICAgIHJldHVybiBbc3RhdGUuaWR4LCByZWFkT25seSh7XG4gICAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgICBzZWFyY2g6IHNlYXJjaCxcbiAgICAgIGhhc2g6IGhhc2gsXG4gICAgICBzdGF0ZTogc3RhdGUudXNyIHx8IG51bGwsXG4gICAgICBrZXk6IHN0YXRlLmtleSB8fCAnZGVmYXVsdCdcbiAgICB9KV07XG4gIH1cblxuICB2YXIgYmxvY2tlZFBvcFR4ID0gbnVsbDtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AoKSB7XG4gICAgaWYgKGJsb2NrZWRQb3BUeCkge1xuICAgICAgYmxvY2tlcnMuY2FsbChibG9ja2VkUG9wVHgpO1xuICAgICAgYmxvY2tlZFBvcFR4ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUG9wO1xuXG4gICAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb24gPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICAgICAgbmV4dEluZGV4ID0gX2dldEluZGV4QW5kTG9jYXRpb25bMF0sXG4gICAgICAgICAgbmV4dExvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb25bMV07XG5cbiAgICAgIGlmIChibG9ja2Vycy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKG5leHRJbmRleCAhPSBudWxsKSB7XG4gICAgICAgICAgdmFyIGRlbHRhID0gaW5kZXggLSBuZXh0SW5kZXg7XG5cbiAgICAgICAgICBpZiAoZGVsdGEpIHtcbiAgICAgICAgICAgIC8vIFJldmVydCB0aGUgUE9QXG4gICAgICAgICAgICBibG9ja2VkUG9wVHggPSB7XG4gICAgICAgICAgICAgIGFjdGlvbjogbmV4dEFjdGlvbixcbiAgICAgICAgICAgICAgbG9jYXRpb246IG5leHRMb2NhdGlvbixcbiAgICAgICAgICAgICAgcmV0cnk6IGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgICAgICAgICAgIGdvKGRlbHRhICogLTEpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZ28oZGVsdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBUcnlpbmcgdG8gUE9QIHRvIGEgbG9jYXRpb24gd2l0aCBubyBpbmRleC4gV2UgZGlkIG5vdCBjcmVhdGVcbiAgICAgICAgICAvLyB0aGlzIGxvY2F0aW9uLCBzbyB3ZSBjYW4ndCBlZmZlY3RpdmVseSBibG9jayB0aGUgbmF2aWdhdGlvbi5cbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAvLyBUT0RPOiBXcml0ZSB1cCBhIGRvYyB0aGF0IGV4cGxhaW5zIG91ciBibG9ja2luZyBzdHJhdGVneSBpblxuICAgICAgICAgIC8vIGRldGFpbCBhbmQgbGluayB0byBpdCBoZXJlIHNvIHBlb3BsZSBjYW4gdW5kZXJzdGFuZCBiZXR0ZXIgd2hhdFxuICAgICAgICAgIC8vIGlzIGdvaW5nIG9uIGFuZCBob3cgdG8gYXZvaWQgaXQuXG4gICAgICAgICAgXCJZb3UgYXJlIHRyeWluZyB0byBibG9jayBhIFBPUCBuYXZpZ2F0aW9uIHRvIGEgbG9jYXRpb24gdGhhdCB3YXMgbm90IFwiICsgXCJjcmVhdGVkIGJ5IHRoZSBoaXN0b3J5IGxpYnJhcnkuIFRoZSBibG9jayB3aWxsIGZhaWwgc2lsZW50bHkgaW4gXCIgKyBcInByb2R1Y3Rpb24sIGJ1dCBpbiBnZW5lcmFsIHlvdSBzaG91bGQgZG8gYWxsIG5hdmlnYXRpb24gd2l0aCB0aGUgXCIgKyBcImhpc3RvcnkgbGlicmFyeSAoaW5zdGVhZCBvZiB1c2luZyB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUgZGlyZWN0bHkpIFwiICsgXCJ0byBhdm9pZCB0aGlzIHNpdHVhdGlvbi5cIikgOiB2b2lkIDA7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudFR5cGUsIGhhbmRsZVBvcCk7XG4gIHZhciBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuXG4gIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjIgPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICBpbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uMlswXSxcbiAgICAgIGxvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb24yWzFdO1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBjcmVhdGVFdmVudHMoKTtcbiAgdmFyIGJsb2NrZXJzID0gY3JlYXRlRXZlbnRzKCk7XG5cbiAgaWYgKGluZGV4ID09IG51bGwpIHtcbiAgICBpbmRleCA9IDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoX2V4dGVuZHMoe30sIGdsb2JhbEhpc3Rvcnkuc3RhdGUsIHtcbiAgICAgIGlkeDogaW5kZXhcbiAgICB9KSwgJycpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZih0bykge1xuICAgIHJldHVybiB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gdG8gOiBjcmVhdGVQYXRoKHRvKTtcbiAgfSAvLyBzdGF0ZSBkZWZhdWx0cyB0byBgbnVsbGAgYmVjYXVzZSBgd2luZG93Lmhpc3Rvcnkuc3RhdGVgIGRvZXNcblxuXG4gIGZ1bmN0aW9uIGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBoYXNoOiAnJyxcbiAgICAgIHNlYXJjaDogJydcbiAgICB9LCB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKHRvKSA6IHRvLCB7XG4gICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXgpIHtcbiAgICByZXR1cm4gW3tcbiAgICAgIHVzcjogbmV4dExvY2F0aW9uLnN0YXRlLFxuICAgICAga2V5OiBuZXh0TG9jYXRpb24ua2V5LFxuICAgICAgaWR4OiBpbmRleFxuICAgIH0sIGNyZWF0ZUhyZWYobmV4dExvY2F0aW9uKV07XG4gIH1cblxuICBmdW5jdGlvbiBhbGxvd1R4KGFjdGlvbiwgbG9jYXRpb24sIHJldHJ5KSB7XG4gICAgcmV0dXJuICFibG9ja2Vycy5sZW5ndGggfHwgKGJsb2NrZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICByZXRyeTogcmV0cnlcbiAgICB9KSwgZmFsc2UpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHlUeChuZXh0QWN0aW9uKSB7XG4gICAgYWN0aW9uID0gbmV4dEFjdGlvbjtcblxuICAgIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjMgPSBnZXRJbmRleEFuZExvY2F0aW9uKCk7XG5cbiAgICBpbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uM1swXTtcbiAgICBsb2NhdGlvbiA9IF9nZXRJbmRleEFuZExvY2F0aW9uM1sxXTtcbiAgICBsaXN0ZW5lcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaCh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5QdXNoO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcHVzaCh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICB2YXIgX2dldEhpc3RvcnlTdGF0ZUFuZFVyID0gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXggKyAxKSxcbiAgICAgICAgICBoaXN0b3J5U3RhdGUgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXJbMF0sXG4gICAgICAgICAgdXJsID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyWzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcbiAgICAgIC8vIHRyeS4uLmNhdGNoIGJlY2F1c2UgaU9TIGxpbWl0cyB1cyB0byAxMDAgcHVzaFN0YXRlIGNhbGxzIDovXG5cblxuICAgICAgdHJ5IHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoaGlzdG9yeVN0YXRlLCAnJywgdXJsKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIFRoZXkgYXJlIGdvaW5nIHRvIGxvc2Ugc3RhdGUgaGVyZSwgYnV0IHRoZXJlIGlzIG5vIHJlYWxcbiAgICAgICAgLy8gd2F5IHRvIHdhcm4gdGhlbSBhYm91dCBpdCBzaW5jZSB0aGUgcGFnZSB3aWxsIHJlZnJlc2guLi5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbih1cmwpO1xuICAgICAgfVxuXG4gICAgICBhcHBseVR4KG5leHRBY3Rpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UodG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUmVwbGFjZTtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHJlcGxhY2UodG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgdmFyIF9nZXRIaXN0b3J5U3RhdGVBbmRVcjIgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCksXG4gICAgICAgICAgaGlzdG9yeVN0YXRlID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyMlswXSxcbiAgICAgICAgICB1cmwgPSBfZ2V0SGlzdG9yeVN0YXRlQW5kVXIyWzFdOyAvLyBUT0RPOiBTdXBwb3J0IGZvcmNlZCByZWxvYWRpbmdcblxuXG4gICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZShoaXN0b3J5U3RhdGUsICcnLCB1cmwpO1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnbyhkZWx0YSkge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28oZGVsdGEpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcblxuICAgIGdldCBsb2NhdGlvbigpIHtcbiAgICAgIHJldHVybiBsb2NhdGlvbjtcbiAgICB9LFxuXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGJhY2s6IGZ1bmN0aW9uIGJhY2soKSB7XG4gICAgICBnbygtMSk7XG4gICAgfSxcbiAgICBmb3J3YXJkOiBmdW5jdGlvbiBmb3J3YXJkKCkge1xuICAgICAgZ28oMSk7XG4gICAgfSxcbiAgICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIGJsb2NrOiBmdW5jdGlvbiBibG9jayhibG9ja2VyKSB7XG4gICAgICB2YXIgdW5ibG9jayA9IGJsb2NrZXJzLnB1c2goYmxvY2tlcik7XG5cbiAgICAgIGlmIChibG9ja2Vycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICB1bmJsb2NrKCk7IC8vIFJlbW92ZSB0aGUgYmVmb3JldW5sb2FkIGxpc3RlbmVyIHNvIHRoZSBkb2N1bWVudCBtYXlcbiAgICAgICAgLy8gc3RpbGwgYmUgc2FsdmFnZWFibGUgaW4gdGhlIHBhZ2VoaWRlIGV2ZW50LlxuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jdW5sb2FkaW5nLWRvY3VtZW50c1xuXG4gICAgICAgIGlmICghYmxvY2tlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoQmVmb3JlVW5sb2FkRXZlbnRUeXBlLCBwcm9tcHRCZWZvcmVVbmxvYWQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG4vKipcclxuICogSGFzaCBoaXN0b3J5IHN0b3JlcyB0aGUgbG9jYXRpb24gaW4gd2luZG93LmxvY2F0aW9uLmhhc2guIFRoaXMgbWFrZXMgaXQgaWRlYWxcclxuICogZm9yIHNpdHVhdGlvbnMgd2hlcmUgeW91IGRvbid0IHdhbnQgdG8gc2VuZCB0aGUgbG9jYXRpb24gdG8gdGhlIHNlcnZlciBmb3JcclxuICogc29tZSByZWFzb24sIGVpdGhlciBiZWNhdXNlIHlvdSBkbyBjYW5ub3QgY29uZmlndXJlIGl0IG9yIHRoZSBVUkwgc3BhY2UgaXNcclxuICogcmVzZXJ2ZWQgZm9yIHNvbWV0aGluZyBlbHNlLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI2NyZWF0ZWhhc2hoaXN0b3J5XHJcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICB2YXIgX29wdGlvbnMyID0gb3B0aW9ucyxcbiAgICAgIF9vcHRpb25zMiR3aW5kb3cgPSBfb3B0aW9uczIud2luZG93LFxuICAgICAgd2luZG93ID0gX29wdGlvbnMyJHdpbmRvdyA9PT0gdm9pZCAwID8gZG9jdW1lbnQuZGVmYXVsdFZpZXcgOiBfb3B0aW9uczIkd2luZG93O1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuXG4gIGZ1bmN0aW9uIGdldEluZGV4QW5kTG9jYXRpb24oKSB7XG4gICAgdmFyIF9wYXJzZVBhdGggPSBwYXJzZVBhdGgod2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpKSxcbiAgICAgICAgX3BhcnNlUGF0aCRwYXRobmFtZSA9IF9wYXJzZVBhdGgucGF0aG5hbWUsXG4gICAgICAgIHBhdGhuYW1lID0gX3BhcnNlUGF0aCRwYXRobmFtZSA9PT0gdm9pZCAwID8gJy8nIDogX3BhcnNlUGF0aCRwYXRobmFtZSxcbiAgICAgICAgX3BhcnNlUGF0aCRzZWFyY2ggPSBfcGFyc2VQYXRoLnNlYXJjaCxcbiAgICAgICAgc2VhcmNoID0gX3BhcnNlUGF0aCRzZWFyY2ggPT09IHZvaWQgMCA/ICcnIDogX3BhcnNlUGF0aCRzZWFyY2gsXG4gICAgICAgIF9wYXJzZVBhdGgkaGFzaCA9IF9wYXJzZVBhdGguaGFzaCxcbiAgICAgICAgaGFzaCA9IF9wYXJzZVBhdGgkaGFzaCA9PT0gdm9pZCAwID8gJycgOiBfcGFyc2VQYXRoJGhhc2g7XG5cbiAgICB2YXIgc3RhdGUgPSBnbG9iYWxIaXN0b3J5LnN0YXRlIHx8IHt9O1xuICAgIHJldHVybiBbc3RhdGUuaWR4LCByZWFkT25seSh7XG4gICAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgICBzZWFyY2g6IHNlYXJjaCxcbiAgICAgIGhhc2g6IGhhc2gsXG4gICAgICBzdGF0ZTogc3RhdGUudXNyIHx8IG51bGwsXG4gICAgICBrZXk6IHN0YXRlLmtleSB8fCAnZGVmYXVsdCdcbiAgICB9KV07XG4gIH1cblxuICB2YXIgYmxvY2tlZFBvcFR4ID0gbnVsbDtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AoKSB7XG4gICAgaWYgKGJsb2NrZWRQb3BUeCkge1xuICAgICAgYmxvY2tlcnMuY2FsbChibG9ja2VkUG9wVHgpO1xuICAgICAgYmxvY2tlZFBvcFR4ID0gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUG9wO1xuXG4gICAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb240ID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpLFxuICAgICAgICAgIG5leHRJbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uNFswXSxcbiAgICAgICAgICBuZXh0TG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjRbMV07XG5cbiAgICAgIGlmIChibG9ja2Vycy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKG5leHRJbmRleCAhPSBudWxsKSB7XG4gICAgICAgICAgdmFyIGRlbHRhID0gaW5kZXggLSBuZXh0SW5kZXg7XG5cbiAgICAgICAgICBpZiAoZGVsdGEpIHtcbiAgICAgICAgICAgIC8vIFJldmVydCB0aGUgUE9QXG4gICAgICAgICAgICBibG9ja2VkUG9wVHggPSB7XG4gICAgICAgICAgICAgIGFjdGlvbjogbmV4dEFjdGlvbixcbiAgICAgICAgICAgICAgbG9jYXRpb246IG5leHRMb2NhdGlvbixcbiAgICAgICAgICAgICAgcmV0cnk6IGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgICAgICAgICAgIGdvKGRlbHRhICogLTEpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZ28oZGVsdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBUcnlpbmcgdG8gUE9QIHRvIGEgbG9jYXRpb24gd2l0aCBubyBpbmRleC4gV2UgZGlkIG5vdCBjcmVhdGVcbiAgICAgICAgICAvLyB0aGlzIGxvY2F0aW9uLCBzbyB3ZSBjYW4ndCBlZmZlY3RpdmVseSBibG9jayB0aGUgbmF2aWdhdGlvbi5cbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAvLyBUT0RPOiBXcml0ZSB1cCBhIGRvYyB0aGF0IGV4cGxhaW5zIG91ciBibG9ja2luZyBzdHJhdGVneSBpblxuICAgICAgICAgIC8vIGRldGFpbCBhbmQgbGluayB0byBpdCBoZXJlIHNvIHBlb3BsZSBjYW4gdW5kZXJzdGFuZCBiZXR0ZXJcbiAgICAgICAgICAvLyB3aGF0IGlzIGdvaW5nIG9uIGFuZCBob3cgdG8gYXZvaWQgaXQuXG4gICAgICAgICAgXCJZb3UgYXJlIHRyeWluZyB0byBibG9jayBhIFBPUCBuYXZpZ2F0aW9uIHRvIGEgbG9jYXRpb24gdGhhdCB3YXMgbm90IFwiICsgXCJjcmVhdGVkIGJ5IHRoZSBoaXN0b3J5IGxpYnJhcnkuIFRoZSBibG9jayB3aWxsIGZhaWwgc2lsZW50bHkgaW4gXCIgKyBcInByb2R1Y3Rpb24sIGJ1dCBpbiBnZW5lcmFsIHlvdSBzaG91bGQgZG8gYWxsIG5hdmlnYXRpb24gd2l0aCB0aGUgXCIgKyBcImhpc3RvcnkgbGlicmFyeSAoaW5zdGVhZCBvZiB1c2luZyB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUgZGlyZWN0bHkpIFwiICsgXCJ0byBhdm9pZCB0aGlzIHNpdHVhdGlvbi5cIikgOiB2b2lkIDA7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudFR5cGUsIGhhbmRsZVBvcCk7IC8vIHBvcHN0YXRlIGRvZXMgbm90IGZpcmUgb24gaGFzaGNoYW5nZSBpbiBJRSAxMSBhbmQgb2xkICh0cmlkZW50KSBFZGdlXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RlL2RvY3MvV2ViL0FQSS9XaW5kb3cvcG9wc3RhdGVfZXZlbnRcblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnRUeXBlLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9nZXRJbmRleEFuZExvY2F0aW9uNSA9IGdldEluZGV4QW5kTG9jYXRpb24oKSxcbiAgICAgICAgbmV4dExvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb241WzFdOyAvLyBJZ25vcmUgZXh0cmFuZW91cyBoYXNoY2hhbmdlIGV2ZW50cy5cblxuXG4gICAgaWYgKGNyZWF0ZVBhdGgobmV4dExvY2F0aW9uKSAhPT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHtcbiAgICAgIGhhbmRsZVBvcCgpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBhY3Rpb24gPSBBY3Rpb24uUG9wO1xuXG4gIHZhciBfZ2V0SW5kZXhBbmRMb2NhdGlvbjYgPSBnZXRJbmRleEFuZExvY2F0aW9uKCksXG4gICAgICBpbmRleCA9IF9nZXRJbmRleEFuZExvY2F0aW9uNlswXSxcbiAgICAgIGxvY2F0aW9uID0gX2dldEluZGV4QW5kTG9jYXRpb242WzFdO1xuXG4gIHZhciBsaXN0ZW5lcnMgPSBjcmVhdGVFdmVudHMoKTtcbiAgdmFyIGJsb2NrZXJzID0gY3JlYXRlRXZlbnRzKCk7XG5cbiAgaWYgKGluZGV4ID09IG51bGwpIHtcbiAgICBpbmRleCA9IDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoX2V4dGVuZHMoe30sIGdsb2JhbEhpc3Rvcnkuc3RhdGUsIHtcbiAgICAgIGlkeDogaW5kZXhcbiAgICB9KSwgJycpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0QmFzZUhyZWYoKSB7XG4gICAgdmFyIGJhc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlICYmIGJhc2UuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICAgIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICAgICAgaHJlZiA9IGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYodG8pIHtcbiAgICByZXR1cm4gZ2V0QmFzZUhyZWYoKSArICcjJyArICh0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gdG8gOiBjcmVhdGVQYXRoKHRvKSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVhZE9ubHkoX2V4dGVuZHMoe1xuICAgICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgaGFzaDogJycsXG4gICAgICBzZWFyY2g6ICcnXG4gICAgfSwgdHlwZW9mIHRvID09PSAnc3RyaW5nJyA/IHBhcnNlUGF0aCh0bykgOiB0bywge1xuICAgICAgc3RhdGU6IHN0YXRlLFxuICAgICAga2V5OiBjcmVhdGVLZXkoKVxuICAgIH0pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZUFuZFVybChuZXh0TG9jYXRpb24sIGluZGV4KSB7XG4gICAgcmV0dXJuIFt7XG4gICAgICB1c3I6IG5leHRMb2NhdGlvbi5zdGF0ZSxcbiAgICAgIGtleTogbmV4dExvY2F0aW9uLmtleSxcbiAgICAgIGlkeDogaW5kZXhcbiAgICB9LCBjcmVhdGVIcmVmKG5leHRMb2NhdGlvbildO1xuICB9XG5cbiAgZnVuY3Rpb24gYWxsb3dUeChhY3Rpb24sIGxvY2F0aW9uLCByZXRyeSkge1xuICAgIHJldHVybiAhYmxvY2tlcnMubGVuZ3RoIHx8IChibG9ja2Vycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgcmV0cnk6IHJldHJ5XG4gICAgfSksIGZhbHNlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGx5VHgobmV4dEFjdGlvbikge1xuICAgIGFjdGlvbiA9IG5leHRBY3Rpb247XG5cbiAgICB2YXIgX2dldEluZGV4QW5kTG9jYXRpb243ID0gZ2V0SW5kZXhBbmRMb2NhdGlvbigpO1xuXG4gICAgaW5kZXggPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjdbMF07XG4gICAgbG9jYXRpb24gPSBfZ2V0SW5kZXhBbmRMb2NhdGlvbjdbMV07XG4gICAgbGlzdGVuZXJzLmNhbGwoe1xuICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2godG8sIHN0YXRlKSB7XG4gICAgdmFyIG5leHRBY3Rpb24gPSBBY3Rpb24uUHVzaDtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZ2V0TmV4dExvY2F0aW9uKHRvLCBzdGF0ZSk7XG5cbiAgICBmdW5jdGlvbiByZXRyeSgpIHtcbiAgICAgIHB1c2godG8sIHN0YXRlKTtcbiAgICB9XG5cbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG5leHRMb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gaGFzaCBoaXN0b3J5LnB1c2goXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIikgOiB2b2lkIDA7XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgdmFyIF9nZXRIaXN0b3J5U3RhdGVBbmRVcjMgPSBnZXRIaXN0b3J5U3RhdGVBbmRVcmwobmV4dExvY2F0aW9uLCBpbmRleCArIDEpLFxuICAgICAgICAgIGhpc3RvcnlTdGF0ZSA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjNbMF0sXG4gICAgICAgICAgdXJsID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyM1sxXTsgLy8gVE9ETzogU3VwcG9ydCBmb3JjZWQgcmVsb2FkaW5nXG4gICAgICAvLyB0cnkuLi5jYXRjaCBiZWNhdXNlIGlPUyBsaW1pdHMgdXMgdG8gMTAwIHB1c2hTdGF0ZSBjYWxscyA6L1xuXG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKGhpc3RvcnlTdGF0ZSwgJycsIHVybCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyBUaGV5IGFyZSBnb2luZyB0byBsb3NlIHN0YXRlIGhlcmUsIGJ1dCB0aGVyZSBpcyBubyByZWFsXG4gICAgICAgIC8vIHdheSB0byB3YXJuIHRoZW0gYWJvdXQgaXQgc2luY2UgdGhlIHBhZ2Ugd2lsbCByZWZyZXNoLi4uXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24odXJsKTtcbiAgICAgIH1cblxuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlJlcGxhY2U7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICByZXBsYWNlKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhuZXh0TG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIGhhc2ggaGlzdG9yeS5yZXBsYWNlKFwiICsgSlNPTi5zdHJpbmdpZnkodG8pICsgXCIpXCIpIDogdm9pZCAwO1xuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIHZhciBfZ2V0SGlzdG9yeVN0YXRlQW5kVXI0ID0gZ2V0SGlzdG9yeVN0YXRlQW5kVXJsKG5leHRMb2NhdGlvbiwgaW5kZXgpLFxuICAgICAgICAgIGhpc3RvcnlTdGF0ZSA9IF9nZXRIaXN0b3J5U3RhdGVBbmRVcjRbMF0sXG4gICAgICAgICAgdXJsID0gX2dldEhpc3RvcnlTdGF0ZUFuZFVyNFsxXTsgLy8gVE9ETzogU3VwcG9ydCBmb3JjZWQgcmVsb2FkaW5nXG5cblxuICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoaGlzdG9yeVN0YXRlLCAnJywgdXJsKTtcbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ28oZGVsdGEpIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKGRlbHRhKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGdldCBhY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH0sXG5cbiAgICBnZXQgbG9jYXRpb24oKSB7XG4gICAgICByZXR1cm4gbG9jYXRpb247XG4gICAgfSxcblxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBiYWNrOiBmdW5jdGlvbiBiYWNrKCkge1xuICAgICAgZ28oLTEpO1xuICAgIH0sXG4gICAgZm9yd2FyZDogZnVuY3Rpb24gZm9yd2FyZCgpIHtcbiAgICAgIGdvKDEpO1xuICAgIH0sXG4gICAgbGlzdGVuOiBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBibG9jazogZnVuY3Rpb24gYmxvY2soYmxvY2tlcikge1xuICAgICAgdmFyIHVuYmxvY2sgPSBibG9ja2Vycy5wdXNoKGJsb2NrZXIpO1xuXG4gICAgICBpZiAoYmxvY2tlcnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEJlZm9yZVVubG9hZEV2ZW50VHlwZSwgcHJvbXB0QmVmb3JlVW5sb2FkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdW5ibG9jaygpOyAvLyBSZW1vdmUgdGhlIGJlZm9yZXVubG9hZCBsaXN0ZW5lciBzbyB0aGUgZG9jdW1lbnQgbWF5XG4gICAgICAgIC8vIHN0aWxsIGJlIHNhbHZhZ2VhYmxlIGluIHRoZSBwYWdlaGlkZSBldmVudC5cbiAgICAgICAgLy8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3VubG9hZGluZy1kb2N1bWVudHNcblxuICAgICAgICBpZiAoIWJsb2NrZXJzLmxlbmd0aCkge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEJlZm9yZVVubG9hZEV2ZW50VHlwZSwgcHJvbXB0QmVmb3JlVW5sb2FkKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuLyoqXHJcbiAqIE1lbW9yeSBoaXN0b3J5IHN0b3JlcyB0aGUgY3VycmVudCBsb2NhdGlvbiBpbiBtZW1vcnkuIEl0IGlzIGRlc2lnbmVkIGZvciB1c2VcclxuICogaW4gc3RhdGVmdWwgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRzIGxpa2UgdGVzdHMgYW5kIFJlYWN0IE5hdGl2ZS5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNjcmVhdGVtZW1vcnloaXN0b3J5XHJcbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIHZhciBfb3B0aW9uczMgPSBvcHRpb25zLFxuICAgICAgX29wdGlvbnMzJGluaXRpYWxFbnRyID0gX29wdGlvbnMzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfb3B0aW9uczMkaW5pdGlhbEVudHIgPT09IHZvaWQgMCA/IFsnLyddIDogX29wdGlvbnMzJGluaXRpYWxFbnRyLFxuICAgICAgaW5pdGlhbEluZGV4ID0gX29wdGlvbnMzLmluaXRpYWxJbmRleDtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgdmFyIGxvY2F0aW9uID0gcmVhZE9ubHkoX2V4dGVuZHMoe1xuICAgICAgcGF0aG5hbWU6ICcvJyxcbiAgICAgIHNlYXJjaDogJycsXG4gICAgICBoYXNoOiAnJyxcbiAgICAgIHN0YXRlOiBudWxsLFxuICAgICAga2V5OiBjcmVhdGVLZXkoKVxuICAgIH0sIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBwYXJzZVBhdGgoZW50cnkpIDogZW50cnkpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nLCBcIlJlbGF0aXZlIHBhdGhuYW1lcyBhcmUgbm90IHN1cHBvcnRlZCBpbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHsgaW5pdGlhbEVudHJpZXMgfSkgKGludmFsaWQgZW50cnk6IFwiICsgSlNPTi5zdHJpbmdpZnkoZW50cnkpICsgXCIpXCIpIDogdm9pZCAwO1xuICAgIHJldHVybiBsb2NhdGlvbjtcbiAgfSk7XG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCA9PSBudWxsID8gZW50cmllcy5sZW5ndGggLSAxIDogaW5pdGlhbEluZGV4LCAwLCBlbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgYWN0aW9uID0gQWN0aW9uLlBvcDtcbiAgdmFyIGxvY2F0aW9uID0gZW50cmllc1tpbmRleF07XG4gIHZhciBsaXN0ZW5lcnMgPSBjcmVhdGVFdmVudHMoKTtcbiAgdmFyIGJsb2NrZXJzID0gY3JlYXRlRXZlbnRzKCk7XG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZih0bykge1xuICAgIHJldHVybiB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gdG8gOiBjcmVhdGVQYXRoKHRvKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUgPT09IHZvaWQgMCkge1xuICAgICAgc3RhdGUgPSBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZWFkT25seShfZXh0ZW5kcyh7XG4gICAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2g6ICcnLFxuICAgICAgaGFzaDogJydcbiAgICB9LCB0eXBlb2YgdG8gPT09ICdzdHJpbmcnID8gcGFyc2VQYXRoKHRvKSA6IHRvLCB7XG4gICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICBrZXk6IGNyZWF0ZUtleSgpXG4gICAgfSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWxsb3dUeChhY3Rpb24sIGxvY2F0aW9uLCByZXRyeSkge1xuICAgIHJldHVybiAhYmxvY2tlcnMubGVuZ3RoIHx8IChibG9ja2Vycy5jYWxsKHtcbiAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgcmV0cnk6IHJldHJ5XG4gICAgfSksIGZhbHNlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFwcGx5VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uKSB7XG4gICAgYWN0aW9uID0gbmV4dEFjdGlvbjtcbiAgICBsb2NhdGlvbiA9IG5leHRMb2NhdGlvbjtcbiAgICBsaXN0ZW5lcnMuY2FsbCh7XG4gICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaCh0bywgc3RhdGUpIHtcbiAgICB2YXIgbmV4dEFjdGlvbiA9IEFjdGlvbi5QdXNoO1xuICAgIHZhciBuZXh0TG9jYXRpb24gPSBnZXROZXh0TG9jYXRpb24odG8sIHN0YXRlKTtcblxuICAgIGZ1bmN0aW9uIHJldHJ5KCkge1xuICAgICAgcHVzaCh0bywgc3RhdGUpO1xuICAgIH1cblxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycsIFwiUmVsYXRpdmUgcGF0aG5hbWVzIGFyZSBub3Qgc3VwcG9ydGVkIGluIG1lbW9yeSBoaXN0b3J5LnB1c2goXCIgKyBKU09OLnN0cmluZ2lmeSh0bykgKyBcIilcIikgOiB2b2lkIDA7XG5cbiAgICBpZiAoYWxsb3dUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24sIHJldHJ5KSkge1xuICAgICAgaW5kZXggKz0gMTtcbiAgICAgIGVudHJpZXMuc3BsaWNlKGluZGV4LCBlbnRyaWVzLmxlbmd0aCwgbmV4dExvY2F0aW9uKTtcbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHRvLCBzdGF0ZSkge1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlJlcGxhY2U7XG4gICAgdmFyIG5leHRMb2NhdGlvbiA9IGdldE5leHRMb2NhdGlvbih0bywgc3RhdGUpO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICByZXBsYWNlKHRvLCBzdGF0ZSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJywgXCJSZWxhdGl2ZSBwYXRobmFtZXMgYXJlIG5vdCBzdXBwb3J0ZWQgaW4gbWVtb3J5IGhpc3RvcnkucmVwbGFjZShcIiArIEpTT04uc3RyaW5naWZ5KHRvKSArIFwiKVwiKSA6IHZvaWQgMDtcblxuICAgIGlmIChhbGxvd1R4KG5leHRBY3Rpb24sIG5leHRMb2NhdGlvbiwgcmV0cnkpKSB7XG4gICAgICBlbnRyaWVzW2luZGV4XSA9IG5leHRMb2NhdGlvbjtcbiAgICAgIGFwcGx5VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnbyhkZWx0YSkge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChpbmRleCArIGRlbHRhLCAwLCBlbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBuZXh0QWN0aW9uID0gQWN0aW9uLlBvcDtcbiAgICB2YXIgbmV4dExvY2F0aW9uID0gZW50cmllc1tuZXh0SW5kZXhdO1xuXG4gICAgZnVuY3Rpb24gcmV0cnkoKSB7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuXG4gICAgaWYgKGFsbG93VHgobmV4dEFjdGlvbiwgbmV4dExvY2F0aW9uLCByZXRyeSkpIHtcbiAgICAgIGluZGV4ID0gbmV4dEluZGV4O1xuICAgICAgYXBwbHlUeChuZXh0QWN0aW9uLCBuZXh0TG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGdldCBpbmRleCgpIHtcbiAgICAgIHJldHVybiBpbmRleDtcbiAgICB9LFxuXG4gICAgZ2V0IGFjdGlvbigpIHtcbiAgICAgIHJldHVybiBhY3Rpb247XG4gICAgfSxcblxuICAgIGdldCBsb2NhdGlvbigpIHtcbiAgICAgIHJldHVybiBsb2NhdGlvbjtcbiAgICB9LFxuXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGJhY2s6IGZ1bmN0aW9uIGJhY2soKSB7XG4gICAgICBnbygtMSk7XG4gICAgfSxcbiAgICBmb3J3YXJkOiBmdW5jdGlvbiBmb3J3YXJkKCkge1xuICAgICAgZ28oMSk7XG4gICAgfSxcbiAgICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIGJsb2NrOiBmdW5jdGlvbiBibG9jayhibG9ja2VyKSB7XG4gICAgICByZXR1cm4gYmxvY2tlcnMucHVzaChibG9ja2VyKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gVVRJTFNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cblxuZnVuY3Rpb24gcHJvbXB0QmVmb3JlVW5sb2FkKGV2ZW50KSB7XG4gIC8vIENhbmNlbCB0aGUgZXZlbnQuXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIENocm9tZSAoYW5kIGxlZ2FjeSBJRSkgcmVxdWlyZXMgcmV0dXJuVmFsdWUgdG8gYmUgc2V0LlxuXG4gIGV2ZW50LnJldHVyblZhbHVlID0gJyc7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50cygpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgIHJldHVybiBoYW5kbGVycy5sZW5ndGg7XG4gICAgfSxcblxuICAgIHB1c2g6IGZ1bmN0aW9uIHB1c2goZm4pIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goZm4pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgICByZXR1cm4gaGFuZGxlciAhPT0gZm47XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGNhbGw6IGZ1bmN0aW9uIGNhbGwoYXJnKSB7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICByZXR1cm4gZm4gJiYgZm4oYXJnKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDgpO1xufVxuLyoqXHJcbiAqIENyZWF0ZXMgYSBzdHJpbmcgVVJMIHBhdGggZnJvbSB0aGUgZ2l2ZW4gcGF0aG5hbWUsIHNlYXJjaCwgYW5kIGhhc2ggY29tcG9uZW50cy5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVtaXgtcnVuL2hpc3RvcnkvdHJlZS9tYWluL2RvY3MvYXBpLXJlZmVyZW5jZS5tZCNjcmVhdGVwYXRoXHJcbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgoX3JlZikge1xuICB2YXIgX3JlZiRwYXRobmFtZSA9IF9yZWYucGF0aG5hbWUsXG4gICAgICBwYXRobmFtZSA9IF9yZWYkcGF0aG5hbWUgPT09IHZvaWQgMCA/ICcvJyA6IF9yZWYkcGF0aG5hbWUsXG4gICAgICBfcmVmJHNlYXJjaCA9IF9yZWYuc2VhcmNoLFxuICAgICAgc2VhcmNoID0gX3JlZiRzZWFyY2ggPT09IHZvaWQgMCA/ICcnIDogX3JlZiRzZWFyY2gsXG4gICAgICBfcmVmJGhhc2ggPSBfcmVmLmhhc2gsXG4gICAgICBoYXNoID0gX3JlZiRoYXNoID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkaGFzaDtcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aG5hbWUgKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogJz8nICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGhuYW1lICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogJyMnICsgaGFzaDtcbiAgcmV0dXJuIHBhdGhuYW1lO1xufVxuLyoqXHJcbiAqIFBhcnNlcyBhIHN0cmluZyBVUkwgcGF0aCBpbnRvIGl0cyBzZXBhcmF0ZSBwYXRobmFtZSwgc2VhcmNoLCBhbmQgaGFzaCBjb21wb25lbnRzLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9yZW1peC1ydW4vaGlzdG9yeS90cmVlL21haW4vZG9jcy9hcGktcmVmZXJlbmNlLm1kI3BhcnNlcGF0aFxyXG4gKi9cblxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhcnNlZFBhdGggPSB7fTtcblxuICBpZiAocGF0aCkge1xuICAgIHZhciBoYXNoSW5kZXggPSBwYXRoLmluZGV4T2YoJyMnKTtcblxuICAgIGlmIChoYXNoSW5kZXggPj0gMCkge1xuICAgICAgcGFyc2VkUGF0aC5oYXNoID0gcGF0aC5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICAgIHBhdGggPSBwYXRoLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICAgIH1cblxuICAgIHZhciBzZWFyY2hJbmRleCA9IHBhdGguaW5kZXhPZignPycpO1xuXG4gICAgaWYgKHNlYXJjaEluZGV4ID49IDApIHtcbiAgICAgIHBhcnNlZFBhdGguc2VhcmNoID0gcGF0aC5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgICAgcGF0aCA9IHBhdGguc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgICB9XG5cbiAgICBpZiAocGF0aCkge1xuICAgICAgcGFyc2VkUGF0aC5wYXRobmFtZSA9IHBhdGg7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnNlZFBhdGg7XG59XG5cbmV4cG9ydCB7IEFjdGlvbiwgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVQYXRoLCBwYXJzZVBhdGggfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCIvKipcbiAqIFJlYWN0IFJvdXRlciB2Ni4zLjBcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIFJlbWl4IFNvZnR3YXJlIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UubWQgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAbGljZW5zZSBNSVRcbiAqL1xuaW1wb3J0IHsgcGFyc2VQYXRoLCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBBY3Rpb24gfSBmcm9tICdoaXN0b3J5JztcbmV4cG9ydCB7IEFjdGlvbiBhcyBOYXZpZ2F0aW9uVHlwZSwgY3JlYXRlUGF0aCwgcGFyc2VQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIGNyZWF0ZUVsZW1lbnQsIHVzZVN0YXRlLCB1c2VMYXlvdXRFZmZlY3QsIENoaWxkcmVuLCBpc1ZhbGlkRWxlbWVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE5hdmlnYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTmF2aWdhdGlvbkNvbnRleHQuZGlzcGxheU5hbWUgPSBcIk5hdmlnYXRpb25cIjtcbn1cblxuY29uc3QgTG9jYXRpb25Db250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTG9jYXRpb25Db250ZXh0LmRpc3BsYXlOYW1lID0gXCJMb2NhdGlvblwiO1xufVxuXG5jb25zdCBSb3V0ZUNvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh7XG4gIG91dGxldDogbnVsbCxcbiAgbWF0Y2hlczogW11cbn0pO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUm91dGVcIjtcbn1cblxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG59XG5mdW5jdGlvbiB3YXJuaW5nKGNvbmQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIpIGNvbnNvbGUud2FybihtZXNzYWdlKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCBSb3V0ZXIhXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB5b3UgY2FuIG1vcmUgZWFzaWx5XG4gICAgICAvLyBmaW5kIHRoZSBzb3VyY2UgZm9yIGEgd2FybmluZyB0aGF0IGFwcGVhcnMgaW4gdGhlIGNvbnNvbGUgYnlcbiAgICAgIC8vIGVuYWJsaW5nIFwicGF1c2Ugb24gZXhjZXB0aW9uc1wiIGluIHlvdXIgSmF2YVNjcmlwdCBkZWJ1Z2dlci5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxufVxuY29uc3QgYWxyZWFkeVdhcm5lZCA9IHt9O1xuZnVuY3Rpb24gd2FybmluZ09uY2Uoa2V5LCBjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCAmJiAhYWxyZWFkeVdhcm5lZFtrZXldKSB7XG4gICAgYWxyZWFkeVdhcm5lZFtrZXldID0gdHJ1ZTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBtZXNzYWdlKSA6IHZvaWQgMDtcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgYSBwYXRoIHdpdGggcGFyYW1zIGludGVycG9sYXRlZC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI2dlbmVyYXRlcGF0aFxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGgucmVwbGFjZSgvOihcXHcrKS9nLCAoXywga2V5KSA9PiB7XG4gICAgIShwYXJhbXNba2V5XSAhPSBudWxsKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJNaXNzaW5nIFxcXCI6XCIgKyBrZXkgKyBcIlxcXCIgcGFyYW1cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHJldHVybiBwYXJhbXNba2V5XTtcbiAgfSkucmVwbGFjZSgvXFwvKlxcKiQvLCBfID0+IHBhcmFtc1tcIipcIl0gPT0gbnVsbCA/IFwiXCIgOiBwYXJhbXNbXCIqXCJdLnJlcGxhY2UoL15cXC8qLywgXCIvXCIpKTtcbn1cbi8qKlxuICogQSBSb3V0ZU1hdGNoIGNvbnRhaW5zIGluZm8gYWJvdXQgaG93IGEgcm91dGUgbWF0Y2hlZCBhIFVSTC5cbiAqL1xuXG4vKipcbiAqIE1hdGNoZXMgdGhlIGdpdmVuIHJvdXRlcyB0byBhIGxvY2F0aW9uIGFuZCByZXR1cm5zIHRoZSBtYXRjaCBkYXRhLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hyb3V0ZXNcbiAqL1xuZnVuY3Rpb24gbWF0Y2hSb3V0ZXMocm91dGVzLCBsb2NhdGlvbkFyZywgYmFzZW5hbWUpIHtcbiAgaWYgKGJhc2VuYW1lID09PSB2b2lkIDApIHtcbiAgICBiYXNlbmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IGxvY2F0aW9uID0gdHlwZW9mIGxvY2F0aW9uQXJnID09PSBcInN0cmluZ1wiID8gcGFyc2VQYXRoKGxvY2F0aW9uQXJnKSA6IGxvY2F0aW9uQXJnO1xuICBsZXQgcGF0aG5hbWUgPSBzdHJpcEJhc2VuYW1lKGxvY2F0aW9uLnBhdGhuYW1lIHx8IFwiL1wiLCBiYXNlbmFtZSk7XG5cbiAgaWYgKHBhdGhuYW1lID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBicmFuY2hlcyA9IGZsYXR0ZW5Sb3V0ZXMocm91dGVzKTtcbiAgcmFua1JvdXRlQnJhbmNoZXMoYnJhbmNoZXMpO1xuICBsZXQgbWF0Y2hlcyA9IG51bGw7XG5cbiAgZm9yIChsZXQgaSA9IDA7IG1hdGNoZXMgPT0gbnVsbCAmJiBpIDwgYnJhbmNoZXMubGVuZ3RoOyArK2kpIHtcbiAgICBtYXRjaGVzID0gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2hlc1tpXSwgcGF0aG5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIG1hdGNoZXM7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW5Sb3V0ZXMocm91dGVzLCBicmFuY2hlcywgcGFyZW50c01ldGEsIHBhcmVudFBhdGgpIHtcbiAgaWYgKGJyYW5jaGVzID09PSB2b2lkIDApIHtcbiAgICBicmFuY2hlcyA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudHNNZXRhID09PSB2b2lkIDApIHtcbiAgICBwYXJlbnRzTWV0YSA9IFtdO1xuICB9XG5cbiAgaWYgKHBhcmVudFBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhcmVudFBhdGggPSBcIlwiO1xuICB9XG5cbiAgcm91dGVzLmZvckVhY2goKHJvdXRlLCBpbmRleCkgPT4ge1xuICAgIGxldCBtZXRhID0ge1xuICAgICAgcmVsYXRpdmVQYXRoOiByb3V0ZS5wYXRoIHx8IFwiXCIsXG4gICAgICBjYXNlU2Vuc2l0aXZlOiByb3V0ZS5jYXNlU2Vuc2l0aXZlID09PSB0cnVlLFxuICAgICAgY2hpbGRyZW5JbmRleDogaW5kZXgsXG4gICAgICByb3V0ZVxuICAgIH07XG5cbiAgICBpZiAobWV0YS5yZWxhdGl2ZVBhdGguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICFtZXRhLnJlbGF0aXZlUGF0aC5zdGFydHNXaXRoKHBhcmVudFBhdGgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkFic29sdXRlIHJvdXRlIHBhdGggXFxcIlwiICsgbWV0YS5yZWxhdGl2ZVBhdGggKyBcIlxcXCIgbmVzdGVkIHVuZGVyIHBhdGggXCIgKyAoXCJcXFwiXCIgKyBwYXJlbnRQYXRoICsgXCJcXFwiIGlzIG5vdCB2YWxpZC4gQW4gYWJzb2x1dGUgY2hpbGQgcm91dGUgcGF0aCBcIikgKyBcIm11c3Qgc3RhcnQgd2l0aCB0aGUgY29tYmluZWQgcGF0aCBvZiBhbGwgaXRzIHBhcmVudCByb3V0ZXMuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIG1ldGEucmVsYXRpdmVQYXRoID0gbWV0YS5yZWxhdGl2ZVBhdGguc2xpY2UocGFyZW50UGF0aC5sZW5ndGgpO1xuICAgIH1cblxuICAgIGxldCBwYXRoID0gam9pblBhdGhzKFtwYXJlbnRQYXRoLCBtZXRhLnJlbGF0aXZlUGF0aF0pO1xuICAgIGxldCByb3V0ZXNNZXRhID0gcGFyZW50c01ldGEuY29uY2F0KG1ldGEpOyAvLyBBZGQgdGhlIGNoaWxkcmVuIGJlZm9yZSBhZGRpbmcgdGhpcyByb3V0ZSB0byB0aGUgYXJyYXkgc28gd2UgdHJhdmVyc2UgdGhlXG4gICAgLy8gcm91dGUgdHJlZSBkZXB0aC1maXJzdCBhbmQgY2hpbGQgcm91dGVzIGFwcGVhciBiZWZvcmUgdGhlaXIgcGFyZW50cyBpblxuICAgIC8vIHRoZSBcImZsYXR0ZW5lZFwiIHZlcnNpb24uXG5cbiAgICBpZiAocm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgIShyb3V0ZS5pbmRleCAhPT0gdHJ1ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiSW5kZXggcm91dGVzIG11c3Qgbm90IGhhdmUgY2hpbGQgcm91dGVzLiBQbGVhc2UgcmVtb3ZlIFwiICsgKFwiYWxsIGNoaWxkIHJvdXRlcyBmcm9tIHJvdXRlIHBhdGggXFxcIlwiICsgcGF0aCArIFwiXFxcIi5cIikpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIGZsYXR0ZW5Sb3V0ZXMocm91dGUuY2hpbGRyZW4sIGJyYW5jaGVzLCByb3V0ZXNNZXRhLCBwYXRoKTtcbiAgICB9IC8vIFJvdXRlcyB3aXRob3V0IGEgcGF0aCBzaG91bGRuJ3QgZXZlciBtYXRjaCBieSB0aGVtc2VsdmVzIHVubGVzcyB0aGV5IGFyZVxuICAgIC8vIGluZGV4IHJvdXRlcywgc28gZG9uJ3QgYWRkIHRoZW0gdG8gdGhlIGxpc3Qgb2YgcG9zc2libGUgYnJhbmNoZXMuXG5cblxuICAgIGlmIChyb3V0ZS5wYXRoID09IG51bGwgJiYgIXJvdXRlLmluZGV4KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYnJhbmNoZXMucHVzaCh7XG4gICAgICBwYXRoLFxuICAgICAgc2NvcmU6IGNvbXB1dGVTY29yZShwYXRoLCByb3V0ZS5pbmRleCksXG4gICAgICByb3V0ZXNNZXRhXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gYnJhbmNoZXM7XG59XG5cbmZ1bmN0aW9uIHJhbmtSb3V0ZUJyYW5jaGVzKGJyYW5jaGVzKSB7XG4gIGJyYW5jaGVzLnNvcnQoKGEsIGIpID0+IGEuc2NvcmUgIT09IGIuc2NvcmUgPyBiLnNjb3JlIC0gYS5zY29yZSAvLyBIaWdoZXIgc2NvcmUgZmlyc3RcbiAgOiBjb21wYXJlSW5kZXhlcyhhLnJvdXRlc01ldGEubWFwKG1ldGEgPT4gbWV0YS5jaGlsZHJlbkluZGV4KSwgYi5yb3V0ZXNNZXRhLm1hcChtZXRhID0+IG1ldGEuY2hpbGRyZW5JbmRleCkpKTtcbn1cblxuY29uc3QgcGFyYW1SZSA9IC9eOlxcdyskLztcbmNvbnN0IGR5bmFtaWNTZWdtZW50VmFsdWUgPSAzO1xuY29uc3QgaW5kZXhSb3V0ZVZhbHVlID0gMjtcbmNvbnN0IGVtcHR5U2VnbWVudFZhbHVlID0gMTtcbmNvbnN0IHN0YXRpY1NlZ21lbnRWYWx1ZSA9IDEwO1xuY29uc3Qgc3BsYXRQZW5hbHR5ID0gLTI7XG5cbmNvbnN0IGlzU3BsYXQgPSBzID0+IHMgPT09IFwiKlwiO1xuXG5mdW5jdGlvbiBjb21wdXRlU2NvcmUocGF0aCwgaW5kZXgpIHtcbiAgbGV0IHNlZ21lbnRzID0gcGF0aC5zcGxpdChcIi9cIik7XG4gIGxldCBpbml0aWFsU2NvcmUgPSBzZWdtZW50cy5sZW5ndGg7XG5cbiAgaWYgKHNlZ21lbnRzLnNvbWUoaXNTcGxhdCkpIHtcbiAgICBpbml0aWFsU2NvcmUgKz0gc3BsYXRQZW5hbHR5O1xuICB9XG5cbiAgaWYgKGluZGV4KSB7XG4gICAgaW5pdGlhbFNjb3JlICs9IGluZGV4Um91dGVWYWx1ZTtcbiAgfVxuXG4gIHJldHVybiBzZWdtZW50cy5maWx0ZXIocyA9PiAhaXNTcGxhdChzKSkucmVkdWNlKChzY29yZSwgc2VnbWVudCkgPT4gc2NvcmUgKyAocGFyYW1SZS50ZXN0KHNlZ21lbnQpID8gZHluYW1pY1NlZ21lbnRWYWx1ZSA6IHNlZ21lbnQgPT09IFwiXCIgPyBlbXB0eVNlZ21lbnRWYWx1ZSA6IHN0YXRpY1NlZ21lbnRWYWx1ZSksIGluaXRpYWxTY29yZSk7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVJbmRleGVzKGEsIGIpIHtcbiAgbGV0IHNpYmxpbmdzID0gYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuc2xpY2UoMCwgLTEpLmV2ZXJ5KChuLCBpKSA9PiBuID09PSBiW2ldKTtcbiAgcmV0dXJuIHNpYmxpbmdzID8gLy8gSWYgdHdvIHJvdXRlcyBhcmUgc2libGluZ3MsIHdlIHNob3VsZCB0cnkgdG8gbWF0Y2ggdGhlIGVhcmxpZXIgc2libGluZ1xuICAvLyBmaXJzdC4gVGhpcyBhbGxvd3MgcGVvcGxlIHRvIGhhdmUgZmluZS1ncmFpbmVkIGNvbnRyb2wgb3ZlciB0aGUgbWF0Y2hpbmdcbiAgLy8gYmVoYXZpb3IgYnkgc2ltcGx5IHB1dHRpbmcgcm91dGVzIHdpdGggaWRlbnRpY2FsIHBhdGhzIGluIHRoZSBvcmRlciB0aGV5XG4gIC8vIHdhbnQgdGhlbSB0cmllZC5cbiAgYVthLmxlbmd0aCAtIDFdIC0gYltiLmxlbmd0aCAtIDFdIDogLy8gT3RoZXJ3aXNlLCBpdCBkb2Vzbid0IHJlYWxseSBtYWtlIHNlbnNlIHRvIHJhbmsgbm9uLXNpYmxpbmdzIGJ5IGluZGV4LFxuICAvLyBzbyB0aGV5IHNvcnQgZXF1YWxseS5cbiAgMDtcbn1cblxuZnVuY3Rpb24gbWF0Y2hSb3V0ZUJyYW5jaChicmFuY2gsIHBhdGhuYW1lKSB7XG4gIGxldCB7XG4gICAgcm91dGVzTWV0YVxuICB9ID0gYnJhbmNoO1xuICBsZXQgbWF0Y2hlZFBhcmFtcyA9IHt9O1xuICBsZXQgbWF0Y2hlZFBhdGhuYW1lID0gXCIvXCI7XG4gIGxldCBtYXRjaGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3V0ZXNNZXRhLmxlbmd0aDsgKytpKSB7XG4gICAgbGV0IG1ldGEgPSByb3V0ZXNNZXRhW2ldO1xuICAgIGxldCBlbmQgPSBpID09PSByb3V0ZXNNZXRhLmxlbmd0aCAtIDE7XG4gICAgbGV0IHJlbWFpbmluZ1BhdGhuYW1lID0gbWF0Y2hlZFBhdGhuYW1lID09PSBcIi9cIiA/IHBhdGhuYW1lIDogcGF0aG5hbWUuc2xpY2UobWF0Y2hlZFBhdGhuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG4gICAgbGV0IG1hdGNoID0gbWF0Y2hQYXRoKHtcbiAgICAgIHBhdGg6IG1ldGEucmVsYXRpdmVQYXRoLFxuICAgICAgY2FzZVNlbnNpdGl2ZTogbWV0YS5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZW5kXG4gICAgfSwgcmVtYWluaW5nUGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIE9iamVjdC5hc3NpZ24obWF0Y2hlZFBhcmFtcywgbWF0Y2gucGFyYW1zKTtcbiAgICBsZXQgcm91dGUgPSBtZXRhLnJvdXRlO1xuICAgIG1hdGNoZXMucHVzaCh7XG4gICAgICBwYXJhbXM6IG1hdGNoZWRQYXJhbXMsXG4gICAgICBwYXRobmFtZTogam9pblBhdGhzKFttYXRjaGVkUGF0aG5hbWUsIG1hdGNoLnBhdGhuYW1lXSksXG4gICAgICBwYXRobmFtZUJhc2U6IG5vcm1hbGl6ZVBhdGhuYW1lKGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKSksXG4gICAgICByb3V0ZVxuICAgIH0pO1xuXG4gICAgaWYgKG1hdGNoLnBhdGhuYW1lQmFzZSAhPT0gXCIvXCIpIHtcbiAgICAgIG1hdGNoZWRQYXRobmFtZSA9IGpvaW5QYXRocyhbbWF0Y2hlZFBhdGhuYW1lLCBtYXRjaC5wYXRobmFtZUJhc2VdKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcztcbn1cbi8qKlxuICogQSBQYXRoUGF0dGVybiBpcyB1c2VkIHRvIG1hdGNoIG9uIHNvbWUgcG9ydGlvbiBvZiBhIFVSTCBwYXRobmFtZS5cbiAqL1xuXG5cbi8qKlxuICogUGVyZm9ybXMgcGF0dGVybiBtYXRjaGluZyBvbiBhIFVSTCBwYXRobmFtZSBhbmQgcmV0dXJucyBpbmZvcm1hdGlvbiBhYm91dFxuICogdGhlIG1hdGNoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbWF0Y2hwYXRoXG4gKi9cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXR0ZXJuLCBwYXRobmFtZSkge1xuICBpZiAodHlwZW9mIHBhdHRlcm4gPT09IFwic3RyaW5nXCIpIHtcbiAgICBwYXR0ZXJuID0ge1xuICAgICAgcGF0aDogcGF0dGVybixcbiAgICAgIGNhc2VTZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgZW5kOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIGxldCBbbWF0Y2hlciwgcGFyYW1OYW1lc10gPSBjb21waWxlUGF0aChwYXR0ZXJuLnBhdGgsIHBhdHRlcm4uY2FzZVNlbnNpdGl2ZSwgcGF0dGVybi5lbmQpO1xuICBsZXQgbWF0Y2ggPSBwYXRobmFtZS5tYXRjaChtYXRjaGVyKTtcbiAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gIGxldCBtYXRjaGVkUGF0aG5hbWUgPSBtYXRjaFswXTtcbiAgbGV0IHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5yZXBsYWNlKC8oLilcXC8rJC8sIFwiJDFcIik7XG4gIGxldCBjYXB0dXJlR3JvdXBzID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXJhbXMgPSBwYXJhbU5hbWVzLnJlZHVjZSgobWVtbywgcGFyYW1OYW1lLCBpbmRleCkgPT4ge1xuICAgIC8vIFdlIG5lZWQgdG8gY29tcHV0ZSB0aGUgcGF0aG5hbWVCYXNlIGhlcmUgdXNpbmcgdGhlIHJhdyBzcGxhdCB2YWx1ZVxuICAgIC8vIGluc3RlYWQgb2YgdXNpbmcgcGFyYW1zW1wiKlwiXSBsYXRlciBiZWNhdXNlIGl0IHdpbGwgYmUgZGVjb2RlZCB0aGVuXG4gICAgaWYgKHBhcmFtTmFtZSA9PT0gXCIqXCIpIHtcbiAgICAgIGxldCBzcGxhdFZhbHVlID0gY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIjtcbiAgICAgIHBhdGhuYW1lQmFzZSA9IG1hdGNoZWRQYXRobmFtZS5zbGljZSgwLCBtYXRjaGVkUGF0aG5hbWUubGVuZ3RoIC0gc3BsYXRWYWx1ZS5sZW5ndGgpLnJlcGxhY2UoLyguKVxcLyskLywgXCIkMVwiKTtcbiAgICB9XG5cbiAgICBtZW1vW3BhcmFtTmFtZV0gPSBzYWZlbHlEZWNvZGVVUklDb21wb25lbnQoY2FwdHVyZUdyb3Vwc1tpbmRleF0gfHwgXCJcIiwgcGFyYW1OYW1lKTtcbiAgICByZXR1cm4gbWVtbztcbiAgfSwge30pO1xuICByZXR1cm4ge1xuICAgIHBhcmFtcyxcbiAgICBwYXRobmFtZTogbWF0Y2hlZFBhdGhuYW1lLFxuICAgIHBhdGhuYW1lQmFzZSxcbiAgICBwYXR0ZXJuXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgsIGNhc2VTZW5zaXRpdmUsIGVuZCkge1xuICBpZiAoY2FzZVNlbnNpdGl2ZSA9PT0gdm9pZCAwKSB7XG4gICAgY2FzZVNlbnNpdGl2ZSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKGVuZCA9PT0gdm9pZCAwKSB7XG4gICAgZW5kID0gdHJ1ZTtcbiAgfVxuXG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocGF0aCA9PT0gXCIqXCIgfHwgIXBhdGguZW5kc1dpdGgoXCIqXCIpIHx8IHBhdGguZW5kc1dpdGgoXCIvKlwiKSwgXCJSb3V0ZSBwYXRoIFxcXCJcIiArIHBhdGggKyBcIlxcXCIgd2lsbCBiZSB0cmVhdGVkIGFzIGlmIGl0IHdlcmUgXCIgKyAoXCJcXFwiXCIgKyBwYXRoLnJlcGxhY2UoL1xcKiQvLCBcIi8qXCIpICsgXCJcXFwiIGJlY2F1c2UgdGhlIGAqYCBjaGFyYWN0ZXIgbXVzdCBcIikgKyBcImFsd2F5cyBmb2xsb3cgYSBgL2AgaW4gdGhlIHBhdHRlcm4uIFRvIGdldCByaWQgb2YgdGhpcyB3YXJuaW5nLCBcIiArIChcInBsZWFzZSBjaGFuZ2UgdGhlIHJvdXRlIHBhdGggdG8gXFxcIlwiICsgcGF0aC5yZXBsYWNlKC9cXCokLywgXCIvKlwiKSArIFwiXFxcIi5cIikpIDogdm9pZCAwO1xuICBsZXQgcGFyYW1OYW1lcyA9IFtdO1xuICBsZXQgcmVnZXhwU291cmNlID0gXCJeXCIgKyBwYXRoLnJlcGxhY2UoL1xcLypcXCo/JC8sIFwiXCIpIC8vIElnbm9yZSB0cmFpbGluZyAvIGFuZCAvKiwgd2UnbGwgaGFuZGxlIGl0IGJlbG93XG4gIC5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKSAvLyBNYWtlIHN1cmUgaXQgaGFzIGEgbGVhZGluZyAvXG4gIC5yZXBsYWNlKC9bXFxcXC4qK14kP3t9fCgpW1xcXV0vZywgXCJcXFxcJCZcIikgLy8gRXNjYXBlIHNwZWNpYWwgcmVnZXggY2hhcnNcbiAgLnJlcGxhY2UoLzooXFx3KykvZywgKF8sIHBhcmFtTmFtZSkgPT4ge1xuICAgIHBhcmFtTmFtZXMucHVzaChwYXJhbU5hbWUpO1xuICAgIHJldHVybiBcIihbXlxcXFwvXSspXCI7XG4gIH0pO1xuXG4gIGlmIChwYXRoLmVuZHNXaXRoKFwiKlwiKSkge1xuICAgIHBhcmFtTmFtZXMucHVzaChcIipcIik7XG4gICAgcmVnZXhwU291cmNlICs9IHBhdGggPT09IFwiKlwiIHx8IHBhdGggPT09IFwiLypcIiA/IFwiKC4qKSRcIiAvLyBBbHJlYWR5IG1hdGNoZWQgdGhlIGluaXRpYWwgLywganVzdCBtYXRjaCB0aGUgcmVzdFxuICAgIDogXCIoPzpcXFxcLyguKyl8XFxcXC8qKSRcIjsgLy8gRG9uJ3QgaW5jbHVkZSB0aGUgLyBpbiBwYXJhbXNbXCIqXCJdXG4gIH0gZWxzZSB7XG4gICAgcmVnZXhwU291cmNlICs9IGVuZCA/IFwiXFxcXC8qJFwiIC8vIFdoZW4gbWF0Y2hpbmcgdG8gdGhlIGVuZCwgaWdub3JlIHRyYWlsaW5nIHNsYXNoZXNcbiAgICA6IC8vIE90aGVyd2lzZSwgbWF0Y2ggYSB3b3JkIGJvdW5kYXJ5IG9yIGEgcHJvY2VlZGluZyAvLiBUaGUgd29yZCBib3VuZGFyeSByZXN0cmljdHNcbiAgICAvLyBwYXJlbnQgcm91dGVzIHRvIG1hdGNoaW5nIG9ubHkgdGhlaXIgb3duIHdvcmRzIGFuZCBub3RoaW5nIG1vcmUsIGUuZy4gcGFyZW50XG4gICAgLy8gcm91dGUgXCIvaG9tZVwiIHNob3VsZCBub3QgbWF0Y2ggXCIvaG9tZTJcIi5cbiAgICAvLyBBZGRpdGlvbmFsbHksIGFsbG93IHBhdGhzIHN0YXJ0aW5nIHdpdGggYC5gLCBgLWAsIGB+YCwgYW5kIHVybC1lbmNvZGVkIGVudGl0aWVzLFxuICAgIC8vIGJ1dCBkbyBub3QgY29uc3VtZSB0aGUgY2hhcmFjdGVyIGluIHRoZSBtYXRjaGVkIHBhdGggc28gdGhleSBjYW4gbWF0Y2ggYWdhaW5zdFxuICAgIC8vIG5lc3RlZCBwYXRocy5cbiAgICBcIig/Oig/PVsufi1dfCVbMC05QS1GXXsyfSl8XFxcXGJ8XFxcXC98JClcIjtcbiAgfVxuXG4gIGxldCBtYXRjaGVyID0gbmV3IFJlZ0V4cChyZWdleHBTb3VyY2UsIGNhc2VTZW5zaXRpdmUgPyB1bmRlZmluZWQgOiBcImlcIik7XG4gIHJldHVybiBbbWF0Y2hlciwgcGFyYW1OYW1lc107XG59XG5cbmZ1bmN0aW9uIHNhZmVseURlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSwgcGFyYW1OYW1lKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJUaGUgdmFsdWUgZm9yIHRoZSBVUkwgcGFyYW0gXFxcIlwiICsgcGFyYW1OYW1lICsgXCJcXFwiIHdpbGwgbm90IGJlIGRlY29kZWQgYmVjYXVzZVwiICsgKFwiIHRoZSBzdHJpbmcgXFxcIlwiICsgdmFsdWUgKyBcIlxcXCIgaXMgYSBtYWxmb3JtZWQgVVJMIHNlZ21lbnQuIFRoaXMgaXMgcHJvYmFibHlcIikgKyAoXCIgZHVlIHRvIGEgYmFkIHBlcmNlbnQgZW5jb2RpbmcgKFwiICsgZXJyb3IgKyBcIikuXCIpKSA6IHZvaWQgMDtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn1cbi8qKlxuICogUmV0dXJucyBhIHJlc29sdmVkIHBhdGggb2JqZWN0IHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBwYXRobmFtZS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3Jlc29sdmVwYXRoXG4gKi9cblxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aCh0bywgZnJvbVBhdGhuYW1lKSB7XG4gIGlmIChmcm9tUGF0aG5hbWUgPT09IHZvaWQgMCkge1xuICAgIGZyb21QYXRobmFtZSA9IFwiL1wiO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZTogdG9QYXRobmFtZSxcbiAgICBzZWFyY2ggPSBcIlwiLFxuICAgIGhhc2ggPSBcIlwiXG4gIH0gPSB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pIDogdG87XG4gIGxldCBwYXRobmFtZSA9IHRvUGF0aG5hbWUgPyB0b1BhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvXCIpID8gdG9QYXRobmFtZSA6IHJlc29sdmVQYXRobmFtZSh0b1BhdGhuYW1lLCBmcm9tUGF0aG5hbWUpIDogZnJvbVBhdGhuYW1lO1xuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaDogbm9ybWFsaXplU2VhcmNoKHNlYXJjaCksXG4gICAgaGFzaDogbm9ybWFsaXplSGFzaChoYXNoKVxuICB9O1xufVxuXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUocmVsYXRpdmVQYXRoLCBmcm9tUGF0aG5hbWUpIHtcbiAgbGV0IHNlZ21lbnRzID0gZnJvbVBhdGhuYW1lLnJlcGxhY2UoL1xcLyskLywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICBsZXQgcmVsYXRpdmVTZWdtZW50cyA9IHJlbGF0aXZlUGF0aC5zcGxpdChcIi9cIik7XG4gIHJlbGF0aXZlU2VnbWVudHMuZm9yRWFjaChzZWdtZW50ID0+IHtcbiAgICBpZiAoc2VnbWVudCA9PT0gXCIuLlwiKSB7XG4gICAgICAvLyBLZWVwIHRoZSByb290IFwiXCIgc2VnbWVudCBzbyB0aGUgcGF0aG5hbWUgc3RhcnRzIGF0IC9cbiAgICAgIGlmIChzZWdtZW50cy5sZW5ndGggPiAxKSBzZWdtZW50cy5wb3AoKTtcbiAgICB9IGVsc2UgaWYgKHNlZ21lbnQgIT09IFwiLlwiKSB7XG4gICAgICBzZWdtZW50cy5wdXNoKHNlZ21lbnQpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzZWdtZW50cy5sZW5ndGggPiAxID8gc2VnbWVudHMuam9pbihcIi9cIikgOiBcIi9cIjtcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVRvKHRvQXJnLCByb3V0ZVBhdGhuYW1lcywgbG9jYXRpb25QYXRobmFtZSkge1xuICBsZXQgdG8gPSB0eXBlb2YgdG9BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG9BcmcpIDogdG9Bcmc7XG4gIGxldCB0b1BhdGhuYW1lID0gdG9BcmcgPT09IFwiXCIgfHwgdG8ucGF0aG5hbWUgPT09IFwiXCIgPyBcIi9cIiA6IHRvLnBhdGhuYW1lOyAvLyBJZiBhIHBhdGhuYW1lIGlzIGV4cGxpY2l0bHkgcHJvdmlkZWQgaW4gYHRvYCwgaXQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAvLyByb3V0ZSBjb250ZXh0LiBUaGlzIGlzIGV4cGxhaW5lZCBpbiBgTm90ZSBvbiBgPExpbmsgdG8+YCB2YWx1ZXNgIGluIG91clxuICAvLyBtaWdyYXRpb24gZ3VpZGUgZnJvbSB2NSBhcyBhIG1lYW5zIG9mIGRpc2FtYmlndWF0aW9uIGJldHdlZW4gYHRvYCB2YWx1ZXNcbiAgLy8gdGhhdCBiZWdpbiB3aXRoIGAvYCBhbmQgdGhvc2UgdGhhdCBkbyBub3QuIEhvd2V2ZXIsIHRoaXMgaXMgcHJvYmxlbWF0aWMgZm9yXG4gIC8vIGB0b2AgdmFsdWVzIHRoYXQgZG8gbm90IHByb3ZpZGUgYSBwYXRobmFtZS4gYHRvYCBjYW4gc2ltcGx5IGJlIGEgc2VhcmNoIG9yXG4gIC8vIGhhc2ggc3RyaW5nLCBpbiB3aGljaCBjYXNlIHdlIHNob3VsZCBhc3N1bWUgdGhhdCB0aGUgbmF2aWdhdGlvbiBpcyByZWxhdGl2ZVxuICAvLyB0byB0aGUgY3VycmVudCBsb2NhdGlvbidzIHBhdGhuYW1lIGFuZCAqbm90KiB0aGUgcm91dGUgcGF0aG5hbWUuXG5cbiAgbGV0IGZyb207XG5cbiAgaWYgKHRvUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgIGZyb20gPSBsb2NhdGlvblBhdGhuYW1lO1xuICB9IGVsc2Uge1xuICAgIGxldCByb3V0ZVBhdGhuYW1lSW5kZXggPSByb3V0ZVBhdGhuYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgaWYgKHRvUGF0aG5hbWUuc3RhcnRzV2l0aChcIi4uXCIpKSB7XG4gICAgICBsZXQgdG9TZWdtZW50cyA9IHRvUGF0aG5hbWUuc3BsaXQoXCIvXCIpOyAvLyBFYWNoIGxlYWRpbmcgLi4gc2VnbWVudCBtZWFucyBcImdvIHVwIG9uZSByb3V0ZVwiIGluc3RlYWQgb2YgXCJnbyB1cCBvbmVcbiAgICAgIC8vIFVSTCBzZWdtZW50XCIuICBUaGlzIGlzIGEga2V5IGRpZmZlcmVuY2UgZnJvbSBob3cgPGEgaHJlZj4gd29ya3MgYW5kIGFcbiAgICAgIC8vIG1ham9yIHJlYXNvbiB3ZSBjYWxsIHRoaXMgYSBcInRvXCIgdmFsdWUgaW5zdGVhZCBvZiBhIFwiaHJlZlwiLlxuXG4gICAgICB3aGlsZSAodG9TZWdtZW50c1swXSA9PT0gXCIuLlwiKSB7XG4gICAgICAgIHRvU2VnbWVudHMuc2hpZnQoKTtcbiAgICAgICAgcm91dGVQYXRobmFtZUluZGV4IC09IDE7XG4gICAgICB9XG5cbiAgICAgIHRvLnBhdGhuYW1lID0gdG9TZWdtZW50cy5qb2luKFwiL1wiKTtcbiAgICB9IC8vIElmIHRoZXJlIGFyZSBtb3JlIFwiLi5cIiBzZWdtZW50cyB0aGFuIHBhcmVudCByb3V0ZXMsIHJlc29sdmUgcmVsYXRpdmUgdG9cbiAgICAvLyB0aGUgcm9vdCAvIFVSTC5cblxuXG4gICAgZnJvbSA9IHJvdXRlUGF0aG5hbWVJbmRleCA+PSAwID8gcm91dGVQYXRobmFtZXNbcm91dGVQYXRobmFtZUluZGV4XSA6IFwiL1wiO1xuICB9XG5cbiAgbGV0IHBhdGggPSByZXNvbHZlUGF0aCh0bywgZnJvbSk7IC8vIEVuc3VyZSB0aGUgcGF0aG5hbWUgaGFzIGEgdHJhaWxpbmcgc2xhc2ggaWYgdGhlIG9yaWdpbmFsIHRvIHZhbHVlIGhhZCBvbmUuXG5cbiAgaWYgKHRvUGF0aG5hbWUgJiYgdG9QYXRobmFtZSAhPT0gXCIvXCIgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIikgJiYgIXBhdGgucGF0aG5hbWUuZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgcGF0aC5wYXRobmFtZSArPSBcIi9cIjtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gZ2V0VG9QYXRobmFtZSh0bykge1xuICAvLyBFbXB0eSBzdHJpbmdzIHNob3VsZCBiZSB0cmVhdGVkIHRoZSBzYW1lIGFzIC8gcGF0aHNcbiAgcmV0dXJuIHRvID09PSBcIlwiIHx8IHRvLnBhdGhuYW1lID09PSBcIlwiID8gXCIvXCIgOiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgodG8pLnBhdGhuYW1lIDogdG8ucGF0aG5hbWU7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGhuYW1lLCBiYXNlbmFtZSkge1xuICBpZiAoYmFzZW5hbWUgPT09IFwiL1wiKSByZXR1cm4gcGF0aG5hbWU7XG5cbiAgaWYgKCFwYXRobmFtZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoYmFzZW5hbWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGxldCBuZXh0Q2hhciA9IHBhdGhuYW1lLmNoYXJBdChiYXNlbmFtZS5sZW5ndGgpO1xuXG4gIGlmIChuZXh0Q2hhciAmJiBuZXh0Q2hhciAhPT0gXCIvXCIpIHtcbiAgICAvLyBwYXRobmFtZSBkb2VzIG5vdCBzdGFydCB3aXRoIGJhc2VuYW1lL1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBhdGhuYW1lLnNsaWNlKGJhc2VuYW1lLmxlbmd0aCkgfHwgXCIvXCI7XG59XG5jb25zdCBqb2luUGF0aHMgPSBwYXRocyA9PiBwYXRocy5qb2luKFwiL1wiKS5yZXBsYWNlKC9cXC9cXC8rL2csIFwiL1wiKTtcbmNvbnN0IG5vcm1hbGl6ZVBhdGhuYW1lID0gcGF0aG5hbWUgPT4gcGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCBcIlwiKS5yZXBsYWNlKC9eXFwvKi8sIFwiL1wiKTtcblxuY29uc3Qgbm9ybWFsaXplU2VhcmNoID0gc2VhcmNoID0+ICFzZWFyY2ggfHwgc2VhcmNoID09PSBcIj9cIiA/IFwiXCIgOiBzZWFyY2guc3RhcnRzV2l0aChcIj9cIikgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcblxuY29uc3Qgbm9ybWFsaXplSGFzaCA9IGhhc2ggPT4gIWhhc2ggfHwgaGFzaCA9PT0gXCIjXCIgPyBcIlwiIDogaGFzaC5zdGFydHNXaXRoKFwiI1wiKSA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZnVsbCBocmVmIGZvciB0aGUgZ2l2ZW4gXCJ0b1wiIHZhbHVlLiBUaGlzIGlzIHVzZWZ1bCBmb3IgYnVpbGRpbmdcbiAqIGN1c3RvbSBsaW5rcyB0aGF0IGFyZSBhbHNvIGFjY2Vzc2libGUgYW5kIHByZXNlcnZlIHJpZ2h0LWNsaWNrIGJlaGF2aW9yLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaHJlZlxuICovXG5cbmZ1bmN0aW9uIHVzZUhyZWYodG8pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUhyZWYoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yXG4gIH0gPSB1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KTtcbiAgbGV0IHtcbiAgICBoYXNoLFxuICAgIHBhdGhuYW1lLFxuICAgIHNlYXJjaFxuICB9ID0gdXNlUmVzb2x2ZWRQYXRoKHRvKTtcbiAgbGV0IGpvaW5lZFBhdGhuYW1lID0gcGF0aG5hbWU7XG5cbiAgaWYgKGJhc2VuYW1lICE9PSBcIi9cIikge1xuICAgIGxldCB0b1BhdGhuYW1lID0gZ2V0VG9QYXRobmFtZSh0byk7XG4gICAgbGV0IGVuZHNXaXRoU2xhc2ggPSB0b1BhdGhuYW1lICE9IG51bGwgJiYgdG9QYXRobmFtZS5lbmRzV2l0aChcIi9cIik7XG4gICAgam9pbmVkUGF0aG5hbWUgPSBwYXRobmFtZSA9PT0gXCIvXCIgPyBiYXNlbmFtZSArIChlbmRzV2l0aFNsYXNoID8gXCIvXCIgOiBcIlwiKSA6IGpvaW5QYXRocyhbYmFzZW5hbWUsIHBhdGhuYW1lXSk7XG4gIH1cblxuICByZXR1cm4gbmF2aWdhdG9yLmNyZWF0ZUhyZWYoe1xuICAgIHBhdGhuYW1lOiBqb2luZWRQYXRobmFtZSxcbiAgICBzZWFyY2gsXG4gICAgaGFzaFxuICB9KTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoaXMgY29tcG9uZW50IGlzIGEgZGVzY2VuZGFudCBvZiBhIDxSb3V0ZXI+LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlaW5yb3V0ZXJjb250ZXh0XG4gKi9cblxuZnVuY3Rpb24gdXNlSW5Sb3V0ZXJDb250ZXh0KCkge1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpICE9IG51bGw7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnQgbG9jYXRpb24gb2JqZWN0LCB3aGljaCByZXByZXNlbnRzIHRoZSBjdXJyZW50IFVSTCBpbiB3ZWJcbiAqIGJyb3dzZXJzLlxuICpcbiAqIE5vdGU6IElmIHlvdSdyZSB1c2luZyB0aGlzIGl0IG1heSBtZWFuIHlvdSdyZSBkb2luZyBzb21lIG9mIHlvdXIgb3duXG4gKiBcInJvdXRpbmdcIiBpbiB5b3VyIGFwcCwgYW5kIHdlJ2QgbGlrZSB0byBrbm93IHdoYXQgeW91ciB1c2UgY2FzZSBpcy4gV2UgbWF5XG4gKiBiZSBhYmxlIHRvIHByb3ZpZGUgc29tZXRoaW5nIGhpZ2hlci1sZXZlbCB0byBiZXR0ZXIgc3VpdCB5b3VyIG5lZWRzLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbG9jYXRpb25cbiAqL1xuXG5mdW5jdGlvbiB1c2VMb2NhdGlvbigpIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZUxvY2F0aW9uKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpLmxvY2F0aW9uO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50IG5hdmlnYXRpb24gYWN0aW9uIHdoaWNoIGRlc2NyaWJlcyBob3cgdGhlIHJvdXRlciBjYW1lIHRvXG4gKiB0aGUgY3VycmVudCBsb2NhdGlvbiwgZWl0aGVyIGJ5IGEgcG9wLCBwdXNoLCBvciByZXBsYWNlIG9uIHRoZSBoaXN0b3J5IHN0YWNrLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGlvbnR5cGVcbiAqL1xuXG5mdW5jdGlvbiB1c2VOYXZpZ2F0aW9uVHlwZSgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoTG9jYXRpb25Db250ZXh0KS5uYXZpZ2F0aW9uVHlwZTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBVUkwgZm9yIHRoZSBnaXZlbiBcInRvXCIgdmFsdWUgbWF0Y2hlcyB0aGUgY3VycmVudCBVUkwuXG4gKiBUaGlzIGlzIHVzZWZ1bCBmb3IgY29tcG9uZW50cyB0aGF0IG5lZWQgdG8ga25vdyBcImFjdGl2ZVwiIHN0YXRlLCBlLmcuXG4gKiA8TmF2TGluaz4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VtYXRjaFxuICovXG5cbmZ1bmN0aW9uIHVzZU1hdGNoKHBhdHRlcm4pIHtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZiB0aGVcbiAgLy8gcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcInVzZU1hdGNoKCkgbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQge1xuICAgIHBhdGhuYW1lXG4gIH0gPSB1c2VMb2NhdGlvbigpO1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiBtYXRjaFBhdGgocGF0dGVybiwgcGF0aG5hbWUpLCBbcGF0aG5hbWUsIHBhdHRlcm5dKTtcbn1cbi8qKlxuICogVGhlIGludGVyZmFjZSBmb3IgdGhlIG5hdmlnYXRlKCkgZnVuY3Rpb24gcmV0dXJuZWQgZnJvbSB1c2VOYXZpZ2F0ZSgpLlxuICovXG5cbi8qKlxuICogUmV0dXJucyBhbiBpbXBlcmF0aXZlIG1ldGhvZCBmb3IgY2hhbmdpbmcgdGhlIGxvY2F0aW9uLiBVc2VkIGJ5IDxMaW5rPnMsIGJ1dFxuICogbWF5IGFsc28gYmUgdXNlZCBieSBvdGhlciBlbGVtZW50cyB0byBjaGFuZ2UgdGhlIGxvY2F0aW9uLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gdXNlTmF2aWdhdGUoKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VOYXZpZ2F0ZSgpIG1heSBiZSB1c2VkIG9ubHkgaW4gdGhlIGNvbnRleHQgb2YgYSA8Um91dGVyPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgbGV0IHtcbiAgICBiYXNlbmFtZSxcbiAgICBuYXZpZ2F0b3JcbiAgfSA9IHVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRleHQpO1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHtcbiAgICBwYXRobmFtZTogbG9jYXRpb25QYXRobmFtZVxuICB9ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHJvdXRlUGF0aG5hbWVzSnNvbiA9IEpTT04uc3RyaW5naWZ5KG1hdGNoZXMubWFwKG1hdGNoID0+IG1hdGNoLnBhdGhuYW1lQmFzZSkpO1xuICBsZXQgYWN0aXZlUmVmID0gdXNlUmVmKGZhbHNlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3RpdmVSZWYuY3VycmVudCA9IHRydWU7XG4gIH0pO1xuICBsZXQgbmF2aWdhdGUgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAodG8sIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhhY3RpdmVSZWYuY3VycmVudCwgXCJZb3Ugc2hvdWxkIGNhbGwgbmF2aWdhdGUoKSBpbiBhIFJlYWN0LnVzZUVmZmVjdCgpLCBub3Qgd2hlbiBcIiArIFwieW91ciBjb21wb25lbnQgaXMgZmlyc3QgcmVuZGVyZWQuXCIpIDogdm9pZCAwO1xuICAgIGlmICghYWN0aXZlUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIGlmICh0eXBlb2YgdG8gPT09IFwibnVtYmVyXCIpIHtcbiAgICAgIG5hdmlnYXRvci5nbyh0byk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IHBhdGggPSByZXNvbHZlVG8odG8sIEpTT04ucGFyc2Uocm91dGVQYXRobmFtZXNKc29uKSwgbG9jYXRpb25QYXRobmFtZSk7XG5cbiAgICBpZiAoYmFzZW5hbWUgIT09IFwiL1wiKSB7XG4gICAgICBwYXRoLnBhdGhuYW1lID0gam9pblBhdGhzKFtiYXNlbmFtZSwgcGF0aC5wYXRobmFtZV0pO1xuICAgIH1cblxuICAgICghIW9wdGlvbnMucmVwbGFjZSA/IG5hdmlnYXRvci5yZXBsYWNlIDogbmF2aWdhdG9yLnB1c2gpKHBhdGgsIG9wdGlvbnMuc3RhdGUpO1xuICB9LCBbYmFzZW5hbWUsIG5hdmlnYXRvciwgcm91dGVQYXRobmFtZXNKc29uLCBsb2NhdGlvblBhdGhuYW1lXSk7XG4gIHJldHVybiBuYXZpZ2F0ZTtcbn1cbmNvbnN0IE91dGxldENvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dChudWxsKTtcbi8qKlxuICogUmV0dXJucyB0aGUgY29udGV4dCAoaWYgcHJvdmlkZWQpIGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS5cbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlb3V0bGV0Y29udGV4dFxuICovXG5cbmZ1bmN0aW9uIHVzZU91dGxldENvbnRleHQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KE91dGxldENvbnRleHQpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IGZvciB0aGUgY2hpbGQgcm91dGUgYXQgdGhpcyBsZXZlbCBvZiB0aGUgcm91dGVcbiAqIGhpZXJhcmNoeS4gVXNlZCBpbnRlcm5hbGx5IGJ5IDxPdXRsZXQ+IHRvIHJlbmRlciBjaGlsZCByb3V0ZXMuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VvdXRsZXRcbiAqL1xuXG5mdW5jdGlvbiB1c2VPdXRsZXQoY29udGV4dCkge1xuICBsZXQgb3V0bGV0ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpLm91dGxldDtcblxuICBpZiAob3V0bGV0KSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KE91dGxldENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiBjb250ZXh0XG4gICAgfSwgb3V0bGV0KTtcbiAgfVxuXG4gIHJldHVybiBvdXRsZXQ7XG59XG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IG9mIGtleS92YWx1ZSBwYWlycyBvZiB0aGUgZHluYW1pYyBwYXJhbXMgZnJvbSB0aGUgY3VycmVudFxuICogVVJMIHRoYXQgd2VyZSBtYXRjaGVkIGJ5IHRoZSByb3V0ZSBwYXRoLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjdXNlcGFyYW1zXG4gKi9cblxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBsZXQge1xuICAgIG1hdGNoZXNcbiAgfSA9IHVzZUNvbnRleHQoUm91dGVDb250ZXh0KTtcbiAgbGV0IHJvdXRlTWF0Y2ggPSBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV07XG4gIHJldHVybiByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXJhbXMgOiB7fTtcbn1cbi8qKlxuICogUmVzb2x2ZXMgdGhlIHBhdGhuYW1lIG9mIHRoZSBnaXZlbiBgdG9gIHZhbHVlIGFnYWluc3QgdGhlIGN1cnJlbnQgbG9jYXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSN1c2VyZXNvbHZlZHBhdGhcbiAqL1xuXG5mdW5jdGlvbiB1c2VSZXNvbHZlZFBhdGgodG8pIHtcbiAgbGV0IHtcbiAgICBtYXRjaGVzXG4gIH0gPSB1c2VDb250ZXh0KFJvdXRlQ29udGV4dCk7XG4gIGxldCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uUGF0aG5hbWVcbiAgfSA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCByb3V0ZVBhdGhuYW1lc0pzb24gPSBKU09OLnN0cmluZ2lmeShtYXRjaGVzLm1hcChtYXRjaCA9PiBtYXRjaC5wYXRobmFtZUJhc2UpKTtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4gcmVzb2x2ZVRvKHRvLCBKU09OLnBhcnNlKHJvdXRlUGF0aG5hbWVzSnNvbiksIGxvY2F0aW9uUGF0aG5hbWUpLCBbdG8sIHJvdXRlUGF0aG5hbWVzSnNvbiwgbG9jYXRpb25QYXRobmFtZV0pO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBlbGVtZW50IG9mIHRoZSByb3V0ZSB0aGF0IG1hdGNoZWQgdGhlIGN1cnJlbnQgbG9jYXRpb24sIHByZXBhcmVkXG4gKiB3aXRoIHRoZSBjb3JyZWN0IGNvbnRleHQgdG8gcmVuZGVyIHRoZSByZW1haW5kZXIgb2YgdGhlIHJvdXRlIHRyZWUuIFJvdXRlXG4gKiBlbGVtZW50cyBpbiB0aGUgdHJlZSBtdXN0IHJlbmRlciBhbiA8T3V0bGV0PiB0byByZW5kZXIgdGhlaXIgY2hpbGQgcm91dGUnc1xuICogZWxlbWVudC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3VzZXJvdXRlc1xuICovXG5cbmZ1bmN0aW9uIHVzZVJvdXRlcyhyb3V0ZXMsIGxvY2F0aW9uQXJnKSB7XG4gICF1c2VJblJvdXRlckNvbnRleHQoKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgLy8gVE9ETzogVGhpcyBlcnJvciBpcyBwcm9iYWJseSBiZWNhdXNlIHRoZXkgc29tZWhvdyBoYXZlIDIgdmVyc2lvbnMgb2YgdGhlXG4gIC8vIHJvdXRlciBsb2FkZWQuIFdlIGNhbiBoZWxwIHRoZW0gdW5kZXJzdGFuZCBob3cgdG8gYXZvaWQgdGhhdC5cbiAgXCJ1c2VSb3V0ZXMoKSBtYXkgYmUgdXNlZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mIGEgPFJvdXRlcj4gY29tcG9uZW50LlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIGxldCB7XG4gICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlc1xuICB9ID0gdXNlQ29udGV4dChSb3V0ZUNvbnRleHQpO1xuICBsZXQgcm91dGVNYXRjaCA9IHBhcmVudE1hdGNoZXNbcGFyZW50TWF0Y2hlcy5sZW5ndGggLSAxXTtcbiAgbGV0IHBhcmVudFBhcmFtcyA9IHJvdXRlTWF0Y2ggPyByb3V0ZU1hdGNoLnBhcmFtcyA6IHt9O1xuICBsZXQgcGFyZW50UGF0aG5hbWUgPSByb3V0ZU1hdGNoID8gcm91dGVNYXRjaC5wYXRobmFtZSA6IFwiL1wiO1xuICBsZXQgcGFyZW50UGF0aG5hbWVCYXNlID0gcm91dGVNYXRjaCA/IHJvdXRlTWF0Y2gucGF0aG5hbWVCYXNlIDogXCIvXCI7XG4gIGxldCBwYXJlbnRSb3V0ZSA9IHJvdXRlTWF0Y2ggJiYgcm91dGVNYXRjaC5yb3V0ZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgLy8gWW91IHdvbid0IGdldCBhIHdhcm5pbmcgYWJvdXQgMiBkaWZmZXJlbnQgPFJvdXRlcz4gdW5kZXIgYSA8Um91dGU+XG4gICAgLy8gd2l0aG91dCBhIHRyYWlsaW5nICosIGJ1dCB0aGlzIGlzIGEgYmVzdC1lZmZvcnQgd2FybmluZyBhbnl3YXkgc2luY2Ugd2VcbiAgICAvLyBjYW5ub3QgZXZlbiBnaXZlIHRoZSB3YXJuaW5nIHVubGVzcyB0aGV5IGxhbmQgYXQgdGhlIHBhcmVudCByb3V0ZS5cbiAgICAvL1xuICAgIC8vIEV4YW1wbGU6XG4gICAgLy9cbiAgICAvLyA8Um91dGVzPlxuICAgIC8vICAgey8qIFRoaXMgcm91dGUgcGF0aCBNVVNUIGVuZCB3aXRoIC8qIGJlY2F1c2Ugb3RoZXJ3aXNlXG4gICAgLy8gICAgICAgaXQgd2lsbCBuZXZlciBtYXRjaCAvYmxvZy9wb3N0LzEyMyAqL31cbiAgICAvLyAgIDxSb3V0ZSBwYXRoPVwiYmxvZ1wiIGVsZW1lbnQ9ezxCbG9nIC8+fSAvPlxuICAgIC8vICAgPFJvdXRlIHBhdGg9XCJibG9nL2ZlZWRcIiBlbGVtZW50PXs8QmxvZ0ZlZWQgLz59IC8+XG4gICAgLy8gPC9Sb3V0ZXM+XG4gICAgLy9cbiAgICAvLyBmdW5jdGlvbiBCbG9nKCkge1xuICAgIC8vICAgcmV0dXJuIChcbiAgICAvLyAgICAgPFJvdXRlcz5cbiAgICAvLyAgICAgICA8Um91dGUgcGF0aD1cInBvc3QvOmlkXCIgZWxlbWVudD17PFBvc3QgLz59IC8+XG4gICAgLy8gICAgIDwvUm91dGVzPlxuICAgIC8vICAgKTtcbiAgICAvLyB9XG4gICAgbGV0IHBhcmVudFBhdGggPSBwYXJlbnRSb3V0ZSAmJiBwYXJlbnRSb3V0ZS5wYXRoIHx8IFwiXCI7XG4gICAgd2FybmluZ09uY2UocGFyZW50UGF0aG5hbWUsICFwYXJlbnRSb3V0ZSB8fCBwYXJlbnRQYXRoLmVuZHNXaXRoKFwiKlwiKSwgXCJZb3UgcmVuZGVyZWQgZGVzY2VuZGFudCA8Um91dGVzPiAob3IgY2FsbGVkIGB1c2VSb3V0ZXMoKWApIGF0IFwiICsgKFwiXFxcIlwiICsgcGFyZW50UGF0aG5hbWUgKyBcIlxcXCIgKHVuZGVyIDxSb3V0ZSBwYXRoPVxcXCJcIiArIHBhcmVudFBhdGggKyBcIlxcXCI+KSBidXQgdGhlIFwiKSArIFwicGFyZW50IHJvdXRlIHBhdGggaGFzIG5vIHRyYWlsaW5nIFxcXCIqXFxcIi4gVGhpcyBtZWFucyBpZiB5b3UgbmF2aWdhdGUgXCIgKyBcImRlZXBlciwgdGhlIHBhcmVudCB3b24ndCBtYXRjaCBhbnltb3JlIGFuZCB0aGVyZWZvcmUgdGhlIGNoaWxkIFwiICsgXCJyb3V0ZXMgd2lsbCBuZXZlciByZW5kZXIuXFxuXFxuXCIgKyAoXCJQbGVhc2UgY2hhbmdlIHRoZSBwYXJlbnQgPFJvdXRlIHBhdGg9XFxcIlwiICsgcGFyZW50UGF0aCArIFwiXFxcIj4gdG8gPFJvdXRlIFwiKSArIChcInBhdGg9XFxcIlwiICsgKHBhcmVudFBhdGggPT09IFwiL1wiID8gXCIqXCIgOiBwYXJlbnRQYXRoICsgXCIvKlwiKSArIFwiXFxcIj4uXCIpKTtcbiAgfVxuXG4gIGxldCBsb2NhdGlvbkZyb21Db250ZXh0ID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IGxvY2F0aW9uO1xuXG4gIGlmIChsb2NhdGlvbkFyZykge1xuICAgIHZhciBfcGFyc2VkTG9jYXRpb25BcmckcGE7XG5cbiAgICBsZXQgcGFyc2VkTG9jYXRpb25BcmcgPSB0eXBlb2YgbG9jYXRpb25BcmcgPT09IFwic3RyaW5nXCIgPyBwYXJzZVBhdGgobG9jYXRpb25BcmcpIDogbG9jYXRpb25Bcmc7XG4gICAgIShwYXJlbnRQYXRobmFtZUJhc2UgPT09IFwiL1wiIHx8ICgoX3BhcnNlZExvY2F0aW9uQXJnJHBhID0gcGFyc2VkTG9jYXRpb25BcmcucGF0aG5hbWUpID09IG51bGwgPyB2b2lkIDAgOiBfcGFyc2VkTG9jYXRpb25BcmckcGEuc3RhcnRzV2l0aChwYXJlbnRQYXRobmFtZUJhc2UpKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiV2hlbiBvdmVycmlkaW5nIHRoZSBsb2NhdGlvbiB1c2luZyBgPFJvdXRlcyBsb2NhdGlvbj5gIG9yIGB1c2VSb3V0ZXMocm91dGVzLCBsb2NhdGlvbilgLCBcIiArIFwidGhlIGxvY2F0aW9uIHBhdGhuYW1lIG11c3QgYmVnaW4gd2l0aCB0aGUgcG9ydGlvbiBvZiB0aGUgVVJMIHBhdGhuYW1lIHRoYXQgd2FzIFwiICsgKFwibWF0Y2hlZCBieSBhbGwgcGFyZW50IHJvdXRlcy4gVGhlIGN1cnJlbnQgcGF0aG5hbWUgYmFzZSBpcyBcXFwiXCIgKyBwYXJlbnRQYXRobmFtZUJhc2UgKyBcIlxcXCIgXCIpICsgKFwiYnV0IHBhdGhuYW1lIFxcXCJcIiArIHBhcnNlZExvY2F0aW9uQXJnLnBhdGhuYW1lICsgXCJcXFwiIHdhcyBnaXZlbiBpbiB0aGUgYGxvY2F0aW9uYCBwcm9wLlwiKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGxvY2F0aW9uID0gcGFyc2VkTG9jYXRpb25Bcmc7XG4gIH0gZWxzZSB7XG4gICAgbG9jYXRpb24gPSBsb2NhdGlvbkZyb21Db250ZXh0O1xuICB9XG5cbiAgbGV0IHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUgfHwgXCIvXCI7XG4gIGxldCByZW1haW5pbmdQYXRobmFtZSA9IHBhcmVudFBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXRobmFtZSA6IHBhdGhuYW1lLnNsaWNlKHBhcmVudFBhdGhuYW1lQmFzZS5sZW5ndGgpIHx8IFwiL1wiO1xuICBsZXQgbWF0Y2hlcyA9IG1hdGNoUm91dGVzKHJvdXRlcywge1xuICAgIHBhdGhuYW1lOiByZW1haW5pbmdQYXRobmFtZVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwYXJlbnRSb3V0ZSB8fCBtYXRjaGVzICE9IG51bGwsIFwiTm8gcm91dGVzIG1hdGNoZWQgbG9jYXRpb24gXFxcIlwiICsgbG9jYXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2ggKyBsb2NhdGlvbi5oYXNoICsgXCJcXFwiIFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKG1hdGNoZXMgPT0gbnVsbCB8fCBtYXRjaGVzW21hdGNoZXMubGVuZ3RoIC0gMV0ucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkLCBcIk1hdGNoZWQgbGVhZiByb3V0ZSBhdCBsb2NhdGlvbiBcXFwiXCIgKyBsb2NhdGlvbi5wYXRobmFtZSArIGxvY2F0aW9uLnNlYXJjaCArIGxvY2F0aW9uLmhhc2ggKyBcIlxcXCIgZG9lcyBub3QgaGF2ZSBhbiBlbGVtZW50LiBcIiArIFwiVGhpcyBtZWFucyBpdCB3aWxsIHJlbmRlciBhbiA8T3V0bGV0IC8+IHdpdGggYSBudWxsIHZhbHVlIGJ5IGRlZmF1bHQgcmVzdWx0aW5nIGluIGFuIFxcXCJlbXB0eVxcXCIgcGFnZS5cIikgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gX3JlbmRlck1hdGNoZXMobWF0Y2hlcyAmJiBtYXRjaGVzLm1hcChtYXRjaCA9PiBPYmplY3QuYXNzaWduKHt9LCBtYXRjaCwge1xuICAgIHBhcmFtczogT2JqZWN0LmFzc2lnbih7fSwgcGFyZW50UGFyYW1zLCBtYXRjaC5wYXJhbXMpLFxuICAgIHBhdGhuYW1lOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVdKSxcbiAgICBwYXRobmFtZUJhc2U6IG1hdGNoLnBhdGhuYW1lQmFzZSA9PT0gXCIvXCIgPyBwYXJlbnRQYXRobmFtZUJhc2UgOiBqb2luUGF0aHMoW3BhcmVudFBhdGhuYW1lQmFzZSwgbWF0Y2gucGF0aG5hbWVCYXNlXSlcbiAgfSkpLCBwYXJlbnRNYXRjaGVzKTtcbn1cbmZ1bmN0aW9uIF9yZW5kZXJNYXRjaGVzKG1hdGNoZXMsIHBhcmVudE1hdGNoZXMpIHtcbiAgaWYgKHBhcmVudE1hdGNoZXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmVudE1hdGNoZXMgPSBbXTtcbiAgfVxuXG4gIGlmIChtYXRjaGVzID09IG51bGwpIHJldHVybiBudWxsO1xuICByZXR1cm4gbWF0Y2hlcy5yZWR1Y2VSaWdodCgob3V0bGV0LCBtYXRjaCwgaW5kZXgpID0+IHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogbWF0Y2gucm91dGUuZWxlbWVudCAhPT0gdW5kZWZpbmVkID8gbWF0Y2gucm91dGUuZWxlbWVudCA6IG91dGxldCxcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIG91dGxldCxcbiAgICAgICAgbWF0Y2hlczogcGFyZW50TWF0Y2hlcy5jb25jYXQobWF0Y2hlcy5zbGljZSgwLCBpbmRleCArIDEpKVxuICAgICAgfVxuICAgIH0pO1xuICB9LCBudWxsKTtcbn1cblxuLyoqXG4gKiBBIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGFsbCBlbnRyaWVzIGluIG1lbW9yeS5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI21lbW9yeXJvdXRlclxuICovXG5mdW5jdGlvbiBNZW1vcnlSb3V0ZXIoX3JlZikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGluaXRpYWxFbnRyaWVzLFxuICAgIGluaXRpYWxJbmRleFxuICB9ID0gX3JlZjtcbiAgbGV0IGhpc3RvcnlSZWYgPSB1c2VSZWYoKTtcblxuICBpZiAoaGlzdG9yeVJlZi5jdXJyZW50ID09IG51bGwpIHtcbiAgICBoaXN0b3J5UmVmLmN1cnJlbnQgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KHtcbiAgICAgIGluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEluZGV4XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBDaGFuZ2VzIHRoZSBjdXJyZW50IGxvY2F0aW9uLlxuICpcbiAqIE5vdGU6IFRoaXMgQVBJIGlzIG1vc3RseSB1c2VmdWwgaW4gUmVhY3QuQ29tcG9uZW50IHN1YmNsYXNzZXMgdGhhdCBhcmUgbm90XG4gKiBhYmxlIHRvIHVzZSBob29rcy4gSW4gZnVuY3Rpb25hbCBjb21wb25lbnRzLCB3ZSByZWNvbW1lbmQgeW91IHVzZSB0aGVcbiAqIGB1c2VOYXZpZ2F0ZWAgaG9vayBpbnN0ZWFkLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdHJvdXRlci5jb20vZG9jcy9lbi92Ni9hcGkjbmF2aWdhdGVcbiAqL1xuZnVuY3Rpb24gTmF2aWdhdGUoX3JlZjIpIHtcbiAgbGV0IHtcbiAgICB0byxcbiAgICByZXBsYWNlLFxuICAgIHN0YXRlXG4gIH0gPSBfcmVmMjtcbiAgIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAvLyBUT0RPOiBUaGlzIGVycm9yIGlzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzb21laG93IGhhdmUgMiB2ZXJzaW9ucyBvZlxuICAvLyB0aGUgcm91dGVyIGxvYWRlZC4gV2UgY2FuIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGhvdyB0byBhdm9pZCB0aGF0LlxuICBcIjxOYXZpZ2F0ZT4gbWF5IGJlIHVzZWQgb25seSBpbiB0aGUgY29udGV4dCBvZiBhIDxSb3V0ZXI+IGNvbXBvbmVudC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF1c2VDb250ZXh0KE5hdmlnYXRpb25Db250ZXh0KS5zdGF0aWMsIFwiPE5hdmlnYXRlPiBtdXN0IG5vdCBiZSB1c2VkIG9uIHRoZSBpbml0aWFsIHJlbmRlciBpbiBhIDxTdGF0aWNSb3V0ZXI+LiBcIiArIFwiVGhpcyBpcyBhIG5vLW9wLCBidXQgeW91IHNob3VsZCBtb2RpZnkgeW91ciBjb2RlIHNvIHRoZSA8TmF2aWdhdGU+IGlzIFwiICsgXCJvbmx5IGV2ZXIgcmVuZGVyZWQgaW4gcmVzcG9uc2UgdG8gc29tZSB1c2VyIGludGVyYWN0aW9uIG9yIHN0YXRlIGNoYW5nZS5cIikgOiB2b2lkIDA7XG4gIGxldCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbmF2aWdhdGUodG8sIHtcbiAgICAgIHJlcGxhY2UsXG4gICAgICBzdGF0ZVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgY2hpbGQgcm91dGUncyBlbGVtZW50LCBpZiB0aGVyZSBpcyBvbmUuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNvdXRsZXRcbiAqL1xuZnVuY3Rpb24gT3V0bGV0KHByb3BzKSB7XG4gIHJldHVybiB1c2VPdXRsZXQocHJvcHMuY29udGV4dCk7XG59XG5cbi8qKlxuICogRGVjbGFyZXMgYW4gZWxlbWVudCB0aGF0IHNob3VsZCBiZSByZW5kZXJlZCBhdCBhIGNlcnRhaW4gVVJMIHBhdGguXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZVxuICovXG5mdW5jdGlvbiBSb3V0ZShfcHJvcHMpIHtcbiAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJBIDxSb3V0ZT4gaXMgb25seSBldmVyIHRvIGJlIHVzZWQgYXMgdGhlIGNoaWxkIG9mIDxSb3V0ZXM+IGVsZW1lbnQsIFwiICsgXCJuZXZlciByZW5kZXJlZCBkaXJlY3RseS4gUGxlYXNlIHdyYXAgeW91ciA8Um91dGU+IGluIGEgPFJvdXRlcz4uXCIpIDogaW52YXJpYW50KGZhbHNlKSA7XG59XG5cbi8qKlxuICogUHJvdmlkZXMgbG9jYXRpb24gY29udGV4dCBmb3IgdGhlIHJlc3Qgb2YgdGhlIGFwcC5cbiAqXG4gKiBOb3RlOiBZb3UgdXN1YWxseSB3b24ndCByZW5kZXIgYSA8Um91dGVyPiBkaXJlY3RseS4gSW5zdGVhZCwgeW91J2xsIHJlbmRlciBhXG4gKiByb3V0ZXIgdGhhdCBpcyBtb3JlIHNwZWNpZmljIHRvIHlvdXIgZW52aXJvbm1lbnQgc3VjaCBhcyBhIDxCcm93c2VyUm91dGVyPlxuICogaW4gd2ViIGJyb3dzZXJzIG9yIGEgPFN0YXRpY1JvdXRlcj4gZm9yIHNlcnZlciByZW5kZXJpbmcuXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNyb3V0ZXJcbiAqL1xuZnVuY3Rpb24gUm91dGVyKF9yZWYzKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lUHJvcCA9IFwiL1wiLFxuICAgIGNoaWxkcmVuID0gbnVsbCxcbiAgICBsb2NhdGlvbjogbG9jYXRpb25Qcm9wLFxuICAgIG5hdmlnYXRpb25UeXBlID0gQWN0aW9uLlBvcCxcbiAgICBuYXZpZ2F0b3IsXG4gICAgc3RhdGljOiBzdGF0aWNQcm9wID0gZmFsc2VcbiAgfSA9IF9yZWYzO1xuICAhIXVzZUluUm91dGVyQ29udGV4dCgpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgcmVuZGVyIGEgPFJvdXRlcj4gaW5zaWRlIGFub3RoZXIgPFJvdXRlcj4uXCIgKyBcIiBZb3Ugc2hvdWxkIG5ldmVyIGhhdmUgbW9yZSB0aGFuIG9uZSBpbiB5b3VyIGFwcC5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICBsZXQgYmFzZW5hbWUgPSBub3JtYWxpemVQYXRobmFtZShiYXNlbmFtZVByb3ApO1xuICBsZXQgbmF2aWdhdGlvbkNvbnRleHQgPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgYmFzZW5hbWUsXG4gICAgbmF2aWdhdG9yLFxuICAgIHN0YXRpYzogc3RhdGljUHJvcFxuICB9KSwgW2Jhc2VuYW1lLCBuYXZpZ2F0b3IsIHN0YXRpY1Byb3BdKTtcblxuICBpZiAodHlwZW9mIGxvY2F0aW9uUHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgIGxvY2F0aW9uUHJvcCA9IHBhcnNlUGF0aChsb2NhdGlvblByb3ApO1xuICB9XG5cbiAgbGV0IHtcbiAgICBwYXRobmFtZSA9IFwiL1wiLFxuICAgIHNlYXJjaCA9IFwiXCIsXG4gICAgaGFzaCA9IFwiXCIsXG4gICAgc3RhdGUgPSBudWxsLFxuICAgIGtleSA9IFwiZGVmYXVsdFwiXG4gIH0gPSBsb2NhdGlvblByb3A7XG4gIGxldCBsb2NhdGlvbiA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGxldCB0cmFpbGluZ1BhdGhuYW1lID0gc3RyaXBCYXNlbmFtZShwYXRobmFtZSwgYmFzZW5hbWUpO1xuXG4gICAgaWYgKHRyYWlsaW5nUGF0aG5hbWUgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGhuYW1lOiB0cmFpbGluZ1BhdGhuYW1lLFxuICAgICAgc2VhcmNoLFxuICAgICAgaGFzaCxcbiAgICAgIHN0YXRlLFxuICAgICAga2V5XG4gICAgfTtcbiAgfSwgW2Jhc2VuYW1lLCBwYXRobmFtZSwgc2VhcmNoLCBoYXNoLCBzdGF0ZSwga2V5XSk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcobG9jYXRpb24gIT0gbnVsbCwgXCI8Um91dGVyIGJhc2VuYW1lPVxcXCJcIiArIGJhc2VuYW1lICsgXCJcXFwiPiBpcyBub3QgYWJsZSB0byBtYXRjaCB0aGUgVVJMIFwiICsgKFwiXFxcIlwiICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoICsgXCJcXFwiIGJlY2F1c2UgaXQgZG9lcyBub3Qgc3RhcnQgd2l0aCB0aGUgXCIpICsgXCJiYXNlbmFtZSwgc28gdGhlIDxSb3V0ZXI+IHdvbid0IHJlbmRlciBhbnl0aGluZy5cIikgOiB2b2lkIDA7XG5cbiAgaWYgKGxvY2F0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChOYXZpZ2F0aW9uQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBuYXZpZ2F0aW9uQ29udGV4dFxuICB9LCAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChMb2NhdGlvbkNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICBjaGlsZHJlbjogY2hpbGRyZW4sXG4gICAgdmFsdWU6IHtcbiAgICAgIGxvY2F0aW9uLFxuICAgICAgbmF2aWdhdGlvblR5cGVcbiAgICB9XG4gIH0pKTtcbn1cblxuLyoqXG4gKiBBIGNvbnRhaW5lciBmb3IgYSBuZXN0ZWQgdHJlZSBvZiA8Um91dGU+IGVsZW1lbnRzIHRoYXQgcmVuZGVycyB0aGUgYnJhbmNoXG4gKiB0aGF0IGJlc3QgbWF0Y2hlcyB0aGUgY3VycmVudCBsb2NhdGlvbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3Ryb3V0ZXIuY29tL2RvY3MvZW4vdjYvYXBpI3JvdXRlc1xuICovXG5mdW5jdGlvbiBSb3V0ZXMoX3JlZjQpIHtcbiAgbGV0IHtcbiAgICBjaGlsZHJlbixcbiAgICBsb2NhdGlvblxuICB9ID0gX3JlZjQ7XG4gIHJldHVybiB1c2VSb3V0ZXMoY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGNoaWxkcmVuKSwgbG9jYXRpb24pO1xufSAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBVVElMU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKipcbiAqIENyZWF0ZXMgYSByb3V0ZSBjb25maWcgZnJvbSBhIFJlYWN0IFwiY2hpbGRyZW5cIiBvYmplY3QsIHdoaWNoIGlzIHVzdWFsbHlcbiAqIGVpdGhlciBhIGA8Um91dGU+YCBlbGVtZW50IG9yIGFuIGFycmF5IG9mIHRoZW0uIFVzZWQgaW50ZXJuYWxseSBieVxuICogYDxSb3V0ZXM+YCB0byBjcmVhdGUgYSByb3V0ZSBjb25maWcgZnJvbSBpdHMgY2hpbGRyZW4uXG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0cm91dGVyLmNvbS9kb2NzL2VuL3Y2L2FwaSNjcmVhdGVyb3V0ZXNmcm9tY2hpbGRyZW5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgbGV0IHJvdXRlcyA9IFtdO1xuICBDaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBlbGVtZW50ID0+IHtcbiAgICBpZiAoISAvKiNfX1BVUkVfXyovaXNWYWxpZEVsZW1lbnQoZWxlbWVudCkpIHtcbiAgICAgIC8vIElnbm9yZSBub24tZWxlbWVudHMuIFRoaXMgYWxsb3dzIHBlb3BsZSB0byBtb3JlIGVhc2lseSBpbmxpbmVcbiAgICAgIC8vIGNvbmRpdGlvbmFscyBpbiB0aGVpciByb3V0ZSBjb25maWcuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGVsZW1lbnQudHlwZSA9PT0gRnJhZ21lbnQpIHtcbiAgICAgIC8vIFRyYW5zcGFyZW50bHkgc3VwcG9ydCBSZWFjdC5GcmFnbWVudCBhbmQgaXRzIGNoaWxkcmVuLlxuICAgICAgcm91dGVzLnB1c2guYXBwbHkocm91dGVzLCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4oZWxlbWVudC5wcm9wcy5jaGlsZHJlbikpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgICEoZWxlbWVudC50eXBlID09PSBSb3V0ZSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiW1wiICsgKHR5cGVvZiBlbGVtZW50LnR5cGUgPT09IFwic3RyaW5nXCIgPyBlbGVtZW50LnR5cGUgOiBlbGVtZW50LnR5cGUubmFtZSkgKyBcIl0gaXMgbm90IGEgPFJvdXRlPiBjb21wb25lbnQuIEFsbCBjb21wb25lbnQgY2hpbGRyZW4gb2YgPFJvdXRlcz4gbXVzdCBiZSBhIDxSb3V0ZT4gb3IgPFJlYWN0LkZyYWdtZW50PlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgbGV0IHJvdXRlID0ge1xuICAgICAgY2FzZVNlbnNpdGl2ZTogZWxlbWVudC5wcm9wcy5jYXNlU2Vuc2l0aXZlLFxuICAgICAgZWxlbWVudDogZWxlbWVudC5wcm9wcy5lbGVtZW50LFxuICAgICAgaW5kZXg6IGVsZW1lbnQucHJvcHMuaW5kZXgsXG4gICAgICBwYXRoOiBlbGVtZW50LnByb3BzLnBhdGhcbiAgICB9O1xuXG4gICAgaWYgKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgIHJvdXRlLmNoaWxkcmVuID0gY3JlYXRlUm91dGVzRnJvbUNoaWxkcmVuKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIHJvdXRlcy5wdXNoKHJvdXRlKTtcbiAgfSk7XG4gIHJldHVybiByb3V0ZXM7XG59XG4vKipcbiAqIFJlbmRlcnMgdGhlIHJlc3VsdCBvZiBgbWF0Y2hSb3V0ZXMoKWAgaW50byBhIFJlYWN0IGVsZW1lbnQuXG4gKi9cblxuZnVuY3Rpb24gcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKSB7XG4gIHJldHVybiBfcmVuZGVyTWF0Y2hlcyhtYXRjaGVzKTtcbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgT3V0bGV0LCBSb3V0ZSwgUm91dGVyLCBSb3V0ZXMsIExvY2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBOYXZpZ2F0aW9uQ29udGV4dCBhcyBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFJvdXRlQ29udGV4dCBhcyBVTlNBRkVfUm91dGVDb250ZXh0LCBjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4sIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCBtYXRjaFJvdXRlcywgcmVuZGVyTWF0Y2hlcywgcmVzb2x2ZVBhdGgsIHVzZUhyZWYsIHVzZUluUm91dGVyQ29udGV4dCwgdXNlTG9jYXRpb24sIHVzZU1hdGNoLCB1c2VOYXZpZ2F0ZSwgdXNlTmF2aWdhdGlvblR5cGUsIHVzZU91dGxldCwgdXNlT3V0bGV0Q29udGV4dCwgdXNlUGFyYW1zLCB1c2VSZXNvbHZlZFBhdGgsIHVzZVJvdXRlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCIvKipcbiAqIFJlYWN0IFJvdXRlciBET00gdjYuMy4wXG4gKlxuICogQ29weXJpZ2h0IChjKSBSZW1peCBTb2Z0d2FyZSBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFLm1kIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGxpY2Vuc2UgTUlUXG4gKi9cbmltcG9ydCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUxheW91dEVmZmVjdCwgY3JlYXRlRWxlbWVudCwgZm9yd2FyZFJlZiwgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnkgfSBmcm9tICdoaXN0b3J5JztcbmltcG9ydCB7IFJvdXRlciwgdXNlSHJlZiwgY3JlYXRlUGF0aCwgdXNlTG9jYXRpb24sIHVzZVJlc29sdmVkUGF0aCwgdXNlTmF2aWdhdGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBOYXZpZ2F0ZSwgTmF2aWdhdGlvblR5cGUsIE91dGxldCwgUm91dGUsIFJvdXRlciwgUm91dGVzLCBVTlNBRkVfTG9jYXRpb25Db250ZXh0LCBVTlNBRkVfTmF2aWdhdGlvbkNvbnRleHQsIFVOU0FGRV9Sb3V0ZUNvbnRleHQsIGNyZWF0ZVBhdGgsIGNyZWF0ZVJvdXRlc0Zyb21DaGlsZHJlbiwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIG1hdGNoUm91dGVzLCBwYXJzZVBhdGgsIHJlbmRlck1hdGNoZXMsIHJlc29sdmVQYXRoLCB1c2VIcmVmLCB1c2VJblJvdXRlckNvbnRleHQsIHVzZUxvY2F0aW9uLCB1c2VNYXRjaCwgdXNlTmF2aWdhdGUsIHVzZU5hdmlnYXRpb25UeXBlLCB1c2VPdXRsZXQsIHVzZU91dGxldENvbnRleHQsIHVzZVBhcmFtcywgdXNlUmVzb2x2ZWRQYXRoLCB1c2VSb3V0ZXMgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuY29uc3QgX2V4Y2x1ZGVkID0gW1wib25DbGlja1wiLCBcInJlbG9hZERvY3VtZW50XCIsIFwicmVwbGFjZVwiLCBcInN0YXRlXCIsIFwidGFyZ2V0XCIsIFwidG9cIl0sXG4gICAgICBfZXhjbHVkZWQyID0gW1wiYXJpYS1jdXJyZW50XCIsIFwiY2FzZVNlbnNpdGl2ZVwiLCBcImNsYXNzTmFtZVwiLCBcImVuZFwiLCBcInN0eWxlXCIsIFwidG9cIiwgXCJjaGlsZHJlblwiXTtcblxuZnVuY3Rpb24gd2FybmluZyhjb25kLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiKSBjb25zb2xlLndhcm4obWVzc2FnZSk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgUm91dGVyIVxuICAgICAgLy9cbiAgICAgIC8vIFRoaXMgZXJyb3IgaXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28geW91IGNhbiBtb3JlIGVhc2lseVxuICAgICAgLy8gZmluZCB0aGUgc291cmNlIGZvciBhIHdhcm5pbmcgdGhhdCBhcHBlYXJzIGluIHRoZSBjb25zb2xlIGJ5XG4gICAgICAvLyBlbmFibGluZyBcInBhdXNlIG9uIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIEphdmFTY3JpcHQgZGVidWdnZXIuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbn0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIENPTVBPTkVOVFNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBQcm92aWRlcyB0aGUgY2xlYW5lc3QgVVJMcy5cbiAqL1xuZnVuY3Rpb24gQnJvd3NlclJvdXRlcihfcmVmKSB7XG4gIGxldCB7XG4gICAgYmFzZW5hbWUsXG4gICAgY2hpbGRyZW4sXG4gICAgd2luZG93XG4gIH0gPSBfcmVmO1xuICBsZXQgaGlzdG9yeVJlZiA9IHVzZVJlZigpO1xuXG4gIGlmIChoaXN0b3J5UmVmLmN1cnJlbnQgPT0gbnVsbCkge1xuICAgIGhpc3RvcnlSZWYuY3VycmVudCA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHtcbiAgICAgIHdpbmRvd1xuICAgIH0pO1xuICB9XG5cbiAgbGV0IGhpc3RvcnkgPSBoaXN0b3J5UmVmLmN1cnJlbnQ7XG4gIGxldCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbi8qKlxuICogQSBgPFJvdXRlcj5gIGZvciB1c2UgaW4gd2ViIGJyb3dzZXJzLiBTdG9yZXMgdGhlIGxvY2F0aW9uIGluIHRoZSBoYXNoXG4gKiBwb3J0aW9uIG9mIHRoZSBVUkwgc28gaXQgaXMgbm90IHNlbnQgdG8gdGhlIHNlcnZlci5cbiAqL1xuZnVuY3Rpb24gSGFzaFJvdXRlcihfcmVmMikge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIHdpbmRvd1xuICB9ID0gX3JlZjI7XG4gIGxldCBoaXN0b3J5UmVmID0gdXNlUmVmKCk7XG5cbiAgaWYgKGhpc3RvcnlSZWYuY3VycmVudCA9PSBudWxsKSB7XG4gICAgaGlzdG9yeVJlZi5jdXJyZW50ID0gY3JlYXRlSGFzaEhpc3Rvcnkoe1xuICAgICAgd2luZG93XG4gICAgfSk7XG4gIH1cblxuICBsZXQgaGlzdG9yeSA9IGhpc3RvcnlSZWYuY3VycmVudDtcbiAgbGV0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIGFjdGlvbjogaGlzdG9yeS5hY3Rpb24sXG4gICAgbG9jYXRpb246IGhpc3RvcnkubG9jYXRpb25cbiAgfSk7XG4gIHVzZUxheW91dEVmZmVjdCgoKSA9PiBoaXN0b3J5Lmxpc3RlbihzZXRTdGF0ZSksIFtoaXN0b3J5XSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICBiYXNlbmFtZTogYmFzZW5hbWUsXG4gICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgIGxvY2F0aW9uOiBzdGF0ZS5sb2NhdGlvbixcbiAgICBuYXZpZ2F0aW9uVHlwZTogc3RhdGUuYWN0aW9uLFxuICAgIG5hdmlnYXRvcjogaGlzdG9yeVxuICB9KTtcbn1cblxuLyoqXG4gKiBBIGA8Um91dGVyPmAgdGhhdCBhY2NlcHRzIGEgcHJlLWluc3RhbnRpYXRlZCBoaXN0b3J5IG9iamVjdC4gSXQncyBpbXBvcnRhbnRcbiAqIHRvIG5vdGUgdGhhdCB1c2luZyB5b3VyIG93biBoaXN0b3J5IG9iamVjdCBpcyBoaWdobHkgZGlzY291cmFnZWQgYW5kIG1heSBhZGRcbiAqIHR3byB2ZXJzaW9ucyBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRvIHlvdXIgYnVuZGxlcyB1bmxlc3MgeW91IHVzZSB0aGUgc2FtZVxuICogdmVyc2lvbiBvZiB0aGUgaGlzdG9yeSBsaWJyYXJ5IHRoYXQgUmVhY3QgUm91dGVyIHVzZXMgaW50ZXJuYWxseS5cbiAqL1xuZnVuY3Rpb24gSGlzdG9yeVJvdXRlcihfcmVmMykge1xuICBsZXQge1xuICAgIGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIGhpc3RvcnlcbiAgfSA9IF9yZWYzO1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKHtcbiAgICBhY3Rpb246IGhpc3RvcnkuYWN0aW9uLFxuICAgIGxvY2F0aW9uOiBoaXN0b3J5LmxvY2F0aW9uXG4gIH0pO1xuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4gaGlzdG9yeS5saXN0ZW4oc2V0U3RhdGUpLCBbaGlzdG9yeV0pO1xuICByZXR1cm4gLyojX19QVVJFX18qL2NyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgYmFzZW5hbWU6IGJhc2VuYW1lLFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICBsb2NhdGlvbjogc3RhdGUubG9jYXRpb24sXG4gICAgbmF2aWdhdGlvblR5cGU6IHN0YXRlLmFjdGlvbixcbiAgICBuYXZpZ2F0b3I6IGhpc3RvcnlcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgSGlzdG9yeVJvdXRlci5kaXNwbGF5TmFtZSA9IFwidW5zdGFibGVfSGlzdG9yeVJvdXRlclwiO1xufVxuXG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuY29uc3QgTGluayA9IC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIExpbmtXaXRoUmVmKF9yZWY0LCByZWYpIHtcbiAgbGV0IHtcbiAgICBvbkNsaWNrLFxuICAgIHJlbG9hZERvY3VtZW50LFxuICAgIHJlcGxhY2UgPSBmYWxzZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXQsXG4gICAgdG9cbiAgfSA9IF9yZWY0LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY0LCBfZXhjbHVkZWQpO1xuXG4gIGxldCBocmVmID0gdXNlSHJlZih0byk7XG4gIGxldCBpbnRlcm5hbE9uQ2xpY2sgPSB1c2VMaW5rQ2xpY2tIYW5kbGVyKHRvLCB7XG4gICAgcmVwbGFjZSxcbiAgICBzdGF0ZSxcbiAgICB0YXJnZXRcbiAgfSk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICBpZiAob25DbGljaykgb25DbGljayhldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgIXJlbG9hZERvY3VtZW50KSB7XG4gICAgICBpbnRlcm5hbE9uQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgLyojX19QVVJFX18qL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnRcbiAgICBjcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgaHJlZjogaHJlZixcbiAgICAgIG9uQ2xpY2s6IGhhbmRsZUNsaWNrLFxuICAgICAgcmVmOiByZWYsXG4gICAgICB0YXJnZXQ6IHRhcmdldFxuICAgIH0pKVxuICApO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTGluay5kaXNwbGF5TmFtZSA9IFwiTGlua1wiO1xufVxuXG4vKipcbiAqIEEgPExpbms+IHdyYXBwZXIgdGhhdCBrbm93cyBpZiBpdCdzIFwiYWN0aXZlXCIgb3Igbm90LlxuICovXG5jb25zdCBOYXZMaW5rID0gLyojX19QVVJFX18qL2ZvcndhcmRSZWYoZnVuY3Rpb24gTmF2TGlua1dpdGhSZWYoX3JlZjUsIHJlZikge1xuICBsZXQge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50UHJvcCA9IFwicGFnZVwiLFxuICAgIGNhc2VTZW5zaXRpdmUgPSBmYWxzZSxcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVByb3AgPSBcIlwiLFxuICAgIGVuZCA9IGZhbHNlLFxuICAgIHN0eWxlOiBzdHlsZVByb3AsXG4gICAgdG8sXG4gICAgY2hpbGRyZW5cbiAgfSA9IF9yZWY1LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWY1LCBfZXhjbHVkZWQyKTtcblxuICBsZXQgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICBsZXQgcGF0aCA9IHVzZVJlc29sdmVkUGF0aCh0byk7XG4gIGxldCBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWU7XG4gIGxldCB0b1BhdGhuYW1lID0gcGF0aC5wYXRobmFtZTtcblxuICBpZiAoIWNhc2VTZW5zaXRpdmUpIHtcbiAgICBsb2NhdGlvblBhdGhuYW1lID0gbG9jYXRpb25QYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHRvUGF0aG5hbWUgPSB0b1BhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBsZXQgaXNBY3RpdmUgPSBsb2NhdGlvblBhdGhuYW1lID09PSB0b1BhdGhuYW1lIHx8ICFlbmQgJiYgbG9jYXRpb25QYXRobmFtZS5zdGFydHNXaXRoKHRvUGF0aG5hbWUpICYmIGxvY2F0aW9uUGF0aG5hbWUuY2hhckF0KHRvUGF0aG5hbWUubGVuZ3RoKSA9PT0gXCIvXCI7XG4gIGxldCBhcmlhQ3VycmVudCA9IGlzQWN0aXZlID8gYXJpYUN1cnJlbnRQcm9wIDogdW5kZWZpbmVkO1xuICBsZXQgY2xhc3NOYW1lO1xuXG4gIGlmICh0eXBlb2YgY2xhc3NOYW1lUHJvcCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgY2xhc3NOYW1lID0gY2xhc3NOYW1lUHJvcCh7XG4gICAgICBpc0FjdGl2ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIC8vIElmIHRoZSBjbGFzc05hbWUgcHJvcCBpcyBub3QgYSBmdW5jdGlvbiwgd2UgdXNlIGEgZGVmYXVsdCBgYWN0aXZlYFxuICAgIC8vIGNsYXNzIGZvciA8TmF2TGluayAvPnMgdGhhdCBhcmUgYWN0aXZlLiBJbiB2NSBgYWN0aXZlYCB3YXMgdGhlIGRlZmF1bHRcbiAgICAvLyB2YWx1ZSBmb3IgYGFjdGl2ZUNsYXNzTmFtZWAsIGJ1dCB3ZSBhcmUgcmVtb3ZpbmcgdGhhdCBBUEkgYW5kIGNhbiBzdGlsbFxuICAgIC8vIHVzZSB0aGUgb2xkIGRlZmF1bHQgYmVoYXZpb3IgZm9yIGEgY2xlYW5lciB1cGdyYWRlIHBhdGggYW5kIGtlZXAgdGhlXG4gICAgLy8gc2ltcGxlIHN0eWxpbmcgcnVsZXMgd29ya2luZyBhcyB0aGV5IGN1cnJlbnRseSBkby5cbiAgICBjbGFzc05hbWUgPSBbY2xhc3NOYW1lUHJvcCwgaXNBY3RpdmUgPyBcImFjdGl2ZVwiIDogbnVsbF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpO1xuICB9XG5cbiAgbGV0IHN0eWxlID0gdHlwZW9mIHN0eWxlUHJvcCA9PT0gXCJmdW5jdGlvblwiID8gc3R5bGVQcm9wKHtcbiAgICBpc0FjdGl2ZVxuICB9KSA6IHN0eWxlUHJvcDtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgcmVmOiByZWYsXG4gICAgc3R5bGU6IHN0eWxlLFxuICAgIHRvOiB0b1xuICB9KSwgdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBjaGlsZHJlbih7XG4gICAgaXNBY3RpdmVcbiAgfSkgOiBjaGlsZHJlbik7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG59IC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBIT09LU1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqXG4gKiBIYW5kbGVzIHRoZSBjbGljayBiZWhhdmlvciBmb3Igcm91dGVyIGA8TGluaz5gIGNvbXBvbmVudHMuIFRoaXMgaXMgdXNlZnVsIGlmXG4gKiB5b3UgbmVlZCB0byBjcmVhdGUgY3VzdG9tIGA8TGluaz5gIGNvbXBvbmVudHMgd2l0aCB0aGUgc2FtZSBjbGljayBiZWhhdmlvciB3ZVxuICogdXNlIGluIG91ciBleHBvcnRlZCBgPExpbms+YC5cbiAqL1xuXG5cbmZ1bmN0aW9uIHVzZUxpbmtDbGlja0hhbmRsZXIodG8sIF90ZW1wKSB7XG4gIGxldCB7XG4gICAgdGFyZ2V0LFxuICAgIHJlcGxhY2U6IHJlcGxhY2VQcm9wLFxuICAgIHN0YXRlXG4gIH0gPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcDtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgbGV0IHBhdGggPSB1c2VSZXNvbHZlZFBhdGgodG8pO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBJZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBMZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICFpc01vZGlmaWVkRXZlbnQoZXZlbnQpIC8vIElnbm9yZSBjbGlja3Mgd2l0aCBtb2RpZmllciBrZXlzXG4gICAgKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBJZiB0aGUgVVJMIGhhc24ndCBjaGFuZ2VkLCBhIHJlZ3VsYXIgPGE+IHdpbGwgZG8gYSByZXBsYWNlIGluc3RlYWQgb2ZcbiAgICAgIC8vIGEgcHVzaCwgc28gZG8gdGhlIHNhbWUgaGVyZS5cblxuICAgICAgbGV0IHJlcGxhY2UgPSAhIXJlcGxhY2VQcm9wIHx8IGNyZWF0ZVBhdGgobG9jYXRpb24pID09PSBjcmVhdGVQYXRoKHBhdGgpO1xuICAgICAgbmF2aWdhdGUodG8sIHtcbiAgICAgICAgcmVwbGFjZSxcbiAgICAgICAgc3RhdGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2xvY2F0aW9uLCBuYXZpZ2F0ZSwgcGF0aCwgcmVwbGFjZVByb3AsIHN0YXRlLCB0YXJnZXQsIHRvXSk7XG59XG4vKipcbiAqIEEgY29udmVuaWVudCB3cmFwcGVyIGZvciByZWFkaW5nIGFuZCB3cml0aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHZpYSB0aGVcbiAqIFVSTFNlYXJjaFBhcmFtcyBpbnRlcmZhY2UuXG4gKi9cblxuZnVuY3Rpb24gdXNlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gXCJ1bmRlZmluZWRcIiwgXCJZb3UgY2Fubm90IHVzZSB0aGUgYHVzZVNlYXJjaFBhcmFtc2AgaG9vayBpbiBhIGJyb3dzZXIgdGhhdCBkb2VzIG5vdCBcIiArIFwic3VwcG9ydCB0aGUgVVJMU2VhcmNoUGFyYW1zIEFQSS4gSWYgeW91IG5lZWQgdG8gc3VwcG9ydCBJbnRlcm5ldCBcIiArIFwiRXhwbG9yZXIgMTEsIHdlIHJlY29tbWVuZCB5b3UgbG9hZCBhIHBvbHlmaWxsIHN1Y2ggYXMgXCIgKyBcImh0dHBzOi8vZ2l0aHViLmNvbS91bmdhcC91cmwtc2VhcmNoLXBhcmFtc1xcblxcblwiICsgXCJJZiB5b3UncmUgdW5zdXJlIGhvdyB0byBsb2FkIHBvbHlmaWxscywgd2UgcmVjb21tZW5kIHlvdSBjaGVjayBvdXQgXCIgKyBcImh0dHBzOi8vcG9seWZpbGwuaW8vdjMvIHdoaWNoIHByb3ZpZGVzIHNvbWUgcmVjb21tZW5kYXRpb25zIGFib3V0IGhvdyBcIiArIFwidG8gbG9hZCBwb2x5ZmlsbHMgb25seSBmb3IgdXNlcnMgdGhhdCBuZWVkIHRoZW0sIGluc3RlYWQgb2YgZm9yIGV2ZXJ5IFwiICsgXCJ1c2VyLlwiKSA6IHZvaWQgMDtcbiAgbGV0IGRlZmF1bHRTZWFyY2hQYXJhbXNSZWYgPSB1c2VSZWYoY3JlYXRlU2VhcmNoUGFyYW1zKGRlZmF1bHRJbml0KSk7XG4gIGxldCBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG4gIGxldCBzZWFyY2hQYXJhbXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKGxvY2F0aW9uLnNlYXJjaCk7XG5cbiAgICBmb3IgKGxldCBrZXkgb2YgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmtleXMoKSkge1xuICAgICAgaWYgKCFzZWFyY2hQYXJhbXMuaGFzKGtleSkpIHtcbiAgICAgICAgZGVmYXVsdFNlYXJjaFBhcmFtc1JlZi5jdXJyZW50LmdldEFsbChrZXkpLmZvckVhY2godmFsdWUgPT4ge1xuICAgICAgICAgIHNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzZWFyY2hQYXJhbXM7XG4gIH0sIFtsb2NhdGlvbi5zZWFyY2hdKTtcbiAgbGV0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcbiAgbGV0IHNldFNlYXJjaFBhcmFtcyA9IHVzZUNhbGxiYWNrKChuZXh0SW5pdCwgbmF2aWdhdGVPcHRpb25zKSA9PiB7XG4gICAgbmF2aWdhdGUoXCI/XCIgKyBjcmVhdGVTZWFyY2hQYXJhbXMobmV4dEluaXQpLCBuYXZpZ2F0ZU9wdGlvbnMpO1xuICB9LCBbbmF2aWdhdGVdKTtcbiAgcmV0dXJuIFtzZWFyY2hQYXJhbXMsIHNldFNlYXJjaFBhcmFtc107XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QgdXNpbmcgdGhlIGdpdmVuIGluaXRpYWxpemVyLlxuICpcbiAqIFRoaXMgaXMgaWRlbnRpY2FsIHRvIGBuZXcgVVJMU2VhcmNoUGFyYW1zKGluaXQpYCBleGNlcHQgaXQgYWxzb1xuICogc3VwcG9ydHMgYXJyYXlzIGFzIHZhbHVlcyBpbiB0aGUgb2JqZWN0IGZvcm0gb2YgdGhlIGluaXRpYWxpemVyXG4gKiBpbnN0ZWFkIG9mIGp1c3Qgc3RyaW5ncy4gVGhpcyBpcyBjb252ZW5pZW50IHdoZW4geW91IG5lZWQgbXVsdGlwbGVcbiAqIHZhbHVlcyBmb3IgYSBnaXZlbiBrZXksIGJ1dCBkb24ndCB3YW50IHRvIHVzZSBhbiBhcnJheSBpbml0aWFsaXplci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgaW5zdGVhZCBvZjpcbiAqXG4gKiAgIGxldCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKFtcbiAqICAgICBbJ3NvcnQnLCAnbmFtZSddLFxuICogICAgIFsnc29ydCcsICdwcmljZSddXG4gKiAgIF0pO1xuICpcbiAqIHlvdSBjYW4gZG86XG4gKlxuICogICBsZXQgc2VhcmNoUGFyYW1zID0gY3JlYXRlU2VhcmNoUGFyYW1zKHtcbiAqICAgICBzb3J0OiBbJ25hbWUnLCAncHJpY2UnXVxuICogICB9KTtcbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2VhcmNoUGFyYW1zKGluaXQpIHtcbiAgaWYgKGluaXQgPT09IHZvaWQgMCkge1xuICAgIGluaXQgPSBcIlwiO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBVUkxTZWFyY2hQYXJhbXModHlwZW9mIGluaXQgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShpbml0KSB8fCBpbml0IGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zID8gaW5pdCA6IE9iamVjdC5rZXlzKGluaXQpLnJlZHVjZSgobWVtbywga2V5KSA9PiB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFtrZXldO1xuICAgIHJldHVybiBtZW1vLmNvbmNhdChBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlLm1hcCh2ID0+IFtrZXksIHZdKSA6IFtba2V5LCB2YWx1ZV1dKTtcbiAgfSwgW10pKTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluaywgY3JlYXRlU2VhcmNoUGFyYW1zLCBIaXN0b3J5Um91dGVyIGFzIHVuc3RhYmxlX0hpc3RvcnlSb3V0ZXIsIHVzZUxpbmtDbGlja0hhbmRsZXIsIHVzZVNlYXJjaFBhcmFtcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIsIGNvbXBhcmUsIGNvbXBhcmVDb250ZXh0KSB7XG4gIHZhciByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCBvYmpBLCBvYmpCKSA6IHZvaWQgMDtcblxuICBpZiAocmV0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gISFyZXQ7XG4gIH1cblxuICBpZiAob2JqQSA9PT0gb2JqQikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSBcIm9iamVjdFwiIHx8ICFvYmpBIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8ICFvYmpCKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBiSGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmJpbmQob2JqQik7XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuICAgIHZhciBrZXkgPSBrZXlzQVtpZHhdO1xuXG4gICAgaWYgKCFiSGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZUEgPSBvYmpBW2tleV07XG4gICAgdmFyIHZhbHVlQiA9IG9iakJba2V5XTtcblxuICAgIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIHZhbHVlQSwgdmFsdWVCLCBrZXkpIDogdm9pZCAwO1xuXG4gICAgaWYgKHJldCA9PT0gZmFsc2UgfHwgKHJldCA9PT0gdm9pZCAwICYmIHZhbHVlQSAhPT0gdmFsdWVCKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vcm1hbGl6ZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9ybWFsaXplLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJmdW5jdGlvbiBzdHlsaXNfbWluIChXKSB7XG4gIGZ1bmN0aW9uIE0oZCwgYywgZSwgaCwgYSkge1xuICAgIGZvciAodmFyIG0gPSAwLCBiID0gMCwgdiA9IDAsIG4gPSAwLCBxLCBnLCB4ID0gMCwgSyA9IDAsIGssIHUgPSBrID0gcSA9IDAsIGwgPSAwLCByID0gMCwgSSA9IDAsIHQgPSAwLCBCID0gZS5sZW5ndGgsIEogPSBCIC0gMSwgeSwgZiA9ICcnLCBwID0gJycsIEYgPSAnJywgRyA9ICcnLCBDOyBsIDwgQjspIHtcbiAgICAgIGcgPSBlLmNoYXJDb2RlQXQobCk7XG4gICAgICBsID09PSBKICYmIDAgIT09IGIgKyBuICsgdiArIG0gJiYgKDAgIT09IGIgJiYgKGcgPSA0NyA9PT0gYiA/IDEwIDogNDcpLCBuID0gdiA9IG0gPSAwLCBCKyssIEorKyk7XG5cbiAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgIGlmIChsID09PSBKICYmICgwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpLCAwIDwgZi50cmltKCkubGVuZ3RoKSkge1xuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIGYgKz0gZS5jaGFyQXQobCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZyA9IDU5O1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICBmID0gZi50cmltKCk7XG4gICAgICAgICAgICBxID0gZi5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgayA9IDE7XG5cbiAgICAgICAgICAgIGZvciAodCA9ICsrbDsgbCA8IEI7KSB7XG4gICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgICAgICAgaysrO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICAgICAgICAgIGstLTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICBhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHUgPSBsICsgMTsgdSA8IEo7ICsrdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGUuY2hhckNvZGVBdCh1KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDIgPT09IGcgJiYgNDIgPT09IGUuY2hhckNvZGVBdCh1IC0gMSkgJiYgbCArIDIgIT09IHUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDcgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHU7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgICBmb3IgKDsgbCsrIDwgSiAmJiBlLmNoYXJDb2RlQXQobCkgIT09IGc7KSB7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICgwID09PSBrKSBicmVhaztcbiAgICAgICAgICAgICAgbCsrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBrID0gZS5zdWJzdHJpbmcodCwgbCk7XG4gICAgICAgICAgICAwID09PSBxICYmIChxID0gKGYgPSBmLnJlcGxhY2UoY2EsICcnKS50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHEpIHtcbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICAwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpO1xuICAgICAgICAgICAgICAgIGcgPSBmLmNoYXJDb2RlQXQoMSk7XG5cbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBjO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgciA9IE87XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgayA9IE0oYywgciwgaywgZywgYSArIDEpO1xuICAgICAgICAgICAgICAgIHQgPSBrLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAwIDwgQSAmJiAociA9IFgoTywgZiwgSSksIEMgPSBIKDMsIGssIHIsIGMsIEQsIHosIHQsIGcsIGEsIGgpLCBmID0gci5qb2luKCcnKSwgdm9pZCAwICE9PSBDICYmIDAgPT09ICh0ID0gKGsgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZyA9IDAsIGsgPSAnJykpO1xuICAgICAgICAgICAgICAgIGlmICgwIDwgdCkgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShkYSwgZWEpO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDc6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZmEsICckMSAkMicpO1xuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGsgPSAxID09PSB3IHx8IDIgPT09IHcgJiYgTCgnQCcgKyBrLCAzKSA/ICdALXdlYmtpdC0nICsgayArICdAJyArIGsgOiAnQCcgKyBrO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyBrLCAxMTIgPT09IGggJiYgKGsgPSAocCArPSBrLCAnJykpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBrID0gJyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBrID0gTShjLCBYKGMsIGYsIEkpLCBrLCBoLCBhICsgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEYgKz0gaztcbiAgICAgICAgICAgIGsgPSBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGYgPSAoMCA8IHIgPyBmLnJlcGxhY2UoTiwgJycpIDogZikudHJpbSgpO1xuICAgICAgICAgICAgaWYgKDEgPCAodCA9IGYubGVuZ3RoKSkgc3dpdGNoICgwID09PSB1ICYmIChxID0gZi5jaGFyQ29kZUF0KDApLCA0NSA9PT0gcSB8fCA5NiA8IHEgJiYgMTIzID4gcSkgJiYgKHQgPSAoZiA9IGYucmVwbGFjZSgnICcsICc6JykpLmxlbmd0aCksIDAgPCBBICYmIHZvaWQgMCAhPT0gKEMgPSBIKDEsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKSkgJiYgMCA9PT0gKHQgPSAoZiA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChmID0gJ1xceDAwXFx4MDAnKSwgcSA9IGYuY2hhckNvZGVBdCgwKSwgZyA9IGYuY2hhckNvZGVBdCgxKSwgcSkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICBpZiAoMTA1ID09PSBnIHx8IDk5ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICBHICs9IGYgKyBlLmNoYXJBdChsKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIDU4ICE9PSBmLmNoYXJDb2RlQXQodCAtIDEpICYmIChwICs9IFAoZiwgcSwgZywgZi5jaGFyQ29kZUF0KDIpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICA0NyA9PT0gYiA/IGIgPSAwIDogMCA9PT0gMSArIHEgJiYgMTA3ICE9PSBoICYmIDAgPCBmLmxlbmd0aCAmJiAociA9IDEsIGYgKz0gJ1xceDAwJyk7XG4gICAgICAgICAgMCA8IEEgKiBZICYmIEgoMCwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpO1xuICAgICAgICAgIHogPSAxO1xuICAgICAgICAgIEQrKztcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDU5OlxuICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICAgICAgeisrO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeisrO1xuICAgICAgICAgIHkgPSBlLmNoYXJBdChsKTtcblxuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBtICsgYikgc3dpdGNoICh4KSB7XG4gICAgICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgeSA9ICcnO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgMzIgIT09IGcgJiYgKHkgPSAnICcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXDAnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcZic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFx2JztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAociA9IEkgPSAxLCB5ID0gJ1xcZicgKyB5KTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTA4OlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtICsgRSAmJiAwIDwgdSkgc3dpdGNoIChsIC0gdSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgIDExMiA9PT0geCAmJiA1OCA9PT0gZS5jaGFyQ29kZUF0KGwgLSAzKSAmJiAoRSA9IHgpO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgICAgMTExID09PSBLICYmIChFID0gSyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAodSA9IGwpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSAmJiAociA9IDEsIHkgKz0gJ1xccicpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgIDAgPT09IGIgJiYgKG4gPSBuID09PSBnID8gMCA6IDAgPT09IG4gPyBnIDogbik7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbSsrO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MzpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0tLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiB2LS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtKSB7XG4gICAgICAgICAgICAgICAgaWYgKDAgPT09IHEpIHN3aXRjaCAoMiAqIHggKyAzICogSykge1xuICAgICAgICAgICAgICAgICAgY2FzZSA1MzM6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBxID0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdisrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gKyB1ICsgayAmJiAoayA9IDEpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgIGlmICghKDAgPCBuICsgbSArIHYpKSBzd2l0Y2ggKGIpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKDIgKiBnICsgMyAqIGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMzU6XG4gICAgICAgICAgICAgICAgICAgICAgYiA9IDQ3O1xuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgICAgICAgICAgIHQgPSBsLCBiID0gNDI7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgIDQ3ID09PSBnICYmIDQyID09PSB4ICYmIHQgKyAyICE9PSBsICYmICgzMyA9PT0gZS5jaGFyQ29kZUF0KHQgKyAyKSAmJiAocCArPSBlLnN1YnN0cmluZyh0LCBsICsgMSkpLCB5ID0gJycsIGIgPSAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIDAgPT09IGIgJiYgKGYgKz0geSk7XG4gICAgICB9XG5cbiAgICAgIEsgPSB4O1xuICAgICAgeCA9IGc7XG4gICAgICBsKys7XG4gICAgfVxuXG4gICAgdCA9IHAubGVuZ3RoO1xuXG4gICAgaWYgKDAgPCB0KSB7XG4gICAgICByID0gYztcbiAgICAgIGlmICgwIDwgQSAmJiAoQyA9IEgoMiwgcCwgciwgZCwgRCwgeiwgdCwgaCwgYSwgaCksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAocCA9IEMpLmxlbmd0aCkpIHJldHVybiBHICsgcCArIEY7XG4gICAgICBwID0gci5qb2luKCcsJykgKyAneycgKyBwICsgJ30nO1xuXG4gICAgICBpZiAoMCAhPT0gdyAqIEUpIHtcbiAgICAgICAgMiAhPT0gdyB8fCBMKHAsIDIpIHx8IChFID0gMCk7XG5cbiAgICAgICAgc3dpdGNoIChFKSB7XG4gICAgICAgICAgY2FzZSAxMTE6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKGhhLCAnOi1tb3otJDEnKSArIHA7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShRLCAnOjotd2Via2l0LWlucHV0LSQxJykgKyBwLnJlcGxhY2UoUSwgJzo6LW1vei0kMScpICsgcC5yZXBsYWNlKFEsICc6LW1zLWlucHV0LSQxJykgKyBwO1xuICAgICAgICB9XG5cbiAgICAgICAgRSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIEcgKyBwICsgRjtcbiAgfVxuXG4gIGZ1bmN0aW9uIFgoZCwgYywgZSkge1xuICAgIHZhciBoID0gYy50cmltKCkuc3BsaXQoaWEpO1xuICAgIGMgPSBoO1xuICAgIHZhciBhID0gaC5sZW5ndGgsXG4gICAgICAgIG0gPSBkLmxlbmd0aDtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgY2FzZSAxOlxuICAgICAgICB2YXIgYiA9IDA7XG5cbiAgICAgICAgZm9yIChkID0gMCA9PT0gbSA/ICcnIDogZFswXSArICcgJzsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGNbYl0gPSBaKGQsIGNbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgdiA9IGIgPSAwO1xuXG4gICAgICAgIGZvciAoYyA9IFtdOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBtOyArK24pIHtcbiAgICAgICAgICAgIGNbdisrXSA9IFooZFtuXSArICcgJywgaFtiXSwgZSkudHJpbSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcmV0dXJuIGM7XG4gIH1cblxuICBmdW5jdGlvbiBaKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMuY2hhckNvZGVBdCgwKTtcbiAgICAzMyA+IGggJiYgKGggPSAoYyA9IGMudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgIHN3aXRjaCAoaCkge1xuICAgICAgY2FzZSAzODpcbiAgICAgICAgcmV0dXJuIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBjYXNlIDU4OlxuICAgICAgICByZXR1cm4gZC50cmltKCkgKyBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKDAgPCAxICogZSAmJiAwIDwgYy5pbmRleE9mKCdcXGYnKSkgcmV0dXJuIGMucmVwbGFjZShGLCAoNTggPT09IGQuY2hhckNvZGVBdCgwKSA/ICcnIDogJyQxJykgKyBkLnRyaW0oKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGQgKyBjO1xuICB9XG5cbiAgZnVuY3Rpb24gUChkLCBjLCBlLCBoKSB7XG4gICAgdmFyIGEgPSBkICsgJzsnLFxuICAgICAgICBtID0gMiAqIGMgKyAzICogZSArIDQgKiBoO1xuXG4gICAgaWYgKDk0NCA9PT0gbSkge1xuICAgICAgZCA9IGEuaW5kZXhPZignOicsIDkpICsgMTtcbiAgICAgIHZhciBiID0gYS5zdWJzdHJpbmcoZCwgYS5sZW5ndGggLSAxKS50cmltKCk7XG4gICAgICBiID0gYS5zdWJzdHJpbmcoMCwgZCkudHJpbSgpICsgYiArICc7JztcbiAgICAgIHJldHVybiAxID09PSB3IHx8IDIgPT09IHcgJiYgTChiLCAxKSA/ICctd2Via2l0LScgKyBiICsgYiA6IGI7XG4gICAgfVxuXG4gICAgaWYgKDAgPT09IHcgfHwgMiA9PT0gdyAmJiAhTChhLCAxKSkgcmV0dXJuIGE7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMTAxNTpcbiAgICAgICAgcmV0dXJuIDk3ID09PSBhLmNoYXJDb2RlQXQoMTApID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NTE6XG4gICAgICAgIHJldHVybiAxMTYgPT09IGEuY2hhckNvZGVBdCgzKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTYzOlxuICAgICAgICByZXR1cm4gMTEwID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDEwMDk6XG4gICAgICAgIGlmICgxMDAgIT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTY5OlxuICAgICAgY2FzZSA5NDI6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTc4OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAxOTpcbiAgICAgIGNhc2UgOTgzOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDg4MzpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoOCkpIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG4gICAgICAgIGlmICgwIDwgYS5pbmRleE9mKCdpbWFnZS1zZXQoJywgMTEpKSByZXR1cm4gYS5yZXBsYWNlKGphLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5MzI6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDQpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg1KSkge1xuICAgICAgICAgIGNhc2UgMTAzOlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC0nICsgYS5yZXBsYWNlKCctZ3JvdycsICcnKSArICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdncm93JywgJ3Bvc2l0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ3NocmluaycsICduZWdhdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgOTg6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2Jhc2lzJywgJ3ByZWZlcnJlZC1zaXplJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk2NDpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDIzOlxuICAgICAgICBpZiAoOTkgIT09IGEuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZyhhLmluZGV4T2YoJzonLCAxNSkpLnJlcGxhY2UoJ2ZsZXgtJywgJycpLnJlcGxhY2UoJ3NwYWNlLWJldHdlZW4nLCAnanVzdGlmeScpO1xuICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LXBhY2snICsgYiArICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LXBhY2snICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAwNTpcbiAgICAgICAgcmV0dXJuIGthLnRlc3QoYSkgPyBhLnJlcGxhY2UoYWEsICc6LXdlYmtpdC0nKSArIGEucmVwbGFjZShhYSwgJzotbW96LScpICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMWUzOlxuICAgICAgICBiID0gYS5zdWJzdHJpbmcoMTMpLnRyaW0oKTtcbiAgICAgICAgYyA9IGIuaW5kZXhPZignLScpICsgMTtcblxuICAgICAgICBzd2l0Y2ggKGIuY2hhckNvZGVBdCgwKSArIGIuY2hhckNvZGVBdChjKSkge1xuICAgICAgICAgIGNhc2UgMjI2OlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMzI6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0Yi1ybCcpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ2xyJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMTc6XG4gICAgICAgIGlmICgtMSA9PT0gYS5pbmRleE9mKCdzdGlja3knLCA5KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTc1OlxuICAgICAgICBjID0gKGEgPSBkKS5sZW5ndGggLSAxMDtcbiAgICAgICAgYiA9ICgzMyA9PT0gYS5jaGFyQ29kZUF0KGMpID8gYS5zdWJzdHJpbmcoMCwgYykgOiBhKS5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JywgNykgKyAxKS50cmltKCk7XG5cbiAgICAgICAgc3dpdGNoIChtID0gYi5jaGFyQ29kZUF0KDApICsgKGIuY2hhckNvZGVBdCg3KSB8IDApKSB7XG4gICAgICAgICAgY2FzZSAyMDM6XG4gICAgICAgICAgICBpZiAoMTExID4gYi5jaGFyQ29kZUF0KDgpKSBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIwNzpcbiAgICAgICAgICBjYXNlIDEwMjpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArICgxMDIgPCBtID8gJ2lubGluZS0nIDogJycpICsgJ2JveCcpICsgJzsnICsgYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGEucmVwbGFjZShiLCAnLW1zLScgKyBiICsgJ2JveCcpICsgJzsnICsgYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhICsgJzsnO1xuXG4gICAgICBjYXNlIDkzODpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNSkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDYpKSB7XG4gICAgICAgICAgY2FzZSAxMDU6XG4gICAgICAgICAgICByZXR1cm4gYiA9IGEucmVwbGFjZSgnLWl0ZW1zJywgJycpLCAnLXdlYmtpdC0nICsgYSArICctd2Via2l0LWJveC0nICsgYiArICctbXMtZmxleC0nICsgYiArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1pdGVtLScgKyBhLnJlcGxhY2UoYmEsICcnKSArIGE7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWxpbmUtcGFjaycgKyBhLnJlcGxhY2UoJ2FsaWduLWNvbnRlbnQnLCAnJykucmVwbGFjZShiYSwgJycpICsgYTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NzM6XG4gICAgICBjYXNlIDk4OTpcbiAgICAgICAgaWYgKDQ1ICE9PSBhLmNoYXJDb2RlQXQoMykgfHwgMTIyID09PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMTpcbiAgICAgIGNhc2UgOTUzOlxuICAgICAgICBpZiAoITAgPT09IGxhLnRlc3QoZCkpIHJldHVybiAxMTUgPT09IChiID0gZC5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JykgKyAxKSkuY2hhckNvZGVBdCgwKSA/IFAoZC5yZXBsYWNlKCdzdHJldGNoJywgJ2ZpbGwtYXZhaWxhYmxlJyksIGMsIGUsIGgpLnJlcGxhY2UoJzpmaWxsLWF2YWlsYWJsZScsICc6c3RyZXRjaCcpIDogYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArIGEucmVwbGFjZShiLCAnLW1vei0nICsgYi5yZXBsYWNlKCdmaWxsLScsICcnKSkgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NjI6XG4gICAgICAgIGlmIChhID0gJy13ZWJraXQtJyArIGEgKyAoMTAyID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLW1zLScgKyBhIDogJycpICsgYSwgMjExID09PSBlICsgaCAmJiAxMDUgPT09IGEuY2hhckNvZGVBdCgxMykgJiYgMCA8IGEuaW5kZXhPZigndHJhbnNmb3JtJywgMTApKSByZXR1cm4gYS5zdWJzdHJpbmcoMCwgYS5pbmRleE9mKCc7JywgMjcpICsgMSkucmVwbGFjZShtYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICB9XG5cbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEwoZCwgYykge1xuICAgIHZhciBlID0gZC5pbmRleE9mKDEgPT09IGMgPyAnOicgOiAneycpLFxuICAgICAgICBoID0gZC5zdWJzdHJpbmcoMCwgMyAhPT0gYyA/IGUgOiAxMCk7XG4gICAgZSA9IGQuc3Vic3RyaW5nKGUgKyAxLCBkLmxlbmd0aCAtIDEpO1xuICAgIHJldHVybiBSKDIgIT09IGMgPyBoIDogaC5yZXBsYWNlKG5hLCAnJDEnKSwgZSwgYyk7XG4gIH1cblxuICBmdW5jdGlvbiBlYShkLCBjKSB7XG4gICAgdmFyIGUgPSBQKGMsIGMuY2hhckNvZGVBdCgwKSwgYy5jaGFyQ29kZUF0KDEpLCBjLmNoYXJDb2RlQXQoMikpO1xuICAgIHJldHVybiBlICE9PSBjICsgJzsnID8gZS5yZXBsYWNlKG9hLCAnIG9yICgkMSknKS5zdWJzdHJpbmcoNCkgOiAnKCcgKyBjICsgJyknO1xuICB9XG5cbiAgZnVuY3Rpb24gSChkLCBjLCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSB7XG4gICAgZm9yICh2YXIgZyA9IDAsIHggPSBjLCB3OyBnIDwgQTsgKytnKSB7XG4gICAgICBzd2l0Y2ggKHcgPSBTW2ddLmNhbGwoQiwgZCwgeCwgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkpIHtcbiAgICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICAgIGNhc2UgITE6XG4gICAgICAgIGNhc2UgITA6XG4gICAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHggPSB3O1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh4ICE9PSBjKSByZXR1cm4geDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFQoZCkge1xuICAgIHN3aXRjaCAoZCkge1xuICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICBjYXNlIG51bGw6XG4gICAgICAgIEEgPSBTLmxlbmd0aCA9IDA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGQpIFNbQSsrXSA9IGQ7ZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGVvZiBkKSBmb3IgKHZhciBjID0gMCwgZSA9IGQubGVuZ3RoOyBjIDwgZTsgKytjKSB7XG4gICAgICAgICAgVChkW2NdKTtcbiAgICAgICAgfSBlbHNlIFkgPSAhIWQgfCAwO1xuICAgIH1cblxuICAgIHJldHVybiBUO1xuICB9XG5cbiAgZnVuY3Rpb24gVShkKSB7XG4gICAgZCA9IGQucHJlZml4O1xuICAgIHZvaWQgMCAhPT0gZCAmJiAoUiA9IG51bGwsIGQgPyAnZnVuY3Rpb24nICE9PSB0eXBlb2YgZCA/IHcgPSAxIDogKHcgPSAyLCBSID0gZCkgOiB3ID0gMCk7XG4gICAgcmV0dXJuIFU7XG4gIH1cblxuICBmdW5jdGlvbiBCKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQ7XG4gICAgMzMgPiBlLmNoYXJDb2RlQXQoMCkgJiYgKGUgPSBlLnRyaW0oKSk7XG4gICAgViA9IGU7XG4gICAgZSA9IFtWXTtcblxuICAgIGlmICgwIDwgQSkge1xuICAgICAgdmFyIGggPSBIKC0xLCBjLCBlLCBlLCBELCB6LCAwLCAwLCAwLCAwKTtcbiAgICAgIHZvaWQgMCAhPT0gaCAmJiAnc3RyaW5nJyA9PT0gdHlwZW9mIGggJiYgKGMgPSBoKTtcbiAgICB9XG5cbiAgICB2YXIgYSA9IE0oTywgZSwgYywgMCwgMCk7XG4gICAgMCA8IEEgJiYgKGggPSBIKC0yLCBhLCBlLCBlLCBELCB6LCBhLmxlbmd0aCwgMCwgMCwgMCksIHZvaWQgMCAhPT0gaCAmJiAoYSA9IGgpKTtcbiAgICBWID0gJyc7XG4gICAgRSA9IDA7XG4gICAgeiA9IEQgPSAxO1xuICAgIHJldHVybiBhO1xuICB9XG5cbiAgdmFyIGNhID0gL15cXDArL2csXG4gICAgICBOID0gL1tcXDBcXHJcXGZdL2csXG4gICAgICBhYSA9IC86ICovZyxcbiAgICAgIGthID0gL3pvb3xncmEvLFxuICAgICAgbWEgPSAvKFssOiBdKSh0cmFuc2Zvcm0pL2csXG4gICAgICBpYSA9IC8sXFxyKz8vZyxcbiAgICAgIEYgPSAvKFtcXHRcXHJcXG4gXSkqXFxmPyYvZyxcbiAgICAgIGZhID0gL0Aoa1xcdyspXFxzKihcXFMqKVxccyovLFxuICAgICAgUSA9IC86OihwbGFjZSkvZyxcbiAgICAgIGhhID0gLzoocmVhZC1vbmx5KS9nLFxuICAgICAgRyA9IC9bc3ZoXVxcdystW3RibHJdezJ9LyxcbiAgICAgIGRhID0gL1xcKFxccyooLiopXFxzKlxcKS9nLFxuICAgICAgb2EgPSAvKFtcXHNcXFNdKj8pOy9nLFxuICAgICAgYmEgPSAvLXNlbGZ8ZmxleC0vZyxcbiAgICAgIG5hID0gL1teXSo/KDpbcnBdW2VsXWFbXFx3LV0rKVteXSovLFxuICAgICAgbGEgPSAvc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLFxuICAgICAgamEgPSAvKFteLV0pKGltYWdlLXNldFxcKCkvLFxuICAgICAgeiA9IDEsXG4gICAgICBEID0gMSxcbiAgICAgIEUgPSAwLFxuICAgICAgdyA9IDEsXG4gICAgICBPID0gW10sXG4gICAgICBTID0gW10sXG4gICAgICBBID0gMCxcbiAgICAgIFIgPSBudWxsLFxuICAgICAgWSA9IDAsXG4gICAgICBWID0gJyc7XG4gIEIudXNlID0gVDtcbiAgQi5zZXQgPSBVO1xuICB2b2lkIDAgIT09IFcgJiYgVShXKTtcbiAgcmV0dXJuIEI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxpc19taW47XG4iLCJ2YXIgdW5pdGxlc3NLZXlzID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IDEsXG4gIGJvcmRlckltYWdlU2xpY2U6IDEsXG4gIGJvcmRlckltYWdlV2lkdGg6IDEsXG4gIGJveEZsZXg6IDEsXG4gIGJveEZsZXhHcm91cDogMSxcbiAgYm94T3JkaW5hbEdyb3VwOiAxLFxuICBjb2x1bW5Db3VudDogMSxcbiAgY29sdW1uczogMSxcbiAgZmxleDogMSxcbiAgZmxleEdyb3c6IDEsXG4gIGZsZXhQb3NpdGl2ZTogMSxcbiAgZmxleFNocmluazogMSxcbiAgZmxleE5lZ2F0aXZlOiAxLFxuICBmbGV4T3JkZXI6IDEsXG4gIGdyaWRSb3c6IDEsXG4gIGdyaWRSb3dFbmQ6IDEsXG4gIGdyaWRSb3dTcGFuOiAxLFxuICBncmlkUm93U3RhcnQ6IDEsXG4gIGdyaWRDb2x1bW46IDEsXG4gIGdyaWRDb2x1bW5FbmQ6IDEsXG4gIGdyaWRDb2x1bW5TcGFuOiAxLFxuICBncmlkQ29sdW1uU3RhcnQ6IDEsXG4gIG1zR3JpZFJvdzogMSxcbiAgbXNHcmlkUm93U3BhbjogMSxcbiAgbXNHcmlkQ29sdW1uOiAxLFxuICBtc0dyaWRDb2x1bW5TcGFuOiAxLFxuICBmb250V2VpZ2h0OiAxLFxuICBsaW5lSGVpZ2h0OiAxLFxuICBvcGFjaXR5OiAxLFxuICBvcmRlcjogMSxcbiAgb3JwaGFuczogMSxcbiAgdGFiU2l6ZTogMSxcbiAgd2lkb3dzOiAxLFxuICB6SW5kZXg6IDEsXG4gIHpvb206IDEsXG4gIFdlYmtpdExpbmVDbGFtcDogMSxcbiAgLy8gU1ZHLXJlbGF0ZWQgcHJvcGVydGllc1xuICBmaWxsT3BhY2l0eTogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICBzdG9wT3BhY2l0eTogMSxcbiAgc3Ryb2tlRGFzaGFycmF5OiAxLFxuICBzdHJva2VEYXNob2Zmc2V0OiAxLFxuICBzdHJva2VNaXRlcmxpbWl0OiAxLFxuICBzdHJva2VPcGFjaXR5OiAxLFxuICBzdHJva2VXaWR0aDogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdW5pdGxlc3NLZXlzO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnR7dHlwZU9mIGFzIGUsaXNFbGVtZW50IGFzIHQsaXNWYWxpZEVsZW1lbnRUeXBlIGFzIG59ZnJvbVwicmVhY3QtaXNcIjtpbXBvcnQgcix7dXNlU3RhdGUgYXMgbyx1c2VDb250ZXh0IGFzIHMsdXNlTWVtbyBhcyBpLHVzZUVmZmVjdCBhcyBhLHVzZVJlZiBhcyBjLGNyZWF0ZUVsZW1lbnQgYXMgdSx1c2VEZWJ1Z1ZhbHVlIGFzIGwsdXNlTGF5b3V0RWZmZWN0IGFzIGR9ZnJvbVwicmVhY3RcIjtpbXBvcnQgaCBmcm9tXCJzaGFsbG93ZXF1YWxcIjtpbXBvcnQgcCBmcm9tXCJAZW1vdGlvbi9zdHlsaXNcIjtpbXBvcnQgZiBmcm9tXCJAZW1vdGlvbi91bml0bGVzc1wiO2ltcG9ydCBtIGZyb21cIkBlbW90aW9uL2lzLXByb3AtdmFsaWRcIjtpbXBvcnQgeSBmcm9tXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiO2Z1bmN0aW9uIHYoKXtyZXR1cm4odj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBnPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtlWzBdXSxyPTAsbz10Lmxlbmd0aDtyPG87cis9MSluLnB1c2godFtyXSxlW3IrMV0pO3JldHVybiBufSxTPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dCYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiW29iamVjdCBPYmplY3RdXCI9PT0odC50b1N0cmluZz90LnRvU3RyaW5nKCk6T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKSYmIWUodCl9LHc9T2JqZWN0LmZyZWV6ZShbXSksRT1PYmplY3QuZnJlZXplKHt9KTtmdW5jdGlvbiBiKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV9ZnVuY3Rpb24gXyhlKXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInN0cmluZ1wiPT10eXBlb2YgZSYmZXx8ZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxcIkNvbXBvbmVudFwifWZ1bmN0aW9uIE4oZSl7cmV0dXJuIGUmJlwic3RyaW5nXCI9PXR5cGVvZiBlLnN0eWxlZENvbXBvbmVudElkfXZhciBBPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiYocHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0FUVFJ8fHByb2Nlc3MuZW52LlNDX0FUVFIpfHxcImRhdGEtc3R5bGVkXCIsQz1cIjUuMy4xXCIsST1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcIkhUTUxFbGVtZW50XCJpbiB3aW5kb3csUD1Cb29sZWFuKFwiYm9vbGVhblwiPT10eXBlb2YgU0NfRElTQUJMRV9TUEVFRFk/U0NfRElTQUJMRV9TUEVFRFk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJnZvaWQgMCE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSYmXCJcIiE9PXByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWT9cImZhbHNlXCIhPT1wcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFkmJnByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWTpcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmdm9pZCAwIT09cHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFkmJlwiXCIhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWT9cImZhbHNlXCIhPT1wcm9jZXNzLmVudi5TQ19ESVNBQkxFX1NQRUVEWSYmcHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFk6XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViksTz17fSxSPVwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/ezE6XCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsMjpcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLDM6XCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIiw0OlwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIiw1OlwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIiw2OlwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIiw3OidUaGVtZVByb3ZpZGVyOiBQbGVhc2UgcmV0dXJuIGFuIG9iamVjdCBmcm9tIHlvdXIgXCJ0aGVtZVwiIHByb3AgZnVuY3Rpb24sIGUuZy5cXG5cXG5gYGBqc1xcbnRoZW1lPXsoKSA9PiAoe30pfVxcbmBgYFxcblxcbicsODonVGhlbWVQcm92aWRlcjogUGxlYXNlIG1ha2UgeW91ciBcInRoZW1lXCIgcHJvcCBhbiBvYmplY3QuXFxuXFxuJyw5OlwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLDEwOlwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIiwxMTpcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsMTI6XCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3NcXG5cXG5cIiwxMzpcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cXG5cIiwxNDonVGhlbWVQcm92aWRlcjogXCJ0aGVtZVwiIHByb3AgaXMgcmVxdWlyZWQuXFxuXFxuJywxNTpcIkEgc3R5bGlzIHBsdWdpbiBoYXMgYmVlbiBzdXBwbGllZCB0aGF0IGlzIG5vdCBuYW1lZC4gV2UgbmVlZCBhIG5hbWUgZm9yIGVhY2ggcGx1Z2luIHRvIGJlIGFibGUgdG8gcHJldmVudCBzdHlsaW5nIGNvbGxpc2lvbnMgYmV0d2VlbiBkaWZmZXJlbnQgc3R5bGlzIGNvbmZpZ3VyYXRpb25zIHdpdGhpbiB0aGUgc2FtZSBhcHAuIEJlZm9yZSB5b3UgcGFzcyB5b3VyIHBsdWdpbiB0byBgPFN0eWxlU2hlZXRNYW5hZ2VyIHN0eWxpc1BsdWdpbnM9e1tdfT5gLCBwbGVhc2UgbWFrZSBzdXJlIGVhY2ggcGx1Z2luIGlzIHVuaXF1ZWx5LW5hbWVkLCBlLmcuXFxuXFxuYGBganNcXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoaW1wb3J0ZWRQbHVnaW4sICduYW1lJywgeyB2YWx1ZTogJ3NvbWUtdW5pcXVlLW5hbWUnIH0pO1xcbmBgYFxcblxcblwiLDE2OlwiUmVhY2hlZCB0aGUgbGltaXQgb2YgaG93IG1hbnkgc3R5bGVkIGNvbXBvbmVudHMgbWF5IGJlIGNyZWF0ZWQgYXQgZ3JvdXAgJXMuXFxuWW91IG1heSBvbmx5IGNyZWF0ZSB1cCB0byAxLDA3Myw3NDEsODI0IGNvbXBvbmVudHMuIElmIHlvdSdyZSBjcmVhdGluZyBjb21wb25lbnRzIGR5bmFtaWNhbGx5LFxcbmFzIGZvciBpbnN0YW5jZSBpbiB5b3VyIHJlbmRlciBtZXRob2QgdGhlbiB5b3UgbWF5IGJlIHJ1bm5pbmcgaW50byB0aGlzIGxpbWl0YXRpb24uXFxuXFxuXCIsMTc6XCJDU1NTdHlsZVNoZWV0IGNvdWxkIG5vdCBiZSBmb3VuZCBvbiBIVE1MU3R5bGVFbGVtZW50LlxcbkhhcyBzdHlsZWQtY29tcG9uZW50cycgc3R5bGUgdGFnIGJlZW4gdW5tb3VudGVkIG9yIGFsdGVyZWQgYnkgYW5vdGhlciBzY3JpcHQ/XFxuXCJ9Ont9O2Z1bmN0aW9uIEQoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aDw9MD92b2lkIDA6YXJndW1lbnRzWzBdLHQ9W10sbj0xLHI9YXJndW1lbnRzLmxlbmd0aDtuPHI7bis9MSl0LnB1c2gobjwwfHxhcmd1bWVudHMubGVuZ3RoPD1uP3ZvaWQgMDphcmd1bWVudHNbbl0pO3JldHVybiB0LmZvckVhY2goKGZ1bmN0aW9uKHQpe2U9ZS5yZXBsYWNlKC8lW2Etel0vLHQpfSkpLGV9ZnVuY3Rpb24gaihlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07dGhyb3dcInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WP25ldyBFcnJvcihcIkFuIGVycm9yIG9jY3VycmVkLiBTZWUgaHR0cHM6Ly9naXQuaW8vSlVJYUUjXCIrZStcIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIisobi5sZW5ndGg+MD9cIiBBcmdzOiBcIituLmpvaW4oXCIsIFwiKTpcIlwiKSk6bmV3IEVycm9yKEQuYXBwbHkodm9pZCAwLFtSW2VdXS5jb25jYXQobikpLnRyaW0oKSl9dmFyIFQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkoNTEyKSx0aGlzLmxlbmd0aD01MTIsdGhpcy50YWc9ZX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbmRleE9mR3JvdXA9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAsbj0wO248ZTtuKyspdCs9dGhpcy5ncm91cFNpemVzW25dO3JldHVybiB0fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCl7aWYoZT49dGhpcy5ncm91cFNpemVzLmxlbmd0aCl7Zm9yKHZhciBuPXRoaXMuZ3JvdXBTaXplcyxyPW4ubGVuZ3RoLG89cjtlPj1vOykobzw8PTEpPDAmJmooMTYsXCJcIitlKTt0aGlzLmdyb3VwU2l6ZXM9bmV3IFVpbnQzMkFycmF5KG8pLHRoaXMuZ3JvdXBTaXplcy5zZXQobiksdGhpcy5sZW5ndGg9bztmb3IodmFyIHM9cjtzPG87cysrKXRoaXMuZ3JvdXBTaXplc1tzXT0wfWZvcih2YXIgaT10aGlzLmluZGV4T2ZHcm91cChlKzEpLGE9MCxjPXQubGVuZ3RoO2E8YzthKyspdGhpcy50YWcuaW5zZXJ0UnVsZShpLHRbYV0pJiYodGhpcy5ncm91cFNpemVzW2VdKyssaSsrKX0sdC5jbGVhckdyb3VwPWZ1bmN0aW9uKGUpe2lmKGU8dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuZ3JvdXBTaXplc1tlXSxuPXRoaXMuaW5kZXhPZkdyb3VwKGUpLHI9bit0O3RoaXMuZ3JvdXBTaXplc1tlXT0wO2Zvcih2YXIgbz1uO288cjtvKyspdGhpcy50YWcuZGVsZXRlUnVsZShuKX19LHQuZ2V0R3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIjtpZihlPj10aGlzLmxlbmd0aHx8MD09PXRoaXMuZ3JvdXBTaXplc1tlXSlyZXR1cm4gdDtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzW2VdLHI9dGhpcy5pbmRleE9mR3JvdXAoZSksbz1yK24scz1yO3M8bztzKyspdCs9dGhpcy50YWcuZ2V0UnVsZShzKStcIi8qIXNjKi9cXG5cIjtyZXR1cm4gdH0sZX0oKSxrPW5ldyBNYXAseD1uZXcgTWFwLFY9MSxCPWZ1bmN0aW9uKGUpe2lmKGsuaGFzKGUpKXJldHVybiBrLmdldChlKTtmb3IoO3guaGFzKFYpOylWKys7dmFyIHQ9VisrO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJigoMHx0KTwwfHx0PjE8PDMwKSYmaigxNixcIlwiK3QpLGsuc2V0KGUsdCkseC5zZXQodCxlKSx0fSxNPWZ1bmN0aW9uKGUpe3JldHVybiB4LmdldChlKX0sej1mdW5jdGlvbihlLHQpe3Q+PVYmJihWPXQrMSksay5zZXQoZSx0KSx4LnNldCh0LGUpfSxMPVwic3R5bGVbXCIrQSsnXVtkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4zLjFcIl0nLEc9bmV3IFJlZ0V4cChcIl5cIitBKydcXFxcLmcoXFxcXGQrKVxcXFxbaWQ9XCIoW1xcXFx3XFxcXGQtXSspXCJcXFxcXS4qP1wiKFteXCJdKiknKSxGPWZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHIsbz1uLnNwbGl0KFwiLFwiKSxzPTAsaT1vLmxlbmd0aDtzPGk7cysrKShyPW9bc10pJiZlLnJlZ2lzdGVyTmFtZSh0LHIpfSxZPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPSh0LmlubmVySFRNTHx8XCJcIikuc3BsaXQoXCIvKiFzYyovXFxuXCIpLHI9W10sbz0wLHM9bi5sZW5ndGg7bzxzO28rKyl7dmFyIGk9bltvXS50cmltKCk7aWYoaSl7dmFyIGE9aS5tYXRjaChHKTtpZihhKXt2YXIgYz0wfHBhcnNlSW50KGFbMV0sMTApLHU9YVsyXTswIT09YyYmKHoodSxjKSxGKGUsdSxhWzNdKSxlLmdldFRhZygpLmluc2VydFJ1bGVzKGMscikpLHIubGVuZ3RoPTB9ZWxzZSByLnB1c2goaSl9fX0scT1mdW5jdGlvbigpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJnZvaWQgMCE9PXdpbmRvdy5fX3dlYnBhY2tfbm9uY2VfXz93aW5kb3cuX193ZWJwYWNrX25vbmNlX186bnVsbH0sSD1mdW5jdGlvbihlKXt2YXIgdD1kb2N1bWVudC5oZWFkLG49ZXx8dCxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKSxvPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1lLmNoaWxkTm9kZXMsbj10Lmxlbmd0aDtuPj0wO24tLSl7dmFyIHI9dFtuXTtpZihyJiYxPT09ci5ub2RlVHlwZSYmci5oYXNBdHRyaWJ1dGUoQSkpcmV0dXJuIHJ9fShuKSxzPXZvaWQgMCE9PW8/by5uZXh0U2libGluZzpudWxsO3Iuc2V0QXR0cmlidXRlKEEsXCJhY3RpdmVcIiksci5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN0eWxlZC12ZXJzaW9uXCIsXCI1LjMuMVwiKTt2YXIgaT1xKCk7cmV0dXJuIGkmJnIuc2V0QXR0cmlidXRlKFwibm9uY2VcIixpKSxuLmluc2VydEJlZm9yZShyLHMpLHJ9LCQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciB0PXRoaXMuZWxlbWVudD1IKGUpO3QuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIikpLHRoaXMuc2hlZXQ9ZnVuY3Rpb24oZSl7aWYoZS5zaGVldClyZXR1cm4gZS5zaGVldDtmb3IodmFyIHQ9ZG9jdW1lbnQuc3R5bGVTaGVldHMsbj0wLHI9dC5sZW5ndGg7bjxyO24rKyl7dmFyIG89dFtuXTtpZihvLm93bmVyTm9kZT09PWUpcmV0dXJuIG99aigxNyl9KHQpLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gdGhpcy5zaGVldC5pbnNlcnRSdWxlKHQsZSksdGhpcy5sZW5ndGgrKywhMH1jYXRjaChlKXtyZXR1cm4hMX19LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLnNoZWV0LmRlbGV0ZVJ1bGUoZSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuc2hlZXQuY3NzUnVsZXNbZV07cmV0dXJuIHZvaWQgMCE9PXQmJlwic3RyaW5nXCI9PXR5cGVvZiB0LmNzc1RleHQ/dC5jc3NUZXh0OlwiXCJ9LGV9KCksVz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIHQ9dGhpcy5lbGVtZW50PUgoZSk7dGhpcy5ub2Rlcz10LmNoaWxkTm9kZXMsdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7aWYoZTw9dGhpcy5sZW5ndGgmJmU+PTApe3ZhciBuPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpLHI9dGhpcy5ub2Rlc1tlXTtyZXR1cm4gdGhpcy5lbGVtZW50Lmluc2VydEJlZm9yZShuLHJ8fG51bGwpLHRoaXMubGVuZ3RoKyssITB9cmV0dXJuITF9LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLmVsZW1lbnQucmVtb3ZlQ2hpbGQodGhpcy5ub2Rlc1tlXSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMubm9kZXNbZV0udGV4dENvbnRlbnQ6XCJcIn0sZX0oKSxVPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLnJ1bGVzPVtdLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe3JldHVybiBlPD10aGlzLmxlbmd0aCYmKHRoaXMucnVsZXMuc3BsaWNlKGUsMCx0KSx0aGlzLmxlbmd0aCsrLCEwKX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMucnVsZXMuc3BsaWNlKGUsMSksdGhpcy5sZW5ndGgtLX0sdC5nZXRSdWxlPWZ1bmN0aW9uKGUpe3JldHVybiBlPHRoaXMubGVuZ3RoP3RoaXMucnVsZXNbZV06XCJcIn0sZX0oKSxKPUksWD17aXNTZXJ2ZXI6IUksdXNlQ1NTT01JbmplY3Rpb246IVB9LFo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCxuKXt2b2lkIDA9PT1lJiYoZT1FKSx2b2lkIDA9PT10JiYodD17fSksdGhpcy5vcHRpb25zPXYoe30sWCx7fSxlKSx0aGlzLmdzPXQsdGhpcy5uYW1lcz1uZXcgTWFwKG4pLHRoaXMuc2VydmVyPSEhZS5pc1NlcnZlciwhdGhpcy5zZXJ2ZXImJkkmJkomJihKPSExLGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEwpLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBvPXRbbl07byYmXCJhY3RpdmVcIiE9PW8uZ2V0QXR0cmlidXRlKEEpJiYoWShlLG8pLG8ucGFyZW50Tm9kZSYmby5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG8pKX19KHRoaXMpKX1lLnJlZ2lzdGVySWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEIoZSl9O3ZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LnJlY29uc3RydWN0V2l0aE9wdGlvbnM9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49ITApLG5ldyBlKHYoe30sdGhpcy5vcHRpb25zLHt9LHQpLHRoaXMuZ3MsbiYmdGhpcy5uYW1lc3x8dm9pZCAwKX0sdC5hbGxvY2F0ZUdTSW5zdGFuY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ3NbZV09KHRoaXMuZ3NbZV18fDApKzF9LHQuZ2V0VGFnPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGFnfHwodGhpcy50YWc9KG49KHQ9dGhpcy5vcHRpb25zKS5pc1NlcnZlcixyPXQudXNlQ1NTT01JbmplY3Rpb24sbz10LnRhcmdldCxlPW4/bmV3IFUobyk6cj9uZXcgJChvKTpuZXcgVyhvKSxuZXcgVChlKSkpO3ZhciBlLHQsbixyLG99LHQuaGFzTmFtZUZvcklkPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5oYXModCl9LHQucmVnaXN0ZXJOYW1lPWZ1bmN0aW9uKGUsdCl7aWYoQihlKSx0aGlzLm5hbWVzLmhhcyhlKSl0aGlzLm5hbWVzLmdldChlKS5hZGQodCk7ZWxzZXt2YXIgbj1uZXcgU2V0O24uYWRkKHQpLHRoaXMubmFtZXMuc2V0KGUsbil9fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLnJlZ2lzdGVyTmFtZShlLHQpLHRoaXMuZ2V0VGFnKCkuaW5zZXJ0UnVsZXMoQihlKSxuKX0sdC5jbGVhck5hbWVzPWZ1bmN0aW9uKGUpe3RoaXMubmFtZXMuaGFzKGUpJiZ0aGlzLm5hbWVzLmdldChlKS5jbGVhcigpfSx0LmNsZWFyUnVsZXM9ZnVuY3Rpb24oZSl7dGhpcy5nZXRUYWcoKS5jbGVhckdyb3VwKEIoZSkpLHRoaXMuY2xlYXJOYW1lcyhlKX0sdC5jbGVhclRhZz1mdW5jdGlvbigpe3RoaXMudGFnPXZvaWQgMH0sdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5nZXRUYWcoKSxuPXQubGVuZ3RoLHI9XCJcIixvPTA7bzxuO28rKyl7dmFyIHM9TShvKTtpZih2b2lkIDAhPT1zKXt2YXIgaT1lLm5hbWVzLmdldChzKSxhPXQuZ2V0R3JvdXAobyk7aWYoaSYmYSYmaS5zaXplKXt2YXIgYz1BK1wiLmdcIitvKydbaWQ9XCInK3MrJ1wiXScsdT1cIlwiO3ZvaWQgMCE9PWkmJmkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5sZW5ndGg+MCYmKHUrPWUrXCIsXCIpfSkpLHIrPVwiXCIrYStjKyd7Y29udGVudDpcIicrdSsnXCJ9Lyohc2MqL1xcbid9fX1yZXR1cm4gcn0odGhpcyl9LGV9KCksSz0vKGEpKGQpL2dpLFE9ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZSsoZT4yNT8zOTo5NykpfTtmdW5jdGlvbiBlZShlKXt2YXIgdCxuPVwiXCI7Zm9yKHQ9TWF0aC5hYnMoZSk7dD41Mjt0PXQvNTJ8MCluPVEodCU1MikrbjtyZXR1cm4oUSh0JTUyKStuKS5yZXBsYWNlKEssXCIkMS0kMlwiKX12YXIgdGU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dC5sZW5ndGg7bjspZT0zMyplXnQuY2hhckNvZGVBdCgtLW4pO3JldHVybiBlfSxuZT1mdW5jdGlvbihlKXtyZXR1cm4gdGUoNTM4MSxlKX07ZnVuY3Rpb24gcmUoZSl7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kz0xKXt2YXIgbj1lW3RdO2lmKGIobikmJiFOKG4pKXJldHVybiExfXJldHVybiEwfXZhciBvZT1uZShcIjUuMy4xXCIpLHNlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dGhpcy5ydWxlcz1lLHRoaXMuc3RhdGljUnVsZXNJZD1cIlwiLHRoaXMuaXNTdGF0aWM9XCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHZvaWQgMD09PW58fG4uaXNTdGF0aWMpJiZyZShlKSx0aGlzLmNvbXBvbmVudElkPXQsdGhpcy5iYXNlSGFzaD10ZShvZSx0KSx0aGlzLmJhc2VTdHlsZT1uLFoucmVnaXN0ZXJJZCh0KX1yZXR1cm4gZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuY29tcG9uZW50SWQsbz1bXTtpZih0aGlzLmJhc2VTdHlsZSYmby5wdXNoKHRoaXMuYmFzZVN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGUsdCxuKSksdGhpcy5pc1N0YXRpYyYmIW4uaGFzaClpZih0aGlzLnN0YXRpY1J1bGVzSWQmJnQuaGFzTmFtZUZvcklkKHIsdGhpcy5zdGF0aWNSdWxlc0lkKSlvLnB1c2godGhpcy5zdGF0aWNSdWxlc0lkKTtlbHNle3ZhciBzPU5lKHRoaXMucnVsZXMsZSx0LG4pLmpvaW4oXCJcIiksaT1lZSh0ZSh0aGlzLmJhc2VIYXNoLHMpPj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsaSkpe3ZhciBhPW4ocyxcIi5cIitpLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsaSxhKX1vLnB1c2goaSksdGhpcy5zdGF0aWNSdWxlc0lkPWl9ZWxzZXtmb3IodmFyIGM9dGhpcy5ydWxlcy5sZW5ndGgsdT10ZSh0aGlzLmJhc2VIYXNoLG4uaGFzaCksbD1cIlwiLGQ9MDtkPGM7ZCsrKXt2YXIgaD10aGlzLnJ1bGVzW2RdO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBoKWwrPWgsXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHU9dGUodSxoK2QpKTtlbHNlIGlmKGgpe3ZhciBwPU5lKGgsZSx0LG4pLGY9QXJyYXkuaXNBcnJheShwKT9wLmpvaW4oXCJcIik6cDt1PXRlKHUsZitkKSxsKz1mfX1pZihsKXt2YXIgbT1lZSh1Pj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsbSkpe3ZhciB5PW4obCxcIi5cIittLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsbSx5KX1vLnB1c2gobSl9fXJldHVybiBvLmpvaW4oXCIgXCIpfSxlfSgpLGllPS9eXFxzKlxcL1xcLy4qJC9nbSxhZT1bXCI6XCIsXCJbXCIsXCIuXCIsXCIjXCJdO2Z1bmN0aW9uIGNlKGUpe3ZhciB0LG4scixvLHM9dm9pZCAwPT09ZT9FOmUsaT1zLm9wdGlvbnMsYT12b2lkIDA9PT1pP0U6aSxjPXMucGx1Z2lucyx1PXZvaWQgMD09PWM/dzpjLGw9bmV3IHAoYSksZD1bXSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7aWYodCl0cnl7ZSh0K1wifVwiKX1jYXRjaChlKXt9fXJldHVybiBmdW5jdGlvbihuLHIsbyxzLGksYSxjLHUsbCxkKXtzd2l0Y2gobil7Y2FzZSAxOmlmKDA9PT1sJiY2ND09PXIuY2hhckNvZGVBdCgwKSlyZXR1cm4gZShyK1wiO1wiKSxcIlwiO2JyZWFrO2Nhc2UgMjppZigwPT09dSlyZXR1cm4gcitcIi8qfCovXCI7YnJlYWs7Y2FzZSAzOnN3aXRjaCh1KXtjYXNlIDEwMjpjYXNlIDExMjpyZXR1cm4gZShvWzBdK3IpLFwiXCI7ZGVmYXVsdDpyZXR1cm4gcisoMD09PWQ/XCIvKnwqL1wiOlwiXCIpfWNhc2UtMjpyLnNwbGl0KFwiLyp8Ki99XCIpLmZvckVhY2godCl9fX0oKGZ1bmN0aW9uKGUpe2QucHVzaChlKX0pKSxmPWZ1bmN0aW9uKGUscixzKXtyZXR1cm4gMD09PXImJi0xIT09YWUuaW5kZXhPZihzW24ubGVuZ3RoXSl8fHMubWF0Y2gobyk/ZTpcIi5cIit0fTtmdW5jdGlvbiBtKGUscyxpLGEpe3ZvaWQgMD09PWEmJihhPVwiJlwiKTt2YXIgYz1lLnJlcGxhY2UoaWUsXCJcIiksdT1zJiZpP2krXCIgXCIrcytcIiB7IFwiK2MrXCIgfVwiOmM7cmV0dXJuIHQ9YSxuPXMscj1uZXcgUmVnRXhwKFwiXFxcXFwiK24rXCJcXFxcYlwiLFwiZ1wiKSxvPW5ldyBSZWdFeHAoXCIoXFxcXFwiK24rXCJcXFxcYil7Mix9XCIpLGwoaXx8IXM/XCJcIjpzLHUpfXJldHVybiBsLnVzZShbXS5jb25jYXQodSxbZnVuY3Rpb24oZSx0LG8pezI9PT1lJiZvLmxlbmd0aCYmb1swXS5sYXN0SW5kZXhPZihuKT4wJiYob1swXT1vWzBdLnJlcGxhY2UocixmKSl9LGgsZnVuY3Rpb24oZSl7aWYoLTI9PT1lKXt2YXIgdD1kO3JldHVybiBkPVtdLHR9fV0pKSxtLmhhc2g9dS5sZW5ndGg/dS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQubmFtZXx8aigxNSksdGUoZSx0Lm5hbWUpfSksNTM4MSkudG9TdHJpbmcoKTpcIlwiLG19dmFyIHVlPXIuY3JlYXRlQ29udGV4dCgpLGxlPXVlLkNvbnN1bWVyLGRlPXIuY3JlYXRlQ29udGV4dCgpLGhlPShkZS5Db25zdW1lcixuZXcgWikscGU9Y2UoKTtmdW5jdGlvbiBmZSgpe3JldHVybiBzKHVlKXx8aGV9ZnVuY3Rpb24gbWUoKXtyZXR1cm4gcyhkZSl8fHBlfWZ1bmN0aW9uIHllKGUpe3ZhciB0PW8oZS5zdHlsaXNQbHVnaW5zKSxuPXRbMF0scz10WzFdLGM9ZmUoKSx1PWkoKGZ1bmN0aW9uKCl7dmFyIHQ9YztyZXR1cm4gZS5zaGVldD90PWUuc2hlZXQ6ZS50YXJnZXQmJih0PXQucmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyh7dGFyZ2V0OmUudGFyZ2V0fSwhMSkpLGUuZGlzYWJsZUNTU09NSW5qZWN0aW9uJiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3VzZUNTU09NSW5qZWN0aW9uOiExfSkpLHR9KSxbZS5kaXNhYmxlQ1NTT01JbmplY3Rpb24sZS5zaGVldCxlLnRhcmdldF0pLGw9aSgoZnVuY3Rpb24oKXtyZXR1cm4gY2Uoe29wdGlvbnM6e3ByZWZpeDohZS5kaXNhYmxlVmVuZG9yUHJlZml4ZXN9LHBsdWdpbnM6bn0pfSksW2UuZGlzYWJsZVZlbmRvclByZWZpeGVzLG5dKTtyZXR1cm4gYSgoZnVuY3Rpb24oKXtoKG4sZS5zdHlsaXNQbHVnaW5zKXx8cyhlLnN0eWxpc1BsdWdpbnMpfSksW2Uuc3R5bGlzUGx1Z2luc10pLHIuY3JlYXRlRWxlbWVudCh1ZS5Qcm92aWRlcix7dmFsdWU6dX0sci5jcmVhdGVFbGVtZW50KGRlLlByb3ZpZGVyLHt2YWx1ZTpsfSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3IuQ2hpbGRyZW4ub25seShlLmNoaWxkcmVuKTplLmNoaWxkcmVuKSl9dmFyIHZlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciBuPXRoaXM7dGhpcy5pbmplY3Q9ZnVuY3Rpb24oZSx0KXt2b2lkIDA9PT10JiYodD1wZSk7dmFyIHI9bi5uYW1lK3QuaGFzaDtlLmhhc05hbWVGb3JJZChuLmlkLHIpfHxlLmluc2VydFJ1bGVzKG4uaWQscix0KG4ucnVsZXMscixcIkBrZXlmcmFtZXNcIikpfSx0aGlzLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIGooMTIsU3RyaW5nKG4ubmFtZSkpfSx0aGlzLm5hbWU9ZSx0aGlzLmlkPVwic2Mta2V5ZnJhbWVzLVwiK2UsdGhpcy5ydWxlcz10fXJldHVybiBlLnByb3RvdHlwZS5nZXROYW1lPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1wZSksdGhpcy5uYW1lK2UuaGFzaH0sZX0oKSxnZT0vKFtBLVpdKS8sU2U9LyhbQS1aXSkvZyx3ZT0vXm1zLS8sRWU9ZnVuY3Rpb24oZSl7cmV0dXJuXCItXCIrZS50b0xvd2VyQ2FzZSgpfTtmdW5jdGlvbiBiZShlKXtyZXR1cm4gZ2UudGVzdChlKT9lLnJlcGxhY2UoU2UsRWUpLnJlcGxhY2Uod2UsXCItbXMtXCIpOmV9dmFyIF9lPWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lfHwhMT09PWV8fFwiXCI9PT1lfTtmdW5jdGlvbiBOZShlLG4scixvKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHMsaT1bXSxhPTAsYz1lLmxlbmd0aDthPGM7YSs9MSlcIlwiIT09KHM9TmUoZVthXSxuLHIsbykpJiYoQXJyYXkuaXNBcnJheShzKT9pLnB1c2guYXBwbHkoaSxzKTppLnB1c2gocykpO3JldHVybiBpfWlmKF9lKGUpKXJldHVyblwiXCI7aWYoTihlKSlyZXR1cm5cIi5cIitlLnN0eWxlZENvbXBvbmVudElkO2lmKGIoZSkpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGw9ZSl8fGwucHJvdG90eXBlJiZsLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50fHwhbilyZXR1cm4gZTt2YXIgdT1lKG4pO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJnQodSkmJmNvbnNvbGUud2FybihfKGUpK1wiIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cIiksTmUodSxuLHIsbyl9dmFyIGw7cmV0dXJuIGUgaW5zdGFuY2VvZiB2ZT9yPyhlLmluamVjdChyLG8pLGUuZ2V0TmFtZShvKSk6ZTpTKGUpP2Z1bmN0aW9uIGUodCxuKXt2YXIgcixvLHM9W107Zm9yKHZhciBpIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShpKSYmIV9lKHRbaV0pJiYoQXJyYXkuaXNBcnJheSh0W2ldKSYmdFtpXS5pc0Nzc3x8Yih0W2ldKT9zLnB1c2goYmUoaSkrXCI6XCIsdFtpXSxcIjtcIik6Uyh0W2ldKT9zLnB1c2guYXBwbHkocyxlKHRbaV0saSkpOnMucHVzaChiZShpKStcIjogXCIrKHI9aSxudWxsPT0obz10W2ldKXx8XCJib29sZWFuXCI9PXR5cGVvZiBvfHxcIlwiPT09bz9cIlwiOlwibnVtYmVyXCIhPXR5cGVvZiBvfHwwPT09b3x8ciBpbiBmP1N0cmluZyhvKS50cmltKCk6bytcInB4XCIpK1wiO1wiKSk7cmV0dXJuIG4/W24rXCIge1wiXS5jb25jYXQocyxbXCJ9XCJdKTpzfShlKTplLnRvU3RyaW5nKCl9dmFyIEFlPWZ1bmN0aW9uKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpJiYoZS5pc0Nzcz0hMCksZX07ZnVuY3Rpb24gQ2UoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3JldHVybiBiKGUpfHxTKGUpP0FlKE5lKGcodyxbZV0uY29uY2F0KG4pKSkpOjA9PT1uLmxlbmd0aCYmMT09PWUubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgZVswXT9lOkFlKE5lKGcoZSxuKSkpfXZhciBJZT0vaW52YWxpZCBob29rIGNhbGwvaSxQZT1uZXcgU2V0LE9lPWZ1bmN0aW9uKGUsdCl7aWYoXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVil7dmFyIG49XCJUaGUgY29tcG9uZW50IFwiK2UrKHQ/JyB3aXRoIHRoZSBpZCBvZiBcIicrdCsnXCInOlwiXCIpK1wiIGhhcyBiZWVuIGNyZWF0ZWQgZHluYW1pY2FsbHkuXFxuWW91IG1heSBzZWUgdGhpcyB3YXJuaW5nIGJlY2F1c2UgeW91J3ZlIGNhbGxlZCBzdHlsZWQgaW5zaWRlIGFub3RoZXIgY29tcG9uZW50LlxcblRvIHJlc29sdmUgdGhpcyBvbmx5IGNyZWF0ZSBuZXcgU3R5bGVkQ29tcG9uZW50cyBvdXRzaWRlIG9mIGFueSByZW5kZXIgbWV0aG9kIGFuZCBmdW5jdGlvbiBjb21wb25lbnQuXCIscj1jb25zb2xlLmVycm9yO3RyeXt2YXIgbz0hMDtjb25zb2xlLmVycm9yPWZ1bmN0aW9uKGUpe2lmKEllLnRlc3QoZSkpbz0hMSxQZS5kZWxldGUobik7ZWxzZXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxzPW5ldyBBcnJheSh0PjE/dC0xOjApLGk9MTtpPHQ7aSsrKXNbaS0xXT1hcmd1bWVudHNbaV07ci5hcHBseSh2b2lkIDAsW2VdLmNvbmNhdChzKSl9fSxjKCksbyYmIVBlLmhhcyhuKSYmKGNvbnNvbGUud2FybihuKSxQZS5hZGQobikpfWNhdGNoKGUpe0llLnRlc3QoZS5tZXNzYWdlKSYmUGUuZGVsZXRlKG4pfWZpbmFsbHl7Y29uc29sZS5lcnJvcj1yfX19LFJlPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49RSksZS50aGVtZSE9PW4udGhlbWUmJmUudGhlbWV8fHR8fG4udGhlbWV9LERlPS9bIVwiIyQlJicoKSorLC4vOjs8PT4/QFtcXFxcXFxdXmB7fH1+LV0rL2csamU9LyheLXwtJCkvZztmdW5jdGlvbiBUZShlKXtyZXR1cm4gZS5yZXBsYWNlKERlLFwiLVwiKS5yZXBsYWNlKGplLFwiXCIpfXZhciBrZT1mdW5jdGlvbihlKXtyZXR1cm4gZWUobmUoZSk+Pj4wKX07ZnVuY3Rpb24geGUoZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJihcInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WfHxlLmNoYXJBdCgwKT09PWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkpfXZhciBWZT1mdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfHxcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUmJiFBcnJheS5pc0FycmF5KGUpfSxCZT1mdW5jdGlvbihlKXtyZXR1cm5cIl9fcHJvdG9fX1wiIT09ZSYmXCJjb25zdHJ1Y3RvclwiIT09ZSYmXCJwcm90b3R5cGVcIiE9PWV9O2Z1bmN0aW9uIE1lKGUsdCxuKXt2YXIgcj1lW25dO1ZlKHQpJiZWZShyKT96ZShyLHQpOmVbbl09dH1mdW5jdGlvbiB6ZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07Zm9yKHZhciBvPTAscz1uO288cy5sZW5ndGg7bysrKXt2YXIgaT1zW29dO2lmKFZlKGkpKWZvcih2YXIgYSBpbiBpKUJlKGEpJiZNZShlLGlbYV0sYSl9cmV0dXJuIGV9dmFyIExlPXIuY3JlYXRlQ29udGV4dCgpLEdlPUxlLkNvbnN1bWVyO2Z1bmN0aW9uIEZlKGUpe3ZhciB0PXMoTGUpLG49aSgoZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtpZighZSlyZXR1cm4gaigxNCk7aWYoYihlKSl7dmFyIG49ZSh0KTtyZXR1cm5cInByb2R1Y3Rpb25cIj09PXByb2Nlc3MuZW52Lk5PREVfRU5WfHxudWxsIT09biYmIUFycmF5LmlzQXJyYXkobikmJlwib2JqZWN0XCI9PXR5cGVvZiBuP246aig3KX1yZXR1cm4gQXJyYXkuaXNBcnJheShlKXx8XCJvYmplY3RcIiE9dHlwZW9mIGU/aig4KTp0P3Yoe30sdCx7fSxlKTplfShlLnRoZW1lLHQpfSksW2UudGhlbWUsdF0pO3JldHVybiBlLmNoaWxkcmVuP3IuY3JlYXRlRWxlbWVudChMZS5Qcm92aWRlcix7dmFsdWU6bn0sZS5jaGlsZHJlbik6bnVsbH12YXIgWWU9e307ZnVuY3Rpb24gcWUoZSx0LG4pe3ZhciBvPU4oZSksaT0heGUoZSksYT10LmF0dHJzLGM9dm9pZCAwPT09YT93OmEsZD10LmNvbXBvbmVudElkLGg9dm9pZCAwPT09ZD9mdW5jdGlvbihlLHQpe3ZhciBuPVwic3RyaW5nXCIhPXR5cGVvZiBlP1wic2NcIjpUZShlKTtZZVtuXT0oWWVbbl18fDApKzE7dmFyIHI9bitcIi1cIitrZShcIjUuMy4xXCIrbitZZVtuXSk7cmV0dXJuIHQ/dCtcIi1cIityOnJ9KHQuZGlzcGxheU5hbWUsdC5wYXJlbnRDb21wb25lbnRJZCk6ZCxwPXQuZGlzcGxheU5hbWUsZj12b2lkIDA9PT1wP2Z1bmN0aW9uKGUpe3JldHVybiB4ZShlKT9cInN0eWxlZC5cIitlOlwiU3R5bGVkKFwiK18oZSkrXCIpXCJ9KGUpOnAsZz10LmRpc3BsYXlOYW1lJiZ0LmNvbXBvbmVudElkP1RlKHQuZGlzcGxheU5hbWUpK1wiLVwiK3QuY29tcG9uZW50SWQ6dC5jb21wb25lbnRJZHx8aCxTPW8mJmUuYXR0cnM/QXJyYXkucHJvdG90eXBlLmNvbmNhdChlLmF0dHJzLGMpLmZpbHRlcihCb29sZWFuKTpjLEE9dC5zaG91bGRGb3J3YXJkUHJvcDtvJiZlLnNob3VsZEZvcndhcmRQcm9wJiYoQT10LnNob3VsZEZvcndhcmRQcm9wP2Z1bmN0aW9uKG4scixvKXtyZXR1cm4gZS5zaG91bGRGb3J3YXJkUHJvcChuLHIsbykmJnQuc2hvdWxkRm9yd2FyZFByb3AobixyLG8pfTplLnNob3VsZEZvcndhcmRQcm9wKTt2YXIgQyxJPW5ldyBzZShuLGcsbz9lLmNvbXBvbmVudFN0eWxlOnZvaWQgMCksUD1JLmlzU3RhdGljJiYwPT09Yy5sZW5ndGgsTz1mdW5jdGlvbihlLHQpe3JldHVybiBmdW5jdGlvbihlLHQsbixyKXt2YXIgbz1lLmF0dHJzLGk9ZS5jb21wb25lbnRTdHlsZSxhPWUuZGVmYXVsdFByb3BzLGM9ZS5mb2xkZWRDb21wb25lbnRJZHMsZD1lLnNob3VsZEZvcndhcmRQcm9wLGg9ZS5zdHlsZWRDb21wb25lbnRJZCxwPWUudGFyZ2V0O1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwoaCk7dmFyIGY9ZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PWUmJihlPUUpO3ZhciByPXYoe30sdCx7dGhlbWU6ZX0pLG89e307cmV0dXJuIG4uZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIHQsbixzLGk9ZTtmb3IodCBpbiBiKGkpJiYoaT1pKHIpKSxpKXJbdF09b1t0XT1cImNsYXNzTmFtZVwiPT09dD8obj1vW3RdLHM9aVt0XSxuJiZzP24rXCIgXCIrczpufHxzKTppW3RdfSkpLFtyLG9dfShSZSh0LHMoTGUpLGEpfHxFLHQsbykseT1mWzBdLGc9ZlsxXSxTPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPWZlKCkscz1tZSgpLGk9dD9lLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEUsbyxzKTplLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKG4sbyxzKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZsKGkpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJiF0JiZyJiZyKGkpLGl9KGkscix5LFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlY/ZS53YXJuVG9vTWFueUNsYXNzZXM6dm9pZCAwKSx3PW4sXz1nLiRhc3x8dC4kYXN8fGcuYXN8fHQuYXN8fHAsTj14ZShfKSxBPWchPT10P3Yoe30sdCx7fSxnKTp0LEM9e307Zm9yKHZhciBJIGluIEEpXCIkXCIhPT1JWzBdJiZcImFzXCIhPT1JJiYoXCJmb3J3YXJkZWRBc1wiPT09ST9DLmFzPUFbSV06KGQ/ZChJLG0sXyk6IU58fG0oSSkpJiYoQ1tJXT1BW0ldKSk7cmV0dXJuIHQuc3R5bGUmJmcuc3R5bGUhPT10LnN0eWxlJiYoQy5zdHlsZT12KHt9LHQuc3R5bGUse30sZy5zdHlsZSkpLEMuY2xhc3NOYW1lPUFycmF5LnByb3RvdHlwZS5jb25jYXQoYyxoLFMhPT1oP1M6bnVsbCx0LmNsYXNzTmFtZSxnLmNsYXNzTmFtZSkuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpLEMucmVmPXcsdShfLEMpfShDLGUsdCxQKX07cmV0dXJuIE8uZGlzcGxheU5hbWU9ZiwoQz1yLmZvcndhcmRSZWYoTykpLmF0dHJzPVMsQy5jb21wb25lbnRTdHlsZT1JLEMuZGlzcGxheU5hbWU9ZixDLnNob3VsZEZvcndhcmRQcm9wPUEsQy5mb2xkZWRDb21wb25lbnRJZHM9bz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuZm9sZGVkQ29tcG9uZW50SWRzLGUuc3R5bGVkQ29tcG9uZW50SWQpOncsQy5zdHlsZWRDb21wb25lbnRJZD1nLEMudGFyZ2V0PW8/ZS50YXJnZXQ6ZSxDLndpdGhDb21wb25lbnQ9ZnVuY3Rpb24oZSl7dmFyIHI9dC5jb21wb25lbnRJZCxvPWZ1bmN0aW9uKGUsdCl7aWYobnVsbD09ZSlyZXR1cm57fTt2YXIgbixyLG89e30scz1PYmplY3Qua2V5cyhlKTtmb3Iocj0wO3I8cy5sZW5ndGg7cisrKW49c1tyXSx0LmluZGV4T2Yobik+PTB8fChvW25dPWVbbl0pO3JldHVybiBvfSh0LFtcImNvbXBvbmVudElkXCJdKSxzPXImJnIrXCItXCIrKHhlKGUpP2U6VGUoXyhlKSkpO3JldHVybiBxZShlLHYoe30sbyx7YXR0cnM6Uyxjb21wb25lbnRJZDpzfSksbil9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDLFwiZGVmYXVsdFByb3BzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHN9LHNldDpmdW5jdGlvbih0KXt0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHM9bz96ZSh7fSxlLmRlZmF1bHRQcm9wcyx0KTp0fX0pLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJihPZShmLGcpLEMud2FyblRvb01hbnlDbGFzc2VzPWZ1bmN0aW9uKGUsdCl7dmFyIG49e30scj0hMTtyZXR1cm4gZnVuY3Rpb24obyl7aWYoIXImJihuW29dPSEwLE9iamVjdC5rZXlzKG4pLmxlbmd0aD49MjAwKSl7dmFyIHM9dD8nIHdpdGggdGhlIGlkIG9mIFwiJyt0KydcIic6XCJcIjtjb25zb2xlLndhcm4oXCJPdmVyIDIwMCBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgXCIrZStzK1wiLlxcbkNvbnNpZGVyIHVzaW5nIHRoZSBhdHRycyBtZXRob2QsIHRvZ2V0aGVyIHdpdGggYSBzdHlsZSBvYmplY3QgZm9yIGZyZXF1ZW50bHkgY2hhbmdlZCBzdHlsZXMuXFxuRXhhbXBsZTpcXG4gIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMocHJvcHMgPT4gKHtcXG4gICAgc3R5bGU6IHtcXG4gICAgICBiYWNrZ3JvdW5kOiBwcm9wcy5iYWNrZ3JvdW5kLFxcbiAgICB9LFxcbiAgfSkpYHdpZHRoOiAxMDAlO2BcXG5cXG4gIDxDb21wb25lbnQgLz5cIikscj0hMCxuPXt9fX19KGYsZykpLEMudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIi5cIitDLnN0eWxlZENvbXBvbmVudElkfSxpJiZ5KEMsZSx7YXR0cnM6ITAsY29tcG9uZW50U3R5bGU6ITAsZGlzcGxheU5hbWU6ITAsZm9sZGVkQ29tcG9uZW50SWRzOiEwLHNob3VsZEZvcndhcmRQcm9wOiEwLHN0eWxlZENvbXBvbmVudElkOiEwLHRhcmdldDohMCx3aXRoQ29tcG9uZW50OiEwfSksQ312YXIgSGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uIGUodCxyLG8pe2lmKHZvaWQgMD09PW8mJihvPUUpLCFuKHIpKXJldHVybiBqKDEsU3RyaW5nKHIpKTt2YXIgcz1mdW5jdGlvbigpe3JldHVybiB0KHIsbyxDZS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKSl9O3JldHVybiBzLndpdGhDb25maWc9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7fSxuKSl9LHMuYXR0cnM9ZnVuY3Rpb24obil7cmV0dXJuIGUodCxyLHYoe30sbyx7YXR0cnM6QXJyYXkucHJvdG90eXBlLmNvbmNhdChvLmF0dHJzLG4pLmZpbHRlcihCb29sZWFuKX0pKX0sc30ocWUsZSl9O1tcImFcIixcImFiYnJcIixcImFkZHJlc3NcIixcImFyZWFcIixcImFydGljbGVcIixcImFzaWRlXCIsXCJhdWRpb1wiLFwiYlwiLFwiYmFzZVwiLFwiYmRpXCIsXCJiZG9cIixcImJpZ1wiLFwiYmxvY2txdW90ZVwiLFwiYm9keVwiLFwiYnJcIixcImJ1dHRvblwiLFwiY2FudmFzXCIsXCJjYXB0aW9uXCIsXCJjaXRlXCIsXCJjb2RlXCIsXCJjb2xcIixcImNvbGdyb3VwXCIsXCJkYXRhXCIsXCJkYXRhbGlzdFwiLFwiZGRcIixcImRlbFwiLFwiZGV0YWlsc1wiLFwiZGZuXCIsXCJkaWFsb2dcIixcImRpdlwiLFwiZGxcIixcImR0XCIsXCJlbVwiLFwiZW1iZWRcIixcImZpZWxkc2V0XCIsXCJmaWdjYXB0aW9uXCIsXCJmaWd1cmVcIixcImZvb3RlclwiLFwiZm9ybVwiLFwiaDFcIixcImgyXCIsXCJoM1wiLFwiaDRcIixcImg1XCIsXCJoNlwiLFwiaGVhZFwiLFwiaGVhZGVyXCIsXCJoZ3JvdXBcIixcImhyXCIsXCJodG1sXCIsXCJpXCIsXCJpZnJhbWVcIixcImltZ1wiLFwiaW5wdXRcIixcImluc1wiLFwia2JkXCIsXCJrZXlnZW5cIixcImxhYmVsXCIsXCJsZWdlbmRcIixcImxpXCIsXCJsaW5rXCIsXCJtYWluXCIsXCJtYXBcIixcIm1hcmtcIixcIm1hcnF1ZWVcIixcIm1lbnVcIixcIm1lbnVpdGVtXCIsXCJtZXRhXCIsXCJtZXRlclwiLFwibmF2XCIsXCJub3NjcmlwdFwiLFwib2JqZWN0XCIsXCJvbFwiLFwib3B0Z3JvdXBcIixcIm9wdGlvblwiLFwib3V0cHV0XCIsXCJwXCIsXCJwYXJhbVwiLFwicGljdHVyZVwiLFwicHJlXCIsXCJwcm9ncmVzc1wiLFwicVwiLFwicnBcIixcInJ0XCIsXCJydWJ5XCIsXCJzXCIsXCJzYW1wXCIsXCJzY3JpcHRcIixcInNlY3Rpb25cIixcInNlbGVjdFwiLFwic21hbGxcIixcInNvdXJjZVwiLFwic3BhblwiLFwic3Ryb25nXCIsXCJzdHlsZVwiLFwic3ViXCIsXCJzdW1tYXJ5XCIsXCJzdXBcIixcInRhYmxlXCIsXCJ0Ym9keVwiLFwidGRcIixcInRleHRhcmVhXCIsXCJ0Zm9vdFwiLFwidGhcIixcInRoZWFkXCIsXCJ0aW1lXCIsXCJ0aXRsZVwiLFwidHJcIixcInRyYWNrXCIsXCJ1XCIsXCJ1bFwiLFwidmFyXCIsXCJ2aWRlb1wiLFwid2JyXCIsXCJjaXJjbGVcIixcImNsaXBQYXRoXCIsXCJkZWZzXCIsXCJlbGxpcHNlXCIsXCJmb3JlaWduT2JqZWN0XCIsXCJnXCIsXCJpbWFnZVwiLFwibGluZVwiLFwibGluZWFyR3JhZGllbnRcIixcIm1hcmtlclwiLFwibWFza1wiLFwicGF0aFwiLFwicGF0dGVyblwiLFwicG9seWdvblwiLFwicG9seWxpbmVcIixcInJhZGlhbEdyYWRpZW50XCIsXCJyZWN0XCIsXCJzdG9wXCIsXCJzdmdcIixcInRleHRcIixcInRleHRQYXRoXCIsXCJ0c3BhblwiXS5mb3JFYWNoKChmdW5jdGlvbihlKXtIZVtlXT1IZShlKX0pKTt2YXIgJGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dGhpcy5ydWxlcz1lLHRoaXMuY29tcG9uZW50SWQ9dCx0aGlzLmlzU3RhdGljPXJlKGUpLFoucmVnaXN0ZXJJZCh0aGlzLmNvbXBvbmVudElkKzEpfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmNyZWF0ZVN0eWxlcz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1yKE5lKHRoaXMucnVsZXMsdCxuLHIpLmpvaW4oXCJcIiksXCJcIikscz10aGlzLmNvbXBvbmVudElkK2U7bi5pbnNlcnRSdWxlcyhzLHMsbyl9LHQucmVtb3ZlU3R5bGVzPWZ1bmN0aW9uKGUsdCl7dC5jbGVhclJ1bGVzKHRoaXMuY29tcG9uZW50SWQrZSl9LHQucmVuZGVyU3R5bGVzPWZ1bmN0aW9uKGUsdCxuLHIpe2U+MiYmWi5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQrZSksdGhpcy5yZW1vdmVTdHlsZXMoZSxuKSx0aGlzLmNyZWF0ZVN0eWxlcyhlLHQsbixyKX0sZX0oKTtmdW5jdGlvbiBXZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKW5bby0xXT1hcmd1bWVudHNbb107dmFyIGk9Q2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLGE9XCJzYy1nbG9iYWwtXCIra2UoSlNPTi5zdHJpbmdpZnkoaSkpLHU9bmV3ICRlKGksYSk7ZnVuY3Rpb24gbChlKXt2YXIgdD1mZSgpLG49bWUoKSxvPXMoTGUpLGw9Yyh0LmFsbG9jYXRlR1NJbnN0YW5jZShhKSkuY3VycmVudDtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZyLkNoaWxkcmVuLmNvdW50KGUuY2hpbGRyZW4pJiZjb25zb2xlLndhcm4oXCJUaGUgZ2xvYmFsIHN0eWxlIGNvbXBvbmVudCBcIithK1wiIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi5cIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmaS5zb21lKChmdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmLTEhPT1lLmluZGV4T2YoXCJAaW1wb3J0XCIpfSkpJiZjb25zb2xlLndhcm4oXCJQbGVhc2UgZG8gbm90IHVzZSBAaW1wb3J0IENTUyBzeW50YXggaW4gY3JlYXRlR2xvYmFsU3R5bGUgYXQgdGhpcyB0aW1lLCBhcyB0aGUgQ1NTT00gQVBJcyB3ZSB1c2UgaW4gcHJvZHVjdGlvbiBkbyBub3QgaGFuZGxlIGl0IHdlbGwuIEluc3RlYWQsIHdlIHJlY29tbWVuZCB1c2luZyBhIGxpYnJhcnkgc3VjaCBhcyByZWFjdC1oZWxtZXQgdG8gaW5qZWN0IGEgdHlwaWNhbCA8bGluaz4gbWV0YSB0YWcgdG8gdGhlIHN0eWxlc2hlZXQsIG9yIHNpbXBseSBlbWJlZGRpbmcgaXQgbWFudWFsbHkgaW4geW91ciBpbmRleC5odG1sIDxoZWFkPiBzZWN0aW9uIGZvciBhIHNpbXBsZXIgYXBwLlwiKSx0LnNlcnZlciYmaChsLGUsdCxvLG4pLGQoKGZ1bmN0aW9uKCl7aWYoIXQuc2VydmVyKXJldHVybiBoKGwsZSx0LG8sbiksZnVuY3Rpb24oKXtyZXR1cm4gdS5yZW1vdmVTdHlsZXMobCx0KX19KSxbbCxlLHQsbyxuXSksbnVsbH1mdW5jdGlvbiBoKGUsdCxuLHIsbyl7aWYodS5pc1N0YXRpYyl1LnJlbmRlclN0eWxlcyhlLE8sbixvKTtlbHNle3ZhciBzPXYoe30sdCx7dGhlbWU6UmUodCxyLGwuZGVmYXVsdFByb3BzKX0pO3UucmVuZGVyU3R5bGVzKGUscyxuLG8pfX1yZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZPZShhKSxyLm1lbW8obCl9ZnVuY3Rpb24gVWUoZSl7XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcImBrZXlmcmFtZXNgIGNhbm5vdCBiZSB1c2VkIG9uIFJlYWN0TmF0aXZlLCBvbmx5IG9uIHRoZSB3ZWIuIFRvIGRvIGFuaW1hdGlvbiBpbiBSZWFjdE5hdGl2ZSBwbGVhc2UgdXNlIEFuaW1hdGVkLlwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07dmFyIG89Q2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLmpvaW4oXCJcIikscz1rZShvKTtyZXR1cm4gbmV3IHZlKHMsbyl9dmFyIEplPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXRoaXM7dGhpcy5fZW1pdFNoZWV0Q1NTPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5pbnN0YW5jZS50b1N0cmluZygpO2lmKCF0KXJldHVyblwiXCI7dmFyIG49cSgpO3JldHVyblwiPHN0eWxlIFwiK1tuJiYnbm9uY2U9XCInK24rJ1wiJyxBKyc9XCJ0cnVlXCInLCdkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4zLjFcIiddLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKStcIj5cIit0K1wiPC9zdHlsZT5cIn0sdGhpcy5nZXRTdHlsZVRhZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gZS5zZWFsZWQ/aigyKTplLl9lbWl0U2hlZXRDU1MoKX0sdGhpcy5nZXRTdHlsZUVsZW1lbnQ9ZnVuY3Rpb24oKXt2YXIgdDtpZihlLnNlYWxlZClyZXR1cm4gaigyKTt2YXIgbj0oKHQ9e30pW0FdPVwiXCIsdFtcImRhdGEtc3R5bGVkLXZlcnNpb25cIl09XCI1LjMuMVwiLHQuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e19faHRtbDplLmluc3RhbmNlLnRvU3RyaW5nKCl9LHQpLG89cSgpO3JldHVybiBvJiYobi5ub25jZT1vKSxbci5jcmVhdGVFbGVtZW50KFwic3R5bGVcIix2KHt9LG4se2tleTpcInNjLTAtMFwifSkpXX0sdGhpcy5zZWFsPWZ1bmN0aW9uKCl7ZS5zZWFsZWQ9ITB9LHRoaXMuaW5zdGFuY2U9bmV3IFooe2lzU2VydmVyOiEwfSksdGhpcy5zZWFsZWQ9ITF9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuY29sbGVjdFN0eWxlcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zZWFsZWQ/aigyKTpyLmNyZWF0ZUVsZW1lbnQoeWUse3NoZWV0OnRoaXMuaW5zdGFuY2V9LGUpfSx0LmludGVybGVhdmVXaXRoTm9kZVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gaigzKX0sZX0oKSxYZT1mdW5jdGlvbihlKXt2YXIgdD1yLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHQsbil7dmFyIG89cyhMZSksaT1lLmRlZmF1bHRQcm9wcyxhPVJlKHQsbyxpKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZ2b2lkIDA9PT1hJiZjb25zb2xlLndhcm4oJ1t3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFwiJytfKGUpKydcIicpLHIuY3JlYXRlRWxlbWVudChlLHYoe30sdCx7dGhlbWU6YSxyZWY6bn0pKX0pKTtyZXR1cm4geSh0LGUpLHQuZGlzcGxheU5hbWU9XCJXaXRoVGhlbWUoXCIrXyhlKStcIilcIix0fSxaZT1mdW5jdGlvbigpe3JldHVybiBzKExlKX0sS2U9e1N0eWxlU2hlZXQ6WixtYXN0ZXJTaGVldDpoZX07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgeW91J3ZlIGltcG9ydGVkICdzdHlsZWQtY29tcG9uZW50cycgb24gUmVhY3QgTmF0aXZlLlxcblBlcmhhcHMgeW91J3JlIGxvb2tpbmcgdG8gaW1wb3J0ICdzdHlsZWQtY29tcG9uZW50cy9uYXRpdmUnP1xcblJlYWQgbW9yZSBhYm91dCB0aGlzIGF0IGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2Jhc2ljcyNyZWFjdC1uYXRpdmVcIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ0ZXN0XCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdPXdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdfHwwLDE9PT13aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXSYmY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2YgJ3N0eWxlZC1jb21wb25lbnRzJyBpbml0aWFsaXplZCBpbiB0aGlzIGFwcGxpY2F0aW9uLiBUaGlzIG1heSBjYXVzZSBkeW5hbWljIHN0eWxlcyB0byBub3QgcmVuZGVyIHByb3Blcmx5LCBlcnJvcnMgZHVyaW5nIHRoZSByZWh5ZHJhdGlvbiBwcm9jZXNzLCBhIG1pc3NpbmcgdGhlbWUgcHJvcCwgYW5kIG1ha2VzIHlvdXIgYXBwbGljYXRpb24gYmlnZ2VyIHdpdGhvdXQgZ29vZCByZWFzb24uXFxuXFxuU2VlIGh0dHBzOi8vcy1jLnNoLzJCQVh6ZWQgZm9yIG1vcmUgaW5mby5cIiksd2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl0rPTEpO2V4cG9ydCBkZWZhdWx0IEhlO2V4cG9ydHtKZSBhcyBTZXJ2ZXJTdHlsZVNoZWV0LGxlIGFzIFN0eWxlU2hlZXRDb25zdW1lcix1ZSBhcyBTdHlsZVNoZWV0Q29udGV4dCx5ZSBhcyBTdHlsZVNoZWV0TWFuYWdlcixHZSBhcyBUaGVtZUNvbnN1bWVyLExlIGFzIFRoZW1lQ29udGV4dCxGZSBhcyBUaGVtZVByb3ZpZGVyLEtlIGFzIF9fUFJJVkFURV9fLFdlIGFzIGNyZWF0ZUdsb2JhbFN0eWxlLENlIGFzIGNzcyxOIGFzIGlzU3R5bGVkQ29tcG9uZW50LFVlIGFzIGtleWZyYW1lcyxaZSBhcyB1c2VUaGVtZSxDIGFzIHZlcnNpb24sWGUgYXMgd2l0aFRoZW1lfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzLm1hcFxuIiwiaW1wb3J0IFNjaGVtYSBmcm9tICdjb21tb24vU2NoZW1hJztcblxuaW1wb3J0IFBvc3QgZnJvbSAnYXBpL3N0b3JlL1Bvc3QnO1xuaW1wb3J0IFRocmVhZCBmcm9tICdhcGkvc3RvcmUvVGhyZWFkJztcblxuZXhwb3J0IHR5cGUgRnJvbVR5cGUgPSAnQ2gnIHwgJ0JhY2tUb1Jvb3RDaCcgfCAnVG9NZWRpYScgfCAnTGlua3MnIHwgJ2ZpbmRNZWRpYUNoJyB8ICcnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcHAgZXh0ZW5kcyBTY2hlbWEge1xuICBzdGF0aWMgZ2V0IGRlZmF1bHRPZmZzZXRGaW5kSWQoKSB7XG4gICAgcmV0dXJuIFBvc3QuZGVmYXVsdEZpbmRJZDtcbiAgfVxuICBzdGF0aWMgZ2V0IGRpc3BUaHJlYWRUeXBlVGltZWxpbmUoKTogJ1RpbWVsaW5lJyB7XG4gICAgcmV0dXJuICdUaW1lbGluZSc7XG4gIH1cbiAgc3RhdGljIGdldCBkaXNwVGhyZWFkVHlwZVNpbmdsZSgpOiAnU2luZ2xlJyB7XG4gICAgcmV0dXJuICdTaW5nbGUnO1xuICB9XG4gIHN0YXRpYyBnZXQgZGlzcFRocmVhZFR5cGVNdWx0aSgpOiAnTXVsdGknIHtcbiAgICByZXR1cm4gJ011bHRpJztcbiAgfVxuICBzdGF0aWMgZ2V0IGRpc3BUaHJlYWRUeXBlQ2hpbGQoKTogJ0NoaWxkJyB7XG4gICAgcmV0dXJuICdDaGlsZCc7XG4gIH1cbiAgc3RhdGljIGdldCBkaXNwVGhyZWFkVHlwZUxvZ3MoKTogJ0xvZ3MnIHtcbiAgICByZXR1cm4gJ0xvZ3MnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFUYWdUeXBlTm8oKSB7XG4gICAgcmV0dXJuICdodG1sJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhVGFnVHlwZUF1ZGlvKCkge1xuICAgIHJldHVybiAnYXVkaW8nO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFUYWdUeXBlVmlkZW8oKSB7XG4gICAgcmV0dXJuICd2aWRlbyc7XG4gIH1cbiAgc3RhdGljIGdldCBtZWRpYVR5cGVNcDMoKSB7XG4gICAgcmV0dXJuICdtcDMnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFUeXBlTXA0KCkge1xuICAgIHJldHVybiAnbXA0JztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhVHlwZU00YSgpIHtcbiAgICByZXR1cm4gJ200YSc7XG4gIH1cbiAgc3RhdGljIGdldCBtZWRpYUNocygpIHtcbiAgICByZXR1cm4gW0FwcC5tZWRpYVR5cGVNcDMsIEFwcC5tZWRpYVR5cGVNcDQsIEFwcC5tZWRpYVR5cGVNNGFdO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFDaFRhZ1R5cGVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBbQXBwLm1lZGlhVHlwZU1wM106IEFwcC5tZWRpYVRhZ1R5cGVBdWRpbyxcbiAgICAgIFtBcHAubWVkaWFUeXBlTXA0XTogQXBwLm1lZGlhVGFnVHlwZVZpZGVvLFxuICAgICAgW0FwcC5tZWRpYVR5cGVNNGFdOiBBcHAubWVkaWFUYWdUeXBlQXVkaW8sXG4gICAgfTtcbiAgfVxuICBzdGF0aWMgZ2V0TWVkaWFUeXBlKHNyYywgcGFyYW1zKSB7XG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuY2hUeXBlKSB7XG4gICAgICByZXR1cm4gcGFyYW1zLmNoVHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIEFwcC5nZXRNZWRpYVR5cGVGcm9tU3JjKHNyYyk7XG4gIH1cbiAgc3RhdGljIGdldE1lZGlhVHlwZUZyb21TcmMoc3JjKSB7XG4gICAgY29uc3QgbWVkaWFDaFRhZ1R5cGVLZXlzID0gT2JqZWN0LmtleXMoQXBwLm1lZGlhQ2hUYWdUeXBlcyk7XG4gICAgY29uc3QgbWVkaWFDaFRhZ1R5cGVMZW5ndGggPSBtZWRpYUNoVGFnVHlwZUtleXMubGVuZ3RoO1xuICAgIGxldCBtZWRpYVR5cGUgPSAnaHRtbCc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtZWRpYUNoVGFnVHlwZUxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCByZWdFeHAgPSBuZXcgUmVnRXhwKGAuJHttZWRpYUNoVGFnVHlwZUtleXNbaV19JGApO1xuICAgICAgaWYgKHNyYy5tYXRjaChyZWdFeHApKSB7XG4gICAgICAgIG1lZGlhVHlwZSA9IEFwcC5tZWRpYUNoVGFnVHlwZXNbbWVkaWFDaFRhZ1R5cGVLZXlzW2ldXTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZWRpYVR5cGU7XG4gIH1cbiAgc3RhdGljIHZhbGlkSW5wdXRQb3N0KHZhbHVlKSB7XG4gICAgaWYgKC9cXHJcXG4kfFxcbiR8XFxyJC9naW0udGVzdCh2YWx1ZSkpIHJldHVybiAnTEFTVCBUWVBFIEJSRUFLIExJTkUuJztcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdGF0aWMgdmFsaWRQb3N0KHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykgcmV0dXJuICdOTyBJTlBVVCBQT1NUJztcbiAgICBpZiAoL15cXHJcXG4rJHxcXG4rJHxcXHIrJC9nLnRlc3QodmFsdWUpKSByZXR1cm4gJ09OTFkgTkVXIExJTkUnO1xuICAgIGlmICgvXlxccyskL2cudGVzdCh2YWx1ZSkpIHJldHVybiAnb25seSBzcGFjZSc7XG4gICAgaWYgKC9eXFxyXFxuKyhcXHN8XFxTKSskfF5cXG4rKFxcc3xcXFMpKyR8XlxccisoXFxzfFxcUykrJC8udGVzdCh2YWx1ZSkpIHJldHVybiAnRU1QVFkgUE9TVCc7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIGdldFdpZHRoKHBhcmFtcykge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuaW5uZXJXaWR0aCkgcmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIGlmIChwYXJhbXMud2lkdGgpIHtcbiAgICAgIGlmICh0eXBlb2YgcGFyYW1zLndpZHRoID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAocGFyYW1zLndpZHRoLmluZGV4T2YoJ3B4JykgPj0gMCkge1xuICAgICAgICAgIHJldHVybiBOdW1iZXIocGFyYW1zLndpZHRoLnJlcGxhY2UoJ3B4JywgJycpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHBhcmFtcy53aWR0aDtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBzdGF0aWMgZ2V0SGVpZ2h0KHBhcmFtcyA9IHt9KSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmIHdpbmRvdy5pbm5lckhlaWdodCkgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGlkOiBzdHJpbmc7XG5cbiAgLy8g44K544Os44OD44OJ5Z+65pys6Zai6YCjXG4gIGlzUm9vdENoOiBib29sZWFuO1xuICBpc0xpbmtDaDogYm9vbGVhbjtcbiAgaXNNZWRpYUNoOiBib29sZWFuO1xuICByb290Q2g6IHN0cmluZztcbiAgcm9vdFRpdGxlOiBzdHJpbmc7XG4gIGNoVHlwZTogJ3ZpZGVvJyB8ICdhdWRpbycgfCAnaHRtbCc7XG4gIGRpc3BUaHJlYWRUeXBlOiAnTXVsdGknIHwgJ1NpbmdsZScgfCAnQ2hpbGQnIHwgJ1RpbWVsaW5lJyB8ICdMb2dzJztcbiAgdHVuZWQ6IHN0cmluZztcbiAgbXVsdGlzdHJlYW06IGJvb2xlYW47XG5cbiAgLy8g5oqV56i/5oOF5aCxXG4gIGZpbmRUeXBlOiAnaHRtbCcgfCAnbXAzJyB8ICdtcDQnIHwgJ200YScgfCAnYXVkaW8nIHwgJ3ZpZGVvJztcbiAgb2Zmc2V0RmluZElkOiBzdHJpbmc7XG4gIG9mZnNldFRpbWVsaW5lRmluZElkOiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRGaW5kSWQ7XG4gIG9mZnNldFNpbmdsZUZpbmRJZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0RmluZElkO1xuICBvZmZzZXRNdWx0aUZpbmRJZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0RmluZElkO1xuICBvZmZzZXRDaGlsZEZpbmRJZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0RmluZElkO1xuICBvZmZzZXRMb2dzRmluZElkOiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRGaW5kSWQ7XG5cbiAgLy8g5YWl5Yqb54q25oWLXG4gIGlucHV0UG9zdDogc3RyaW5nO1xuICBpbnB1dFN0YW1wSWQ6IHN0cmluZyB8IG51bWJlcjtcbiAgaW5wdXRDdXJyZW50VGltZTogbnVtYmVyO1xuICBpbnB1dFNlYXJjaDogc3RyaW5nO1xuXG4gIC8vIOOBneOBruS7llxuICBpc1RvZ2dsZU11bHRpc3RyZWFtOiBib29sZWFuO1xuICBpc1JhbmtEZXRhaWxNb2RlOiBib29sZWFuO1xuICBhY3Rpb25lZDogc3RyaW5nO1xuICBkZWJ1Zzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogYW55ID0ge30sIGNhbGwgPSAnJykge1xuICAgIHN1cGVyKCk7XG5cbiAgICAvLyDmupblgplcbiAgICBjb25zdCBjaCA9IHBhcmFtcy5jaCA/IHBhcmFtcy5jaCA6ICcvJztcblxuICAgIC8vIElEXG4gICAgY29uc3QgaWQgPSBwYXJhbXMuaWQgPyBwYXJhbXMuaWQgOiAnJztcblxuICAgIC8vIOOCueODrOODg+ODieWfuuacrOmWoumAo1xuICAgIGNvbnN0IGlzTWVkaWFDaCA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNNZWRpYUNoKSA/IHBhcmFtcy5pc01lZGlhQ2ggOiBBcHAuZ2V0SXNNZWRpYUNoKGNoKTtcbiAgICBjb25zdCBpc0xpbmtDaCA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNMaW5rQ2gpID8gcGFyYW1zLmlzTGlua0NoIDogZmFsc2U7XG4gICAgY29uc3Qgcm9vdENoID0gcGFyYW1zLnJvb3RDaCA/IHBhcmFtcy5yb290Q2ggOiBjaDtcbiAgICBjb25zdCBpc1Jvb3RDaCA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNSb290Q2gpID8gcGFyYW1zLmlzUm9vdENoIDogcm9vdENoID09PSBjaDtcbiAgICBjb25zdCByb290VGl0bGUgPSBwYXJhbXMucm9vdFRpdGxlID8gcGFyYW1zLnJvb3RUaXRsZSA6ICd0YWxrbic7XG4gICAgY29uc3Qgc3JjID0gQXBwLmdldE1lZGlhU3JjKHBhcmFtcy5wcm90b2NvbCwgY2gpO1xuICAgIGNvbnN0IGNoVHlwZSA9IEFwcC5nZXRNZWRpYVR5cGUoc3JjLCBwYXJhbXMpO1xuICAgIGNvbnN0IHR1bmVkID0gcGFyYW1zICYmIHBhcmFtcy50dW5lZCA/IHBhcmFtcy50dW5lZCA6ICcnO1xuICAgIGNvbnN0IGRpc3BUaHJlYWRUeXBlID0gQXBwLmdldERpc3BUaHJlYWRUeXBlKHBhcmFtcywgaXNNZWRpYUNoKTtcbiAgICBjb25zdCBtdWx0aXN0cmVhbSA9IFNjaGVtYS5pc1NldChwYXJhbXMubXVsdGlzdHJlYW0pID8gcGFyYW1zLm11bHRpc3RyZWFtIDogdHJ1ZTtcblxuICAgIC8vIOaKleeov+aDheWgsVxuICAgIGNvbnN0IGZpbmRUeXBlID0gcGFyYW1zICYmIHBhcmFtcy5maW5kVHlwZSA/IHBhcmFtcy5maW5kVHlwZSA6IFRocmVhZC5maW5kVHlwZUFsbDtcbiAgICBjb25zdCBvZmZzZXRGaW5kSWQgPSBwYXJhbXMgJiYgcGFyYW1zLm9mZnNldEZpbmRJZCA/IHBhcmFtcy5vZmZzZXRGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICBjb25zdCBvZmZzZXRUaW1lbGluZUZpbmRJZCA9IHBhcmFtcyAmJiBwYXJhbXMub2Zmc2V0VGltZWxpbmVGaW5kSWQgPyBwYXJhbXMub2Zmc2V0VGltZWxpbmVGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICBjb25zdCBvZmZzZXRTaW5nbGVGaW5kSWQgPSBwYXJhbXMgJiYgcGFyYW1zLm9mZnNldFNpbmdsZUZpbmRJZCA/IHBhcmFtcy5vZmZzZXRTaW5nbGVGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICBjb25zdCBvZmZzZXRNdWx0aUZpbmRJZCA9IHBhcmFtcyAmJiBwYXJhbXMub2Zmc2V0TXVsdGlGaW5kSWQgPyBwYXJhbXMub2Zmc2V0TXVsdGlGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICBjb25zdCBvZmZzZXRDaGlsZEZpbmRJZCA9IHBhcmFtcyAmJiBwYXJhbXMub2Zmc2V0Q2hpbGRGaW5kSWQgPyBwYXJhbXMub2Zmc2V0Q2hpbGRGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICBjb25zdCBvZmZzZXRMb2dzRmluZElkID0gcGFyYW1zICYmIHBhcmFtcy5vZmZzZXRMb2dzRmluZElkID8gcGFyYW1zLm9mZnNldExvZ3NGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcblxuICAgIC8vIOWFpeWKm+eKtuaFi1xuICAgIGNvbnN0IGlucHV0UG9zdCA9IHBhcmFtcy5pbnB1dFBvc3QgPyBwYXJhbXMuaW5wdXRQb3N0IDogJyc7XG4gICAgY29uc3QgaW5wdXRTdGFtcElkID0gcGFyYW1zLmlucHV0U3RhbXBJZCA/IHBhcmFtcy5pbnB1dFN0YW1wSWQgOiBmYWxzZTtcbiAgICBjb25zdCBpbnB1dEN1cnJlbnRUaW1lID0gcGFyYW1zLmlucHV0Q3VycmVudFRpbWUgPyBwYXJhbXMuaW5wdXRDdXJyZW50VGltZSA6IDAuMDtcbiAgICBjb25zdCBpbnB1dFNlYXJjaCA9IHBhcmFtcy5pbnB1dFNlYXJjaCA/IHBhcmFtcy5pbnB1dFNlYXJjaCA6ICcnO1xuXG4gICAgLy8g44Gd44Gu5LuWXG4gICAgY29uc3QgaXNUb2dnbGVNdWx0aXN0cmVhbSA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNUb2dnbGVNdWx0aXN0cmVhbSkgPyBwYXJhbXMuaXNUb2dnbGVNdWx0aXN0cmVhbSA6IGZhbHNlO1xuICAgIGNvbnN0IGlzUmFua0RldGFpbE1vZGUgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzUmFua0RldGFpbE1vZGUpID8gcGFyYW1zLmlzUmFua0RldGFpbE1vZGUgOiBmYWxzZTtcbiAgICBjb25zdCBhY3Rpb25lZCA9IHBhcmFtcyAmJiBwYXJhbXMuYWN0aW9uZWQgPyBwYXJhbXMuYWN0aW9uZWQgOiAnJztcbiAgICBjb25zdCBkZWJ1ZyA9IFNjaGVtYS5pc1NldChwYXJhbXMuZGVidWcpID8gcGFyYW1zLmRlYnVnIDogJyc7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlKHtcbiAgICAgIC8vIElEXG4gICAgICBpZCxcblxuICAgICAgLy8g44K544Os44OD44OJ5Z+65pys6Zai6YCjXG4gICAgICBpc1Jvb3RDaCxcbiAgICAgIGlzTGlua0NoLFxuICAgICAgaXNNZWRpYUNoLFxuICAgICAgcm9vdENoLFxuICAgICAgcm9vdFRpdGxlLFxuICAgICAgY2hUeXBlLFxuICAgICAgZGlzcFRocmVhZFR5cGUsXG4gICAgICB0dW5lZCxcbiAgICAgIG11bHRpc3RyZWFtLCAvLyBkaXNwVGhyZWFkVHlwZeOBjENoaWxkLCBUaW1lbGluZeOBq+OBquOBo+OBpuOCgm11bHRpc3RyZWFt54q25oWL44KS57at5oyB44GZ44KLXG5cbiAgICAgIC8vICAgICAgdGhyZWFkU2Nyb2xsWSxcblxuICAgICAgLy8g5oqV56i/5oOF5aCxXG4gICAgICBmaW5kVHlwZSxcbiAgICAgIG9mZnNldEZpbmRJZCxcbiAgICAgIG9mZnNldFRpbWVsaW5lRmluZElkLFxuICAgICAgb2Zmc2V0U2luZ2xlRmluZElkLFxuICAgICAgb2Zmc2V0TXVsdGlGaW5kSWQsXG4gICAgICBvZmZzZXRDaGlsZEZpbmRJZCxcbiAgICAgIG9mZnNldExvZ3NGaW5kSWQsXG5cbiAgICAgIC8vIGRldGFpbOaDheWgsVxuXG4gICAgICAvLyDlhaXlipvnirbmhYtcbiAgICAgIGlucHV0UG9zdCxcbiAgICAgIGlucHV0U3RhbXBJZCxcbiAgICAgIGlucHV0Q3VycmVudFRpbWUsXG4gICAgICBpbnB1dFNlYXJjaCxcblxuICAgICAgLy8g44Gd44Gu5LuWXG4gICAgICBpc1RvZ2dsZU11bHRpc3RyZWFtLFxuICAgICAgaXNSYW5rRGV0YWlsTW9kZSxcbiAgICAgIGFjdGlvbmVkLFxuICAgICAgZGVidWcsXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgaXNNZWRpYUNvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgcmV0dXJuIEFwcC5pc0F1ZGlvQ29udGVudFR5cGUoY29udGVudFR5cGUpIHx8IEFwcC5pc1ZpZGVvQ29udGVudFR5cGUoY29udGVudFR5cGUpO1xuICB9XG5cbiAgc3RhdGljIGlzQXVkaW9Db250ZW50VHlwZShjb250ZW50VHlwZSkge1xuICAgIHJldHVybiBjb250ZW50VHlwZS5pbmRleE9mKEFwcC5tZWRpYVRhZ1R5cGVBdWRpbykgPj0gMDtcbiAgfVxuXG4gIHN0YXRpYyBpc1ZpZGVvQ29udGVudFR5cGUoY29udGVudFR5cGUpIHtcbiAgICByZXR1cm4gY29udGVudFR5cGUuaW5kZXhPZihBcHAubWVkaWFUYWdUeXBlVmlkZW8pID49IDA7XG4gIH1cblxuICBzdGF0aWMgZ2V0TWVkaWFTcmMocHJvdG9jb2wsIGNoKSB7XG4gICAgcmV0dXJuIHByb3RvY29sICsgJy8nICsgY2gucmVwbGFjZSgvXFwvJC8sICcnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRJc01lZGlhQ2goY2gpIHtcbiAgICByZXR1cm4gQXBwLm1lZGlhQ2hzLnNvbWUoKGV4dCkgPT4ge1xuICAgICAgY29uc3QgcmVnZXhwID0gbmV3IFJlZ0V4cChgLiR7ZXh0fVxcLyR8LiR7ZXh0fSRgKTtcbiAgICAgIHJldHVybiBjaC5tYXRjaChyZWdleHApO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldERpc3BUaHJlYWRUeXBlKHBhcmFtcywgaXNNZWRpYUNoKSB7XG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuZGlzcFRocmVhZFR5cGUpIHtcbiAgICAgIHJldHVybiBwYXJhbXMuZGlzcFRocmVhZFR5cGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc01lZGlhQ2gpIHtcbiAgICAgICAgcmV0dXJuIEFwcC5kaXNwVGhyZWFkVHlwZVRpbWVsaW5lO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEFwcC5kaXNwVGhyZWFkVHlwZU11bHRpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRPZmZzZXRGaW5kSWQoeyBwb3N0cyB9KSB7XG4gICAgaWYgKHBvc3RzICYmIHBvc3RzWzBdICYmIHBvc3RzWzBdLl9pZCkge1xuICAgICAgcmV0dXJuIHBvc3RzWzBdLl9pZDtcbiAgICB9XG4gICAgcmV0dXJuIFBvc3QuZGVmYXVsdEZpbmRJZDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTdGVwVG9EaXNwVGhyZWFkVHlwZSh7IGFwcCwgcmFua3MgfTogYW55LCB0aHJlYWRTdGF0dXM6IGFueSwgdG9DaDogc3RyaW5nLCBjbGlja2VkOiBGcm9tVHlwZSA9ICcnKSB7XG4gICAgbGV0IGFmdGVyRGlzcFRocmVhZFR5cGUgPSAnJztcbiAgICBjb25zdCBiZWZvcmVEaXNwVGhyZWFkVHlwZSA9IGFwcCAmJiBhcHAuZGlzcFRocmVhZFR5cGUgPyBhcHAuZGlzcFRocmVhZFR5cGUgOiBBcHAuZGlzcFRocmVhZFR5cGVNdWx0aTtcbiAgICBhcHAgPSBBcHAuZ2V0U3RlcERpc3BUaHJlYWRUeXBlKHsgYXBwLCByYW5rcyB9LCB0aHJlYWRTdGF0dXMsIHRvQ2gsIGNsaWNrZWQpO1xuICAgIGFmdGVyRGlzcFRocmVhZFR5cGUgPSBhcHAuZGlzcFRocmVhZFR5cGU7XG4gICAgcmV0dXJuIHsgYXBwLCBzdGVwVG86IGAke2JlZm9yZURpc3BUaHJlYWRUeXBlfSB0byAke2FmdGVyRGlzcFRocmVhZFR5cGV9YCB9O1xuICB9XG5cbiAgc3RhdGljIGdldFN0ZXBEaXNwVGhyZWFkVHlwZSh7IGFwcCwgcmFua3MgfSwgdGhyZWFkU3RhdHVzOiBhbnkgPSB7fSwgdG9DaCwgY2xpY2tlZCkge1xuICAgIGNvbnN0IGxvZyA9IGZhbHNlO1xuICAgIGNvbnN0IHVwZGF0ZWRBcHAgPSBhcHAgPyBhcHAgOiB7fTtcbiAgICB1cGRhdGVkQXBwLm9mZnNldEZpbmRJZCA9IEFwcC5kZWZhdWx0T2Zmc2V0RmluZElkO1xuXG4gICAgaWYgKGxvZykgY29uc29sZS5sb2cocmFua3MpO1xuICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKHRocmVhZFN0YXR1cyk7XG5cbiAgICBpZiAodGhyZWFkU3RhdHVzLmlzTWVkaWFDaCkge1xuICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0InKTtcbiAgICAgIHVwZGF0ZWRBcHAuZGlzcFRocmVhZFR5cGUgPSBBcHAuZGlzcFRocmVhZFR5cGVUaW1lbGluZTtcbiAgICAgIHVwZGF0ZWRBcHAub2Zmc2V0RmluZElkID0gdXBkYXRlZEFwcC5vZmZzZXRUaW1lbGluZUZpbmRJZCA/IHVwZGF0ZWRBcHAub2Zmc2V0VGltZWxpbmVGaW5kSWQgOiBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICAgIHVwZGF0ZWRBcHAuaXNMaW5rQ2ggPSBjbGlja2VkID09PSAnTGlua3MnIHx8IGNsaWNrZWQgPT09ICdmaW5kTWVkaWFDaCcgfHwgY2xpY2tlZCA9PT0gJ1RvTWVkaWEnID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgdXBkYXRlZEFwcC5pc01lZGlhQ2ggPSB0cnVlO1xuICAgICAgcmV0dXJuIHVwZGF0ZWRBcHA7XG4gICAgfVxuXG4gICAgaWYgKGNsaWNrZWQgPT09ICdCYWNrVG9Sb290Q2gnKSB7XG4gICAgICB1cGRhdGVkQXBwLmlzTGlua0NoID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGNsaWNrZWQgPT09ICdMaW5rcycgJiYgcmFua3MubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgaGF2ZU1lbnVJbmRleCA9IHJhbmtzLnNvbWUoKG1pKSA9PiB7XG4gICAgICAgIHJldHVybiBtaS5jaCA9PT0gdG9DaCB8fCBtaS5jaCA9PT0gdG9DaCArICcvJztcbiAgICAgIH0pO1xuXG4gICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnQyAnICsgaGF2ZU1lbnVJbmRleCArICcnKTtcblxuICAgICAgaWYgKCFoYXZlTWVudUluZGV4KSB7XG4gICAgICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKCdEJyk7XG5cbiAgICAgICAgdXBkYXRlZEFwcC5vZmZzZXRGaW5kSWQgPSBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcbiAgICAgICAgdXBkYXRlZEFwcC5kaXNwVGhyZWFkVHlwZSA9IEFwcC5kaXNwVGhyZWFkVHlwZUNoaWxkO1xuICAgICAgICB1cGRhdGVkQXBwLmlzTGlua0NoID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZWRBcHA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHVwZGF0ZWRBcHAucm9vdENoID09PSB0b0NoKSB7XG4gICAgICBpZiAodXBkYXRlZEFwcC5tdWx0aXN0cmVhbSkge1xuICAgICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnRScpO1xuICAgICAgICB1cGRhdGVkQXBwLmRpc3BUaHJlYWRUeXBlID0gQXBwLmRpc3BUaHJlYWRUeXBlTXVsdGk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnRicpO1xuICAgICAgICB1cGRhdGVkQXBwLmRpc3BUaHJlYWRUeXBlID0gQXBwLmRpc3BUaHJlYWRUeXBlU2luZ2xlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnRycpO1xuICAgICAgdXBkYXRlZEFwcC5kaXNwVGhyZWFkVHlwZSA9IEFwcC5kaXNwVGhyZWFkVHlwZUNoaWxkO1xuICAgIH1cbiAgICBpZiAobG9nKSBjb25zb2xlLmxvZyhhcHApO1xuICAgIHJldHVybiB1cGRhdGVkQXBwO1xuICB9XG59XG4iLCJpbXBvcnQgU2NoZW1hIGZyb20gJ2NvbW1vbi9TY2hlbWEnO1xuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3N0IGV4dGVuZHMgU2NoZW1hIHtcbiAgc3RhdGljIGdldCBkZWZhdWx0RmluZElkKCkge1xuICAgIHJldHVybiAnMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJztcbiAgfVxuICBzdGF0aWMgZ2V0IGRlZmF1bHRWYWx1ZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNoOiAnLycsXG4gICAgICBjaHM6IFsnLyddLFxuICAgICAgZmF2aWNvbjogY29uZi5kZWZhdWx0RmF2aWNvbixcbiAgICAgIGZpbmRUeXBlOiAnSHRtbCcsXG4gICAgICBsYXllcjogMSxcbiAgICAgIHBvc3Q6ICcnLFxuICAgICAgcHJvdG9jb2w6ICdodHRwczonLFxuICAgICAgc3RhbXBJZDogMCxcbiAgICAgIHRpdGxlOiAndGFsa24nLFxuICAgICAgbGl2ZUNudDogMCxcbiAgICAgIHVpZDogJycsXG4gICAgICB1dHlwZTogJycsXG4gICAgICBkaXNwRmxnOiB0cnVlLFxuICAgICAgZGF0YTogbnVsbCxcbiAgICAgIGNyZWF0ZVRpbWU6IG5ldyBEYXRlKCksXG4gICAgICBjdXJyZW50VGltZTogbmV3IERhdGUoKSxcbiAgICAgIHVwZGF0ZVRpbWU6IG5ldyBEYXRlKCksXG4gICAgfTtcbiAgfVxuICBjaDogc3RyaW5nID0gUG9zdC5kZWZhdWx0VmFsdWVzLmNoO1xuICBjaHM6IHN0cmluZ1tdID0gUG9zdC5kZWZhdWx0VmFsdWVzLmNocztcbiAgZmF2aWNvbjogc3RyaW5nID0gUG9zdC5kZWZhdWx0VmFsdWVzLmZhdmljb247XG4gIGZpbmRUeXBlOiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRWYWx1ZXMuZmluZFR5cGU7XG4gIGxheWVyOiBudW1iZXIgPSBQb3N0LmRlZmF1bHRWYWx1ZXMubGF5ZXI7XG4gIHBvc3Q6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy5wb3N0O1xuICBwcm90b2NvbDogc3RyaW5nID0gUG9zdC5kZWZhdWx0VmFsdWVzLnByb3RvY29sO1xuICBzdGFtcElkOiBudW1iZXIgPSBQb3N0LmRlZmF1bHRWYWx1ZXMuc3RhbXBJZDtcbiAgdGl0bGU6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy50aXRsZTtcbiAgbGl2ZUNudDogbnVtYmVyID0gUG9zdC5kZWZhdWx0VmFsdWVzLmxpdmVDbnQ7XG4gIHVpZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0VmFsdWVzLnVpZDtcbiAgdXR5cGU6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy51dHlwZTtcbiAgZGlzcEZsZzogYm9vbGVhbiA9IFBvc3QuZGVmYXVsdFZhbHVlcy5kaXNwRmxnO1xuICBkYXRhOiBhbnkgPSBQb3N0LmRlZmF1bHRWYWx1ZXMuZGF0YTtcbiAgY3JlYXRlVGltZTogRGF0ZSA9IFBvc3QuZGVmYXVsdFZhbHVlcy5jcmVhdGVUaW1lO1xuICBjdXJyZW50VGltZTogRGF0ZSA9IFBvc3QuZGVmYXVsdFZhbHVlcy5jdXJyZW50VGltZTtcbiAgdXBkYXRlVGltZTogRGF0ZSA9IFBvc3QuZGVmYXVsdFZhbHVlcy51cGRhdGVUaW1lO1xuICBjb25zdHJ1Y3RvcihwYXJhbXM/OiBQb3N0KSB7XG4gICAgc3VwZXIoKTtcbiAgICBjb25zdCB2YWx1ZXMgPSBwYXJhbXMgPyB7IC4uLlBvc3QuZGVmYXVsdFZhbHVlcywgLi4ucGFyYW1zIH0gOiBQb3N0LmRlZmF1bHRWYWx1ZXM7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlKHZhbHVlcyk7XG4gIH1cbn1cbiIsImltcG9ydCBTY2hlbWEgZnJvbSAnY29tbW9uL1NjaGVtYSc7XG5pbXBvcnQgU2VxdWVuY2UgZnJvbSAnY29tbW9uL1NlcXVlbmNlJztcbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuaW1wb3J0IEFwcCBmcm9tICdhcGkvc3RvcmUvQXBwJztcbmltcG9ydCBCb290T3B0aW9uIGZyb20gJ2FwaS9zdG9yZS9Cb290T3B0aW9uJztcblxuZXhwb3J0IHR5cGUgVGhyZWFkU3RhdHVzVHlwZSA9IHtcbiAgZGlzcFR5cGU6IHN0cmluZztcbiAgaXNDcmVhdGU6IGJvb2xlYW47XG4gIGlzUmVxdWlyZVVwc2VydDogYm9vbGVhbjtcbiAgaXNNdWx0aXN0cmVhbTogYm9vbGVhbjtcbiAgaXNNZWRpYUNoOiBib29sZWFuO1xuICBpc1RvZ2dsZU11bHRpc3RyZWFtOiBib29sZWFuO1xuICBnZXRNb3JlOiBib29sZWFuO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGhyZWFkIGV4dGVuZHMgU2NoZW1hIHtcbiAgc3RhdGljIGdldCBmaW5kVHlwZUFsbCgpOiAnQWxsJyB7XG4gICAgcmV0dXJuICdBbGwnO1xuICB9XG4gIHN0YXRpYyBnZXQgZmluZFR5cGVIdG1sKCk6ICdIdG1sJyB7XG4gICAgcmV0dXJuICdIdG1sJztcbiAgfVxuICBzdGF0aWMgZ2V0IGZpbmRUeXBlTXVzaWMoKTogJ011c2ljJyB7XG4gICAgcmV0dXJuICdNdXNpYyc7XG4gIH1cbiAgc3RhdGljIGdldCBmaW5kVHlwZVZpZGVvKCk6ICdWaWRlbycge1xuICAgIHJldHVybiAnVmlkZW8nO1xuICB9XG4gIHN0YXRpYyBnZXQgZmluZFR5cGVPdGhlcigpOiAnT3RoZXInIHtcbiAgICByZXR1cm4gJ090aGVyJztcbiAgfVxuICBzdGF0aWMgZ2V0IGZpbmRUeXBlcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgW1RocmVhZC5maW5kVHlwZUh0bWxdOiBbJ3RleHQvaHRtbCddLFxuICAgICAgW1RocmVhZC5maW5kVHlwZU11c2ljXTogWydhdWRpbycsICdhdWRpby9tcGVnJywgJ2F1ZGlvL21wNCcsICdhdWRpby94LXdhdicsICdhdWRpby9taWRpJywgJ2FwcGxpY2F0aW9uL3gtc21hZiddLFxuICAgICAgW1RocmVhZC5maW5kVHlwZVZpZGVvXTogW1xuICAgICAgICAndmlkZW8nLFxuICAgICAgICAndmlkZW8vbXBlZycsXG4gICAgICAgICd2aWRlby9tcDQnLFxuICAgICAgICAndmlkZW8vcXVpY2t0aW1lJyxcbiAgICAgICAgJ3ZpZGVvL3gtbXMtd212JyxcbiAgICAgICAgJ2FwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoJyxcbiAgICAgICAgJ3ZpZGVvLzNncHAyJyxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxuICBzdGF0aWMgZ2V0RGVmYXVsdFRpdGxlKCkge1xuICAgIHJldHVybiAndGFsa24nO1xuICB9XG5cbiAgc3RhdGljIGdldERlZmF1bHRGYXZpY29uKCkge1xuICAgIHJldHVybiBgaHR0cHM6Ly8ke2NvbmYuYXNzZXRzVVJMfS9mYXZpY29uLmljb2A7XG4gIH1cblxuICBzdGF0aWMgaXNXaW5kb3dPYmoocGFyYW1zKSB7XG4gICAgcmV0dXJuIHBhcmFtcy5hbGVydCA/IHRydWUgOiBmYWxzZTtcbiAgfVxuXG4gIGhyZWY6IHN0cmluZztcbiAgY2g6IHN0cmluZztcbiAgY2hzOiBbc3RyaW5nXSA9IFsnLyddO1xuICBoYXNTbGFzaDogYm9vbGVhbjtcbiAgcHJvdG9jb2w6IHN0cmluZyA9IFNlcXVlbmNlLlRBTEtOX1BST1RPQ09MO1xuICBjb250ZW50VHlwZTogc3RyaW5nO1xuICBjaGFyc2V0OiBzdHJpbmcgPSAnVVRGLTgnO1xuICBob3N0OiBzdHJpbmcgPSAnJztcbiAgZmF2aWNvbjogc3RyaW5nID0gVGhyZWFkLmdldERlZmF1bHRGYXZpY29uKCk7XG4gIGZpbmRUeXBlOiAnQWxsJyB8ICdIdG1sJyB8ICdNdXNpYycgfCAnVmlkZW8nID0gVGhyZWFkLmZpbmRUeXBlQWxsO1xuICB0aXRsZTogc3RyaW5nID0gVGhyZWFkLmdldERlZmF1bHRUaXRsZSgpO1xuICBtZXRhczogYW55ID0gW107XG4gIGVtb3Rpb25zOiBhbnkgPSB7fTtcbiAgc2VydmVyTWV0YXM6IGFueSA9IHt9O1xuICBjbGllbnRNZXRhczogYW55ID0ge307XG4gIGxpbmtzOiBhbnkgPSBbXTtcbiAgaDFzOiBhbnkgPSBbXTtcbiAgYXVkaW9zOiBhbnkgPSBbXTtcbiAgdmlkZW9zOiBhbnkgPSBbXTtcbiAgbGF5ZXI6IG51bWJlciA9IFRocmVhZC5nZXRMYXllcigpO1xuICBtZWRpYUluZGV4OiBhbnkgPSBbXTtcbiAgcG9zdENudDogbnVtYmVyID0gMDtcbiAgbXVsdGlQb3N0Q250OiBudW1iZXIgPSAwO1xuICBpc1NlbGZDaDogYm9vbGVhbiA9IGZhbHNlO1xuICBjcmVhdGVUaW1lOiBzdHJpbmcgPSAnJztcbiAgdXBkYXRlVGltZTogc3RyaW5nID0gJyc7XG4gIGNvbnN0cnVjdG9yKHBhcmFtczogYW55ID0ge30sIGJvb3RPcHRpb24/OiBCb290T3B0aW9uIHwge30pIHtcbiAgICBzdXBlcigpO1xuICAgIGNvbnN0IHRocmVhZCA9IFRocmVhZC5pc1dpbmRvd09iaihwYXJhbXMpID8gVGhyZWFkLmNvbnN0cnVjdG9yRnJvbVdpbmRvdyhwYXJhbXMsIGJvb3RPcHRpb24pIDogcGFyYW1zO1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZSh0aHJlYWQpO1xuICB9XG5cbiAgc3RhdGljIGNvbnN0cnVjdG9yRnJvbVdpbmRvdyhwYXJhbXMsIGJvb3RPcHRpb24pIHtcbiAgICBjb25zdCBib290Q2ggPSBib290T3B0aW9uLmNoID8gYm9vdE9wdGlvbi5jaCA6IGZhbHNlO1xuICAgIGNvbnN0IGNoID0gVGhyZWFkLmdldENoKGJvb3RPcHRpb24pO1xuXG4gICAgbGV0IHRocmVhZDogYW55ID0ge307XG4gICAgbGV0IGhyZWYgPSAnJztcbiAgICB0aHJlYWQuY2ggPSBjaDtcbiAgICB0aHJlYWQuY2hzID0gWycvJ107XG4gICAgdGhyZWFkLmhhc1NsYXNoID0gYm9vdE9wdGlvbi5oYXNzbGFzaCA/IFNjaGVtYS5nZXRCb29sKGJvb3RPcHRpb24uaGFzc2xhc2gpIDogZmFsc2U7XG4gICAgdGhyZWFkLnByb3RvY29sID0gJ3RhbGtuOic7XG4gICAgdGhyZWFkLmNvbnRlbnRUeXBlID0gJyc7XG4gICAgdGhyZWFkLmNoYXJzZXQgPSAnVVRGLTgnO1xuICAgIHRocmVhZC5ob3N0ID0gJyc7XG4gICAgdGhyZWFkLmZhdmljb24gPSBUaHJlYWQuZ2V0RGVmYXVsdEZhdmljb24oKTtcbiAgICB0aHJlYWQuZmluZFR5cGUgPSBUaHJlYWQuZmluZFR5cGVBbGw7XG5cbiAgICBpZiAoYm9vdENoKSB7XG4gICAgICAvLyBVUkzjga7jgrPjg43jgq/jgrfjg6fjg7PmloflrZfliJfjgYvjgonjgafjga9QUk9UT0NPTOOBr+WIpOWIpeOBp+OBjeOBquOBhOOAglxuICAgICAgdGhyZWFkLnByb3RvY29sID0gVGhyZWFkLmdldFByb3RvY29sKGJvb3RDaCk7XG4gICAgICB0aHJlYWQuaG9zdCA9IFRocmVhZC5nZXRIb3N0KGJvb3RDaCk7XG4gICAgICB0aHJlYWQuY2hzID0gYm9vdENoLmNocyAmJiBib290Q2guY2hzLmxlbmd0aCA+IDAgPyBib290Q2guY2hzIDogVGhyZWFkLmdldENocyhjaCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocmVhZC5wcm90b2NvbCA9IGxvY2F0aW9uLnByb3RvY29sID8gbG9jYXRpb24ucHJvdG9jb2wgOiAnPz8/PzonO1xuICAgICAgdGhyZWFkLmNocyA9IHBhcmFtcy5jaHMgJiYgcGFyYW1zLmNocy5sZW5ndGggPiAwID8gcGFyYW1zLmNocyA6IFRocmVhZC5nZXRDaHMoY2gpO1xuICAgICAgdGhyZWFkLmNvbnRlbnRUeXBlID0gZG9jdW1lbnQuY29udGVudFR5cGUgPyBkb2N1bWVudC5jb250ZW50VHlwZSA6ICcnO1xuICAgICAgdGhyZWFkLmNoYXJzZXQgPSBkb2N1bWVudC5jaGFyc2V0ID8gZG9jdW1lbnQuY2hhcnNldCA6ICcnO1xuXG4gICAgICB0aHJlYWQuaG9zdCA9IGxvY2F0aW9uLmhvc3QgPyBsb2NhdGlvbi5ob3N0IDogJyc7XG4gICAgICB0aHJlYWQuZmF2aWNvbiA9IFRocmVhZC5nZXRGYXZpY29uRnJvbVdpbmRvdyh3aW5kb3cpO1xuICAgIH1cblxuICAgIHRocmVhZC50aXRsZSA9IFRocmVhZC5nZXREZWZhdWx0VGl0bGUoKTtcbiAgICB0aHJlYWQubWV0YXMgPSBbXTtcbiAgICB0aHJlYWQuc2VydmVyTWV0YXMgPSB7fTtcbiAgICB0aHJlYWQuY2xpZW50TWV0YXMgPSB7fTtcbiAgICB0aHJlYWQuZW1vdGlvbnMgPSB7fTtcbiAgICB0aHJlYWQubGlua3MgPSBbXTtcbiAgICB0aHJlYWQuaDFzID0gW107XG4gICAgdGhyZWFkLmF1ZGlvcyA9IFtdO1xuICAgIHRocmVhZC52aWRlb3MgPSBbXTtcbiAgICB0aHJlYWQubGF5ZXIgPSBUaHJlYWQuZ2V0TGF5ZXIodGhyZWFkLmNoKTtcbiAgICB0aHJlYWQubWVkaWFJbmRleCA9IFtdO1xuICAgIHRocmVhZC5wb3N0Q250ID0gMDtcbiAgICB0aHJlYWQubXVsdGlQb3N0Q250ID0gMDtcbiAgICB0aHJlYWQuaXNTZWxmQ2ggPSBUaHJlYWQuZ2V0SXNTZWxmQ2goaHJlZiwgdGhyZWFkLmNoKTtcbiAgICB0aHJlYWQuY3JlYXRlVGltZSA9ICcnO1xuICAgIHRocmVhZC51cGRhdGVUaW1lID0gJyc7XG4gICAgcmV0dXJuIHRocmVhZDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRDaChib290T3B0aW9uOiBhbnkpIHtcbiAgICByZXR1cm4gYm9vdE9wdGlvbiAmJiBib290T3B0aW9uLmNoICYmIGJvb3RPcHRpb24uY2ggIT09ICcnID8gYm9vdE9wdGlvbi5jaCA6ICcvJztcbiAgfVxuXG4gIHN0YXRpYyBnZXRDaFRvcChjaCkge1xuICAgIGlmIChjaCAhPT0gJycpIHtcbiAgICAgIHJldHVybiAnLycgKyBjaC5zcGxpdCgnLycpWzFdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldENocyhfY2gpIHtcbiAgICBsZXQgY2hzID0gWycvJ107XG5cbiAgICBpZiAoX2NoICE9PSAnJykge1xuICAgICAgLy9jaCA9IGNoLnJlcGxhY2UoL1xcdTAwMmYkL2csICcnKTtcbiAgICAgIGNvbnN0IGNoID0gX2NoLnNsaWNlKC0xKSA9PT0gJy8nID8gX2NoIDogX2NoICsgJy8nO1xuXG4gICAgICBpZiAoY2ggIT09ICcvJykge1xuICAgICAgICBjb25zdCBjaEFyciA9IGNoLnNwbGl0KCcvJyk7XG4gICAgICAgIGNvbnN0IGNoTGVuZ3RoID0gY2hBcnIubGVuZ3RoO1xuICAgICAgICBsZXQgbmV3Q2ggPSAnJztcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBjaExlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKGNoQXJyW2ldICE9PSAnJykge1xuICAgICAgICAgICAgbmV3Q2ggKz0gY2hBcnJbaV07XG5cbiAgICAgICAgICAgIC8vIOS4gOeVquacgOW+jOOBjC/jga7loLTlkIhcbiAgICAgICAgICAgIG5ld0NoID0gbmV3Q2guc2xpY2UoLTEpID09PSAnLycgPyBuZXdDaCA6IG5ld0NoICsgJy8nO1xuXG4gICAgICAgICAgICAvLyDkuIDnlarmnIDliJ3jgYwv44Gu5aC05ZCIXG4gICAgICAgICAgICBuZXdDaCA9IG5ld0NoLnNsaWNlKDAsIDEpID09PSAnLycgPyBuZXdDaCA6ICcvJyArIG5ld0NoO1xuXG4gICAgICAgICAgICAvLyDmnIDlvozjgYwv54Sh44GX44Gu44Kz44ON44Kv44K344On44Oz44KS55Sf5oiQXG4gICAgICAgICAgICAvL25vU2xhc2hDaCA9IG5ld0NoLnNsaWNlKDAsIC0xKTtcblxuICAgICAgICAgICAgLy9jaHMucHVzaCggbm9TbGFzaENoICk7XG4gICAgICAgICAgICBjaHMucHVzaChuZXdDaCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjaHM7XG4gIH1cblxuICBzdGF0aWMgZ2V0SG9zdChjaCkge1xuICAgIGlmIChjaC5pbmRleE9mKCcuJykgPj0gMCkge1xuICAgICAgY2ggPSBjaC5yZXBsYWNlKCdodHRwczovLycsICcnKS5yZXBsYWNlKCdodHRwOi8vJywgJycpO1xuICAgICAgcmV0dXJuIGNoLnJlcGxhY2UoL15cXC8vLCAnJykucmVwbGFjZSgvXFwvLiokLywgJycpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY29uZi5kb21haW47XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldFByb3RvY29sKGhyZWYpIHtcbiAgICBpZiAoaHJlZi5pbmRleE9mKCdodHRwOicpID49IDApIHJldHVybiAnaHR0cDonO1xuICAgIGlmIChocmVmLmluZGV4T2YoJ2h0dHBzOicpID49IDApIHJldHVybiAnaHR0cHM6JztcbiAgICBpZiAobG9jYXRpb24gJiYgbG9jYXRpb24ucHJvdG9jb2wpIHJldHVybiBsb2NhdGlvbi5wcm90b2NvbDtcbiAgICByZXR1cm4gJz8/Pz86JztcbiAgfVxuXG4gIHN0YXRpYyBnZXRJc1NlbGZDaChocmVmLCBjaCkge1xuICAgIGNvbnN0IHJlcGxhY2VkSHJlZiA9IGhyZWZcbiAgICAgIC5yZXBsYWNlKCdodHRwOi8nLCAnJylcbiAgICAgIC5yZXBsYWNlKCdodHRwczovJywgJycpXG4gICAgICAucmVwbGFjZSgvXFx1MDAyZiQvLCAnJyk7XG4gICAgcmV0dXJuIHJlcGxhY2VkSHJlZiA9PT0gY2g7XG4gIH1cblxuICBzdGF0aWMgZ2V0TGF5ZXIoY2ggPSAnLycpIHtcbiAgICByZXR1cm4gY2guc3BsaXQoJy8nKS5sZW5ndGggLSAxO1xuICB9XG5cbiAgc3RhdGljIGdldE1lZGlhU3JjKHRocmVhZCkge1xuICAgIHJldHVybiBBcHAuZ2V0TWVkaWFTcmModGhyZWFkLnByb3RvY29sLCB0aHJlYWQuY2gpO1xuICB9XG5cbiAgc3RhdGljIGdldE1lZGlhVGFnVHlwZSh0aHJlYWQpIHtcbiAgICBjb25zdCBzcmMgPSBUaHJlYWQuZ2V0TWVkaWFTcmModGhyZWFkKTtcbiAgICByZXR1cm4gQXBwLmdldE1lZGlhVHlwZShzcmMsIG51bGwpO1xuICB9XG5cbiAgc3RhdGljIGdldEZhdmljb25Gcm9tV2luZG93KHdpbmRvdykge1xuICAgIGlmICh3aW5kb3cgJiYgd2luZG93LmRvY3VtZW50KSB7XG4gICAgICBjb25zdCB1ID0gd2luZG93LmRvY3VtZW50LmV2YWx1YXRlKFxuICAgICAgICBcIi8vbGlua1tjb250YWlucyhAcmVsLCdpY29uJylvcihjb250YWlucyhAcmVsLCdJQ09OJykpXVsxXS9AaHJlZlwiLFxuICAgICAgICB3aW5kb3cuZG9jdW1lbnQsXG4gICAgICAgIG51bGwsXG4gICAgICAgIDIsXG4gICAgICAgIG51bGxcbiAgICAgICkuc3RyaW5nVmFsdWU7XG4gICAgICBjb25zdCBoID0gJ2h0dHA6Ly8nO1xuICAgICAgY29uc3QgaHMgPSAnaHR0cHM6Ly8nO1xuICAgICAgY29uc3QgbCA9IGxvY2F0aW9uLmhvc3Q7XG4gICAgICBpZiAodS5pbmRleE9mKGgpIHx8IHUuaW5kZXhPZihocykpIHtcbiAgICAgICAgY29uc3QgdXJsID0gaCArIGwgKyAodSB8fCAnL2Zhdmljb24uaWNvJyk7XG4gICAgICAgIGNvbnN0IHN0ckNudCA9IHVybC5zcGxpdCgnLy8nKS5sZW5ndGggLSAxO1xuICAgICAgICBpZiAoc3RyQ250ID09PSAxKSB7XG4gICAgICAgICAgcmV0dXJuIHVybDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHU7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RhdHVzKHRocmVhZCwgYXBwLCBpc0V4aXN0KTogVGhyZWFkU3RhdHVzVHlwZSB7XG4gICAgbGV0IHN0YXR1cyA9IHtcbiAgICAgIGRpc3BUeXBlOiAnJywgLy8gVElNRUxJTkUsIE1VTFRJLCBTSU5HTEUsIENISUxELCBMT0dTXG4gICAgICBpc0NyZWF0ZTogZmFsc2UsXG4gICAgICBpc1JlcXVpcmVVcHNlcnQ6IGZhbHNlLFxuICAgICAgaXNNdWx0aXN0cmVhbTogZmFsc2UsXG4gICAgICBpc01lZGlhQ2g6IGZhbHNlLFxuICAgICAgaXNUb2dnbGVNdWx0aXN0cmVhbTogZmFsc2UsXG4gICAgICBnZXRNb3JlOiBmYWxzZSxcbiAgICB9O1xuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyogdGhyZWFk44GM56m644GuU2NoZW1h44GL44Gp44GG44GLKERC44Gr44OH44O844K/44GM5a2Y5Zyo44GX44Gq44GEKSAgICAgICAgKi9cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAgIHN0YXR1cy5pc0NyZWF0ZSA9IFRocmVhZC5nZXRTdGF0dXNDcmVhdGUoaXNFeGlzdCk7XG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAvKiDmm7TmlrDjgYzlv4XopoHjgap0aHJlYWTjgYvjganjgYbjgYsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICBzdGF0dXMuaXNSZXF1aXJlVXBzZXJ0ID0gVGhyZWFkLmdldFN0YXR1c0lzUmVxdWlyZVVwc2VydCh0aHJlYWQsIHN0YXR1cy5pc0NyZWF0ZSk7XG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAvKiBNdWx0aXN0cmVhbeW9ouW8j+OBi+OBqeOBhuOBiyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgc3RhdHVzLmlzTXVsdGlzdHJlYW0gPSBUaHJlYWQuZ2V0U3RhdHVzSXNNdWx0aXN0cmVhbShhcHApO1xuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyogTXVsdGlzdHJlYW3jga7jg5zjgr/jg7PjgpLmirzjgZfjgZ/jgYsgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICBzdGF0dXMuaXNUb2dnbGVNdWx0aXN0cmVhbSA9IFRocmVhZC5nZXRTdGF0dXNJc1RvZ2dsZU11bHRpc3RyZWFtKGFwcCk7XG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAvKiB0aHJlYWTjgYznqbrjga5TY2hlbWHjgYvjganjgYbjgYsoRELjgavjg4fjg7zjgr/jgYzlrZjlnKjjgZfjgarjgYQpICAgICAgICAqL1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgc3RhdHVzLmlzTWVkaWFDaCA9IFRocmVhZC5nZXRTdGF0dXNJc01lZGlhQ2godGhyZWFkLmNoKTtcbiAgICByZXR1cm4gc3RhdHVzO1xuICB9XG5cbiAgc3RhdGljIGdldFN0YXR1c0NyZWF0ZShpc0V4aXN0KSB7XG4gICAgcmV0dXJuICFpc0V4aXN0O1xuICB9XG5cbiAgc3RhdGljIGdldFN0YXR1c0lzUmVxdWlyZVVwc2VydCh0aHJlYWQsIGlzQ3JlYXRlID0gZmFsc2UpIHtcbiAgICBpZiAoIWlzQ3JlYXRlKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHRocmVhZC51cGRhdGVUaW1lKSB7XG4gICAgICBjb25zdCB0aHJlYWRVcGRhdGVUaW1lID0gdGhyZWFkLnVwZGF0ZVRpbWUuZ2V0VGltZSA/IHRocmVhZC51cGRhdGVUaW1lLmdldFRpbWUoKSA6IHRocmVhZC51cGRhdGVUaW1lO1xuXG4gICAgICAvLyDnj77lnKjmmYLliLvjgpLlj5blvpdcbiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICBjb25zdCBub3dZZWFyID0gbm93LmdldEZ1bGxZZWFyKCk7XG4gICAgICBjb25zdCBub3dNb250aCA9IG5vdy5nZXRNb250aCgpO1xuICAgICAgY29uc3Qgbm93RGF5ID0gbm93LmdldERhdGUoKTtcbiAgICAgIGNvbnN0IG5vd0hvdXIgPSBub3cuZ2V0SG91cnMoKTtcbiAgICAgIGNvbnN0IG5vd01pbnV0ZXMgPSBub3cuZ2V0TWludXRlcygpO1xuICAgICAgY29uc3QgYWN0aXZlRGF0ZSA9IG5ldyBEYXRlKG5vd1llYXIsIG5vd01vbnRoLCBub3dEYXksIG5vd0hvdXIgLSBjb25mLmZpbmRPbmVUaHJlYWRBY3RpdmVIb3VyKTtcbiAgICAgIGNvbnN0IGFjdGl2ZVRpbWUgPSBhY3RpdmVEYXRlLmdldFRpbWUoKTtcblxuICAgICAgLy8g44K544Os44OD44OJ44Gu5pu05paw5pmC6ZaT44Go44CB54++5Zyo5pmC6ZaTIC0gbiDjgpLmr5TovIPjgZfjgabjgIHjgrnjg6zjg4Pjg4njga7mm7TmlrDmmYLplpPjgYzlj6TjgYvjgaPjgZ/jgol0cnVl44KS6L+U44GZXG4gICAgICByZXR1cm4gdGhyZWFkVXBkYXRlVGltZSA8IGFjdGl2ZVRpbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RhdHVzSXNNdWx0aXN0cmVhbShhcHApOiBib29sZWFuIHtcbiAgICBpZiAoYXBwID09PSB1bmRlZmluZWQgfHwgYXBwLmRpc3BUaHJlYWRUeXBlID09PSB1bmRlZmluZWQpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBhcHAuZGlzcFRocmVhZFR5cGUgPT09IEFwcC5kaXNwVGhyZWFkVHlwZU11bHRpICYmIGFwcC5tdWx0aXN0cmVhbTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTdGF0dXNJc01lZGlhQ2goY2gpIHtcbiAgICByZXR1cm4gQXBwLmdldElzTWVkaWFDaChjaCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RhdHVzSXNUb2dnbGVNdWx0aXN0cmVhbShhcHApOiBib29sZWFuIHtcbiAgICAvLyBUT0RPOiBKdWRnZSBmaXggYWN0aW9uZWQuXG4gICAgaWYgKGFwcCA9PT0gdW5kZWZpbmVkIHx8IGFwcC5hY3Rpb25lZCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIGFwcC5pc1RvZ2dsZU11bHRpc3RyZWFtO1xuICB9XG5cbiAgc3RhdGljIGdldENvbnRlbnRUeXBlRnJvbUZpbmRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgY29uc3QgZmluZFR5cGVIdG1sID0gVGhyZWFkLmZpbmRUeXBlc1tUaHJlYWQuZmluZFR5cGVIdG1sXTtcbiAgICBjb25zdCBmaW5kVHlwZU11c2ljID0gVGhyZWFkLmZpbmRUeXBlc1tUaHJlYWQuZmluZFR5cGVNdXNpY107XG4gICAgY29uc3QgZmluZFR5cGVWaWRlbyA9IFRocmVhZC5maW5kVHlwZXNbVGhyZWFkLmZpbmRUeXBlVmlkZW9dO1xuXG4gICAgbGV0IGZpbmRUeXBlOiB0eXBlb2YgVGhyZWFkLmZpbmRUeXBlSHRtbCB8IHR5cGVvZiBUaHJlYWQuZmluZFR5cGVNdXNpYyB8IHR5cGVvZiBUaHJlYWQuZmluZFR5cGVWaWRlbyB8IHR5cGVvZiBUaHJlYWQuZmluZFR5cGVPdGhlcjtcbiAgICBpZiAoY29udGVudFR5cGUgJiYgY29udGVudFR5cGUgIT09ICcnKSB7XG4gICAgICBsZXQgc3BsaXRlZENvbnRlbnRUeXBlID0gJyc7XG4gICAgICBpZiAoY29udGVudFR5cGUuaW5kZXhPZignOycpID4gMCkge1xuICAgICAgICBzcGxpdGVkQ29udGVudFR5cGUgPSBjb250ZW50VHlwZS5zcGxpdCgnOycpWzBdO1xuICAgICAgfVxuICAgICAgaWYgKGZpbmRUeXBlSHRtbC5pbmNsdWRlcyhjb250ZW50VHlwZSkgfHwgZmluZFR5cGVIdG1sLmluY2x1ZGVzKHNwbGl0ZWRDb250ZW50VHlwZSkpIHtcbiAgICAgICAgZmluZFR5cGUgPSBUaHJlYWQuZmluZFR5cGVIdG1sO1xuICAgICAgfVxuICAgICAgaWYgKGZpbmRUeXBlTXVzaWMuaW5jbHVkZXMoY29udGVudFR5cGUpIHx8IGZpbmRUeXBlTXVzaWMuaW5jbHVkZXMoc3BsaXRlZENvbnRlbnRUeXBlKSkge1xuICAgICAgICBmaW5kVHlwZSA9IFRocmVhZC5maW5kVHlwZU11c2ljO1xuICAgICAgfVxuICAgICAgaWYgKGZpbmRUeXBlVmlkZW8uaW5jbHVkZXMoY29udGVudFR5cGUpIHx8IGZpbmRUeXBlVmlkZW8uaW5jbHVkZXMoc3BsaXRlZENvbnRlbnRUeXBlKSkge1xuICAgICAgICBmaW5kVHlwZSA9IFRocmVhZC5maW5kVHlwZVZpZGVvO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmluZFR5cGU7XG4gIH1cblxuICBzdGF0aWMgZ2V0RmluZFR5cGVGcm9tU3JjKHNyYykge1xuICAgIGNvbnN0IHN0ciA9IEFwcC5nZXRNZWRpYVR5cGVGcm9tU3JjKHNyYyk7XG4gICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKTtcbiAgfVxufVxuIiwiaW1wb3J0IHByb2Nlc3MgZnJvbSAncHJvY2Vzcyc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCBkZWZpbmUgZnJvbSAnY29tbW9uL2RlZmluZSc7XG5cbmlmIChwcm9jZXNzLnRpdGxlID09PSAnYnJvd3NlcicpIHtcbiAgY29uc3QgeyBTVUJfRE9NQUlOUywgREVWRUxPUE1FTlQgfSA9IGRlZmluZTtcbiAgY29uc3QgeyBlbnYsIGRvbWFpbiB9ID0gY29uZjtcbiAgY29uZi5tZWRpYVNlY29uZEludGVydmFsID0gMjAwO1xuICBjb25mLnNjcmVlblNpemUgPSB7XG4gICAgc21hbGw6IDYwMCxcbiAgICBtaWRkbGU6IDk2MCxcbiAgfTtcbiAgY29uZi5kZWZhdWx0RmF2aWNvbiA9IGAvLyR7U1VCX0RPTUFJTlMuQVNTRVRTfS4ke2RvbWFpbn0vZmF2aWNvbi5pY29gO1xuICBjb25mLnBvcnRhbFBhdGggPSBlbnYgPT09IERFVkVMT1BNRU5UID8gYC8vJHtTVUJfRE9NQUlOUy5DTElFTlR9LiR7ZG9tYWlufS9gIDogYC8vJHtTVUJfRE9NQUlOUy5QT1JUQUx9LiR7ZG9tYWlufS9gO1xuICBjb25mLmNsaWVudFBhdGggPSBgLy8ke1NVQl9ET01BSU5TLkNMSUVOVH0uJHtkb21haW59L2A7XG4gIGNvbmYuYXNzZXRzUGF0aCA9IGAvLyR7U1VCX0RPTUFJTlMuQVNTRVRTfS4ke2RvbWFpbn0vYDtcbiAgY29uZi5zZXNzaW9uUGF0aCA9IGAvLyR7U1VCX0RPTUFJTlMuU0VTU0lPTn0uJHtkb21haW59L2A7XG4gIGNvbmYuY2FjaGVLZXkgPSB7IGluZGV4OiAndGFsa25JbmRleExpc3QnLCBzZXR0aW5nOiAndGFsa25TZXR0aW5nUGFyYW1zJyB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb25mO1xuIiwiaW1wb3J0IFNjaGVtYSBmcm9tICdjb21tb24vU2NoZW1hJztcblxuaW1wb3J0IEFwcCBmcm9tICdhcGkvc3RvcmUvQXBwJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY2xpZW50L2NvbmYnO1xuXG5leHBvcnQgdHlwZSBDbGlja2VkVHlwZSA9ICdDaCcgfCAnQmFja1RvUm9vdENoJyB8ICdUb01lZGlhJyB8ICdMaW5rcycgfCAnZmluZE1lZGlhQ2gnIHwgJyc7XG5cbmV4cG9ydCB0eXBlIEV4dGVuc2lvbk1vZGVUeXBlID1cbiAgfCB0eXBlb2YgVWkuZXh0ZW5zaW9uTW9kZU1vZGFsXG4gIHwgdHlwZW9mIFVpLmV4dGVuc2lvbk1vZGVCb3R0b21cbiAgfCB0eXBlb2YgVWkuZXh0ZW5zaW9uTW9kZU91dFdpbmRvd1xuICB8IHR5cGVvZiBVaS5leHRlbnNpb25Nb2RlTGl2ZU1lZGlhO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVaSBleHRlbmRzIFNjaGVtYSB7XG4gIHN0YXRpYyBnZXQgb3BlbkxvY2tNZW51TGFiZWxObygpIHtcbiAgICByZXR1cm4gJ05vJztcbiAgfVxuICBzdGF0aWMgZ2V0IG9wZW5Mb2NrTWVudUxhYmVsTGlrZSgpIHtcbiAgICByZXR1cm4gJ0xpa2UnO1xuICB9XG4gIHN0YXRpYyBnZXQgb3BlbkxvY2tNZW51TGFiZWxTaGFyZSgpIHtcbiAgICByZXR1cm4gJ1NoYXJlJztcbiAgfVxuICBzdGF0aWMgZ2V0IG9wZW5Mb2NrTWVudUxhYmVsQWJvdXQoKSB7XG4gICAgcmV0dXJuICdBYm91dCc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplU21hbGxMYWJlbCgpIHtcbiAgICByZXR1cm4gJ1NNQUxMJztcbiAgfVxuICBzdGF0aWMgZ2V0IHNjcmVlblNpemVNaWRkbGVMYWJlbCgpIHtcbiAgICByZXR1cm4gJ01JRERMRSc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplTGFyZ2VMYWJlbCgpIHtcbiAgICByZXR1cm4gJ0xBUkdFJztcbiAgfVxuICBzdGF0aWMgZ2V0IHNjcmVlblNpemVJbmRleExhYmVsKCkge1xuICAgIHJldHVybiAnTUVOVSc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplVGhyZWFkTGFiZWwoKSB7XG4gICAgcmV0dXJuICdUSFJFQUQnO1xuICB9XG4gIHN0YXRpYyBnZXQgc2NyZWVuU2l6ZURldGFpbExhYmVsKCkge1xuICAgIHJldHVybiAnREVUQUlMJztcbiAgfVxuICBzdGF0aWMgZ2V0IHNjcmVlblNpemVTbWFsbFdpZHRoUHgoKSB7XG4gICAgcmV0dXJuIGNvbmYuc2NyZWVuU2l6ZS5zbWFsbDtcbiAgfVxuICBzdGF0aWMgZ2V0IHNjcmVlblNpemVNaWRkbGVXaWR0aFB4KCkge1xuICAgIHJldHVybiBjb25mLnNjcmVlblNpemUubWlkZGxlO1xuICB9XG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTW9kZU1vZGFsKCkge1xuICAgIHJldHVybiAnTW9kYWwnO1xuICB9XG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTW9kZUJvdHRvbSgpIHtcbiAgICByZXR1cm4gJ0JvdHRvbSc7XG4gIH1cbiAgc3RhdGljIGdldCBleHRlbnNpb25Nb2RlRW1iZWQoKSB7XG4gICAgcmV0dXJuICdFbWJlZCc7XG4gIH1cbiAgc3RhdGljIGdldCBleHRlbnNpb25Nb2RlTGl2ZU1lZGlhKCkge1xuICAgIHJldHVybiAnTGl2ZU1lZGlhJztcbiAgfVxuICBzdGF0aWMgZ2V0IGV4dGVuc2lvbk1vZGVPdXRXaW5kb3coKSB7XG4gICAgcmV0dXJuICdPdXRXaW5kb3cnO1xuICB9XG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTW9kZU5vbmUoKSB7XG4gICAgcmV0dXJuICdOb25lJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lbnVDb21wb25lbnRVc2Vyc0xhYmVsKCkge1xuICAgIHJldHVybiAnVXNlcnMnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVudUNvbXBvbmVudFJhbmtMYWJlbCgpIHtcbiAgICByZXR1cm4gJ1JhbmsnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVudUNvbXBvbmVudExvZ3NMYWJlbCgpIHtcbiAgICByZXR1cm4gJ0xvZ3MnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVudUNvbXBvbmVudFNldHRpbmdMYWJlbCgpIHtcbiAgICByZXR1cm4gJ1NldHRpbmcnO1xuICB9XG4gIHN0YXRpYyBnZXREZWZhdWx0TWVudUNvbXBvbmVudCgpIHtcbiAgICByZXR1cm4gVWkubWVudUNvbXBvbmVudFJhbmtMYWJlbDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRXaWR0aChwYXJhbXMpIHtcbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5leHRlbnNpb25XaWR0aCA+IDApIHtcbiAgICAgIHJldHVybiBwYXJhbXMuZXh0ZW5zaW9uV2lkdGg7XG4gICAgfVxuICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLndpZHRoID4gMCkge1xuICAgICAgcmV0dXJuIHBhcmFtcy53aWR0aDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmIHdpbmRvdy5pbm5lcldpZHRoKSB7XG4gICAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGg7XG4gICAgfVxuICAgIGlmIChwYXJhbXMud2lkdGgpIHtcbiAgICAgIGlmICh0eXBlb2YgcGFyYW1zLndpZHRoID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAocGFyYW1zLndpZHRoLmluZGV4T2YoJ3B4JykgPj0gMCkge1xuICAgICAgICAgIHJldHVybiBOdW1iZXIocGFyYW1zLndpZHRoLnJlcGxhY2UoJ3B4JywgJycpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHBhcmFtcy53aWR0aDtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBzdGF0aWMgZ2V0SGVpZ2h0KHBhcmFtczogYW55ID0ge30pIHtcbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5leHRlbnNpb25IZWlndCA+IDApIHtcbiAgICAgIHJldHVybiBwYXJhbXMuZXh0ZW5zaW9uSGVpZ3Q7XG4gICAgfVxuICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLmhlaWdodCA+IDApIHtcbiAgICAgIHJldHVybiBwYXJhbXMuaGVpZ2h0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcgJiYgd2luZG93LmlubmVySGVpZ2h0KSB7XG4gICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTY3JlZW5TaXplKHdpZHRoUHg6IGFueSA9IDApIHtcbiAgICBpZiAoIXdpZHRoUHgpIHtcbiAgICAgIGlmICgod2luZG93ICYmIHdpbmRvdy5pbm5lcldpZHRoID09PSAwKSB8fCB3aW5kb3cuaW5uZXJIZWlnaHQgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKHdpbmRvdyAmJiB3aW5kb3cuaW5uZXJXaWR0aCA+IDApIHtcbiAgICAgICAgd2lkdGhQeCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygd2lkdGhQeCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHdpZHRoUHggPSB3aWR0aFB4LnJlcGxhY2UoJ3B4JywgJycpO1xuICAgIH1cblxuICAgIGlmIChVaS5zY3JlZW5TaXplU21hbGxXaWR0aFB4ID49IHdpZHRoUHgpIHtcbiAgICAgIHJldHVybiBVaS5zY3JlZW5TaXplU21hbGxMYWJlbDtcbiAgICB9XG5cbiAgICBpZiAoVWkuc2NyZWVuU2l6ZVNtYWxsV2lkdGhQeCA8PSB3aWR0aFB4ICYmIFVpLnNjcmVlblNpemVNaWRkbGVXaWR0aFB4ID49IHdpZHRoUHgpIHtcbiAgICAgIHJldHVybiBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw7XG4gICAgfVxuICAgIHJldHVybiBVaS5zY3JlZW5TaXplTGFyZ2VMYWJlbDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRJc09wZW5NZW51KHVpKSB7XG4gICAgc3dpdGNoICh1aS5zY3JlZW5TaXplKSB7XG4gICAgICBjYXNlIFVpLnNjcmVlblNpemVTbWFsbExhYmVsOlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICBjYXNlIFVpLnNjcmVlblNpemVNaWRkbGVMYWJlbDpcbiAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZUxhcmdlTGFiZWw6XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRJc09wZW5Cb2FyZCh1aSkge1xuICAgIHN3aXRjaCAodWkuc2NyZWVuU2l6ZSkge1xuICAgICAgY2FzZSBVaS5zY3JlZW5TaXplU21hbGxMYWJlbDpcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw6XG4gICAgICBjYXNlIFVpLnNjcmVlblNpemVMYXJnZUxhYmVsOlxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0SXNPcGVuUG9zdHModWk6IGFueSwgY2FsbGVkOiBzdHJpbmcgPSAnJykge1xuICAgIGxldCB7IGV4dGVuc2lvbk1vZGUsIGhlaWdodCwgZXh0ZW5zaW9uSGVpZ2h0LCBleHRlbnNpb25DbG9zZUhlaWdodCB9ID0gdWk7XG4gICAgY29uc3QgbG9nID0gZmFsc2U7XG4gICAgY29uc3QgYWwgPSBmYWxzZTtcbiAgICBpZiAoZXh0ZW5zaW9uTW9kZSA9PT0gVWkuZXh0ZW5zaW9uTW9kZUJvdHRvbSB8fCBleHRlbnNpb25Nb2RlID09PSBVaS5leHRlbnNpb25Nb2RlTW9kYWwpIHtcbiAgICAgIGlmICh0eXBlb2YgaGVpZ2h0ICE9PSAnbnVtYmVyJykgaGVpZ2h0ID0gTnVtYmVyKGhlaWdodCk7XG4gICAgICBpZiAodHlwZW9mIGV4dGVuc2lvbkhlaWdodCAhPT0gJ251bWJlcicpIGV4dGVuc2lvbkhlaWdodCA9IE51bWJlcihleHRlbnNpb25IZWlnaHQpO1xuXG4gICAgICBpZiAoaGVpZ2h0ID09PSAwKSB7XG4gICAgICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKCdAZ2V0SXNPcGVuUG9zdHMgQSAnICsgJyAnICsgZXh0ZW5zaW9uSGVpZ2h0ICsgJyAnICsgaGVpZ2h0KTtcbiAgICAgICAgaWYgKGFsKSBhbGVydCgnQGdldElzT3BlblBvc3RzIEEgJyArICcgJyArIGV4dGVuc2lvbkhlaWdodCArICcgJyArIGhlaWdodCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gTUVNTzog44K544Oe44Ob44Gn5YWl5Yqb44Oi44O844OJ44Gr44Gq44Gj44Gf5pmC44GraGVpZ2h044GMZXh0ZW5zaW9uSGVpZ2h044KS5LiK5Zue44KL5pmC44GM44GC44KL44Gf44KBXG4gICAgICBpZiAoZXh0ZW5zaW9uSGVpZ2h0IDw9IGhlaWdodCkge1xuICAgICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnQGdldElzT3BlblBvc3RzIEMgJyArICcgJyArIGV4dGVuc2lvbkhlaWdodCArICcgJyArIGhlaWdodCk7XG4gICAgICAgIGlmIChhbCkgYWxlcnQoJ0BnZXRJc09wZW5Qb3N0cyBDICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0BnZXRJc09wZW5Qb3N0cyBEICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgaWYgKGFsKSBhbGVydCgnQGdldElzT3BlblBvc3RzIEQgJyArICcgJyArIGV4dGVuc2lvbkhlaWdodCArICcgJyArIGhlaWdodCk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKCdAZ2V0SXNPcGVuUG9zdHMgRSAnICsgJyAnICsgZXh0ZW5zaW9uSGVpZ2h0ICsgJyAnICsgaGVpZ2h0KTtcbiAgICAgIGlmIChhbCkgYWxlcnQoJ0BnZXRJc09wZW5Qb3N0cyBFICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldFVpVXBkYXRlZE9wZW5GbGdzKHsgYXBwLCB1aSB9LCBjYWxsID0gJycpIHtcbiAgICBzd2l0Y2ggKGNhbGwpIHtcbiAgICAgIGNhc2UgJ3RvZ2dsZU1haW4nOlxuICAgICAgY2FzZSAnaGVhZGVyRGV0YWlsSWNvbic6XG4gICAgICAgIHN3aXRjaCAodWkuc2NyZWVuU2l6ZSkge1xuICAgICAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZVNtYWxsTGFiZWw6XG4gICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSAhdWkuaXNPcGVuRGV0YWlsO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw6XG4gICAgICAgICAgICBpZiAodWkuaXNPcGVuRGV0YWlsKSB7XG4gICAgICAgICAgICAgIGlmIChhcHAuZGV0YWlsQ2ggPT09IGFwcC5yb290Q2gpIHtcbiAgICAgICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB1aS5pc09wZW5NZW51ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB1aS5pc09wZW5NZW51ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gZmFsc2U7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHVpLmlzT3Blbk1lbnUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaGVhZGVyTWVudUljb24nOlxuICAgICAgICBzd2l0Y2ggKHVpLnNjcmVlblNpemUpIHtcbiAgICAgICAgICBjYXNlIFVpLnNjcmVlblNpemVNaWRkbGVMYWJlbDpcbiAgICAgICAgICAgIGlmICh1aS5pc09wZW5EZXRhaWwpIHtcbiAgICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IHRydWU7XG4gICAgICAgICAgICAgIHVpLmlzT3BlbkRldGFpbCA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IHRydWU7XG4gICAgICAgICAgICAgIHVpLmlzT3BlbkRldGFpbCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjaGFuZ2VUaHJlYWREZXRhaWwnOlxuICAgICAgY2FzZSAncG9zdCc6XG4gICAgICAgIHN3aXRjaCAodWkuc2NyZWVuU2l6ZSkge1xuICAgICAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZVNtYWxsTGFiZWw6XG4gICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSAhdWkuaXNPcGVuRGV0YWlsO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw6XG4gICAgICAgICAgICB1aS5pc09wZW5NZW51ID0gZmFsc2U7XG4gICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSB0cnVlO1xuICAgICAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZUxhcmdlTGFiZWw6XG4gICAgICAgICAgICB1aS5pc09wZW5NZW51ID0gdHJ1ZTtcbiAgICAgICAgICAgIHVpLmlzT3BlbkRldGFpbCA9IHRydWU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIHVpO1xuICB9XG5cbiAgc3RhdGljIGlzQWN0aXZlTXVsdGlzdHJlYW0oeyBhcHAsIHVpIH0sIGNhbGxlZCA9ICcnKSB7XG4gICAgcmV0dXJuIHVpLm1lbnVDb21wb25lbnQgPT09IFVpLm1lbnVDb21wb25lbnRSYW5rTGFiZWwgJiYgYXBwLmRpc3BUaHJlYWRUeXBlID09PSBBcHAuZGlzcFRocmVhZFR5cGVNdWx0aTtcbiAgfVxuXG4gIC8vIOWfuuacrOihqOekuumWoumAo1xuICBpRnJhbWVJZDogc3RyaW5nO1xuICB3aWR0aDogc3RyaW5nIHwgbnVtYmVyO1xuICBoZWlnaHQ6IHN0cmluZyB8IG51bWJlcjtcbiAgcG9zdHNIZWlnaHQ6IHN0cmluZyB8IG51bWJlcjtcbiAgc2NyZWVuU2l6ZTogJ0xBUkdFJyB8ICdNSURETEUnIHwgJ1NNQUxMJyB8IHVuZGVmaW5lZDtcblxuICAvLyBpZnJhbWXjga7mi6HlvLXmqZ/og73ooajnpLrjga7loLTlkIhcbiAgZXh0ZW5zaW9uTW9kZTogJ01vZGFsJyB8ICdCb3R0b20nIHwgJ0VtYmVkJyB8ICdOb25lJztcbiAgZXh0ZW5zaW9uV2lkdGg6IHN0cmluZyB8IG51bWJlcjtcbiAgZXh0ZW5zaW9uSGVpZ2h0OiBzdHJpbmcgfCBudW1iZXI7XG5cbiAgaXNPcGVuUG9zdHM6IGJvb2xlYW47XG4gIGlzT3BlblNldHRpbmc6IGJvb2xlYW47XG4gIGlzT3Blbk1lbnU6IGJvb2xlYW47XG4gIGlzT3BlbkRldGFpbDogYm9vbGVhbjtcbiAgaXNPcGVuTmV3UG9zdDogYm9vbGVhbjtcbiAgaXNPcGVuTm90aWY6IGJvb2xlYW47XG4gIGlzT3BlblBvc3RzU3VwcG9ydGVyOiBib29sZWFuO1xuICBpc09wZW5Cb2FyZDogYm9vbGVhbjtcbiAgaXNPcGVuU2V0Q2hNb2RhbDogYm9vbGVhbjtcbiAgaXNCdWJibGVQb3N0OiBib29sZWFuO1xuICBpc0Rpc3BQb3N0czogYm9vbGVhbjtcbiAgaXNPcGVuTGlua3M6IGJvb2xlYW47XG4gIGlzVHJhbnNpdGlvbjogYm9vbGVhbjtcblxuICAvLyDjgq/jg6rjg4Pjgq/mg4XloLFcbiAgY2xpY2tlZDogQ2xpY2tlZFR5cGU7XG5cbiAgLy8gZGV0YWls5oOF5aCxXG4gIGRldGFpbENoOiBzdHJpbmc7XG5cbiAgLy8gSW5kZXjmg4XloLFcbiAgbWVudUNvbXBvbmVudDogJ1VzZXJzJyB8ICdJbmRleCcgfCAnTG9ncycgfCAnU2V0dGluZyc7XG5cbiAgLy8g5ZCE44OR44O844OE44Gu54q25oWLKOaWh+Wtl+WIl+WItuW+oSlcbiAgdGhyZWFkU2Nyb2xsWTogc3RyaW5nIHwgbnVtYmVyO1xuICBvcGVuSW5uZXJOb3RpZjogYm9vbGVhbjtcbiAgb3BlbkxvY2tNZW51OiAnQWJvdW50JyB8ICdMaWtlJyB8ICdTaGFyZScgfCAnTm8nO1xuICBpbnB1dFBvc3Q6IHN0cmluZztcbiAgaW5wdXRTdGFtcElkOiBzdHJpbmcgfCBudW1iZXI7XG4gIGlucHV0Q3VycmVudFRpbWU6IG51bWJlcjtcbiAgaW5wdXRTZWFyY2g6IHN0cmluZztcblxuICBpc0xvYWRpbmc6IGJvb2xlYW47XG5cbiAgLy8gaWZyYW1l55u05o6l5Z+L44KB6L6844G/XG4gIGluY2x1ZGVJZnJhbWVUYWc6IGJvb2xlYW47XG4gIGNvbnN0cnVjdG9yKHBhcmFtczogYW55ID0ge30pIHtcbiAgICBzdXBlcigpO1xuICAgIGNvbnN0IGlGcmFtZUlkID0gcGFyYW1zLmlGcmFtZUlkID8gcGFyYW1zLmlGcmFtZUlkIDogJyc7XG4gICAgY29uc3Qgd2lkdGggPSBVaS5nZXRXaWR0aChwYXJhbXMpO1xuICAgIGNvbnN0IGhlaWdodCA9IFVpLmdldEhlaWdodChwYXJhbXMpO1xuICAgIGNvbnN0IHBvc3RzSGVpZ2h0ID0gcGFyYW1zLnBvc3RzSGVpZ2h0ID8gcGFyYW1zLnBvc3RzSGVpZ2h0IDogMDtcbiAgICBjb25zdCBzY3JlZW5TaXplID0gVWkuZ2V0U2NyZWVuU2l6ZSh3aWR0aCk7XG4gICAgY29uc3QgZXh0ZW5zaW9uTW9kZSA9IHBhcmFtcy5leHRlbnNpb25Nb2RlID8gcGFyYW1zLmV4dGVuc2lvbk1vZGUgOiBVaS5leHRlbnNpb25Nb2RlTm9uZTtcbiAgICBjb25zdCBleHRlbnNpb25XaWR0aCA9IHBhcmFtcy5leHRlbnNpb25XaWR0aCA/IHBhcmFtcy5leHRlbnNpb25XaWR0aCA6ICcwJSc7XG4gICAgY29uc3QgZXh0ZW5zaW9uSGVpZ2h0ID0gcGFyYW1zLmV4dGVuc2lvbkhlaWdodCA/IHBhcmFtcy5leHRlbnNpb25IZWlnaHQgOiAwO1xuXG4gICAgLy8g5ZCE44OR44O844OE44Gu54q25oWLKOODleODqeOCsOWItuW+oSlcbiAgICBjb25zdCB0aHJlYWRTY3JvbGxZID0gcGFyYW1zICYmIHBhcmFtcy50aHJlYWRTY3JvbGxZID8gcGFyYW1zLnRocmVhZFNjcm9sbFkgOiAwO1xuICAgIGNvbnN0IGlzT3BlblBvc3RzID0gVWkuZ2V0SXNPcGVuUG9zdHMoe1xuICAgICAgaGVpZ2h0LFxuICAgICAgZXh0ZW5zaW9uTW9kZSxcbiAgICAgIGV4dGVuc2lvbkhlaWdodCxcbiAgICB9KTtcbiAgICBjb25zdCBpc09wZW5TZXR0aW5nID0gcGFyYW1zLmlzT3BlblNldHRpbmcgPyBwYXJhbXMuaXNPcGVuU2V0dGluZyA6IGZhbHNlO1xuICAgIGNvbnN0IGlzT3Blbk1lbnUgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzT3Blbk1lbnUpID8gcGFyYW1zLmlzT3Blbk1lbnUgOiBVaS5nZXRJc09wZW5NZW51KHsgc2NyZWVuU2l6ZSB9KTtcbiAgICBjb25zdCBpc09wZW5EZXRhaWwgPSBzY3JlZW5TaXplID09PSBVaS5zY3JlZW5TaXplRGV0YWlsTGFiZWwgPyB0cnVlIDogU2NoZW1hLmlzU2V0KHBhcmFtcy5pc09wZW5EZXRhaWwpID8gcGFyYW1zLmlzT3BlbkRldGFpbCA6IGZhbHNlO1xuICAgIGNvbnN0IGlzT3Blbk5ld1Bvc3QgPSBwYXJhbXMuaXNPcGVuTmV3UG9zdCA/IHBhcmFtcy5pc09wZW5OZXdQb3N0IDogZmFsc2U7XG4gICAgY29uc3QgaXNPcGVuTm90aWYgPSBwYXJhbXMuaXNPcGVuTm90aWYgPyBwYXJhbXMuaXNPcGVuTm90aWYgOiBmYWxzZTtcbiAgICBjb25zdCBpc09wZW5Qb3N0c1N1cHBvcnRlciA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNPcGVuUG9zdHNTdXBwb3J0ZXIpID8gcGFyYW1zLmlzT3BlblBvc3RzU3VwcG9ydGVyIDogZmFsc2U7XG4gICAgY29uc3QgaXNPcGVuQm9hcmQgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzT3BlbkJvYXJkKSA/IHBhcmFtcy5pc09wZW5Cb2FyZCA6IFVpLmdldElzT3BlbkJvYXJkKHsgc2NyZWVuU2l6ZSB9KTtcbiAgICBjb25zdCBpc09wZW5TZXRDaE1vZGFsID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc09wZW5TZXRDaE1vZGFsKSA/IHBhcmFtcy5pc09wZW5TZXRDaE1vZGFsIDogZmFsc2U7XG4gICAgY29uc3QgaXNCdWJibGVQb3N0ID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc0J1YmJsZVBvc3QpID8gcGFyYW1zLmlzQnViYmxlUG9zdCA6IHRydWU7XG4gICAgY29uc3QgaXNEaXNwUG9zdHMgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzRGlzcFBvc3RzKSA/IHBhcmFtcy5pc0Rpc3BQb3N0cyA6IGZhbHNlO1xuICAgIGNvbnN0IGlzT3BlbkxpbmtzID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc09wZW5MaW5rcykgPyBwYXJhbXMuaXNPcGVuTGlua3MgOiBmYWxzZTtcbiAgICBjb25zdCBpc1RyYW5zaXRpb24gPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzVHJhbnNpdGlvbikgPyBwYXJhbXMuaXNUcmFuc2l0aW9uIDogdHJ1ZTtcbiAgICBjb25zdCBtZW51Q29tcG9uZW50ID0gcGFyYW1zLm1lbnVDb21wb25lbnQgPyBwYXJhbXMubWVudUNvbXBvbmVudCA6IFVpLmdldERlZmF1bHRNZW51Q29tcG9uZW50KCk7XG4gICAgY29uc3Qgb3BlbkxvY2tNZW51ID0gcGFyYW1zLm9wZW5Mb2NrTWVudSA/IHBhcmFtcy5vcGVuTG9ja01lbnUgOiBVaS5vcGVuTG9ja01lbnVMYWJlbE5vO1xuICAgIGNvbnN0IG9wZW5Jbm5lck5vdGlmID0gcGFyYW1zLm9wZW5Jbm5lck5vdGlmID8gcGFyYW1zLm9wZW5Jbm5lck5vdGlmIDogJyc7XG5cbiAgICAvLyDjgq/jg6rjg4Pjgq/mg4XloLFcbiAgICBjb25zdCBjbGlja2VkID0gcGFyYW1zLmNsaWNrZWQgPyBwYXJhbXMuY2xpY2tlZCA6ICcnO1xuXG4gICAgLy8gZGV0YWls5oOF5aCxXG4gICAgY29uc3QgZGV0YWlsQ2ggPSBwYXJhbXMuZGV0YWlsQ2ggPyBwYXJhbXMuZGV0YWlsQ2ggOiAnLyc7XG5cbiAgICAvLyDlhaXlipvnirbmhYtcbiAgICBjb25zdCBpbnB1dFBvc3QgPSBwYXJhbXMuaW5wdXRQb3N0ID8gcGFyYW1zLmlucHV0UG9zdCA6ICcnO1xuICAgIGNvbnN0IGlucHV0U3RhbXBJZCA9IHBhcmFtcy5pbnB1dFN0YW1wSWQgPyBwYXJhbXMuaW5wdXRTdGFtcElkIDogZmFsc2U7XG4gICAgY29uc3QgaW5wdXRDdXJyZW50VGltZSA9IHBhcmFtcy5pbnB1dEN1cnJlbnRUaW1lID8gcGFyYW1zLmlucHV0Q3VycmVudFRpbWUgOiAwLjA7XG4gICAgY29uc3QgaW5wdXRTZWFyY2ggPSBwYXJhbXMuaW5wdXRTZWFyY2ggPyBwYXJhbXMuaW5wdXRTZWFyY2ggOiAnJztcbiAgICBjb25zdCBpc0xvYWRpbmcgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzTG9hZGluZykgPyBwYXJhbXMuaXNMb2FkaW5nIDogdHJ1ZTtcbiAgICByZXR1cm4gdGhpcy5jcmVhdGUoe1xuICAgICAgaUZyYW1lSWQsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIHBvc3RzSGVpZ2h0LFxuICAgICAgc2NyZWVuU2l6ZSxcbiAgICAgIGV4dGVuc2lvbk1vZGUsXG4gICAgICBleHRlbnNpb25XaWR0aCxcbiAgICAgIGV4dGVuc2lvbkhlaWdodCxcbiAgICAgIHRocmVhZFNjcm9sbFksXG4gICAgICBpc09wZW5Qb3N0cyxcbiAgICAgIGlzT3BlblNldHRpbmcsXG4gICAgICBpc09wZW5NZW51LFxuICAgICAgaXNPcGVuRGV0YWlsLFxuICAgICAgaXNPcGVuTmV3UG9zdCxcbiAgICAgIGlzT3Blbk5vdGlmLFxuICAgICAgaXNPcGVuUG9zdHNTdXBwb3J0ZXIsXG4gICAgICBpc09wZW5Cb2FyZCxcbiAgICAgIGlzT3BlblNldENoTW9kYWwsXG4gICAgICBpc0J1YmJsZVBvc3QsXG4gICAgICBpc0Rpc3BQb3N0cyxcbiAgICAgIGlzT3BlbkxpbmtzLFxuICAgICAgaXNUcmFuc2l0aW9uLFxuICAgICAgbWVudUNvbXBvbmVudCxcbiAgICAgIG9wZW5Mb2NrTWVudSxcbiAgICAgIG9wZW5Jbm5lck5vdGlmLFxuICAgICAgY2xpY2tlZCxcbiAgICAgIGRldGFpbENoLFxuICAgICAgaW5wdXRQb3N0LFxuICAgICAgaW5wdXRTdGFtcElkLFxuICAgICAgaW5wdXRDdXJyZW50VGltZSxcbiAgICAgIGlucHV0U2VhcmNoLFxuICAgICAgaXNMb2FkaW5nLFxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgcHJvY2VzcyBmcm9tICdwcm9jZXNzJztcblxuaW1wb3J0IG1lZGlhVHlwZXMgZnJvbSAnY29tbW9uL21lZGlhVHlwZXMnO1xuXG5jb25zdCBkZXZlbG9wbWVudCA9ICdkZXZlbG9wbWVudCc7XG5jb25zdCBwcm9kdWN0aW9uID0gJ3Byb2R1Y3Rpb24nO1xuY29uc3QgZW52ID0gcHJvY2Vzcy5lbnZbJ0VOVklST01FTlQnXTtcbmV4cG9ydCBjb25zdCBsb2NhbGhvc3QgPSAnbG9jYWxob3N0JztcbmV4cG9ydCBjb25zdCBwcm9kdWN0aG9zdCA9ICd0YWxrbi5pbyc7XG5leHBvcnQgY29uc3QgdGFsa25MaXZlTWVkaWFIb3N0ID0gZW52ID09PSBkZXZlbG9wbWVudCA/IGxvY2FsaG9zdCA6IHByb2R1Y3Rob3N0O1xuXG4vLyB0YWxrbiBsaXZlIG1lZGlhIGNhdGVnb3JpZXMuXG5leHBvcnQgY29uc3QgTWVkaWFUeXBlQ2F0ZWdvcnlCYXNlID0gJ0Jhc2UgTWVkaWEnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZUNhdGVnb3J5UmFua2luZyA9ICdSYW5rIE1lZGlhJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVDYXRlZ29yeUJ1enpDeWNsZSA9ICdCdXp6IE1lZGlhJztcblxuLy8gZGVmYXVsdCBtZWRpYSB0eXBlIGNhdGVnb3J5LlxuZXhwb3J0IGNvbnN0IGRlZmF1bHRNZWRpYVR5cGVDYXRlZ29yeTogTWVkaWFDYXRlZ29yeVR5cGUgPSBNZWRpYVR5cGVDYXRlZ29yeUJ1enpDeWNsZTtcblxuLy8gdGFsa24gbGl2ZSBtZWRpYSAoc3ViZG9tYWluKS5cbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVBcnRpc3RzID0gJ2FydGlzdHMnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZUNvbnRlbnRzID0gJ2NvbnRlbnRzJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVNdXNpYyA9ICdtdXNpYyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlTW92aWVzID0gJ21vdmllcyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlQXBwcyA9ICdhcHBzJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVCb29rcyA9ICdib29rcyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlTmV3cyA9ICduZXdzJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVHaXJsc05ld3MgPSAnZ2lybHMtbmV3cyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlVHJlbmRXb3JkID0gJ3RyZW5kLXdvcmQnO1xuXG5leHBvcnQgdHlwZSBNZWRpYUNhdGVnb3J5VHlwZSA9IHR5cGVvZiBNZWRpYVR5cGVDYXRlZ29yeUJhc2UgfCB0eXBlb2YgTWVkaWFUeXBlQ2F0ZWdvcnlSYW5raW5nIHwgdHlwZW9mIE1lZGlhVHlwZUNhdGVnb3J5QnV6ekN5Y2xlO1xuXG5leHBvcnQgdHlwZSBNZWRpYUNhdGVnb3J5QmFzZUJlbG9uZyA9IHR5cGVvZiBNZWRpYVR5cGVBcnRpc3RzIHwgdHlwZW9mIE1lZGlhVHlwZUNvbnRlbnRzO1xuXG5leHBvcnQgdHlwZSBNZWRpYUNhdGVnb3J5UmFua2luZ0JlbG9uZyA9IHR5cGVvZiBNZWRpYVR5cGVNdXNpYyB8IHR5cGVvZiBNZWRpYVR5cGVNb3ZpZXMgfCB0eXBlb2YgTWVkaWFUeXBlQXBwcyB8IHR5cGVvZiBNZWRpYVR5cGVCb29rcztcblxuZXhwb3J0IHR5cGUgTWVkaWFDYXRlZ29yeUJ1enpDeWNsZUJlbG9uZyA9IHR5cGVvZiBNZWRpYVR5cGVOZXdzIHwgdHlwZW9mIE1lZGlhVHlwZUdpcmxzTmV3cyB8IHR5cGVvZiBNZWRpYVR5cGVUcmVuZFdvcmQ7XG5cbmV4cG9ydCBjb25zdCBOZXR3b3JrQ2F0ZWdvcnlMaXN0QmFzZUJlbG9uZ1R5cGU6IE1lZGlhQ2F0ZWdvcnlCYXNlQmVsb25nW10gPSBbTWVkaWFUeXBlQXJ0aXN0cywgTWVkaWFUeXBlQ29udGVudHNdO1xuZXhwb3J0IGNvbnN0IE5ldHdvcmtDYXRlZ29yeUxpc3RSYW5raW5nQmVsb25nVHlwZTogTWVkaWFDYXRlZ29yeVJhbmtpbmdCZWxvbmdbXSA9IFtcbiAgTWVkaWFUeXBlTXVzaWMsXG4gIE1lZGlhVHlwZU1vdmllcyxcbiAgTWVkaWFUeXBlQXBwcyxcbiAgTWVkaWFUeXBlQm9va3MsXG5dO1xuZXhwb3J0IGNvbnN0IE5ldHdvcmtDYXRlZ29yeUxpc3RCdXp6Q3ljbGVCZWxvbmdUeXBlOiBNZWRpYUNhdGVnb3J5QnV6ekN5Y2xlQmVsb25nW10gPSBbXG4gIE1lZGlhVHlwZU5ld3MsXG4gIE1lZGlhVHlwZUdpcmxzTmV3cyxcbiAgTWVkaWFUeXBlVHJlbmRXb3JkLFxuXTtcblxuZXhwb3J0IHR5cGUgTmV0d29ya0NhdGVvZ3J5TGlzdEJlbG9uZ1R5cGUgPSBNZWRpYUNhdGVnb3J5QmFzZUJlbG9uZ1tdIHwgTWVkaWFDYXRlZ29yeVJhbmtpbmdCZWxvbmdbXSB8IE1lZGlhQ2F0ZWdvcnlCdXp6Q3ljbGVCZWxvbmdbXTtcblxudHlwZSBOZXR3b3JrQ2F0ZWdvcnlMaXN0VHlwZSA9IFJlY29yZDxNZWRpYUNhdGVnb3J5VHlwZSwgTmV0d29ya0NhdGVvZ3J5TGlzdEJlbG9uZ1R5cGU+O1xuXG5leHBvcnQgY29uc3QgTmV0d29ya0NhdGVnb3J5TGlzdDogTmV0d29ya0NhdGVnb3J5TGlzdFR5cGUgPSB7XG4gIFtNZWRpYVR5cGVDYXRlZ29yeUJhc2VdOiBOZXR3b3JrQ2F0ZWdvcnlMaXN0QmFzZUJlbG9uZ1R5cGUsXG4gIFtNZWRpYVR5cGVDYXRlZ29yeVJhbmtpbmddOiBOZXR3b3JrQ2F0ZWdvcnlMaXN0UmFua2luZ0JlbG9uZ1R5cGUsXG4gIFtNZWRpYVR5cGVDYXRlZ29yeUJ1enpDeWNsZV06IE5ldHdvcmtDYXRlZ29yeUxpc3RCdXp6Q3ljbGVCZWxvbmdUeXBlLFxufTtcblxuZXhwb3J0IHR5cGUgTWVkaWFUeXBlU3ViZG9tYWlucyA9XG4gIHwgdHlwZW9mIE1lZGlhVHlwZUFydGlzdHNcbiAgfCB0eXBlb2YgTWVkaWFUeXBlQ29udGVudHNcbiAgfCB0eXBlb2YgTWVkaWFUeXBlTXVzaWNcbiAgfCB0eXBlb2YgTWVkaWFUeXBlTW92aWVzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZUFwcHNcbiAgfCB0eXBlb2YgTWVkaWFUeXBlQm9va3NcbiAgfCB0eXBlb2YgTWVkaWFUeXBlTmV3c1xuICB8IHR5cGVvZiBNZWRpYVR5cGVHaXJsc05ld3NcbiAgfCB0eXBlb2YgTWVkaWFUeXBlVHJlbmRXb3JkO1xuXG4vLyBkZWZhdWx0IG1lZGlhIHR5cGUuXG5leHBvcnQgY29uc3QgZGVmYXVsdE1lZGlhVHlwZTogTWVkaWFUeXBlU3ViZG9tYWlucyA9IE1lZGlhVHlwZU5ld3M7XG5cbmV4cG9ydCB0eXBlIE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46IE1lZGlhVHlwZVN1YmRvbWFpbnM7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIG1ldGhvZDogJ0dFVCcgfCAnUE9TVCc7XG4gIGVuZHBvaW50OiBzdHJpbmc7XG4gIGhlYWRlcnM6IEhlYWRlcnNJbml0O1xuICBkZXZQb3J0OiBudW1iZXI7XG4gIGNvdW50OiBudW1iZXI7XG4gIGdldEltYWdlUGFyYW1zOiBzdHJpbmc7XG59O1xuXG50eXBlIE5ldHdvcmtMaXN0VHlwZSA9IFJlY29yZDxNZWRpYVR5cGVTdWJkb21haW5zLCBOZXR3b3JrVHlwZT47XG5cbi8qXG4gIGh0dHBzOi8vcnNzLml0dW5lcy5hcHBsZS5jb20vamEtanBcbiovXG4vKlxuICB3aGVyZVx05qSc57Si44Gn5L2/55So44GV44KM44KL5biC5aC0ICjloLTmiYDjgajoqIDoqp4pIOOCkumBuOaKnuOBmeOCi+ODieODreODg+ODl+ODgOOCpuODsyDjg6Hjg4vjg6Xjg7zjgIJcbiAgcXVlcnlcdOaknOe0ouiqnuWPpeOCkuWFpeWKm+OBmeOCi+ODhuOCreOCueODiCDjg5XjgqPjg7zjg6vjg4njgIJcbiAgY2F0ZWdvcnlcdOeJueWumuOBrueorumhnuOBrue1kOaenOOBruODrOODmeODq+OCkuS4iuOBkuOCi+mam+OBq+S9v+eUqOOBmeOCi+ODgeOCp+ODg+OCryDjg5zjg4Pjgq/jgrnjgIIg44Gf44Go44GI44Gw44CB5YGl5bq344OL44Ol44O844K544Gu44Op44Oz44Kv44KS5LiK44GS44KL44Go44CB5YGl5bq344Gu6aCG5L2N44GM5LiK44GM44KK44G+44GZ44CCXG4gICAgTWF4Q2xhc3MsIFdvcmxkLCBKYXBhbiwgQnVzaW5lc3MsIEVudGVydGFpbm1lbnQsIFNwb3J0cywgU2NpZW5jZUFuZFRlY2hub2xvZ3ksIFBvbGl0aWNzLCBMaWZlU3R5bGVcbiAgd2hlblx044Kq44OX44K344On44Oz44Go44GX44Gm44CB5pyA6L+R44Gu5pel44CB6YCx44CB44G+44Gf44Gv5pyI44Gr5qSc57Si44KS6ZmQ5a6a44GZ44KL44Gf44KB44Gu44OJ44Ot44OD44OX44OA44Km44OzIOODoeODi+ODpeODvOOAglxuICBzYWZlXHRcIuaIkOS6uuWQkeOBkVwiIOOBrue1kOaenOOCkuODleOCo+ODq+OCv+ODvOOBp+mZpOWkluOBmeOCiyBCaW5nIOOBruOCu+ODvOODleOCteODvOODgeapn+iDveOCkuS9v+eUqOOBmeOCi+OBi+OBqeOBhuOBi+OCkuaMh+WumuOBmeOCi+ODgeOCp+ODg+OCryDjg5zjg4Pjgq/jgrnjgIJcbiAgY291bnRcdOmaoOOBl+ODleOCo+ODvOODq+ODieOAgiDlkITopoHmsYLjgavlr77jgZfjgabov5TjgZXjgozjgovmpJzntKLntZDmnpzjga7mlbDjgIIg5aSJ5pu044GZ44KL44Go44CBMSDjg5rjg7zjgrjjgYLjgZ/jgorjga7ntZDmnpzjga7ooajnpLrmlbDjgYzlopfmuJvjgZfjgb7jgZnjgIJcbiAgb2Zmc2V0XHTpmqDjgZfjg5XjgqPjg7zjg6vjg4njgIIg6KaB5rGC44Gr44GK44GR44KL5pyA5Yid44Gu5qSc57Si57WQ5p6c44Gu44Kq44OV44K744OD44OI44CC44Oa44O844K444Oz44Kw44Gr5L2/55So44GV44KM44G+44GZ44CCIOaWsOOBl+OBhOimgeaxguOBp+OBryAwIOOBq+ODquOCu+ODg+ODiOOBleOCjOOBvuOBmeOAglxuXG4gIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3Jlc3QvYXBpL2NvZ25pdGl2ZXNlcnZpY2VzLWJpbmdzZWFyY2gvYmluZy1uZXdzLWFwaS12Ny1yZWZlcmVuY2UjbmV3cy1jYXRlZ29yaWVzLWJ5LW1hcmtldFxuKi9cblxuY29uc3QgTmV0d29ya0FydGlzdHM6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdhcnRpc3RzJyxcbiAgbGFiZWw6ICdBcnRpc3RzJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNDAwMSxcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrQ29udGVudHM6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdjb250ZW50cycsXG4gIGxhYmVsOiAnQ29udGVudHMnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludDogJycsXG4gIGhlYWRlcnM6IHt9LFxuICBkZXZQb3J0OiA0MDAyLFxuICBnZXRJbWFnZVBhcmFtczogJycsXG4gIGNvdW50OiA1MCxcbn07XG5cbmNvbnN0IE5ldHdvcmtNdXNpYzogTmV0d29ya1R5cGUgPSB7XG4gIHN1YkRvbWFpbjogJ211c2ljJyxcbiAgbGFiZWw6ICdNdXNpYyBSYW5rJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNTAwMSxcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrTW92aWVzOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAnbW92aWVzJyxcbiAgbGFiZWw6ICdNb3ZpZXMgUmFuaycsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDUwMDIsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuY29uc3QgTmV0d29ya0FwcHM6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdhcHBzJyxcbiAgbGFiZWw6ICdBcHBzIFJhbmsnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludDogJycsXG4gIGhlYWRlcnM6IHt9LFxuICBkZXZQb3J0OiA1MDAzLFxuICBnZXRJbWFnZVBhcmFtczogJycsXG4gIGNvdW50OiA1MCxcbn07XG5cbmNvbnN0IE5ldHdvcmtCb29rczogTmV0d29ya1R5cGUgPSB7XG4gIHN1YkRvbWFpbjogJ2Jvb2tzJyxcbiAgbGFiZWw6ICdCb29rcyBSYW5rJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNTAwNCxcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrTmV3czogTmV0d29ya1R5cGUgPSB7XG4gIHN1YkRvbWFpbjogJ25ld3MnLFxuICBsYWJlbDogJ05ld3MnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludDogYGh0dHBzOi8vJHtTdHJpbmcobWVkaWFUeXBlcy5uZXdzLmVuZHBvaW50SG9zdCl9YCxcbiAgaGVhZGVyczoge1xuICAgICd4LXJhcGlkYXBpLWhvc3QnOiBTdHJpbmcobWVkaWFUeXBlcy5uZXdzLmVuZHBvaW50SG9zdCksXG4gICAgJ3gtcmFwaWRhcGkta2V5JzogbWVkaWFUeXBlcy5uZXdzLmVuZHBvaW50S2V5LFxuICAgICd1c2VRdWVyeVN0cmluZyc6ICd0cnVlJyxcbiAgfSxcbiAgZGV2UG9ydDogNjAwMSxcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcmdz0zMDAmZHByPTImcWx0PTE5MCcsXG4gIGNvdW50OiA1MCxcbn07XG5cbmNvbnN0IE5ldHdvcmtHaXJsc05ld3M6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdnaXJscy1uZXdzJyxcbiAgbGFiZWw6ICdHaXJscyBOZXdzJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNjAwMixcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrVHJlbmRXb3JkOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAndHJlbmQtd29yZCcsXG4gIGxhYmVsOiAnVHJlbmQgV29yZCcsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDYwMDMsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuZXhwb3J0IGNvbnN0IE5ldHdvcmtMaXN0OiBOZXR3b3JrTGlzdFR5cGUgPSB7XG4gIFtNZWRpYVR5cGVBcnRpc3RzXTogTmV0d29ya0FydGlzdHMsXG4gIFtNZWRpYVR5cGVDb250ZW50c106IE5ldHdvcmtDb250ZW50cyxcbiAgW01lZGlhVHlwZU11c2ljXTogTmV0d29ya011c2ljLFxuICBbTWVkaWFUeXBlTW92aWVzXTogTmV0d29ya01vdmllcyxcbiAgW01lZGlhVHlwZUFwcHNdOiBOZXR3b3JrQXBwcyxcbiAgW01lZGlhVHlwZUJvb2tzXTogTmV0d29ya0Jvb2tzLFxuICBbTWVkaWFUeXBlTmV3c106IE5ldHdvcmtOZXdzLFxuICBbTWVkaWFUeXBlR2lybHNOZXdzXTogTmV0d29ya0dpcmxzTmV3cyxcbiAgW01lZGlhVHlwZVRyZW5kV29yZF06IE5ldHdvcmtUcmVuZFdvcmQsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TmV0d29yayA9IChtZWRpYVR5cGU6IE1lZGlhVHlwZVN1YmRvbWFpbnMpOiBOZXR3b3JrVHlwZSA9PiB7XG4gIHJldHVybiBOZXR3b3JrTGlzdFttZWRpYVR5cGVdID8gTmV0d29ya0xpc3RbbWVkaWFUeXBlXSA6IE5ldHdvcmtMaXN0W2RlZmF1bHRNZWRpYVR5cGVdO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE1lZGlhVHlwZSA9IChob3N0OiBzdHJpbmcpOiBNZWRpYVR5cGVTdWJkb21haW5zID0+IHtcbiAgY29uc3QgZmluZENhbGxiYWsgPVxuICAgIGVudiA9PT0gcHJvZHVjdGlvblxuICAgICAgPyAobWVkaWFUeXBlOiBzdHJpbmcpID0+IGhvc3QuaW5kZXhPZihgJHtOZXR3b3JrTGlzdFttZWRpYVR5cGUgYXMgTWVkaWFUeXBlU3ViZG9tYWluc10uc3ViRG9tYWlufS4ke3Byb2R1Y3Rob3N0fWApID49IDBcbiAgICAgIDogKG1lZGlhVHlwZTogc3RyaW5nKSA9PiBob3N0LmluZGV4T2YoYCR7bG9jYWxob3N0fToke05ldHdvcmtMaXN0W21lZGlhVHlwZSBhcyBNZWRpYVR5cGVTdWJkb21haW5zXS5kZXZQb3J0fWApID49IDA7XG4gIGNvbnN0IG1lZGlhVHlwZSA9IE9iamVjdC5rZXlzKE5ldHdvcmtMaXN0KS5maW5kKGZpbmRDYWxsYmFrKSBhcyBNZWRpYVR5cGVTdWJkb21haW5zO1xuICByZXR1cm4gTmV0d29ya0xpc3RbbWVkaWFUeXBlXSA/IG1lZGlhVHlwZSA6IGRlZmF1bHRNZWRpYVR5cGU7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TXlIb3N0ID0gKG1lZGlhVHlwZTogTWVkaWFUeXBlU3ViZG9tYWlucyk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBlbnYgPT09IHByb2R1Y3Rpb24gPyBgaHR0cHM6Ly8ke21lZGlhVHlwZX0uJHtwcm9kdWN0aG9zdH1gIDogYGh0dHA6Ly8ke2xvY2FsaG9zdH06JHtnZXROZXR3b3JrKG1lZGlhVHlwZSkuZGV2UG9ydH1gO1xufTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjaGVtYSB7XG4gIGVycm9yVGhyb3c6IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb246IGFueSA9IHt9KSB7XG4gICAgLypcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoXG4gICAgICB0aGlzLFxuICAgICAgJ19TRVRfQ09MVU1OUycsXG4gICAgICB7XG4gICAgICAgIHZhbHVlOiBbXSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlXG4gICAgICB9XG4gICAgKTtcbiovXG4gIH1cblxuICBzdGF0aWMgZ2V0VHlwZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gXCJOdWxsXCI7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gXCJVbmRlZmluZWRcIjtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlLmNvbnN0cnVjdG9yLm5hbWU7XG4gIH1cblxuICBzdGF0aWMgaXNTZXQodmFsOiBhbnkpIHtcbiAgICByZXR1cm4gU2NoZW1hLmdldFR5cGUodmFsKSA9PT0gXCJVbmRlZmluZWRcIiB8fCBTY2hlbWEuZ2V0VHlwZSh2YWwpID09PSBcIk51bGxcIiA/IGZhbHNlIDogdHJ1ZTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRCb29sKHZhbDogYW55KSB7XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwiYm9vbGVhblwiKSByZXR1cm4gdmFsO1xuICAgIHJldHVybiB2YWwgPT09IFwidHJ1ZVwiID8gdHJ1ZSA6IGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIGlzQW5vbnltb3VzRnVuYyhmbikge1xuICAgIGNvbnN0IGZuU3RyaW5nID0gZm4udG9TdHJpbmcoKTtcblxuICAgIGlmIChmblN0cmluZyA9PT0gXCJmdW5jdGlvbigpe31cIikgcmV0dXJuIHRydWU7XG4gICAgaWYgKGZuU3RyaW5nID09PSBcImZ1bmN0aW9uKCkge31cIikgcmV0dXJuIHRydWU7XG4gICAgaWYgKGZuU3RyaW5nID09PSBcImZ1bmN0aW9uICgpe31cIikgcmV0dXJuIHRydWU7XG4gICAgaWYgKGZuU3RyaW5nID09PSBcImZ1bmN0aW9uICgpIHt9XCIpIHJldHVybiB0cnVlO1xuICAgIGlmIChmblN0cmluZyA9PT0gXCIoKT0+e31cIikgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY3JlYXRlKHN0YXRlOiBhbnkpIHtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgY29uc3Qgc3RhdGVUeXBlID0gU2NoZW1hLmdldFR5cGUoc3RhdGUpO1xuICAgIGxldCB2YWxpZE1ldGhvZHMgPSB7fTtcblxuICAgIE9iamVjdC5rZXlzKHN0YXRlKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIC8vIFByb3BlcnRpZXMgLlxuICAgICAgbGV0IHZhbHVlcztcbiAgICAgIGxldCBkZWYgPSBudWxsO1xuICAgICAgbGV0IHR5cGU6IGFueTtcbiAgICAgIGxldCBpc0FjY2VwdE51bGwgPSBmYWxzZTtcbiAgICAgIGxldCBpc0FjY2VwdEJsYW5rID0gZmFsc2U7XG4gICAgICBsZXQgdmFsaWQ6IGFueSA9ICgpID0+IHt9O1xuICAgICAgbGV0IHZhbHVlOiBhbnkgPSBudWxsO1xuXG4gICAgICAvLyBBc3NpZ24gUHJvcGVydGllcyAuXG4gICAgICBpZiAoU2NoZW1hLmdldFR5cGUoc3RhdGVba2V5XSkgPT09IFwiT2JqZWN0XCIpIHtcbiAgICAgICAgdmFsdWVzID0gc3RhdGVba2V5XTtcbiAgICAgICAgbGV0IGlzRW1wdHlPYmplY3QgPSBPYmplY3Qua2V5cyh2YWx1ZXMpLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgaXNBY2NlcHROdWxsID0gdmFsdWVzLmlzQWNjZXB0TnVsbCA/IHZhbHVlcy5pc0FjY2VwdE51bGwgOiBpc0FjY2VwdE51bGw7XG4gICAgICAgIGlzQWNjZXB0QmxhbmsgPSB2YWx1ZXMuaXNBY2NlcHRCbGFuayA/IHZhbHVlcy5pc0FjY2VwdEJsYW5rIDogaXNBY2NlcHRCbGFuaztcbiAgICAgICAgZGVmID0gIWlzRW1wdHlPYmplY3QgJiYgdmFsdWVzLmRlZiA/IHZhbHVlcy5kZWYgOiBkZWY7XG4gICAgICAgIHZhbHVlID0gIWlzRW1wdHlPYmplY3QgJiYgKHZhbHVlcy52YWx1ZSB8fCB2YWx1ZXMudmFsdWUgPT09IFwiXCIpID8gdmFsdWVzLnZhbHVlIDogdmFsdWVzO1xuICAgICAgICB2YWx1ZSA9IGlzRW1wdHlPYmplY3QgJiYgZGVmID8gZGVmIDogdmFsdWU7XG4gICAgICAgIHR5cGUgPSBTY2hlbWEuZ2V0VHlwZSh2YWx1ZSk7XG4gICAgICAgIHZhbGlkID0gdmFsdWVzLnZhbGlkID8gdmFsdWVzLnZhbGlkIDogdmFsaWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSA9IHN0YXRlW2tleV07XG4gICAgICAgIGRlZiA9IHZhbHVlO1xuICAgICAgICBpc0FjY2VwdE51bGwgPSBpc0FjY2VwdE51bGw7XG4gICAgICAgIGlzQWNjZXB0QmxhbmsgPSBpc0FjY2VwdEJsYW5rO1xuICAgICAgICB0eXBlID0gU2NoZW1hLmdldFR5cGUodmFsdWUpO1xuICAgICAgICB2YWxpZCA9IHZhbGlkO1xuICAgICAgfVxuXG4gICAgICAvLyBWYWxpZGF0ZSBGdW5jdGlvbnMgLlxuICAgICAgY29uc3QgdmFsaWRGdW5jID0gKF92YWx1ZTogYW55KSA9PiB7XG4gICAgICAgIGxldCBlcnJvciA9IG51bGw7XG4gICAgICAgIGNvbnN0IHBvaW50ZXIgPSBgJHtjbGFzc05hbWV9LiR7a2V5fWA7XG4gICAgICAgIGNvbnN0IHZhbGlkVmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgY29uc3QgdmFsaWRUeXBlID0gdHlwZTtcbiAgICAgICAgY29uc3QgcGFyYW1zVmFsdWUgPSBfdmFsdWU7XG4gICAgICAgIGNvbnN0IHBhcmFtc1R5cGUgPSBTY2hlbWEuZ2V0VHlwZShfdmFsdWUpO1xuXG4gICAgICAgIGlmIChwYXJhbXNUeXBlICE9PSB0eXBlKSB7XG4gICAgICAgICAgZXJyb3IgPSBgU0NIRU1BX1RZUEUgOiAke3BvaW50ZXJ9IFt2YWxpZFR5cGU6ICR7dHlwZX1dW3BhcmFtc1R5cGU6ICR7cGFyYW1zVHlwZX1dYDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBY2NlcHROdWxsICYmIF92YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgIGVycm9yID0gYFNDSEVNQV9JU19BQ0NFUFRfTlVMTCA6ICAke3BvaW50ZXJ9YDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBY2NlcHRCbGFuayAmJiBfdmFsdWUgPT09IFwiXCIpIHtcbiAgICAgICAgICBlcnJvciA9IGBTQ0hFTUFfSVNfQUNDRVBUX0JMQU5LIDogICR7cG9pbnRlcn1gO1xuICAgICAgICB9XG4gICAgICAgIGlmIChTY2hlbWEuZ2V0VHlwZSh2YWxpZCkgPT09IFwiRnVuY3Rpb25cIikge1xuICAgICAgICAgIGlmICh2YWxpZChfdmFsdWUpKSB7XG4gICAgICAgICAgICBlcnJvciA9IGBTQ0hFTUFfWU9VUl9WQUxJRF9NRVRIT0QgOiAgJHtwb2ludGVyfWA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcG9pbnRlcixcbiAgICAgICAgICB2YWxpZFZhbHVlLFxuICAgICAgICAgIHZhbGlkVHlwZSxcbiAgICAgICAgICBwYXJhbXNWYWx1ZSxcbiAgICAgICAgICBwYXJhbXNUeXBlLFxuICAgICAgICAgIGVycm9yLFxuICAgICAgICB9O1xuICAgICAgfTtcblxuICAgICAgY29uc3QgeyBwb2ludGVyLCB2YWxpZFZhbHVlLCB2YWxpZFR5cGUsIHBhcmFtc1ZhbHVlLCBwYXJhbXNUeXBlLCBlcnJvciB9ID0gdmFsaWRGdW5jKHZhbHVlKTtcblxuICAgICAgaWYgKGVycm9yID09PSBudWxsKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBrZXksIHtcbiAgICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNldDogKF92YWx1ZSkgPT4ge1xuICAgICAgICAgICAgLy8gcG9pbnRlciwgdmFsaWRWYWx1ZSwgdmFsaWRUeXBlLCBwYXJhbXNWYWx1ZSwgcGFyYW1zVHlwZSwgZXJyb3JcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkUmVzdWx0ID0gdmFsaWRGdW5jKHZhbHVlKTtcbiAgICAgICAgICAgIGlmIChlcnJvciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICB2YWx1ZSA9IF92YWx1ZTtcbiAgICAgICAgICAgICAgcmV0dXJuIHsgLi4udGhpcywgW2tleV06IHZhbHVlIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLnZhbGlkV2Fybih2YWxpZFJlc3VsdCk7XG4gICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMuZXJyb3JUaHJvdykge1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUud2FybihlcnJvcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGNhblNldChrZXk6IGFueSwgdmFsaWRWYWx1ZTogYW55KSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRWYWx1ZSA9IHRoaXNba2V5XTtcbiAgICAgIGlmIChjdXJyZW50VmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGN1cnJlbnRWYWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHZhbGlkVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHZhbGlkVmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHsgZXJyb3IgfSA9ICh0aGlzW2tleV0gPSB2YWxpZFZhbHVlKTtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzW2tleV0gPSBjdXJyZW50VmFsdWU7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkJBRCBDQU4gU0VUIEtFWTogXCIgKyB0aGlzLmNvbnN0cnVjdG9yLm5hbWUgKyBcIiBcIiArIGtleSk7XG4gICAgICBjb25zb2xlLndhcm4oXCJCRUZPRVIgVkFMVUVcIik7XG4gICAgICBjb25zb2xlLndhcm4odHlwZW9mIHRoaXNba2V5XSk7XG4gICAgICBjb25zb2xlLndhcm4odGhpc1trZXldKTtcbiAgICAgIGNvbnNvbGUud2FybihcIkFGVEVSIFZBTFVFXCIpO1xuICAgICAgY29uc29sZS53YXJuKHR5cGVvZiB2YWxpZFZhbHVlKTtcbiAgICAgIGNvbnNvbGUud2Fybih2YWxpZFZhbHVlKTtcbiAgICAgIHRocm93IGBCQUQgQ0FOIFNFVDogJHtlfWA7XG4gICAgfVxuICB9XG5cbiAgbWVyZ2UocGFyYW1zID0ge30sIGltbXV0YWJsZSA9IHRydWUpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcGFyYW1zVHlwZSA9IFNjaGVtYS5nZXRUeXBlKHBhcmFtcyk7XG4gICAgICBjb25zdCBvYmpLZXlzID0gT2JqZWN0LmtleXMocGFyYW1zKTtcblxuICAgICAgaWYgKG9iaktleXMubGVuZ3RoID4gMCkge1xuICAgICAgICBsZXQgbWVyZ2VkT2JqOiBhbnkgPSB7IC4uLnRoaXMgfTtcbiAgICAgICAgb2JqS2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICBpZiAodGhpc1trZXldICE9PSBwYXJhbXNba2V5XSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2FuU2V0KGtleSwgcGFyYW1zW2tleV0pKSB7XG4gICAgICAgICAgICAgIG1lcmdlZE9ialtrZXldID0gcGFyYW1zW2tleV07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJCQUQgTUVSR0UgQSA6IFwiICsga2V5ICsgXCIgXCIgKyBwYXJhbXNba2V5XSArIFwiIFwiICsgdHlwZW9mIHBhcmFtc1trZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChwYXJhbXNUeXBlID09PSBcIkFycmF5XCIpIHtcbiAgICAgICAgICBtZXJnZWRPYmogPSBPYmplY3QudmFsdWVzKG1lcmdlZE9iaik7XG5cbiAgICAgICAgICAvKlxuICAgICAgICAgICAgY2xhc3MgQSB7XG4gICAgICAgICAgICAgIGNvbnN0cnVjdG9yKCkgeyAgfVxuICAgICAgICAgICAgICByZWZyZXNoKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgKDx0eXBlb2YgQT50aGlzLmNvbnN0cnVjdG9yKTsgXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAqL1xuICAgICAgICAgIHJldHVybiBpbW11dGFibGUgPyBuZXcgKDx0eXBlb2YgU2NoZW1hPnRoaXMuY29uc3RydWN0b3IpKG1lcmdlZE9iaikgOiBtZXJnZWRPYmo7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGltbXV0YWJsZSkge1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyggbWVyZ2VkT2JqICk7XG4gICAgICAgICAgICByZXR1cm4gbmV3ICg8dHlwZW9mIFNjaGVtYT50aGlzLmNvbnN0cnVjdG9yKShtZXJnZWRPYmopO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbWVyZ2VkT2JqO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyAoPHR5cGVvZiBTY2hlbWE+dGhpcy5jb25zdHJ1Y3RvcikoKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAodGhpcy5lcnJvclRocm93KSB7XG4gICAgICAgIGNvbnNvbGUud2FybihwYXJhbXMpO1xuICAgICAgICBjb25zb2xlLndhcm4oZSk7XG4gICAgICAgIHRocm93IGBCQUQgTUVSR0UgQiA6ICR7U2NoZW1hLmdldFR5cGUocGFyYW1zKX0gJHtlfWA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLndhcm4ocGFyYW1zKTtcbiAgICAgICAgY29uc29sZS53YXJuKGUpO1xuICAgICAgICBjb25zb2xlLndhcm4oYEJBRCBNRVJHRSBDIDogJHtTY2hlbWEuZ2V0VHlwZShwYXJhbXMpfSAke2V9YCk7XG4gICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdG9KU09OKG9iajogYW55ID0gdGhpcykge1xuICAgIGxldCBqc29uT2JqOiBhbnkgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgbGV0IHZhbHVlczogYW55ID0gb2JqW2tleV07XG4gICAgICBpZiAodmFsdWVzLmNvbnN0cnVjdG9yLm5hbWUgPT09IFwiT2JqZWN0XCIpIHtcbiAgICAgICAgaWYgKCF2YWx1ZXMudHlwZSAmJiAhdmFsdWVzLmRlZmF1bHQpIHtcbiAgICAgICAgICB2YWx1ZXMgPSB0aGlzLnRvSlNPTih2YWx1ZXMpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWx1ZXMuZGVmYXVsdCB8fCB2YWx1ZXMuZGVmYXVsdCA9PT0gXCJcIiB8fCB2YWx1ZXMuZGVmYXVsdCA9PT0gMCkge1xuICAgICAgICBqc29uT2JqW2tleV0gPSB2YWx1ZXMuZGVmYXVsdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGpzb25PYmpba2V5XSA9IHZhbHVlcztcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4ganNvbk9iajtcbiAgfVxuXG4gIGZvckVhY2goZnVuYykge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMpLmZvckVhY2goZnVuYyk7XG4gIH1cblxuICBjb25jYXQoZnVuYykge1xuICAgIHJldHVybiB0aGlzLnJldHVybkltbXV0YWJsZShPYmplY3QudmFsdWVzKHRoaXMpLmNvbmNhdChmdW5jKSwgZnVuYyk7XG4gIH1cblxuICBtYXAoZnVuYykge1xuICAgIHJldHVybiB0aGlzLnJldHVybkltbXV0YWJsZShPYmplY3QudmFsdWVzKHRoaXMpLm1hcChmdW5jKSwgZnVuYyk7XG4gIH1cblxuICBmaWx0ZXIoZnVuYykge1xuICAgIHJldHVybiB0aGlzLnJldHVybkltbXV0YWJsZShPYmplY3QudmFsdWVzKHRoaXMpLmZpbHRlcihmdW5jKSwgZnVuYyk7XG4gIH1cblxuICByZWR1Y2UoZnVuYykge1xuICAgIHJldHVybiB0aGlzLnJldHVybkltbXV0YWJsZShPYmplY3QudmFsdWVzKHRoaXMpLnJlZHVjZShmdW5jKSwgZnVuYyk7XG4gIH1cblxuICBmaW5kKGZ1bmMpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzKS5maW5kKGZ1bmMpO1xuICB9XG5cbiAgc29ydChmdW5jKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcykuc29ydChmdW5jKTtcbiAgfVxuXG4gIHB1c2godmFsdWUpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMpO1xuICAgIHZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUodmFsdWVzKTtcbiAgfVxuXG4gIHVuc2hpZnQodmFsdWUpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMpO1xuICAgIHZhbHVlcy51bnNoaWZ0KHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUodmFsdWVzKTtcbiAgfVxuXG4gIGdldFNoaWZ0KCkge1xuICAgIGNvbnN0IHZhbHVlcyA9IE9iamVjdC52YWx1ZXModGhpcyk7XG4gICAgY29uc3QgcmVzdWx0cyA9IHZhbHVlcy5zaGlmdCgpO1xuICAgIHJldHVybiB0aGlzLnJldHVybkltbXV0YWJsZShyZXN1bHRzKTtcbiAgfVxuXG4gIHBvcCh2YWx1ZSkge1xuICAgIGNvbnN0IHZhbHVlczogYW55ID0gT2JqZWN0LnZhbHVlcyh0aGlzKTtcbiAgICB2YWx1ZXMucG9wKHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUodmFsdWVzKTtcbiAgfVxuXG4gIHJldHVybkltbXV0YWJsZSh2YWx1ZXMsIGZ1bmMgPSAoKSA9PiB7fSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICByZXR1cm4gbmV3ICg8dHlwZW9mIFNjaGVtYT50aGlzLmNvbnN0cnVjdG9yKSgpO1xuICAgIH0gZWxzZSBpZiAodmFsdWVzLmxlbmd0aCA9PT0gMCAmJiBPYmplY3Qua2V5cyh0aGlzKS5sZW5ndGggPT09IDApIHtcbiAgICAgIGlmIChTdHJpbmcoZnVuYykuaW5kZXhPZihcImNyZWF0ZUVsZW1lbnRcIikgPiAwKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgKDx0eXBlb2YgU2NoZW1hPnRoaXMuY29uc3RydWN0b3IpKHZhbHVlcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2YWx1ZXNbMF0gJiYgdmFsdWVzWzBdW1wiJCR0eXBlb2ZcIl0gJiYgdmFsdWVzWzBdW1wiJCR0eXBlb2ZcIl0uY29uc3RydWN0b3IubmFtZSA9PT0gXCJTeW1ib2xcIikge1xuICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyAoPHR5cGVvZiBTY2hlbWE+dGhpcy5jb25zdHJ1Y3RvcikodmFsdWVzKTtcbiAgICB9XG4gIH1cblxuICB2YWxpZFdhcm4odmFsaWRSZXN1bHQpIHtcbiAgICBjb25zb2xlLndhcm4oXCIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1wiKTtcbiAgICBjb25zb2xlLndhcm4oXCIjXCIgKyB2YWxpZFJlc3VsdC5wb2ludGVyKTtcbiAgICBjb25zb2xlLndhcm4oXCIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1wiKTtcbiAgICBjb25zb2xlLndhcm4oXCIjIyMgaW5pdGlhbGl6ZWRWYWxpZFR5cGVcIik7XG4gICAgY29uc29sZS53YXJuKHZhbGlkUmVzdWx0LnZhbGlkVHlwZSk7XG4gICAgY29uc29sZS53YXJuKFwiIyMjIGluaXRpYWxpemVkVmFsaWRWYWx1ZVwiKTtcbiAgICBjb25zb2xlLndhcm4odmFsaWRSZXN1bHQudmFsaWRWYWx1ZSk7XG4gICAgY29uc29sZS53YXJuKFwiIyMjIHBhcmFtc1R5cGVcIik7XG4gICAgY29uc29sZS53YXJuKHZhbGlkUmVzdWx0LnBhcmFtc1R5cGUpO1xuICAgIGNvbnNvbGUud2FybihcIiMjIyBwYXJhbXNWYWx1ZVwiKTtcbiAgICBjb25zb2xlLndhcm4odmFsaWRSZXN1bHQucGFyYW1zVmFsdWUpO1xuICAgIGNvbnNvbGUud2FybihcIiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXCIpO1xuICB9XG59XG4iLCJpbXBvcnQgU2NoZW1hIGZyb20gJ2NvbW1vbi9TY2hlbWEnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXF1ZW5jZSB7XG4gIHN0YXRpYyBnZXQgVEFMS05fUFJPVE9DT0woKSB7XG4gICAgcmV0dXJuICd0YWxrbjonO1xuICB9XG4gIHN0YXRpYyBnZXQgSFRUUF9QUk9UT0NPTCgpIHtcbiAgICByZXR1cm4gJ2h0dHA6JztcbiAgfVxuICBzdGF0aWMgZ2V0IEhUVFBTX1BST1RPQ09MKCkge1xuICAgIHJldHVybiAnaHR0cHM6JztcbiAgfVxuICBzdGF0aWMgZ2V0IFVOS05PV05fUFJPVE9DT0woKSB7XG4gICAgcmV0dXJuICc/Pz8/Oic7XG4gIH1cbiAgc3RhdGljIGdldCBDQVRDSF9NRV9LRVkoKSB7XG4gICAgcmV0dXJuICdAQ0FUQ0hfTUUnO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1NFUEFSQVRFX0lPX1RZUEVfU1RBUlQoKSB7XG4gICAgcmV0dXJuICdbJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9TRVBBUkFURV9JT19UWVBFX0VORCgpIHtcbiAgICByZXR1cm4gJ10nO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1JFUVVFU1RfVFlQRSgpIHtcbiAgICByZXR1cm4gJ1JFUVVFU1QnO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1JFU1BPTlNFX1RZUEVfRU1JVCgpIHtcbiAgICByZXR1cm4gJ0VNSVQnO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUKCkge1xuICAgIHJldHVybiAnQlJPQURDQVNUJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9TRVRVUCgpIHtcbiAgICByZXR1cm4gJ0FQSV9TRVRVUCc7XG4gIH1cbiAgc3RhdGljIGdldCBVTktOT1dOKCkge1xuICAgIHJldHVybiAnVU5LTk9XTic7XG4gIH1cbiAgc3RhdGljIGdldCBDT05ORUNUSU9OX1NFUlZFUl9LRVkoKSB7XG4gICAgcmV0dXJuICdDT05ORUNUSU9OX1NFUlZFUic7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfVE9fU0VSVkVSX1JFUVVFU1QoKSB7XG4gICAgcmV0dXJuIGBBUElfVE9fU0VSVkVSWyR7U2VxdWVuY2UuQVBJX1JFUVVFU1RfVFlQRX1dJHtTZXF1ZW5jZS5NRVRIT0RfQ09MT059YDtcbiAgfVxuICBzdGF0aWMgZ2V0IFNFUlZFUl9UT19BUElfRU1JVCgpIHtcbiAgICByZXR1cm4gYFNFUlZFUl9UT19BUElbJHtTZXF1ZW5jZS5BUElfUkVTUE9OU0VfVFlQRV9FTUlUfV0ke1NlcXVlbmNlLk1FVEhPRF9DT0xPTn1gO1xuICB9XG4gIHN0YXRpYyBnZXQgU0VSVkVSX1RPX0FQSV9CUk9BRENBU1QoKSB7XG4gICAgcmV0dXJuIGBTRVJWRVJfVE9fQVBJWyR7U2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUfV0ke1NlcXVlbmNlLk1FVEhPRF9DT0xPTn1gO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1RPX0NMSUVOVF9SRVFVRVNUKCkge1xuICAgIHJldHVybiBgQVBJX1RPX0NMSUVOVFske1NlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEV9XSR7U2VxdWVuY2UuTUVUSE9EX0NPTE9OfWA7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfVE9fQ0xJRU5UX0VNSVQoKSB7XG4gICAgcmV0dXJuIGBBUElfVE9fQ0xJRU5UWyR7U2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfRU1JVH1dJHtTZXF1ZW5jZS5NRVRIT0RfQ09MT059YDtcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9UT19DTElFTlRfQlJPQURDQVNUKCkge1xuICAgIHJldHVybiBgQVBJX1RPX0NMSUVOVFske1NlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0JST0FEQ0FTVH1dJHtTZXF1ZW5jZS5NRVRIT0RfQ09MT059YDtcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9CUk9BRENBU1RfQ0FMTEJBQ0soKSB7XG4gICAgcmV0dXJuICd0dW5lJztcbiAgfVxuICBzdGF0aWMgZ2V0IFJFRFVYX0FDVElPTl9LRVkoKSB7XG4gICAgcmV0dXJuICd0eXBlJztcbiAgfVxuICBzdGF0aWMgZ2V0IE1FVEhPRF9DT0xPTigpIHtcbiAgICByZXR1cm4gJzonO1xuICB9XG4gIHN0YXRpYyBnZXQgQUREX0NMSUVOVF9BQ1RJT05fUFJFRklYKCkge1xuICAgIHJldHVybiAnQVBJX1RPX0NMSUVOVCc7XG4gIH1cbiAgc3RhdGljIGdldCBtYXAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR1bmU6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogWydjaCcsICdoYXNTbGFzaCcsICdwcm90b2NvbCddLFxuICAgICAgICAgIGFwcDogWydtdWx0aXN0cmVhbScsICdyb290Q2gnLCAnZGlzcFRocmVhZFR5cGUnLCAnYWN0aW9uZWQnLCAnb2Zmc2V0RmluZElkJywgJ2lzVG9nZ2xlTXVsdGlzdHJlYW0nXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgdXNlcjogWyd1aWQnXSwgc2V0dGluZzogJyonLCB0aHJlYWQ6ICcqJyB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7IHRocmVhZDogWydsaXZlQ250JywgJ2NoJ10gfSxcbiAgICAgIH0sXG4gICAgICBmZXRjaFBvc3RzOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHtcbiAgICAgICAgICB0aHJlYWQ6IFsnY2gnLCAncHJvdG9jb2wnLCAnaG9zdCcsICdoYXNTbGFzaCddLFxuICAgICAgICAgIGFwcDogWydtdWx0aXN0cmVhbScsICdyb290Q2gnLCAnZGlzcFRocmVhZFR5cGUnLCAnYWN0aW9uZWQnLCAnb2Zmc2V0RmluZElkJywgJ2lzVG9nZ2xlTXVsdGlzdHJlYW0nXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgcG9zdHM6ICcqJywgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZToge30sXG4gICAgICB9LFxuICAgICAgZ2V0TW9yZToge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHt9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7XG4gICAgICAgICAgdGhyZWFkOiBbJ2NoJ10sXG4gICAgICAgICAgYXBwOiBbJ211bHRpc3RyZWFtJywgJ2Rpc3BUaHJlYWRUeXBlJywgJ29mZnNldEZpbmRJZCddLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZToge1xuICAgICAgICAgIGFwcDogWydkaXNwVGhyZWFkVHlwZScsICdvZmZzZXRGaW5kSWQnXSxcbiAgICAgICAgICBwb3N0czogJyonLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7fSxcbiAgICAgIH0sXG4gICAgICB1cGRhdGVUaHJlYWQ6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogWydjaCcsICdwcm90b2NvbCcsICdob3N0JywgJ2hhc1NsYXNoJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7XG4gICAgICAgICAgdGhyZWFkOiAnKicsXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlQnJvYWRjYXN0U3RhdGU6IHt9LFxuICAgICAgfSxcbiAgICAgIGNoYW5nZVRocmVhZDoge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHt9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7XG4gICAgICAgICAgdGhyZWFkOiBbJ2NoJywgJ2hhc1NsYXNoJywgJ3Byb3RvY29sJ10sXG4gICAgICAgICAgYXBwOiBbJ3R1bmVkJywgJ211bHRpc3RyZWFtJywgJ3Jvb3RDaCcsICdkaXNwVGhyZWFkVHlwZScsICdhY3Rpb25lZCcsICdvZmZzZXRGaW5kSWQnLCAnaXNUb2dnbGVNdWx0aXN0cmVhbSddLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZTogeyB0aHJlYWQ6ICcqJyB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7IHRocmVhZDogWydsaXZlQ250JywgJ2NoJ10gfSxcbiAgICAgIH0sXG4gICAgICBjaGFuZ2VUaHJlYWREZXRhaWw6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZTogeyB0aHJlYWQ6IFsnY2gnXSB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZTogeyB0aHJlYWQ6ICcqJyB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7fSxcbiAgICAgIH0sXG4gICAgICBhZGRGaW5kQ2hpbGQ6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZTogeyB0aHJlYWQ6IFsnY2gnXSB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZTogeyB0aHJlYWQ6ICcqJyB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7fSxcbiAgICAgIH0sXG4gICAgICByYW5rOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHtcbiAgICAgICAgICBhcHA6IFsnZmluZFR5cGUnLCAncm9vdENoJywgJ2lzUmFua0RldGFpbE1vZGUnXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgcmFuazogJyonIH0sXG4gICAgICAgIHJlc3BvbnNlQnJvYWRjYXN0U3RhdGU6IHt9LFxuICAgICAgfSxcbiAgICAgIHBvc3Q6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHVzZXI6IFsndWlkJywgJ3V0eXBlJ10sXG4gICAgICAgICAgYXBwOiBbJ2lucHV0UG9zdCcsICdpbnB1dFN0YW1wSWQnLCAnaW5wdXRDdXJyZW50VGltZScsICdkaXNwVGhyZWFkVHlwZSddLFxuICAgICAgICAgIHRocmVhZDogWydmaW5kVHlwZScsICd0aXRsZScsICdwcm90b2NvbCcsICdjaCcsICdjaHMnLCAnZW1vdGlvbnMnLCAnZmF2aWNvbicsICdjb250ZW50VHlwZSddLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZToge30sXG4gICAgICAgIHJlc3BvbnNlQnJvYWRjYXN0U3RhdGU6IHsgcG9zdHM6ICcqJywgdGhyZWFkOiBbJ2NoJywgJ2Vtb3Rpb25zJywgJ3Bvc3RDbnQnXSwgdXNlcjogWyd1aWQnXSB9LFxuICAgICAgfSxcbiAgICAgIHVwZGF0ZVRocmVhZFNlcnZlck1ldGFzOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZTogeyB0aHJlYWQ6IFsnc2VydmVyTWV0YXMnXSB9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7XG4gICAgICAgICAgdGhyZWFkOiBbJ2hvc3QnLCAncHJvdG9jb2wnLCAnY2gnXSxcbiAgICAgICAgICB1c2VyOiBbJ3VpZCddLCAvLyDmh7jlv7UgLmZvckVhY2jjgZXjgozjgarjgYTjga7jgafkuIDml6bjgZPjga7lvaLjgavkv67mraNcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZToge30sXG4gICAgICB9LFxuICAgICAgZGlzY29ubmVjdDoge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHt9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7fSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHt9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7IHRocmVhZDogWydsaXZlQ250JywgJ2NoJ10gfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTZXF1ZW5jZUFjdGlvbk1hcChtZXRob2QpOiB7IHNlcXVlbmNlOiBzdHJpbmc7IGFjdGlvblR5cGU6IHN0cmluZzsgYWN0aW9uTmFtZTogc3RyaW5nIH0ge1xuICAgIGNvbnN0IHNwbGl0ZWQgPSBtZXRob2Quc3BsaXQoU2VxdWVuY2UuTUVUSE9EX0NPTE9OKTtcbiAgICBjb25zdCBzZXF1ZW5jZSA9IHNwbGl0ZWRbMF0uc3BsaXQoJ1snKVswXTtcbiAgICBsZXQgYWN0aW9uVHlwZTtcblxuICAgIGlmIChzcGxpdGVkWzBdLmluZGV4T2YoYFske1NlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEV9XWApID4gMCkge1xuICAgICAgYWN0aW9uVHlwZSA9IFNlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFjdGlvblR5cGUgPVxuICAgICAgICBzcGxpdGVkWzBdLmluZGV4T2YoYFske1NlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0VNSVR9XWApID4gMFxuICAgICAgICAgID8gU2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfRU1JVFxuICAgICAgICAgIDogU2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUO1xuICAgIH1cblxuICAgIGNvbnN0IGFjdGlvbk5hbWUgPSBzcGxpdGVkWzFdO1xuICAgIHJldHVybiB7IHNlcXVlbmNlLCBhY3Rpb25UeXBlLCBhY3Rpb25OYW1lIH07XG4gIH1cblxuICBzdGF0aWMgdXBkYXRlQ2FsbGJhY2tFeGVDb25kaXRpb25NYXAoYWN0aW9uTmFtZSk6IHsgZW1pdDogYm9vbGVhbjsgYnJvYWRjYXN0OiBib29sZWFuIH0ge1xuICAgIGxldCBhY3RpdmVSZXNwb25zZU1hcCA9IHsgZW1pdDogdHJ1ZSwgYnJvYWRjYXN0OiB0cnVlIH07XG4gICAgaWYgKFNlcXVlbmNlLm1hcFthY3Rpb25OYW1lXSkge1xuICAgICAgYWN0aXZlUmVzcG9uc2VNYXAuZW1pdCA9ICEoT2JqZWN0LmtleXMoU2VxdWVuY2UubWFwW2FjdGlvbk5hbWVdLnJlc3BvbnNlRW1pdFN0YXRlKS5sZW5ndGggPiAwKTtcbiAgICAgIGFjdGl2ZVJlc3BvbnNlTWFwLmJyb2FkY2FzdCA9ICEoT2JqZWN0LmtleXMoU2VxdWVuY2UubWFwW2FjdGlvbk5hbWVdLnJlc3BvbnNlQnJvYWRjYXN0U3RhdGUpLmxlbmd0aCA+IDApO1xuICAgIH1cbiAgICByZXR1cm4gYWN0aXZlUmVzcG9uc2VNYXA7XG4gIH1cblxuICBzdGF0aWMgY29udmVydFNlcnZlclRvQXBpSW9UeXBlKGlGcmFtZUlkLCBhY3Rpb25UeXBlKSB7XG4gICAgaWYgKGFjdGlvblR5cGUuaW5kZXhPZihgJHtTZXF1ZW5jZS5BUElfU0VQQVJBVEVfSU9fVFlQRV9TVEFSVH0ke1NlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEV9JHtTZXF1ZW5jZS5BUElfU0VQQVJBVEVfSU9fVFlQRV9FTkR9YCkgPj0gMCkge1xuICAgICAgcmV0dXJuIFNlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEU7XG4gICAgfVxuICAgIGlmIChcbiAgICAgIGFjdGlvblR5cGUuaW5kZXhPZihcbiAgICAgICAgYCR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfU1RBUlR9JHtTZXF1ZW5jZS5BUElfUkVTUE9OU0VfVFlQRV9CUk9BRENBU1R9JHtTZXF1ZW5jZS5BUElfU0VQQVJBVEVfSU9fVFlQRV9FTkR9YFxuICAgICAgKSA+PSAwXG4gICAgKSB7XG4gICAgICByZXR1cm4gU2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICBhY3Rpb25UeXBlLmluZGV4T2YoYCR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfU1RBUlR9JHtTZXF1ZW5jZS5BUElfUkVTUE9OU0VfVFlQRV9FTUlUfSR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfRU5EfWApID49XG4gICAgICAwXG4gICAgKSB7XG4gICAgICByZXR1cm4gU2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfRU1JVDtcbiAgICB9XG4gICAgcmV0dXJuIFNlcXVlbmNlLkFQSV9TRVRVUDtcbiAgfVxuXG4gIHN0YXRpYyBjb252ZXJ0RXh0VG9DbGllbnRBY3Rpb25UeXBlKGlGcmFtZUlkLCBhY3Rpb25UeXBlKSB7XG4gICAgYWN0aW9uVHlwZSA9IFNlcXVlbmNlLmNvbnZlcnRBcGlUb0NsaWVudEFjdGlvblR5cGUoYWN0aW9uVHlwZSk7XG4gICAgcmV0dXJuIGFjdGlvblR5cGU7XG4gIH1cblxuICBzdGF0aWMgY29udmVydEFwaVRvQ2xpZW50QWN0aW9uVHlwZShhY3Rpb25UeXBlKSB7XG4gICAgaWYgKGFjdGlvblR5cGUuaW5kZXhPZihTZXF1ZW5jZS5BUElfVE9fU0VSVkVSX1JFUVVFU1QpID09PSAwKSB7XG4gICAgICByZXR1cm4gYWN0aW9uVHlwZS5yZXBsYWNlKFNlcXVlbmNlLkFQSV9UT19TRVJWRVJfUkVRVUVTVCwgU2VxdWVuY2UuQVBJX1RPX0NMSUVOVF9SRVFVRVNUKTtcbiAgICB9XG4gICAgaWYgKGFjdGlvblR5cGUuaW5kZXhPZihTZXF1ZW5jZS5TRVJWRVJfVE9fQVBJX0VNSVQpID09PSAwKSB7XG4gICAgICByZXR1cm4gYWN0aW9uVHlwZS5yZXBsYWNlKFNlcXVlbmNlLlNFUlZFUl9UT19BUElfRU1JVCwgU2VxdWVuY2UuQVBJX1RPX0NMSUVOVF9FTUlUKTtcbiAgICB9XG4gICAgaWYgKGFjdGlvblR5cGUuaW5kZXhPZihTZXF1ZW5jZS5TRVJWRVJfVE9fQVBJX0JST0FEQ0FTVCkgPT09IDApIHtcbiAgICAgIHJldHVybiBhY3Rpb25UeXBlLnJlcGxhY2UoU2VxdWVuY2UuU0VSVkVSX1RPX0FQSV9CUk9BRENBU1QsIFNlcXVlbmNlLkFQSV9UT19DTElFTlRfQlJPQURDQVNUKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjdGlvblR5cGU7XG4gIH1cblxuICBzdGF0aWMgZ2V0UmVxdWVzdFN0YXRlKGFjdGlvbk5hbWUsIHJlZHV4U3RhdGUsIHJlcXVlc3RQYXJhbXMpIHtcbiAgICBjb25zdCBlbmRwb2ludEtleSA9IGFjdGlvbk5hbWUucmVwbGFjZShTZXF1ZW5jZS5BUElfVE9fU0VSVkVSX1JFUVVFU1QsICcnKTtcbiAgICBjb25zdCB7IHJlcXVlc3RQdWJsaWNTdGF0ZSwgcmVxdWVzdFByaXZhdGVTdGF0ZSB9ID0gU2VxdWVuY2UubWFwW2VuZHBvaW50S2V5XTtcbiAgICBsZXQgcmVxdWVzdFN0YXRlID0geyBbU2VxdWVuY2UuUkVEVVhfQUNUSU9OX0tFWV06IGVuZHBvaW50S2V5IH07XG5cbiAgICBPYmplY3Qua2V5cyhyZXF1ZXN0UHJpdmF0ZVN0YXRlKS5mb3JFYWNoKChzdGF0ZUtleSkgPT4ge1xuICAgICAgaWYgKCFyZXF1ZXN0U3RhdGVbc3RhdGVLZXldKSByZXF1ZXN0U3RhdGVbc3RhdGVLZXldID0ge307XG4gICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlW3N0YXRlS2V5XS5mb3JFYWNoKChjb2x1bW5OYW1lKSA9PiB7XG4gICAgICAgIGlmICghcmVxdWVzdFN0YXRlW3N0YXRlS2V5XVtjb2x1bW5OYW1lXSkge1xuICAgICAgICAgIGxldCB2YWx1ZSA9IHJlZHV4U3RhdGVbc3RhdGVLZXldW2NvbHVtbk5hbWVdO1xuICAgICAgICAgIGlmIChyZXF1ZXN0UGFyYW1zICYmIHJlcXVlc3RQYXJhbXNbc3RhdGVLZXldICYmIFNjaGVtYS5pc1NldChyZXF1ZXN0UGFyYW1zW3N0YXRlS2V5XVtjb2x1bW5OYW1lXSkpIHtcbiAgICAgICAgICAgIHZhbHVlID0gcmVxdWVzdFBhcmFtc1tzdGF0ZUtleV1bY29sdW1uTmFtZV07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlcXVlc3RTdGF0ZVtzdGF0ZUtleV1bY29sdW1uTmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBPYmplY3Qua2V5cyhyZXF1ZXN0UHVibGljU3RhdGUpLmZvckVhY2goKHN0YXRlS2V5KSA9PiB7XG4gICAgICBpZiAoIXJlcXVlc3RTdGF0ZVtzdGF0ZUtleV0pIHJlcXVlc3RTdGF0ZVtzdGF0ZUtleV0gPSB7fTtcblxuICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlW3N0YXRlS2V5XS5mb3JFYWNoKChjb2x1bW5OYW1lKSA9PiB7XG4gICAgICAgIGlmICghcmVxdWVzdFN0YXRlW3N0YXRlS2V5XVtjb2x1bW5OYW1lXSkge1xuICAgICAgICAgIHJlcXVlc3RTdGF0ZVtzdGF0ZUtleV1bY29sdW1uTmFtZV0gPSByZXF1ZXN0UGFyYW1zO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVxdWVzdFN0YXRlO1xuICB9XG5cbiAgc3RhdGljIGdldFJlc3BvbnNlU3RhdGUocmVzcG9uc2VUeXBlLCByZXF1ZXN0U3RhdGUsIHVwZGF0ZVN0YXRlKSB7XG4gICAgY29uc3QgZW5kcG9pbnRLZXkgPSByZXF1ZXN0U3RhdGUudHlwZTtcbiAgICBjb25zdCByZXNwb25zZVNjaGVtYSA9IFNlcXVlbmNlLm1hcFtlbmRwb2ludEtleV1bYHJlc3BvbnNlJHtyZXNwb25zZVR5cGV9U3RhdGVgXTtcbiAgICBsZXQgcmVzcG9uc2VTdGF0ZSA9IHsgW1NlcXVlbmNlLlJFRFVYX0FDVElPTl9LRVldOiBlbmRwb2ludEtleSB9O1xuICAgIE9iamVjdC5rZXlzKHJlc3BvbnNlU2NoZW1hKS5mb3JFYWNoKCh1cGRhdGVTdGF0ZUtleSkgPT4ge1xuICAgICAgaWYgKHVwZGF0ZVN0YXRlW3VwZGF0ZVN0YXRlS2V5XSkge1xuICAgICAgICBjb25zdCBjb2x1bW5OYW1lcyA9IHJlc3BvbnNlU2NoZW1hW3VwZGF0ZVN0YXRlS2V5XTtcbiAgICAgICAgbGV0IHVwZGF0ZVN0YXRlVmFsdWUgPSB1cGRhdGVTdGF0ZVt1cGRhdGVTdGF0ZUtleV07XG5cbiAgICAgICAgc3dpdGNoICh1cGRhdGVTdGF0ZVZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpIHtcbiAgICAgICAgICBjYXNlICdtb2RlbCc6XG4gICAgICAgICAgICB1cGRhdGVTdGF0ZVZhbHVlID0gdXBkYXRlU3RhdGVWYWx1ZS50b0pTT04oKTtcbiAgICAgICAgICAgIGRlbGV0ZSB1cGRhdGVTdGF0ZVZhbHVlLl9pZDtcbiAgICAgICAgICAgIGRlbGV0ZSB1cGRhdGVTdGF0ZVZhbHVlLl9fdjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbHVtbk5hbWVzID09PSAnKicpIHtcbiAgICAgICAgICByZXNwb25zZVN0YXRlID0ge1xuICAgICAgICAgICAgLi4ucmVzcG9uc2VTdGF0ZSxcbiAgICAgICAgICAgIFt1cGRhdGVTdGF0ZUtleV06IHVwZGF0ZVN0YXRlVmFsdWUsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb2x1bW5OYW1lcy5mb3JFYWNoKChjb2x1bW5OYW1lKSA9PiB7XG4gICAgICAgICAgICBpZiAodXBkYXRlU3RhdGVbdXBkYXRlU3RhdGVLZXldW2NvbHVtbk5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgcmVzcG9uc2VTdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICAuLi5yZXNwb25zZVN0YXRlLFxuICAgICAgICAgICAgICAgIFt1cGRhdGVTdGF0ZUtleV06IHtcbiAgICAgICAgICAgICAgICAgIC4uLnJlc3BvbnNlU3RhdGVbdXBkYXRlU3RhdGVLZXldLFxuICAgICAgICAgICAgICAgICAgW2NvbHVtbk5hbWVdOiB1cGRhdGVTdGF0ZVt1cGRhdGVTdGF0ZUtleV1bY29sdW1uTmFtZV0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRocm93IGBTRVFVRU5DRSBFUlJPUjogTk9fVVBEQVRFX1NUQVRFX0NPTFVNTl9OQU1FOiAke3JlcXVlc3RTdGF0ZS50eXBlfTogJHt1cGRhdGVTdGF0ZUtleX0uJHtjb2x1bW5OYW1lfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IGBTRVFVRU5DRSBFUlJPUjogTk9fVVBEQVRFX1NUQVRFX0tFWTogJHtyZXF1ZXN0U3RhdGUudHlwZX06ICR7dXBkYXRlU3RhdGVLZXl9YDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2VTdGF0ZTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRSZXF1ZXN0QWN0aW9uU3RhdGUoYWN0aW9uTmFtZSwgcmVxdWVzdFBhcmFtczEgPSBudWxsLCByZXF1ZXN0UGFyYW1zMiA9IG51bGwpIHtcbiAgICBpZiAodHlwZW9mIHJlcXVlc3RQYXJhbXMxID09PSAnc3RyaW5nJyAmJiByZXF1ZXN0UGFyYW1zMiA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHsgdHlwZTogYWN0aW9uTmFtZSB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJlcXVlc3RQYXJhbXMxID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgcmVxdWVzdFBhcmFtczIgPT09ICdvYmplY3QnKSB7XG4gICAgICByZXR1cm4geyAuLi5yZXF1ZXN0UGFyYW1zMSwgLi4ucmVxdWVzdFBhcmFtczIsIHR5cGU6IGFjdGlvbk5hbWUgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1ZXN0UGFyYW1zMSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHJlcXVlc3RQYXJhbXMyID09PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHsgLi4ucmVxdWVzdFBhcmFtczIsIHR5cGU6IGFjdGlvbk5hbWUgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgLi4ucmVxdWVzdFBhcmFtczEsIHR5cGU6IGFjdGlvbk5hbWUgfTtcbiAgfVxufVxuIiwiaW1wb3J0IG9zIGZyb20gJ29zJztcbmltcG9ydCBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuXG5pbXBvcnQgZGVmaW5lIGZyb20gJy4vZGVmaW5lJztcblxuY29uc3QgeyBQUk9EVUNUSU9OLCBERVZFTE9QTUVOVCwgUFJPRFVDVElPTl9ET01BSU4sIERFVkVMT1BNRU5UX0RPTUFJTiwgU1VCX0RPTUFJTlMsIFBPUlRTIH0gPSBkZWZpbmU7XG5jb25zdCBhcGlWZXIgPSAxO1xuY29uc3QgaG9zdE5hbWUgPSBvcy5oYXNPd25Qcm9wZXJ0eSgnaG9zdG5hbWUnKSA/IG9zLmhvc3RuYW1lKCkgOiBERVZFTE9QTUVOVF9ET01BSU47XG5jb25zdCBlbnYgPSBnZXRFbnYoaG9zdE5hbWUpO1xuY29uc3QgZmlsZXMgPSB7XG4gIGNsaWVudDogJ3RhbGtuLmNsaWVudC5qcycsXG4gIGFwaTogJ3RhbGtuLmFwaS5qcycsXG4gIHdzV29ya2VyOiAnd3MuYXBpLndvcmtlci5qcycsXG4gIGV4dDogJ3RhbGtuLmV4dC5qcycsXG4gIGNvdmVyOiAndGFsa24uY292ZXIuanMnLFxuICB0dW5lOiAndGFsa24udHVuZS5qcycsXG4gIGNvbXBvbmVudHM6ICd0YWxrbi5jb21wb25lbnRzLmpzJyxcbn07XG5jb25zdCBpc0RldiA9IGVudiA9PT0gREVWRUxPUE1FTlQ7XG5jb25zdCBkb21haW4gPSBlbnYgPT09IFBST0RVQ1RJT04gPyBQUk9EVUNUSU9OX0RPTUFJTiA6IERFVkVMT1BNRU5UX0RPTUFJTjtcbmNvbnN0IHd3d1VSTCA9IGAke1NVQl9ET01BSU5TLldXV30uJHtkb21haW59YDtcbmNvbnN0IGNvdmVyVVJMID0gYCR7U1VCX0RPTUFJTlMuQ09WRVJ9LiR7ZG9tYWlufWA7XG5jb25zdCBhcGlVUkwgPSBgJHtTVUJfRE9NQUlOUy5BUEl9LiR7ZG9tYWlufWA7XG5jb25zdCBhcGlBY2Nlc3NVUkwgPSBpc0RldiA/IGAke2RvbWFpbn06JHtQT1JUUy5ERVZFTE9QTUVOVF9BUEl9LyR7ZmlsZXMuYXBpfWAgOiBgJHthcGlVUkx9L3Yke2FwaVZlcn1gO1xuY29uc3QgY2xpZW50VVJMID0gaXNEZXYgPyBgJHtkb21haW59OiR7UE9SVFMuREVWRUxPUE1FTlRfQ0xJRU5UfS8ke2ZpbGVzLmNsaWVudH1gIDogYCR7U1VCX0RPTUFJTlMuQ0xJRU5UfS4ke2RvbWFpbn1gO1xuY29uc3QgZGVzY1VSTCA9IGAke1NVQl9ET01BSU5TLkRFU0N9LiR7ZG9tYWlufWA7XG5jb25zdCBwb3J0YWxVUkwgPSBgJHtTVUJfRE9NQUlOUy5QT1JUQUx9LiR7ZG9tYWlufWA7XG5jb25zdCBhc3NldHNVUkwgPSBgJHtTVUJfRE9NQUlOUy5BU1NFVFN9LiR7ZG9tYWlufWA7XG5jb25zdCBhdXRvVVJMID0gYCR7U1VCX0RPTUFJTlMuQVVUT30uJHtkb21haW59YDtcbmNvbnN0IGV4dFVSTCA9IGAke1NVQl9ET01BSU5TLkVYVH0uJHtkb21haW59YDtcbmNvbnN0IGNvbXBVUkwgPSBgJHtTVUJfRE9NQUlOUy5DT01QfS4ke2RvbWFpbn1gO1xuY29uc3Qgb3duVVJMID0gYCR7U1VCX0RPTUFJTlMuT1dOfS4ke2RvbWFpbn1gO1xuY29uc3QgbmV3c1VSTCA9IGAke1NVQl9ET01BSU5TLk5FV1N9LiR7ZG9tYWlufWA7XG5jb25zdCB0dW5lVVJMID0gYCR7U1VCX0RPTUFJTlMuVFVORX0uJHtkb21haW59YDtcbmNvbnN0IGNvbXBvbmVudHNVUkwgPSBgJHtTVUJfRE9NQUlOUy5DT01QT05FTlRTfS4ke2RvbWFpbn1gO1xuY29uc3QgYmFubmVyVVJMID0gYCR7U1VCX0RPTUFJTlMuQkFOTkVSfS4ke2RvbWFpbn1gO1xuY29uc3QgdHJhbnNhY3Rpb25VUkwgPSBgJHtTVUJfRE9NQUlOUy5UUkFOU0FDVElPTn0uJHtkb21haW59YDtcbmNvbnN0IGFzc2V0c0ltZ1BhdGggPSBgJHthc3NldHNVUkx9L2ltZy9gO1xuY29uc3QgYXNzZXRzQ292ZXJQYXRoID0gYCR7YXNzZXRzVVJMfS9jb3Zlci9gO1xuY29uc3QgYXNzZXRzSWNvblBhdGggPSBgJHthc3NldHNVUkx9L2ljb24vYDtcbmNvbnN0IGFzc2V0c0pzUGF0aCA9IGAke2Fzc2V0c1VSTH0vanMvYDtcbmNvbnN0IHNlc3Npb25VUkwgPSBgJHtTVUJfRE9NQUlOUy5TRVNTSU9OfS4ke2RvbWFpbn1gO1xuY29uc3QgZGVzY3JpcHRpb24gPSAndGFsa24gY2FuIHNoYXJlIGNvbW1lbnRzIHdpdGggdXNlcnMgd2F0Y2hpbmcgdGhlIHNhbWUgV0VCIHBhZ2UuIFBsZWFzZSBlbmpveSB0aGUgd29ybGQgb2YgdGFsa24uJztcbmNvbnN0IGxwTGFuZ3VhZ2VzID0gW1xuICAnZW4nLFxuICAnemgnLFxuICAnamEnLFxuICAnZGUnLFxuICAnZnInLFxuICAnaGknLFxuICAncHQnLFxuICAnaXQnLFxuICAncnUnLFxuICAna28nLFxuICAnZXMnLFxuICAnaWQnLFxuICAndHInLFxuICAnbmwnLFxuICAnYXInLFxuICAnemgtVFcnLFxuICAncGwnLFxuICAnc3YnLFxuICAndGgnLFxuICAnZmEnLFxuICAnbm4nLFxuICAnZ2EnLFxuICAnaGUnLFxuICAnbXInLFxuXTtcblxuY29uc3QgZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUgPSAxMDAwMDAwMDAwMDAwO1xuY29uc3QgZmluZE9uZVRocmVhZEFjdGl2ZUhvdXIgPSAxO1xuY29uc3QgZmluZE9uZVBvc3RDbnQgPSAzMDtcbmNvbnN0IGZpbmRPbmVMaW1pdENudCA9IDMwMDtcbmNvbnN0IG9ncEltYWdlcyA9IHtcbiAgSHRtbDogYC8vJHthc3NldHNJbWdQYXRofXRhbGtuX2xvZ29faHRtbC5wbmdgLFxuICBNdXNpYzogYC8vJHthc3NldHNJbWdQYXRofXRhbGtuX2xvZ29fbXVzaWMucG5nYCxcbiAgVmlkZW86IGAvLyR7YXNzZXRzSW1nUGF0aH10YWxrbl9sb2dvX3ZpZGVvLnBuZ2AsXG59O1xuY29uc3QgZGVmYXVsdEZhdmljb24gPSBgLy8ke1NVQl9ET01BSU5TLkFTU0VUU30uJHtkb21haW59L2Zhdmljb24uaWNvYDtcblxuY29uc3QgY29uZjogYW55ID0ge1xuICBkb21haW4sXG4gIGlzRGV2LFxuICBlbnYsXG4gIGZpbGVzLFxuICBob3N0TmFtZSxcbiAgYXBpVVJMLFxuICBhcGlBY2Nlc3NVUkwsXG4gIGNvdmVyVVJMLFxuICB3d3dVUkwsXG4gIGRlc2NVUkwsXG4gIHBvcnRhbFVSTCxcbiAgY2xpZW50VVJMLFxuICBhc3NldHNVUkwsXG4gIGF1dG9VUkwsXG4gIGV4dFVSTCxcbiAgY29tcFVSTCxcbiAgb3duVVJMLFxuICBuZXdzVVJMLFxuICB0dW5lVVJMLFxuICBiYW5uZXJVUkwsXG4gIGNvbXBvbmVudHNVUkwsXG4gIHRyYW5zYWN0aW9uVVJMLFxuICBhc3NldHNJbWdQYXRoLFxuICBhc3NldHNDb3ZlclBhdGgsXG4gIGFzc2V0c0ljb25QYXRoLFxuICBhc3NldHNKc1BhdGgsXG4gIHNlc3Npb25VUkwsXG4gIGRlc2NyaXB0aW9uLFxuICBhcGlWZXIsXG4gIGxwTGFuZ3VhZ2VzLFxuICBkZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbiAgZmluZE9uZVRocmVhZEFjdGl2ZUhvdXIsXG4gIGZpbmRPbmVQb3N0Q250LFxuICBmaW5kT25lTGltaXRDbnQsXG4gIG9ncEltYWdlcyxcbiAgZGVmYXVsdEZhdmljb24sXG59O1xuZXhwb3J0IGRlZmF1bHQgeyAuLi5jb25mIH07XG5cbi8vIFRPRE86IE1vdmUgdG8gc2VydmVyIGNvbmYoIG5vdCB1c2UgZnJvbSBjbGllbnQgKS5cbmZ1bmN0aW9uIGdldEVudihob3N0TmFtZSkge1xuICAvLyBmcm9tIGNsaWVudC5cbiAgaWYgKHByb2Nlc3MudGl0bGUgPT09ICdicm93c2VyJykge1xuICAgIGlmIChsb2NhdGlvbi5ocmVmLmluZGV4T2YoZGVmaW5lLkRFVkVMT1BNRU5UX0RPTUFJTikgPj0gMCkge1xuICAgICAgY29uc3QgcG9ydCA9IE51bWJlcihsb2NhdGlvbi5wb3J0KTtcbiAgICAgIHJldHVybiBwb3J0ID09PSBkZWZpbmUuUE9SVFMuREVWRUxPUE1FTlRfQ0xJRU5UIHx8XG4gICAgICAgIHBvcnQgPT09IGRlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9BUEkgfHxcbiAgICAgICAgcG9ydCA9PT0gZGVmaW5lLlBPUlRTLkRFVkVMT1BNRU5UX0NPVkVSIHx8XG4gICAgICAgIHBvcnQgPT09IGRlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9DT01QT05FTlRTIHx8XG4gICAgICAgIHBvcnQgPT09IGRlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9UVU5FXG4gICAgICAgID8gZGVmaW5lLkRFVkVMT1BNRU5UXG4gICAgICAgIDogZGVmaW5lLkxPQ0FMSE9TVDtcbiAgICB9XG4gICAgcmV0dXJuIGRlZmluZS5QUk9EVUNUSU9OO1xuICAgIC8vIGZyb20gc2VydmVyLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBob3N0TmFtZS5pbmRleE9mKGRlZmluZS5BV1NfSE9TVF9LRVkpID49IDAgPyBkZWZpbmUuUFJPRFVDVElPTiA6IGRlZmluZS5ERVZFTE9QTUVOVDtcbiAgfVxufVxuIiwiaW1wb3J0IHByb2Nlc3MgZnJvbSAncHJvY2Vzcyc7XG5cbmNvbnN0IGhvc3ROYW1lID0gcHJvY2Vzcy5lbnYuSE9TVE5BTUUgPyBwcm9jZXNzLmVudi5IT1NUTkFNRSA6ICdsb2NhbGhvc3QnO1xuY29uc3QgZGVmaW5lOiBhbnkgPSB7XG4gIEFQUF9OQU1FOiAndGFsa24nLFxuICBQUk9EVUNUSU9OOiAnUFJPRFVDVElPTicsXG4gIExPQ0FMSE9TVDogJ0xPQ0FMSE9TVCcsXG4gIERFVkVMT1BNRU5UOiAnREVWRUxPUE1FTlQnLFxuICBQUk9EVUNUSU9OX0lQOiBob3N0TmFtZSxcbiAgUFJPRFVDVElPTl9ET01BSU46ICd0YWxrbi5pbycsXG4gIERFVkVMT1BNRU5UX0RPTUFJTjogJ2xvY2FsaG9zdCcsXG4gIEFXU19IT1NUX0tFWTogJ2VjMi5pbnRlcm5hbCcsXG4gIFBPUlRTOiB7XG4gICAgSFRUUDogODAsXG4gICAgSFRUUFM6IDQ0MyxcbiAgICBERVZFTE9QTUVOVF9DT1ZFUjogODAwMCxcbiAgICBERVZFTE9QTUVOVF9BUEk6IDgwMDEsXG4gICAgREVWRUxPUE1FTlRfQ09NUE9ORU5UUzogODAwMixcbiAgICBERVZFTE9QTUVOVF9UVU5FOiA4MDAzLFxuICAgIERFVkVMT1BNRU5UX0NMSUVOVDogODA4MCxcbiAgICBSRURJUzogNjM3OSxcbiAgICBNT05HTzogMjcwMTcsXG4gICAgU09DS0VUX0lPOiAxMDQ0MyxcbiAgfSxcbiAgU1VCX0RPTUFJTlM6IHtcbiAgICBXV1c6ICd3d3cnLFxuICAgIEFQSTogJ2FwaScsXG4gICAgREVTQzogJ2Rlc2MnLFxuICAgIFBPUlRBTDogJ3BvcnRhbCcsXG4gICAgQ0xJRU5UOiAnY2xpZW50JyxcbiAgICBBU1NFVFM6ICdhc3NldHMnLFxuICAgIFNFU1NJT046ICdzZXNzaW9uJyxcbiAgICBBVVRPOiAnYXV0bycsXG4gICAgT1dOOiAnb3duJyxcbiAgICBORVdTOiAnbmV3cycsXG4gICAgQkFOTkVSOiAnYmFubmVyJyxcbiAgICBDT1ZFUjogJ2NvdmVyJyxcbiAgICBSQU5LOiAncmFuaycsXG4gICAgRVhUOiAnZXh0JyxcbiAgICBDT01QT05FTlRTOiAnY29tcG9uZW50cycsXG4gICAgVFVORTogJ3R1bmUnLFxuICAgIFRSQU5TQUNUSU9OOiAndHJhbnNhY3Rpb24nLFxuICB9LFxuICBBUFBfVFlQRVM6IHtcbiAgICBDTElFTlQ6ICdDTElFTlQnLFxuICAgIFBPUlRBTDogJ1BPUlRBTCcsXG4gICAgRVhURU5TSU9OOiAnRVhURU5TSU9OJyxcbiAgICBBUEk6ICdBUEknLFxuICAgIENPVkVSOiAnQ09WRVInLFxuICAgIENPTVBPTkVOVFM6ICdDT01QT05FTlRTJyxcbiAgICBUVU5FOiAnVFVORScsXG4gIH0sXG4gIFVSTDoge1xuICAgIHR3aXR0ZXI6ICdodHRwczovL3R3aXR0ZXIuY29tLycsXG4gICAgZmFjZWJvb2s6ICdodHRwczovL3d3dy5mYWNlYm9vay5jb20vJyxcbiAgICBhcHBzdG9yZTogJ2h0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS9hcHAvaWQnLFxuICAgIHBsYXlzdG9yZTogJ2h0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD0nLFxuICAgIGNocm9tZUV4dGVuc2lvbjogJ2h0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL3RhbGtuLWZvci1jaHJvbWUvZGtuZ25tZGxjb2ZhbWJwZmFjY2VwYm5qZ2Zob2xnYm8/aGw9ZW4nLFxuICB9LFxuICB0YWxrbkNsaWVudEpzOiAndGFsa24uY2xpZW50LmpzJyxcbiAgdGFsa25BcGlKczogJ3RhbGtuLmFwaS5qcycsXG4gIHRhbGtuUmFua0pzOiAndGFsa24ucmFuay5qcycsXG4gIG5vSW5uZXJOb3RpZjogJ1NvcnJ5LCBObyBGdW5jdGlvbi4nLFxuICBiYW5uZXJDbGFzczogJ3RhbGtuX2Jhbm5lcicsXG4gIHN0b3JhZ2VLZXk6IHtcbiAgICBiYXNlS2V5OiAnQHRhbGtuQCcsXG4gICAgcG9zdHNUaW1lbGluZVplcm86ICdwb3N0c1RpbWVsaW5lWmVybycsXG4gICAgcG9zdHNUaW1lbGluZTogJ3Bvc3RzVGltZWxpbmUnLFxuICAgIHBvc3RzU2luZ2xlOiAncG9zdHNTaW5nbGUnLFxuICAgIHBvc3RzTXVsdGk6ICdwb3N0c011bHRpJyxcbiAgICBwb3N0c0NoaWxkOiAncG9zdHNDaGlsZCcsXG4gICAgcG9zdHNMb2dzOiAncG9zdHNMb2dzJyxcbiAgICB0aHJlYWRzOiAndGhyZWFkcycsXG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWZpbmU7XG4iLCJjb25zdCBtZWRpYVR5cGVzID0ge1xuICBuZXdzOiB7XG4gICAgZW5kcG9pbnRIb3N0OiAnbWljcm9zb2Z0LWF6dXJlLWJpbmctbmV3cy1zZWFyY2gtdjEucC5yYXBpZGFwaS5jb20nLFxuICAgIGVuZHBvaW50U2VhcmNoSG9zdDogJ21pY3Jvc29mdC1henVyZS1iaW5nLW5ld3Mtc2VhcmNoLXYxLnAucmFwaWRhcGkuY29tL3NlYXJjaD9xPScsXG4gICAgZW5kcG9pbnRLZXk6ICcyY2EyNTgxM2MwbXNoOWRiNDgzYzM1MzBjMTQzcDEwMDliZGpzbmRlNTBiNjU3NWNmMScsXG4gIH0sXG4gIG11c2ljOiB7XG4gICAgZW5kcG9pbnRIb3N0OiAnaHR0cHM6Ly9yc3MuaXR1bmVzLmFwcGxlLmNvbS9hcGkvdjEvJHtjb3VudHJ5fS8ke21lZGlhfS8ke2dlbnJlfS9hbGwvJHtsaW1pdH0vZXhwbGljaXQuanNvbicsXG4gICAgZW5kcG9pbnRTZWFyY2hIb3N0OiAnJyxcbiAgICBlbmRwb2ludEtleTogJycsXG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBtZWRpYVR5cGVzO1xuIiwiZXhwb3J0IGNvbnN0IGNvbmZpZ1VzZXJDYXRlZ29yeUNoTGltaXQgPSAxMDtcbmV4cG9ydCBjb25zdCBjb25maWdTdG9yaWVzTGltaXQgPSAxMDtcbmV4cG9ydCB0eXBlIFN0b3JpZXNUeXBlID0ge1xuICB0aXRsZTogc3RyaW5nO1xuICBleWVDYXRjaDogc3RyaW5nO1xuICBpbnRlcnZpZXc6IHN0cmluZztcbiAgY2g/OiBzdHJpbmc7XG4gIG5vPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IHR5cGUgQ29uZmlnVHlwZSA9IHtcbiAgdmVyc2lvbjogc3RyaW5nO1xuICBzdG9yaWVzOiBTdG9yaWVzVHlwZVtdO1xuICB1c2VyQ2F0ZWdvcnlDaHM6IHN0cmluZ1tdO1xuICBmYXZpY29uOiBzdHJpbmc7XG4gIG9ncEltYWdlOiBzdHJpbmc7XG4gIGlhbVRhZ3M6IHN0cmluZ1tdO1xuICByZWxhdGlvblRhZ3M6IHN0cmluZ1tdO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbmZpZ0luaXQ6IENvbmZpZ1R5cGUgPSB7XG4gIHZlcnNpb246ICcxLjAuMCcsXG4gIHN0b3JpZXM6IFtdLFxuICB1c2VyQ2F0ZWdvcnlDaHM6IFtdLFxuICBmYXZpY29uOiAnJyxcbiAgb2dwSW1hZ2U6ICcnLFxuICBpYW1UYWdzOiBbXSxcbiAgcmVsYXRpb25UYWdzOiBbXSxcbn07XG5cbmV4cG9ydCBjb25zdCBzdG9yaWVzSW5pdDogU3Rvcmllc1R5cGUgPSB7XG4gIHRpdGxlOiAnJyxcbiAgZXllQ2F0Y2g6ICcnLFxuICBpbnRlcnZpZXc6ICcnLFxufTtcbiIsImltcG9ydCBhdG9iIGZyb20gJ2F0b2InO1xuXG5pbXBvcnQgVWkgZnJvbSAnY2xpZW50L3N0b3JlL1VpJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpc1VybDogKHN0cikgPT4ge1xuICAgIGNvbnN0IHBhdHRlcm4gPSBuZXcgUmVnRXhwKFxuICAgICAgJ14oaHR0cHM/OlxcXFwvXFxcXC8pPycgKyAvLyBwcm90b2NvbFxuICAgICAgICAnKCgoW2EtelxcXFxkXShbYS16XFxcXGQtXSpbYS16XFxcXGRdKSopXFxcXC4pK1thLXpdezIsfXwnICsgLy8gZG9tYWluIG5hbWVcbiAgICAgICAgJygoXFxcXGR7MSwzfVxcXFwuKXszfVxcXFxkezEsM30pKScgKyAvLyBPUiBpcCAodjQpIGFkZHJlc3NcbiAgICAgICAgJyhcXFxcOlxcXFxkKyk/KFxcXFwvWy1hLXpcXFxcZCVfLn4rXSopKicgKyAvLyBwb3J0IGFuZCBwYXRoXG4gICAgICAgICcoXFxcXD9bOyZhLXpcXFxcZCVfLn4rPS1dKik/JyArIC8vIHF1ZXJ5IHN0cmluZ1xuICAgICAgICAnKFxcXFwjWy1hLXpcXFxcZF9dKnxcXFxcLyk/JCcsIC8vIGZyYWdtZW50IGxvY2F0b3JcbiAgICAgICdpJ1xuICAgICk7IC8vIGZyYWdtZW50IGxvY8OlYXRvclxuXG4gICAgcmV0dXJuICFwYXR0ZXJuLnRlc3Qoc3RyKSA/IGZhbHNlIDogdHJ1ZTtcbiAgfSxcbiAgZ2V0U2F2ZUZhdmljb25OYW1lOiAoZmlsZU5hbWUpID0+IHtcbiAgICBpZiAoZmlsZU5hbWUpIHtcbiAgICAgIGNvbnN0IF9maWxlTmFtZSA9IGZpbGVOYW1lLnJlcGxhY2UoL1xcdTAwMmYvZywgJ18nKTtcbiAgICAgIHJldHVybiBfZmlsZU5hbWUuaW5kZXhPZignLnBuZycpID4gMCA/IF9maWxlTmFtZSA6IF9maWxlTmFtZSArICcucG5nJztcbiAgICB9XG4gIH0sXG4gIHRyaW1QeDogKHZhbHVlKSA9PiB7XG4gICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCkucmVwbGFjZSgncHgnLCAnJyk7XG4gIH0sXG4gIGdldFVwcGVyUHJlZml4OiAoc3RyKSA9PiB7XG4gICAgbGV0IHRleHQgPSBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG4gICAgcmV0dXJuIHRleHQuc3Vic3RyaW5nKDAsIDEpLnRvVXBwZXJDYXNlKCkgKyB0ZXh0LnN1YnN0cmluZygxKTtcbiAgfSxcbiAgdGltZUFnb0Zvcm1hdHRlcjogKHZhbHVlLCB1bml0LCBzdWZmaXgsIGV4dGVuc2lvbk1vZGUgPSBVaS5leHRlbnNpb25Nb2RlTm9uZSkgPT4ge1xuICAgIGxldCBzaG9ydFVuaXQgPSBTdHJpbmcodW5pdCk7XG4gICAgc3dpdGNoIChTdHJpbmcodW5pdCkpIHtcbiAgICAgIGNhc2UgJ3llYXInOlxuICAgICAgICBzaG9ydFVuaXQgPSAnWVInO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ21vJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd3ZWVrJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ3drJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdob3VyJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ2hyJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtaW51dGUnOlxuICAgICAgICBzaG9ydFVuaXQgPSAnbWluJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzZWNvbmQnOlxuICAgICAgICBzaG9ydFVuaXQgPSAnc2VjJztcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNvbnN0IGRpc3BTdWZmaXggPSBleHRlbnNpb25Nb2RlID09PSBVaS5leHRlbnNpb25Nb2RlTm9uZSA/IHN1ZmZpeCA6IHN1ZmZpeC5yZXBsYWNlKCdhZ28nLCAnJyk7XG4gICAgcmV0dXJuIGAke3ZhbHVlfSAke3Nob3J0VW5pdH0gJHtkaXNwU3VmZml4fWA7XG4gIH0sXG4gIHBhcnNlSnd0OiAodG9rZW4pID0+IHtcbiAgICBpZiAodG9rZW4gPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgIGNvbnN0IGJhc2U2NFVybCA9IHRva2VuLnNwbGl0KCcuJylbMV07XG4gICAgY29uc3QgYmFzZTY0ID0gYmFzZTY0VXJsLnJlcGxhY2UoLy0vZywgJysnKS5yZXBsYWNlKC9fL2csICcvJyk7XG4gICAgY29uc3QganNvblBheWxvYWQgPSBkZWNvZGVVUklDb21wb25lbnQoXG4gICAgICBhdG9iKGJhc2U2NClcbiAgICAgICAgLnNwbGl0KCcnKVxuICAgICAgICAubWFwKChjKSA9PiB7XG4gICAgICAgICAgcmV0dXJuICclJyArICgnMDAnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpO1xuICAgICAgICB9KVxuICAgICAgICAuam9pbignJylcbiAgICApO1xuICAgIHJldHVybiBKU09OLnBhcnNlKGpzb25QYXlsb2FkKTtcbiAgfSxcbiAgZGVlcENvcHk6IChvYmopID0+IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTtcbiAgfSxcbiAgZGVlcEVxdWFsczogKG9iajEsIG9iajIpID0+IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqMSkgPT09IEpTT04uc3RyaW5naWZ5KG9iajIpO1xuICB9LFxuICBnZXRBZ2VCeUJpcnRoZGF5OiAoYmlydGhkYXk6IG51bWJlcik6IG51bWJlciB8ICctJyA9PiB7XG4gICAgbGV0IHJldHVybkFnZSA9IHVuZGVmaW5lZDtcbiAgICBpZiAoYmlydGhkYXkgIT09IDApIHtcbiAgICAgIGNvbnN0IGJpcnRoRGF0ZSA9IG5ldyBEYXRlKGJpcnRoZGF5KTtcbiAgICAgIGNvbnN0IG5vd0RhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgY29uc3QgYWdlID0gbm93RGF0ZS5nZXRGdWxsWWVhcigpIC0gYmlydGhEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICBjb25zdCB0aGlzWWVhcnNCaXJ0aGRheSA9IG5ldyBEYXRlKG5vd0RhdGUuZ2V0RnVsbFllYXIoKSwgYmlydGhEYXRlLmdldE1vbnRoKCksIGJpcnRoRGF0ZS5nZXREYXRlKCkpO1xuICAgICAgcmV0dXJuQWdlID0gYWdlICsgKHRoaXNZZWFyc0JpcnRoZGF5LmdldFRpbWUoKSA+IG5vd0RhdGUuZ2V0VGltZSgpID8gLTEgOiAwKTtcbiAgICB9XG4gICAgcmV0dXJuIHJldHVybkFnZSA/IHJldHVybkFnZSA6ICctJztcbiAgfSxcbiAgZ2V0VW5pcXVlSWQ6IChsYWJlbDogc3RyaW5nLCBzdHJvbmcgPSAxMDAwKSA9PiB7XG4gICAgcmV0dXJuIGAke2xhYmVsfV8ke25ldyBEYXRlKCkuZ2V0VGltZSgpLnRvU3RyaW5nKDE2KSArIE1hdGguZmxvb3Ioc3Ryb25nICogTWF0aC5yYW5kb20oKSkudG9TdHJpbmcoMTYpfWA7XG4gIH0sXG4gIGdldEhlYWRVcHBlcjogKHN0cjogc3RyaW5nKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnIHx8ICFzdHIpIHJldHVybiBzdHI7XG4gICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKS50b0xvd2VyQ2FzZSgpO1xuICB9LFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IENvbnRhaW5lciBmcm9tICdjb3Zlci9jb250YWluZXInO1xuXG5jb25zdCBSZW5kZXIgPSAoKSA9PiB7XG4gIFJlYWN0RE9NLnJlbmRlcihcbiAgICA8UmVhY3QuU3RyaWN0TW9kZT5cbiAgICAgIDxDb250YWluZXIgLz5cbiAgICA8L1JlYWN0LlN0cmljdE1vZGU+LFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdiN0YWxrbicpXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBSZW5kZXI7XG4iLCJpbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmNvbnN0IG1ldGhvZCA9ICdQT1NUJztcbmNvbnN0IG1vZGUgPSAnY29ycyc7XG5cbnR5cGUgUmVzcG9uc2VSZXN1bHRUeXBlID0ge1xuICByZXNwb25zZTogYW55O1xuICBlcnJvcjogc3RyaW5nO1xufTtcblxuZXhwb3J0IGNvbnN0IGpzb24gPSBhc3luYyAoYWN0aW9uLCBfYm9keSA9IHt9KSA9PiB7XG4gIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeShfYm9keSk7XG4gIGlmIChKU09OLnBhcnNlKGJvZHkpKSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly8ke2NvbmYuY292ZXJVUkx9L2FwaS8ke2FjdGlvbn1gLCB7XG4gICAgICBtZXRob2QsXG4gICAgICBtb2RlLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD11dGYtOCcsXG4gICAgICB9LFxuICAgICAgY2FjaGU6ICduby1jYWNoZScsXG4gICAgICBib2R5LFxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVzcG9uc2VSZXNkdWx0SnNvbjogUmVzcG9uc2VSZXN1bHRUeXBlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGlmIChyZXNwb25zZVJlc2R1bHRKc29uLmVycm9yICYmIHJlc3BvbnNlUmVzZHVsdEpzb24uZXJyb3IgIT09ICcnKSB7XG4gICAgICBjb25zb2xlLndhcm4ocmVzcG9uc2VSZXNkdWx0SnNvbi5lcnJvcik7XG4gICAgfVxuICAgIHJldHVybiByZXNwb25zZVJlc2R1bHRKc29uLnJlc3BvbnNlO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybURhdGEgPSBhc3luYyAoYWN0aW9uLCBlbWFpbCwgYm9keSkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovLyR7Y29uZi5jb3ZlclVSTH0vYXBpLyR7YWN0aW9ufWAsIHtcbiAgICBtZXRob2QsXG4gICAgbW9kZSxcbiAgICBjYWNoZTogJ25vLWNhY2hlJyxcbiAgICBib2R5LFxuICB9KTtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgY29uc29sZS53YXJuKHJlc3BvbnNlKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBqc29uLFxuICBmb3JtRGF0YSxcbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBJbnRlcmFjdGl2ZVByb3BzLCBmbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LCBib3hMYXlvdXRQcm9wc0luaXQsIEJveExheW91dENzcyB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCBjb25zdCBidXR0b25UaGVtZUhvdCA9IHN0eWxlcy5ob3RDb2xvcjtcbmV4cG9ydCBjb25zdCBidXR0b25UaGVtZUZsYXQgPSBzdHlsZXMuZmxhdENvbG9yO1xuZXhwb3J0IGNvbnN0IGJ1dHRvblRoZW1lQ29sZCA9IHN0eWxlcy5jb2xkQ29sb3I7XG5leHBvcnQgY29uc3QgYnV0dG9uVGhlbWVCcmlnaHQgPSBzdHlsZXMuYnJpZ2h0Q29sb3I7XG5leHBvcnQgY29uc3QgYnV0dG9uVGhlbWVCYXNlID0gc3R5bGVzLmJhc2VDb2xvcjtcbmV4cG9ydCBjb25zdCBidXR0b25UaGVtZURlZmF1bHQgPSBzdHlsZXMudGhlbWVDb2xvcjtcbmV4cG9ydCB0eXBlIEJ1dHRvblRoZW1lVHlwZSA9XG4gIHwgdHlwZW9mIGJ1dHRvblRoZW1lRGVmYXVsdFxuICB8IHR5cGVvZiBidXR0b25UaGVtZUhvdFxuICB8IHR5cGVvZiBidXR0b25UaGVtZUZsYXRcbiAgfCB0eXBlb2YgYnV0dG9uVGhlbWVDb2xkXG4gIHwgdHlwZW9mIGJ1dHRvblRoZW1lQmFzZVxuICB8IHR5cGVvZiBidXR0b25UaGVtZUJyaWdodDtcblxudHlwZSBCdXR0b25Qcm9wc1R5cGUgPSB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIG9uQ2xpY2s/OiAoKSA9PiB2b2lkO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIHRoZW1lPzogQnV0dG9uVGhlbWVUeXBlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGFuaW1hdGlvbj86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IEludGVyYWN0aXZlUHJvcHMgJiBCdXR0b25Qcm9wc1R5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBbZGlkTW91bnQsIHNldERpZE1vdW50XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uZmxleExheW91dENlbnRlclByb3BzSW5pdCxcbiAgICAuLi5ib3hMYXlvdXRQcm9wc0luaXQsXG4gICAgdGhlbWU6IGJ1dHRvblRoZW1lRGVmYXVsdCxcbiAgICBhbmltYXRpb246IHRydWUsXG4gICAgY2xhc3NOYW1lOiAnQnV0dG9uJyxcbiAgICB3aWR0aDogJ2F1dG8nLFxuICAgIC4uLnByb3BzLFxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0RGlkTW91bnQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxCdXR0b24gey4uLnB9IGRpZE1vdW50PXtkaWRNb3VudH0+XG4gICAgICB7cC5jaGlsZHJlbn1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBCdXR0b25TdHlsZWRQcm9wc1R5cGUgPSB7XG4gIGRpZE1vdW50OiBib29sZWFuO1xufSAmIFByb3BzO1xuXG5leHBvcnQgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbjxCdXR0b25TdHlsZWRQcm9wc1R5cGU+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAke3N0eWxlcy5iYXNlSGVpZ2h0fXB4O1xuICAke0JveExheW91dENzc307XG4gIG1pbi13aWR0aDogYXV0bztcbiAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weCAke3N0eWxlcy5kb3VibGVQYWRkaW5nICogMn1weDtcbiAgY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb2xvcihwcm9wcyl9O1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgfHwgcHJvcHMub25DbGljayA9PT0gdW5kZWZpbmVkID8gJ25vcm1hbCcgOiAncG9pbnRlcicpfTtcbiAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IGdldEJhY2tncm91bmQocHJvcHMpfTtcbiAgYm9yZGVyOiAkeyhwcm9wcykgPT4gKHByb3BzLmRpc2FibGVkID8gMSA6IDApfXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gIHRyYW5zaXRpb246ICR7KHByb3BzKSA9PiAocHJvcHMuZGlkTW91bnQgJiYgcHJvcHMuYW5pbWF0aW9uID8gc3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbiA6IDApfW1zO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBmb250LXdlaWdodDogMjAwO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gKHByb3BzLmRpc2FibGVkIHx8IHByb3BzLm9uQ2xpY2sgPT09IHVuZGVmaW5lZCA/IDAgOiBzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodCl9O1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgcGFkZGluZzogJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHggJHtzdHlsZXMuZG91YmxlUGFkZGluZyAqIDEuNX1weDtcbiAgfVxuYDtcblxuY29uc3QgZ2V0Q29sb3IgPSAocHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmRpc2FibGVkKSB7XG4gICAgcmV0dXJuIHN0eWxlcy5icmlnaHRDb2xvcjtcbiAgfSBlbHNlIHtcbiAgICBzd2l0Y2ggKHByb3BzLnRoZW1lKSB7XG4gICAgICBjYXNlIGJ1dHRvblRoZW1lRGVmYXVsdDpcbiAgICAgIGNhc2UgYnV0dG9uVGhlbWVIb3Q6XG4gICAgICBjYXNlIGJ1dHRvblRoZW1lQ29sZDpcbiAgICAgIGNhc2UgYnV0dG9uVGhlbWVCcmlnaHQ6XG4gICAgICAgIHJldHVybiBzdHlsZXMud2hpdGVDb2xvcjtcbiAgICB9XG4gIH1cbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmQgPSAocHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmRpc2FibGVkKSB7XG4gICAgcmV0dXJuICdub25lJztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcHJvcHMudGhlbWU7XG4gIH1cbn07XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgY2xvc2U/OiBib29sZWFuO1xuICBmb2N1c0FuaW1hdGlvbj86IGJvb2xlYW47XG4gIG9uQ2xpY2s/OiAoZTogUmVhY3QuTW91c2VFdmVudDxIVE1MRWxlbWVudCwgTW91c2VFdmVudD4pID0+IHZvaWQ7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn07XG5cbnR5cGUgRmlubmlzaFByb3BzID0ge1xuICBjbG9zZTogYm9vbGVhbjtcbiAgZm9jdXNBbmltYXRpb246IGJvb2xlYW47XG4gIG9uQ2xpY2s6IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4gdm9pZDtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufTtcblxuY29uc3QgZGVmYXVsdEZvY3VzQW5pbWF0aW9uID0gdHJ1ZTtcbmNvbnN0IGdldEZpbm5pc2hQcm9wcyA9IChwcm9wczogUHJvcHMpOiBGaW5uaXNoUHJvcHMgPT4ge1xuICBjb25zdCBjbG9zZSA9IHByb3BzLmNsb3NlICE9PSB1bmRlZmluZWQgPyBwcm9wcy5jbG9zZSA6IGZhbHNlO1xuICBjb25zdCBmb2N1c0FuaW1hdGlvbiA9IHByb3BzLmZvY3VzQW5pbWF0aW9uICE9PSB1bmRlZmluZWQgPyBwcm9wcy5mb2N1c0FuaW1hdGlvbiA6IGRlZmF1bHRGb2N1c0FuaW1hdGlvbjtcbiAgY29uc3Qgb25DbGljayA9IHByb3BzLm9uQ2xpY2sgPyBwcm9wcy5vbkNsaWNrIDogKCkgPT4ge307XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSAmJiBwcm9wcy5jbGFzc05hbWU7XG4gIHJldHVybiB7IGNsb3NlLCBvbkNsaWNrLCBmb2N1c0FuaW1hdGlvbiwgY2xhc3NOYW1lIH07XG59O1xuXG5jb25zdCBTZWFyY2hsSWNvbjogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKF9wcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgcHJvcHM6IEZpbm5pc2hQcm9wcyA9IGdldEZpbm5pc2hQcm9wcyhfcHJvcHMpO1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnByb3BzfT5cbiAgICAgIDxTeW1ib2wgY2xvc2U9e3Byb3BzLmNsb3NlfSAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2VhcmNobEljb247XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICBmb2N1c0FuaW1hdGlvbj86IGJvb2xlYW47XG59O1xuXG5jb25zdCBzaXplID0gNTA7XG5jb25zdCBydXBlU2l6ZSA9IDIyO1xuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmE8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6ICR7c2l6ZX1weDtcbiAgbWluLXdpZHRoOiAke3NpemV9cHg7XG4gIGhlaWdodDogJHtzaXplfXB4O1xuICBtaW4taGVpZ2h0OiAke3NpemV9cHg7XG4gIGJvcmRlci1yYWRpdXM6ICR7c2l6ZSAvIDJ9cHg7XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgJjpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogJHsocHJvcHMpID0+IChwcm9wcy5mb2N1c0FuaW1hdGlvbiA/ICcwIDAgMTBweCByZ2JhKDIzMCwgMjMwLCAyMzAsIDEpIGluc2V0JyA6ICdub25lJyl9O1xuICB9XG5gO1xuXG5jb25zdCBTZWFyY2hDc3MgPSBjc3NgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAmOjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogNHB4O1xuICAgIGhlaWdodDogMTRweDtcbiAgICBjb250ZW50OiAnJztcbiAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy5icmlnaHRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDAsIDE0cHgpO1xuICB9XG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6ICR7cnVwZVNpemV9cHg7XG4gICAgbWluLXdpZHRoOiAke3J1cGVTaXplfXB4O1xuICAgIG1heC13aWR0aDogJHtydXBlU2l6ZX1weDtcbiAgICBoZWlnaHQ6ICR7cnVwZVNpemV9cHg7XG4gICAgbWluLWhlaWdodDogJHtydXBlU2l6ZX1weDtcbiAgICBtYXgtaGVpZ2h0OiAke3J1cGVTaXplfXB4O1xuICAgIG1hcmdpbjogMCAwIDZweCA2cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGJvcmRlcjogNHB4IHNvbGlkICR7c3R5bGVzLmJyaWdodENvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpIHRyYW5zbGF0ZSgwcHgsIDBweCk7XG4gIH1cbmA7XG5cbmNvbnN0IENsb3NlQ3NzID0gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgJjo6YmVmb3JlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDRweDtcbiAgICBtaW4td2lkdGg6IDRweDtcbiAgICBtYXgtd2lkdGg6IDRweDtcbiAgICBoZWlnaHQ6IDMzcHg7XG4gICAgbWluLWhlaWdodDogMzNweDtcbiAgICBtYXgtaGVpZ2h0OiAzcHg7XG4gICAgY29udGVudDogJyc7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMuYnJpZ2h0Q29sb3J9O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgtMC41cHgsIDAuNXB4KTtcbiAgfVxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAwcHg7XG4gICAgbWluLXdpZHRoOiAwcHg7XG4gICAgbWF4LXdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIG1pbi1oZWlnaHQ6IDMwcHg7XG4gICAgbWF4LWhlaWdodDogMzBweDtcbiAgICBjb250ZW50OiAnJztcbiAgICBib3JkZXI6IDJweCBzb2xpZCAke3N0eWxlcy5icmlnaHRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICB9XG5gO1xuXG50eXBlIFN5bWJvbFByb3BzVHlwZSA9IHtcbiAgY2xvc2U6IGJvb2xlYW47XG59O1xuXG5jb25zdCBTeW1ib2wgPSBzdHlsZWQuZGl2PFN5bWJvbFByb3BzVHlwZT5gXG4gICR7KHByb3BzKSA9PiAocHJvcHMuY2xvc2UgPyBDbG9zZUNzcyA6IFNlYXJjaENzcyl9O1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2l6ZT86IHN0cmluZztcbn07XG5cbmNvbnN0IFNwaW5uZXJJY29uOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBzaXplID0gJzYwJyB9KSA9PiB7XG4gIHJldHVybiA8SWNvbiBzaXplPXtzaXplfSAvPjtcbn07XG5cbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PFByb3BzPmBcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiBwcm9wcy5zaXplfXB4O1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5zaXplfXB4O1xuICBib3JkZXItdG9wOiAwLjNlbSBzb2xpZCByZ2JhKDc5LCAxNzQsIDE1OSwgMC43KTtcbiAgYm9yZGVyLXJpZ2h0OiAwLjNlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXItYm90dG9tOiAwLjNlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXItbGVmdDogMC4zZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBhbmltYXRpb246IGxvYWQ4IDFzIGluZmluaXRlIGN1YmljLWJlemllcigwLjM5LCAwLjU4LCAwLjU3LCAxKTtcbiAgQGtleWZyYW1lcyBsb2FkOCB7XG4gICAgMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IFNwaW5uZXJJY29uO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgTGFiZWwgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuXG5pbXBvcnQgeyBJbnB1dENzcyB9IGZyb20gJy4vY29tbW9uJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbmFtZTogc3RyaW5nO1xuICB2YWx1ZTogbnVtYmVyO1xuICBsYWJlbD86IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICB3aWR0aD86IHN0cmluZztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBvbkNoYW5nZT86ICh2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBuYW1lLFxuICB2YWx1ZTogX3VuaXh0aW5lID0gMCxcbiAgbGFiZWwsXG4gIGRpc2FibGVkID0gZmFsc2UsXG4gIHdpZHRoID0gJ2F1dG8nLFxuICBjbGFzc05hbWUgPSAnSW5wdXREYXRlJyxcbiAgb25DaGFuZ2UsXG59KSA9PiB7XG4gIGNvbnN0IHJlbGF0aW9uSWQgPSBgSW5wdXREYXRlJHtuYW1lfWA7XG4gIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU3RhdGUoZ2V0VW5pdHRpbWVUb1ltZChfdW5peHRpbmUpKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgIGNvbnN0IHltZCA9IGUudGFyZ2V0LnZhbHVlO1xuICAgIGNvbnN0IHVuaXh0aW1lID0gbmV3IERhdGUoeW1kKS5nZXRUaW1lKCk7XG4gICAgc2V0VmFsdWUoeW1kKTtcbiAgICBvbkNoYW5nZSAmJiBvbkNoYW5nZSh1bml4dGltZSk7XG4gIH07XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgeW1kID0gZ2V0VW5pdHRpbWVUb1ltZChfdW5peHRpbmUpO1xuICAgIHNldFZhbHVlKHltZCk7XG4gIH0sIFtfdW5peHRpbmVdKTtcblxuICByZXR1cm4gKFxuICAgIDxGbGV4Q3VzdG9tIGNsYXNzTmFtZT17Y2xhc3NOYW1lID8gY2xhc3NOYW1lIDogbmFtZX0gd2lkdGg9e3dpZHRofSBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJmbGV4LXN0YXJ0XCI+XG4gICAgICB7bGFiZWwgJiYgKFxuICAgICAgICA8TGFiZWwgaHRtbEZvcj17cmVsYXRpb25JZH0gZGlzcGxheT1cImlubGluZVwiIHNpZGVNYXJnaW4+XG4gICAgICAgICAge2xhYmVsfVxuICAgICAgICA8L0xhYmVsPlxuICAgICAgKX1cbiAgICAgIDxJbnB1dCB0eXBlPVwiZGF0ZVwiIGlkPXtyZWxhdGlvbklkfSBuYW1lPXtuYW1lfSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gdmFsdWU9e3ZhbHVlfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2V9IGRpc2FibGVkPXtkaXNhYmxlZH0gLz5cbiAgICA8L0ZsZXhDdXN0b20+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IEZsZXhDdXN0b20gPSBzdHlsZWQoKHByb3BzKSA9PiA8RmxleCB7Li4ucHJvcHN9IC8+KWBcbiAgbGFiZWwge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG4gIGlucHV0IHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfVxuYDtcblxuY29uc3QgSW5wdXQgPSBzdHlsZWQuaW5wdXRgXG4gICR7SW5wdXRDc3N9O1xuYDtcblxuY29uc3QgZ2V0VW5pdHRpbWVUb1ltZCA9ICh1bml4dGltZTogbnVtYmVyKSA9PiB7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh1bml4dGltZSk7XG4gIHZhciB5ID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICB2YXIgbSA9ICgnMDAnICsgKGRhdGUuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMik7XG4gIHZhciBkID0gKCcwMCcgKyBkYXRlLmdldERhdGUoKSkuc2xpY2UoLTIpO1xuICByZXR1cm4geSArICctJyArIG0gKyAnLScgKyBkO1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmNvbnN0IGRyYWdTdGF0dXNEcmFnb3ZlciA9ICdkcmFnb3Zlcic7XG5jb25zdCBkcmFnU3RhdHVzRHJhZ2xlYXZlID0gJ2RyYWdsZWF2ZSc7XG5jb25zdCBkcmFnU3RhdHVzRHJhZ2VkID0gJ2RyYWdlZCc7XG5jb25zdCBkcmFnU3RhdHVzRGVmYXVsdCA9IGRyYWdTdGF0dXNEcmFnbGVhdmU7XG50eXBlIERyYWdTdGF0dXNUeXBlID0gdHlwZW9mIGRyYWdTdGF0dXNEcmFnb3ZlciB8IHR5cGVvZiBkcmFnU3RhdHVzRHJhZ2xlYXZlIHwgdHlwZW9mIGRyYWdTdGF0dXNEcmFnZWQ7XG5cbmV4cG9ydCBjb25zdCBpbWFnZUJnID0gJ2JnJztcbmV4cG9ydCBjb25zdCBpbWFnZUljb24gPSAnaWNvbic7XG5leHBvcnQgY29uc3QgaW1hZ2VEZWZhdWx0ID0gaW1hZ2VCZztcbmV4cG9ydCB0eXBlIEltYWdlVHlwZSA9IHR5cGVvZiBpbWFnZUJnIHwgdHlwZW9mIGltYWdlSWNvbjtcblxudHlwZSBQcm9wcyA9IHtcbiAgb25DaGFuZ2U6IChmb3JtRGF0YTogRm9ybURhdGEsIGZpbGVOYW1lOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGlkOiBzdHJpbmc7XG4gIHZhbHVlPzogc3RyaW5nO1xuICB0eXBlPzogSW1hZ2VUeXBlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUgPSBpbWFnZURlZmF1bHQsIGlkLCB2YWx1ZSA9ICcnLCBjbGFzc05hbWUsIG9uQ2hhbmdlIH0pID0+IHtcbiAgY29uc3QgY29udGFpbmVyUmVmID0gdXNlUmVmKDxkaXYgLz4pO1xuICBjb25zdCBkcmFnRHJvcElucHV0UmVmID0gdXNlUmVmKDxpbnB1dCAvPik7XG4gIGNvbnN0IFtkcmFnU3RhdHVzLCBzZXREcmFnU3RhdHVzXSA9IHVzZVN0YXRlPERyYWdTdGF0dXNUeXBlPihkcmFnU3RhdHVzRGVmYXVsdCk7XG5cbiAgY29uc3QgcHJldmlldyA9IChmaWxlOiBGaWxlKSA9PiB7XG4gICAgaWYgKGRyYWdEcm9wSW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgY29udGFpbmVyRWxtID0gY29udGFpbmVyUmVmLmN1cnJlbnQgYXMgdW5rbm93biBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgbGV0IHJlYWRlcjogRmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG5cbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIGNvbnN0IGJhc2U2NFN0cmluZyA9IFN0cmluZyhyZWFkZXIucmVzdWx0KTtcbiAgICAgICAgY29uc3QgY3JlYXRlZEZpbGUgPSBuZXcgRmlsZShbYmFzZTY0U3RyaW5nXSwgaWQsIHsgdHlwZTogZmlsZS50eXBlLCBsYXN0TW9kaWZpZWQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpIH0pO1xuICAgICAgICBsZXQgZXh0VHlwZSA9IGZpbGUudHlwZS5zcGxpdCgnLycpWzFdO1xuICAgICAgICBleHRUeXBlID0gZXh0VHlwZSA9PT0gJ2pwZWcnID8gJ2pwZycgOiBleHRUeXBlO1xuICAgICAgICBjb25zdCBmaWxlTmFtZSA9IGAke3R5cGV9LiR7ZXh0VHlwZX1gO1xuICAgICAgICBjb250YWluZXJFbG0uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke2Jhc2U2NFN0cmluZ30pYDtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKHR5cGUsIGNyZWF0ZWRGaWxlKTtcblxuICAgICAgICBvbkNoYW5nZShmb3JtRGF0YSwgZmlsZU5hbWUpO1xuICAgICAgfTtcblxuICAgICAgaWYgKGZpbGUpIHtcbiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHNldERyYWdTdGF0dXMoZHJhZ1N0YXR1c0RyYWdsZWF2ZSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIHJlZj17Y29udGFpbmVyUmVmfSBpZD17aWR9IHR5cGU9e3R5cGV9IGRyYWdTdGF0dXM9e2RyYWdTdGF0dXN9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB2YWx1ZT17dmFsdWV9PlxuICAgICAgPERyYWdEcm9wSW5wdXRcbiAgICAgICAgcmVmPXtkcmFnRHJvcElucHV0UmVmfVxuICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgIGNsYXNzTmFtZT17dHlwZX1cbiAgICAgICAgYWNjZXB0PVwiaW1hZ2UvKlwiXG4gICAgICAgIG5hbWU9XCJwaG90b1wiXG4gICAgICAgIGRyYWdTdGF0dXM9e2RyYWdTdGF0dXN9XG4gICAgICAgIG9uRHJhZ092ZXI9eyhlKSA9PiB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHNldERyYWdTdGF0dXMoZHJhZ1N0YXR1c0RyYWdvdmVyKTtcbiAgICAgICAgfX1cbiAgICAgICAgb25EcmFnTGVhdmU9eyhlKSA9PiB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgIHNldERyYWdTdGF0dXMoZHJhZ1N0YXR1c0RyYWdsZWF2ZSk7XG4gICAgICAgIH19XG4gICAgICAgIG9uRHJhZz17KGUpID0+IHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgc2V0RHJhZ1N0YXR1cyhkcmFnU3RhdHVzRHJhZ2VkKTtcbiAgICAgICAgICBsZXQgZmlsZXMgPSBlLmRhdGFUcmFuc2Zlci5maWxlcztcbiAgICAgICAgICBwcmV2aWV3KGZpbGVzWzBdKTtcbiAgICAgICAgfX1cbiAgICAgICAgb25DaGFuZ2U9eyhlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTtcbiAgICAgICAgICBwcmV2aWV3KGZpbGUpO1xuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIHJlZjogYW55O1xuICBpZDogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICB0eXBlOiBJbWFnZVR5cGU7XG4gIGRyYWdTdGF0dXM6IERyYWdTdGF0dXNUeXBlO1xufTtcblxuY29uc3QgYmdDc3MgPSBjc3M8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMjMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7c3R5bGVzLmJyaWdodENvbG9yfTtcbiAgYm9yZGVyOiAkeyhwcm9wcykgPT4gKHByb3BzLmRyYWdTdGF0dXMgPT09IGRyYWdTdGF0dXNEcmFnb3ZlciA/IDMgOiAwKX1weCBkYXNoZWQgJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gIDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gIH1cbmA7XG5cbmNvbnN0IGljb25Dc3MgPSBjc3M8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgd2lkdGg6IDkwcHg7XG4gIGhlaWdodDogOTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTkwLCAxOTAsIDE5MCwgMC45KTtcbiAgYm9yZGVyOiAkeyhwcm9wcykgPT4gKHByb3BzLmRyYWdTdGF0dXMgPT09IGRyYWdTdGF0dXNEcmFnb3ZlciA/IDMgOiAwKX1weCBkYXNoZWQgJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gIDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxNXB4IHJnYigxNTAgMTUwIDE1MCk7XG4gIH1cbmA7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICR7KHByb3BzKSA9PiAocHJvcHMudHlwZSA9PT0gaW1hZ2VCZyA/IGJnQ3NzIDogaWNvbkNzcyl9XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtaW1hZ2U6ICR7KHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kSW1hZ2UoeyBpZDogcHJvcHMuaWQsIGltYWdlOiBwcm9wcy52YWx1ZSB9KX07XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuYDtcblxuY29uc3QgRHJhZ0Ryb3BJbnB1dCA9IHN0eWxlZC5pbnB1dDx7IHJlZjogYW55OyBkcmFnU3RhdHVzOiBEcmFnU3RhdHVzVHlwZSB9PmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiBpbmhlcml0O1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IGdldEJhY2tncm91bmRJbWFnZSA9ICh7IGlkLCBpbWFnZSB9KSA9PiB7XG4gIGlmIChpbWFnZSAmJiBpbWFnZSAhPT0gJycpIHtcbiAgICByZXR1cm4gYHVybChodHRwczovLyR7Y29uZi5hc3NldHNDb3ZlclBhdGh9JHtpZH0vJHtpbWFnZX0pLCB1cmwoaHR0cHM6Ly8ke2NvbmYuYXNzZXRzQ292ZXJQYXRofSR7aW1hZ2V9KSBgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgaHR0cHM6Ly8ke2NvbmYuYXNzZXRzQ292ZXJQYXRofS8ke2ltYWdlfWA7XG4gIH1cbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgTGFiZWwgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5pbXBvcnQgeyBJbnB1dENzcyB9IGZyb20gJy4vY29tbW9uJztcblxudHlwZSBQcm9wcyA9IHtcbiAgbmFtZTogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xuICBsYWJlbD86IHN0cmluZztcbiAgd2lkdGg/OiBzdHJpbmc7XG4gIG9uQ2hhbmdlPzogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgbmFtZSwgdmFsdWU6IF92YWx1ZSA9ICcnLCBsYWJlbCwgd2lkdGggPSAnYXV0bycsIGNsYXNzTmFtZSA9ICdJbnB1dFRleHQnLCBvbkNoYW5nZSB9KSA9PiB7XG4gIGNvbnN0IHJlbGF0aW9uSWQgPSBgSW5wdXRUZXh0JHtuYW1lfWA7XG4gIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU3RhdGUoX3ZhbHVlKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgIHNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKTtcbiAgICBvbkNoYW5nZSAmJiBvbkNoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gIH07XG4gIHJldHVybiAoXG4gICAgPEZsZXhDdXN0b20gY2xhc3NOYW1lPXtjbGFzc05hbWUgPyBjbGFzc05hbWUgOiBuYW1lfSB3aWR0aD17d2lkdGh9IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImZsZXgtc3RhcnRcIj5cbiAgICAgIHtsYWJlbCAmJiAoXG4gICAgICAgIDxMYWJlbCBodG1sRm9yPXtyZWxhdGlvbklkfSBzaWRlTWFyZ2luPlxuICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgPC9MYWJlbD5cbiAgICAgICl9XG4gICAgICA8SW5wdXQgdHlwZT1cInRleHRcIiBpZD17cmVsYXRpb25JZH0gbmFtZT17bmFtZX0gY2xhc3NOYW1lPXtjbGFzc05hbWV9IHZhbHVlPXt2YWx1ZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSAvPlxuICAgIDwvRmxleEN1c3RvbT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgRmxleEN1c3RvbSA9IHN0eWxlZCgocHJvcHMpID0+IDxGbGV4IHsuLi5wcm9wc30gLz4pYFxuICBsYWJlbCB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cbiAgaW5wdXQge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG5gO1xuXG5jb25zdCBJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgJHtJbnB1dENzc307XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luOiAke3N0eWxlcy5iYXNlTWFyZ2lufXB4IDA7XG5gO1xuIiwiaW1wb3J0IHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5pbXBvcnQgeyBnZXRSZ2JhQ29sb3IgfSBmcm9tICdjb3Zlci9zdHlsZXMvY29sb3JzJztcblxuc3R5bGVzLmdldFJnYmFDb2xvcjtcbnR5cGUgSW5wdXRDc3NUeXBlID0ge1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgSW5wdXRDc3MgPSBjc3M8SW5wdXRDc3NUeXBlPmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1pbi13aWR0aDogZml0LWNvbnRlbnQ7XG4gIG1heC13aWR0aDogY2FsYygxMDAlIC0gJHtzdHlsZXMucXVhZE1hcmdpbn1weCk7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIG1hcmdpbi1sZWZ0OiAke3N0eWxlcy5xdWFkTWFyZ2lufXB4O1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLnF1YWRNYXJnaW59cHg7XG4gIG91dGxpbmUtY29sb3I6ICR7Z2V0UmdiYUNvbG9yKHN0eWxlcy50aGVtZVJnYil9O1xuICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgYmFja2dyb3VuZDogcmdiKDI1MCwgMjUwLCAyNTAsIDAuNCk7XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBwcm9wcy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gJ25vcm1hbCcgOiAncG9pbnRlcicpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAwO1xuICBmb250LXdlaWdodDogMjAwO1xuICA6Zm9jdXMge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuICA6aG92ZXIge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuYDtcbiIsImltcG9ydCBEYXRlIGZyb20gJy4vRGF0ZSc7XG5pbXBvcnQgRHJvcEltYWdlIGZyb20gJy4vRHJvcEltYWdlJztcbmltcG9ydCBUZXh0IGZyb20gJy4vVGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRHJvcEltYWdlLFxuICBUZXh0LFxuICBEYXRlLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIGNoaWxkcmVuOiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHZhbHVlLCBjaGlsZHJlbiB9KSA9PiB7XG4gIHJldHVybiA8b3B0aW9uIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvb3B0aW9uPjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgZ2V0Tm9TZWxlY3RPcHRpb24sIG5vU2VsZWN0T3B0aW9uTGFiZWwgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmltcG9ydCB7IElucHV0Q3NzIH0gZnJvbSAnLi9jb21tb24nO1xuXG50eXBlIFByb3BzID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVbXTtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBsYWJlbD86IHN0cmluZztcbiAgd2lkdGg/OiBzdHJpbmc7XG4gIG5vU2VsZWN0T3B0aW9uPzogYm9vbGVhbjtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBvbkNoYW5nZT86ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBuYW1lLFxuICB2YWx1ZSxcbiAgY2xhc3NOYW1lID0gJ1NlbGVjdCcsXG4gIGRpc2FibGVkID0gZmFsc2UsXG4gIG5vU2VsZWN0T3B0aW9uID0gZmFsc2UsXG4gIHdpZHRoID0gJ2F1dG8nLFxuICBvbkNoYW5nZSxcbiAgY2hpbGRyZW4sXG59KSA9PiB7XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKGUpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IGUudGFyZ2V0LnZhbHVlID09PSBub1NlbGVjdE9wdGlvbkxhYmVsID8gJycgOiBTdHJpbmcoZS50YXJnZXQudmFsdWUpO1xuICAgIG9uQ2hhbmdlICYmIG9uQ2hhbmdlKHZhbHVlKTtcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBuYW1lPXtuYW1lfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2V9IGRpc2FibGVkPXtkaXNhYmxlZH0gdmFsdWU9e3ZhbHVlfSB3aWR0aD17d2lkdGh9PlxuICAgICAge25vU2VsZWN0T3B0aW9uICYmIGdldE5vU2VsZWN0T3B0aW9uKCl9XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29udGFpbmVyVHlwZSA9IHtcbiAgd2lkdGg6IHN0cmluZztcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWxlY3Q8Q29udGFpbmVyVHlwZT5gXG4gICR7SW5wdXRDc3N9O1xuICB3aWR0aDogJHsocHJvcHMpID0+IHByb3BzLndpZHRofTtcbiAgbWFyZ2luOiAwICR7c3R5bGVzLmJhc2VNYXJnaW59cHggJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAwO1xuYDtcbiIsImltcG9ydCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuaW1wb3J0IHsgZ2V0UmdiYUNvbG9yIH0gZnJvbSAnY292ZXIvc3R5bGVzL2NvbG9ycyc7XG5cbnR5cGUgSW5wdXRDc3NUeXBlID0ge1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBkaXNhYmxlZEJhc2VUZW5zaW9uID0gc3R5bGVzLmJhc2VUZW5zaW9uIC8gMztcbmNvbnN0IGRpc2FiZWxkQ29sb3IgPSBgcmdiKCR7ZGlzYWJsZWRCYXNlVGVuc2lvbn0gJHtkaXNhYmxlZEJhc2VUZW5zaW9ufSAke2Rpc2FibGVkQmFzZVRlbnNpb259KWA7XG5leHBvcnQgY29uc3QgSW5wdXRDc3MgPSBjc3M8SW5wdXRDc3NUeXBlPmBcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1pbi13aWR0aDogZml0LWNvbnRlbnQ7XG4gIG1heC13aWR0aDogY2FsYygxMDAlIC0gJHtzdHlsZXMucXVhZE1hcmdpbn1weCk7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIG1hcmdpbi1sZWZ0OiAke3N0eWxlcy5xdWFkTWFyZ2lufXB4O1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLnF1YWRNYXJnaW59cHg7XG4gIG91dGxpbmUtY29sb3I6ICR7Z2V0UmdiYUNvbG9yKHN0eWxlcy50aGVtZVJnYil9O1xuICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgYmFja2dyb3VuZDogcmdiKDI1MCwgMjUwLCAyNTAsIDAuNCk7XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBwcm9wcy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gJ25vcm1hbCcgOiAncG9pbnRlcicpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAwO1xuICBmb250LXdlaWdodDogMjAwO1xuICA6Zm9jdXMge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuICA6aG92ZXIge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuICA6ZGlzYWJsZWQge1xuICAgIGNvbG9yOiAke2Rpc2FiZWxkQ29sb3J9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IE9wdGlvbiBmcm9tICcuL09wdGlvbic7XG5pbXBvcnQgU2luZ2xlIGZyb20gJy4vU2luZ2xlJztcblxuZXhwb3J0IGNvbnN0IG5vU2VsZWN0T3B0aW9uTGFiZWwgPSAnLSc7XG5cbmV4cG9ydCBjb25zdCBnZXROb1NlbGVjdE9wdGlvbiA9ICgpOiBSZWFjdC5SZWFjdE5vZGUgPT4ge1xuICByZXR1cm4gPG9wdGlvbiB2YWx1ZT17dW5kZWZpbmVkfT57bm9TZWxlY3RPcHRpb25MYWJlbH08L29wdGlvbj47XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFNpbmdsZSxcbiAgT3B0aW9uLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImNoZWNrd3JhcHBlclwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJMYXllcl8xXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDk4LjUgOTguNVwiIGVuYWJsZUJhY2tncm91bmQ9XCJuZXcgMCAwIDk4LjUgOTguNVwiPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGNsYXNzTmFtZT1cImNoZWNrbWFya1wiXG4gICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgIHN0cm9rZVdpZHRoPVwiNFwiXG4gICAgICAgICAgc3Ryb2tlTWl0ZXJsaW1pdD1cIjUwXCJcbiAgICAgICAgICBkPVwiTTgxLjcsMTcuOEM3My41LDkuMyw2Miw0LDQ5LjIsNFxuXHRDMjQuMyw0LDQsMjQuMyw0LDQ5LjJzMjAuMyw0NS4yLDQ1LjIsNDUuMnM0NS4yLTIwLjMsNDUuMi00NS4yYzAtOC42LTIuNC0xNi42LTYuNS0yMy40bDAsMEw0NS42LDY4LjJMMjQuNyw0Ny4zXCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICBzdmcge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICB9XG5cbiAgLmNoZWNrbWFyayB7XG4gICAgc3Ryb2tlOiAke3N0eWxlcy5zYXZlQ2hlY2tDb2xvcn07XG4gICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDc0NS43NDg1MzUxNTYyNTtcbiAgICBzdHJva2UtZGFzaGFycmF5OiA3NDUuNzQ4NTM1MTU2MjU7XG4gICAgYW5pbWF0aW9uOiBkYXNoIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xuICB9XG5cbiAgQGtleWZyYW1lcyBkYXNoIHtcbiAgICAwJSB7XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogNzQ1Ljc0ODUzNTE1NjI1O1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xuICAgIH1cbiAgfVxuYDtcblxuLypcbiAgICBib3JkZXI6IDVweCBzb2xpZCAke3N0eWxlcy5zYXZlQ2lyY2xlQm9yZGVyQ29sb3J9O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnNhdmVDaXJjbGVCZ0NvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4qL1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlLCBmbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LCBPbkhhbmRsZVR5cGUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUgJiBPbkhhbmRsZVR5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5mbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2Z1xuICAgICAgICB2ZXJzaW9uPVwiMS4wXCJcbiAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgIHdpZHRoPVwiNTEyLjAwMDAwMHB0XCJcbiAgICAgICAgaGVpZ2h0PVwiNTEyLjAwMDAwMHB0XCJcbiAgICAgICAgdmlld0JveD1cIjAgMCA1MTIuMDAwMDAwIDUxMi4wMDAwMDBcIlxuICAgICAgICBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiPlxuICAgICAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC4wMDAwMDAsNTEyLjAwMDAwMCkgc2NhbGUoMC4xMDAwMDAsLTAuMTAwMDAwKVwiIGZpbGw9XCIjMDAwMDAwXCIgc3Ryb2tlPVwibm9uZVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTIzMzIgNTExMCBjLTYxMSAtNTkgLTExNjMgLTMyMCAtMTU4OSAtNzUxIC00MDYgLTQxMSAtNjQ4IC05MDhcbi03MjUgLTE0ODkgLTE2IC0xMjMgLTE2IC00OTcgMCAtNjIwIDc3IC01ODEgMzE5IC0xMDc4IDcyNSAtMTQ4OSAyMTQgLTIxNlxuNDE0IC0zNjAgNjkyIC00OTYgMzY2IC0xODEgNzA1IC0yNTkgMTEyMCAtMjU5IDIyNCAwIDMyNiA5IDUxMCA0NiA2MDMgMTIxXG4xMTM0IDQ1MCAxNTI1IDk0NiAxNDEgMTc5IDI5MiA0NTUgMzc0IDY4NCA1MjkgMTQ3MSAtMzQ5IDMwNTUgLTE4NzQgMzM4MlxuLTIwOSA0NSAtNTU0IDY1IC03NTggNDZ6IG00ODUgLTQwNSBjMTU4IC0yMCAyODkgLTQ4IDQxNCAtODkgNzA4IC0yMzAgMTI1M1xuLTgxNiAxNDI4IC0xNTM3IDMzOCAtMTM5NSAtNzMyIC0yNzIyIC0yMTU5IC0yNjc2IC0yNDYgOCAtNDE2IDM3IC02MzMgMTA5XG4tNTkyIDE5NiAtMTA4NiA2NjYgLTEzMjEgMTI1OCAtMTA2IDI2OSAtMTUyIDUzOSAtMTQzIDg1MCA2IDIyMCAyNiAzNTYgODFcbjU0NSAxMDYgMzY3IDI5NiA2NzggNTgyIDk1NSAzMzkgMzI3IDc0NCA1MjEgMTIyNCA1ODQgMTQyIDE5IDM4MyAxOSA1MjcgMXpcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMTc4MSAzNDQ4IGMtNDkgLTI0IC05NSAtODcgLTEwNSAtMTQ0IC01IC0yMSAtMSAtNTUgOCAtODcgMTQgLTQ4XG4zNiAtNzMgMzExIC0zNDcgbDI5NSAtMjk1IC0yODkgLTI5MCBjLTE1OSAtMTU5IC0yOTYgLTMwNCAtMzA0IC0zMjAgLTUxIC0xMDFcbi0xMiAtMjIxIDg3IC0yNzIgNDIgLTIyIDEzMiAtMjEgMTc2IDIgMTkgMTAgMTY2IDE0NyAzMjUgMzA2IGwyOTEgMjg5IDI4NFxuLTI4NiBjMTYyIC0xNjIgMzAyIC0yOTQgMzI1IC0zMDYgODUgLTQ1IDIwMCAtMTYgMjUyIDYzIDM1IDUzIDQzIDE0MCAxOCAxOTBcbi05IDE5IC0xNDggMTY2IC0zMDggMzI2IGwtMjkyIDI5MyAyOTIgMjkzIGMxOTEgMTkxIDI5OCAzMDUgMzA4IDMyOSA2OSAxNjZcbi0xMDAgMzM0IC0yNjAgMjU5IC0yNiAtMTIgLTE0MSAtMTIwIC0zMjUgLTMwNSAtMTU3IC0xNTcgLTI4OSAtMjg2IC0yOTUgLTI4NlxuLTUgMCAtMTQwIDEzMCAtMzAwIDI5MCAtMTkyIDE5MSAtMzAzIDI5NCAtMzI3IDMwNSAtNTIgMjEgLTExNSAxOSAtMTY3IC03elwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9nPlxuICAgICAgPC9zdmc+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgd2lkdGg6IDM2cHh4O1xuICBoZWlnaHQ6IDM2cHg7XG4gIHN2ZyB7XG4gICAgd2lkdGg6IGluaGVyaXQ7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBwYXRoIHtcbiAgICBmaWxsOiAke3N0eWxlcy5iYXNlQ29sb3J9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBCb3hMYXlvdXRQcm9wc1R5cGUsIGJveExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59ICYgQm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uYm94TGF5b3V0UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJfeDMyX1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiIHhtbFNwYWNlPVwicHJlc2VydmVcIj5cbiAgICAgICAgPGc+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMTY1LjYyOCw0NjEuMTI3YzAsMCwwLjgyNy0wLjgyOCwxLjgzOC0xLjgzOWwxOTQuNzQyLTE5NC43NDJjMS4wMTItMS4wMTEsMS45Mi0xLjkyLDIuMDE5LTIuMDE5XG5cdFx0YzAuMDk5LTAuMDk5LDEuMDA4LTEuMDA4LDIuMDE5LTIuMDE5bDEwMy4xODItMTAzLjE4MmMwLjAxOC0wLjAxOCwwLjAxOC0wLjA0OCwwLTAuMDY3TDM1NC4yNTksNDIuMDkyXG5cdFx0Yy0wLjAxOC0wLjAxOC0wLjA0OC0wLjAxOC0wLjA2NywwTDI1MS4wMSwxNDUuMjc0Yy0xLjAxMSwxLjAxMS0xLjkyLDEuOTItMi4wMTksMi4wMTljLTAuMDk5LDAuMDk5LTEuMDA4LDEuMDA4LTIuMDE5LDIuMDE5XG5cdFx0TDUwLjQwMSwzNDUuODg0Yy0wLjAwNiwwLjAwNi0wLjAxLDAuMDEyLTAuMDEyLDAuMDJMMC4wMDIsNTExLjQ1OWMtMC4wMTEsMC4wMzYsMC4wMjMsMC4wNywwLjA1OSwwLjA1OWwxNjMuMDc5LTQ5LjYzM1xuXHRcdEMxNjQuNTA4LDQ2MS40NjgsMTY1LjYyOCw0NjEuMTI3LDE2NS42MjgsNDYxLjEyN3ogTTM2LjczNCw0NzQuNzI3bDI1LjE1OS04Mi42NjZjMC4wMS0wLjAzNCwwLjA1My0wLjA0NSwwLjA3OC0wLjAyXG5cdFx0bDU3LjUwNyw1Ny41MDdjMC4wMjUsMC4wMjUsMC4wMTQsMC4wNjgtMC4wMiwwLjA3OGwtODIuNjY2LDI1LjE2QzM2Ljc1Niw0NzQuNzk3LDM2LjcyMiw0NzQuNzY0LDM2LjczNCw0NzQuNzI3elwiPjwvcGF0aD5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk01MDIuMzk4LDEwNC40MzJjMTIuODAzLTEyLjgwNCwxMi44MDMtMzMuNzU0LDAtNDYuNTU4bC00Ny43OTEtNDcuNzkyYy0xMi44MDQtMTIuODAzLTMzLjc1NC0xMi44MDMtNDYuNTU4LDBcblx0XHRsLTIzLjg2MiwyMy44NjJjLTAuMDE4LDAuMDE4LTAuMDE4LDAuMDQ4LDAsMC4wNjdsOTQuMjgyLDk0LjI4MmMwLjAxOCwwLjAxOCwwLjA0OCwwLjAxOCwwLjA2NywwTDUwMi4zOTgsMTA0LjQzMnpcIj48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBCb3hMYXlvdXRQcm9wc1R5cGUsIGJveExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59ICYgQm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uYm94TGF5b3V0UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9IGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNDggNDhcIj5cbiAgICAgICAgPGc+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGZpbGw9XCIjRUE0MzM1XCJcbiAgICAgICAgICAgIGQ9XCJNMjQgOS41YzMuNTQgMCA2LjcxIDEuMjIgOS4yMSAzLjZsNi44NS02Ljg1QzM1LjkgMi4zOCAzMC40NyAwIDI0IDAgMTQuNjIgMCA2LjUxIDUuMzggMi41NiAxMy4yMmw3Ljk4IDYuMTlDMTIuNDMgMTMuNzIgMTcuNzQgOS41IDI0IDkuNXpcIj48L3BhdGg+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGZpbGw9XCIjNDI4NUY0XCJcbiAgICAgICAgICAgIGQ9XCJNNDYuOTggMjQuNTVjMC0xLjU3LS4xNS0zLjA5LS4zOC00LjU1SDI0djkuMDJoMTIuOTRjLS41OCAyLjk2LTIuMjYgNS40OC00Ljc4IDcuMThsNy43MyA2YzQuNTEtNC4xOCA3LjA5LTEwLjM2IDcuMDktMTcuNjV6XCI+PC9wYXRoPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBmaWxsPVwiI0ZCQkMwNVwiXG4gICAgICAgICAgICBkPVwiTTEwLjUzIDI4LjU5Yy0uNDgtMS40NS0uNzYtMi45OS0uNzYtNC41OXMuMjctMy4xNC43Ni00LjU5bC03Ljk4LTYuMTlDLjkyIDE2LjQ2IDAgMjAuMTIgMCAyNGMwIDMuODguOTIgNy41NCAyLjU2IDEwLjc4bDcuOTctNi4xOXpcIj48L3BhdGg+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGZpbGw9XCIjMzRBODUzXCJcbiAgICAgICAgICAgIGQ9XCJNMjQgNDhjNi40OCAwIDExLjkzLTIuMTMgMTUuODktNS44MWwtNy43My02Yy0yLjE1IDEuNDUtNC45MiAyLjMtOC4xNiAyLjMtNi4yNiAwLTExLjU3LTQuMjItMTMuNDctOS45MWwtNy45OCA2LjE5QzYuNTEgNDIuNjIgMTQuNjIgNDggMjQgNDh6XCI+PC9wYXRoPlxuICAgICAgICAgIDxwYXRoIGZpbGw9XCJub25lXCIgZD1cIk0wIDBoNDh2NDhIMHpcIj48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgU3Bpbm5lciBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL2ljb24vU3Bpbm5lcic7XG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwiY2hlY2t3cmFwcGVyXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICA8U3Bpbm5lciAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICBzdmcge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICB9XG5cbiAgLmNoZWNrbWFyayB7XG4gICAgc3Ryb2tlOiAke3N0eWxlcy5zYXZlQ2hlY2tDb2xvcn07XG4gICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDc0NS43NDg1MzUxNTYyNTtcbiAgICBzdHJva2UtZGFzaGFycmF5OiA3NDUuNzQ4NTM1MTU2MjU7XG4gICAgYW5pbWF0aW9uOiBkYXNoIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xuICB9XG5cbiAgQGtleWZyYW1lcyBkYXNoIHtcbiAgICAwJSB7XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogNzQ1Ljc0ODUzNTE1NjI1O1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xuICAgIH1cbiAgfVxuYDtcblxuLypcbiAgICBib3JkZXI6IDVweCBzb2xpZCAke3N0eWxlcy5zYXZlQ2lyY2xlQm9yZGVyQ29sb3J9O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnNhdmVDaXJjbGVCZ0NvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4qL1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlLCBmbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LCBPbkhhbmRsZVR5cGUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUgJiBPbkhhbmRsZVR5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5mbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2Z1xuICAgICAgICB2ZXJzaW9uPVwiMS4wXCJcbiAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgIHdpZHRoPVwiNjQuMDAwMDAwcHRcIlxuICAgICAgICBoZWlnaHQ9XCI2NC4wMDAwMDBwdFwiXG4gICAgICAgIHZpZXdCb3g9XCIwIDAgNjQuMDAwMDAwIDY0LjAwMDAwMFwiXG4gICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCI+XG4gICAgICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLjAwMDAwMCw2NC4wMDAwMDApIHNjYWxlKDAuMTAwMDAwLC0wLjEwMDAwMClcIiBmaWxsPVwiIzAwMDAwMFwiIHN0cm9rZT1cIm5vbmVcIj5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk0yODggNjI5IGMtMTAgLTUgLTIwIC0yNSAtMjQgLTQ0IC0zIC0xOSAtMTEgLTM1IC0xNyAtMzUgLTIxIDAgLTc4XG4tNTIgLTk2IC04OCAtMTEgLTIyIC0yMSAtNzAgLTI0IC0xMjAgLTcgLTg3IC0zMiAtMTU5IC02OSAtMTk5IC0xMSAtMTIgLTE4XG4tMjkgLTE1IC0zNyA2IC0xNCA0MiAtMTYgMjc3IC0xNiAyMzUgMCAyNzEgMiAyNzcgMTYgMyA4IC00IDI1IC0xNSAzNyAtMzggNDBcbi02NCAxMTUgLTY5IDIwMSAtNCA0OSAtMTMgOTUgLTI0IDExOCAtMTggMzYgLTc1IDg4IC05NiA4OCAtNiAwIC0xNCAxNiAtMTdcbjM1IC05IDQ4IC00OCA2OCAtODggNDR6IG00OCAtNDAgYzEwIC0xNyAtMTMgLTM2IC0yNyAtMjIgLTEyIDEyIC00IDMzIDExIDMzXG41IDAgMTIgLTUgMTYgLTExelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk0xMDggNTUyIGMtMTQgLTE1IC0zMyAtNDIgLTQyIC02MCAtMjIgLTQ0IC0zMiAtMTI3IC0xNyAtMTM3IDE4IC0xMFxuMjMgLTEgMzIgNTcgNSAzMiAyMCA3MCAzOSA5NiAxNiAyMyAzMCA0NyAzMCA1MiAwIDIxIC0xOSAxNyAtNDIgLTh6XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTQ5NCA1NjcgYy0zIC0xMCAzIC0yOCAxNiAtNDQgMjggLTM2IDUwIC04OSA1MCAtMTIyIDAgLTMzIDE0IC01NlxuMjkgLTQ3IDMwIDE5IC05IDE1MyAtNTkgMjAxIC0yNSAyNCAtMzAgMjYgLTM2IDEyelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk0yNDAgNTEgYzAgLTE4IDUzIC01MSA4MCAtNTEgMjcgMCA4MCAzMyA4MCA1MSAwIDUgLTM2IDkgLTgwIDkgLTQ0XG4wIC04MCAtNCAtODAgLTl6XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMzZweDtcbiAgaGVpZ2h0OiAzNnB4O1xuICBzdmcge1xuICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgcGF0aCB7XG4gICAgZmlsbDogJHtzdHlsZXMuYmFzZUNvbG9yfTtcbiAgfVxuICA6aG92ZXIge1xuICAgIHBhdGgge1xuICAgICAgZmlsbDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgfVxuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBCb3hMYXlvdXRQcm9wc1R5cGUsIGJveExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59ICYgQm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uYm94TGF5b3V0UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJfeDMyX1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiIHhtbFNwYWNlPVwicHJlc2VydmVcIj5cbiAgICAgICAgPGc+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNNDQ2LjAyNSw5Mi4yMDZjLTQwLjc2Mi00Mi4zOTQtOTcuNDg3LTY5LjY0Mi0xNjAuMzgzLTcyLjE4MmMtMTUuNzkxLTAuNjM4LTI5LjExNCwxMS42NDgtMjkuNzUyLDI3LjQzM1xuXHRcdGMtMC42MzgsMTUuNzkxLDExLjY0OCwyOS4xMTQsMjcuNDI2LDI5Ljc2YzQ3LjcxNSwxLjk0Myw5MC40NSwyMi40ODEsMTIxLjQ3OSw1NC42ODFjMzAuOTg3LDMyLjIzNSw0OS45NTYsNzUuNzY1LDQ5Ljk3MSwxMjQuMDExXG5cdFx0Yy0wLjAxNSw0OS40ODEtMTkuOTc3LDk0LjAxMS01Mi4zODMsMTI2LjQ3NGMtMzIuNDYyLDMyLjQxMy03Ni45OTksNTIuMzY4LTEyNi40NzIsNTIuMzgyXG5cdFx0Yy00OS40NzQtMC4wMTUtOTQuMDI1LTE5Ljk3LTEyNi40NzQtNTIuMzgyYy0zMi40MDUtMzIuNDYzLTUyLjM2OC03Ni45OTItNTIuMzgyLTEyNi40NzRjMC0zLjQ4MywwLjEwNi02LjkzOCwwLjMwMi0xMC4zNjRcblx0XHRsMzQuMDkxLDE2LjgyN2MzLjcwMiwxLjgyNCw4LjAwMiwxLjg1MiwxMS4zNSwwLjA4NmMzLjM2Mi0xLjc4OCw1LjM0OS01LjEzNyw1LjI2NC04Ljg5NmwtMy4zNjItMTQ5LjgzNFxuXHRcdGMtMC4xMTQtNC4yODUtMi44OC04LjM1Ny03LjA5NC0xMC40NjRjLTQuMjQyLTIuMDcxLTkuMTY2LTEuODA5LTEyLjYxMywwLjczOEw0LjAwOCwxODIuNDVjLTMuMDUsMi4yMjEtNC40OTgsNS44MzEtMy44Niw5LjU3N1xuXHRcdGMwLjYxLDMuNzU5LDMuMjQ5LDcuMTQzLDYuOTY2LDguOTc0bDM1LjcyMiwxNy42MjljLTEuOTM3LDEyLjE2Ni0zLjAxOCwyNC42MDItMy4wMTgsMzcuMjc5XG5cdFx0Yy0wLjAxNCw2NS4xMDIsMjYuNDc1LDEyNC4zMSw2OS4xNTMsMTY2Ljk0NEMxNTEuNjA3LDQ2NS41MjUsMjEwLjgsNDkyLjAxMywyNzUuOTEsNDkyXG5cdFx0YzY1LjA5NSwwLjAxNCwxMjQuMzAyLTI2LjQ3NSwxNjYuOTM3LTY5LjE0NmM0Mi42NzgtNDIuNjM1LDY5LjE2Ny0xMDEuODQyLDY5LjE1NC0xNjYuOTQ0XG5cdFx0QzUxMi4wMTQsMTkyLjQ0Niw0ODYuODQ0LDEzNC41NjUsNDQ2LjAyNSw5Mi4yMDZ6XCI+PC9wYXRoPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgQm94TGF5b3V0UHJvcHNUeXBlLCBib3hMYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufSAmIEJveExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmJveExheW91dFByb3BzSW5pdCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIHsuLi5wfT5cbiAgICAgIDxzdmcgdmVyc2lvbj1cIjEuMFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDY0LjAwMDAwMCA2NC4wMDAwMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiPlxuICAgICAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC4wMDAwMDAsNjQuMDAwMDAwKSBzY2FsZSgwLjEwMDAwMCwtMC4xMDAwMDApXCIgc3Ryb2tlPVwibm9uZVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTc3IDU0NSBjLTQgLTkgLTcgLTkwIC03IC0xODAgMCAtMTgyIDQgLTE5NSA2NCAtMTk1IDQxIDAgMTIxIC0yN1xuMTM3IC00NiA2IC04IDE1IC0xNCAyMCAtMTQgNSAwIDkgODIgOSAxODMgMCAxNzggLTEgMTg0IC0yMiAyMDMgLTQ1IDQwIC04MlxuNTYgLTEzOCA2MSAtNDcgNSAtNTggMyAtNjMgLTEyelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk00NTUgNTUzIGMtMjMgLTYgLTYyIC0zMCAtOTIgLTU3IC0yMiAtMTkgLTIzIC0yNSAtMjMgLTIwMyAwIC0xMDEgNFxuLTE4MyA5IC0xODMgNSAwIDE0IDYgMjAgMTQgMTYgMTkgOTYgNDYgMTM3IDQ2IDYwIDAgNjQgMTMgNjQgMTk1IDAgOTAgLTMgMTcwXG4tNiAxNzkgLTYgMTYgLTYzIDIwIC0xMDkgOXpcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMTEgNDc2IGMtOCAtOSAtMTEgLTcyIC05IC0yMDIgbDMgLTE4OSAxMjcgMCBjMTAwIDAgMTI0IDMgMTE2IDEyXG4tMTMgMTYgLTEwMSA0MyAtMTM4IDQzIC0xNCAwIC0zNiA3IC00OCAxNiAtMjEgMTUgLTIyIDIxIC0yMiAxNjkgMCAxNTAgLTZcbjE3OSAtMjkgMTUxelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk02MDcgNDgzIGMtNCAtMyAtNyAtNzUgLTcgLTE1OSAwIC0xNDcgLTEgLTE1NCAtMjIgLTE2OCAtMTIgLTkgLTM0XG4tMTYgLTQ4IC0xNiAtMzcgMCAtMTI1IC0yNyAtMTM4IC00MyAtOCAtOSAxNiAtMTIgMTE2IC0xMiBsMTI3IDAgMyAxOTEgYzJcbjE1MiAwIDE5NCAtMTEgMjAzIC04IDYgLTE3IDggLTIwIDR6XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICBzdmcge1xuICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgfVxuICBwYXRoIHtcbiAgICBmaWxsOiAke3N0eWxlcy5iYXNlQ29sb3J9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBCb3hMYXlvdXRQcm9wc1R5cGUsIGJveExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59ICYgQm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uYm94TGF5b3V0UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJfeDMyX1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiIHhtbFNwYWNlPVwicHJlc2VydmVcIj5cbiAgICAgICAgPGc+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNNDkwLjI0OSwzMDguMDg3di0wLjAxTDM0OC44OSw0NDkuNDM2Yy0xNy41MjUsMTcuNTI1LTQwLjQxNiwyNi4yMzctNjMuNDU5LDI2LjI1NlxuXHRcdGMtMjMuMDQyLTAuMDItNDUuOTM1LTguNzMyLTYzLjQ1OC0yNi4yNTZMMjEuNzUxLDI0OS4yMTVMMCwyNzAuOTg0bDIwMC4yMjIsMjAwLjIxMWMyMy40NzIsMjMuNDc0LDU0LjQxNiwzNS4yNyw4NS4yMDksMzUuMjZcblx0XHRjMzAuNzk0LDAuMDEsNjEuNzM3LTExLjc3Niw4NS4yMS0zNS4yNkw1MTIsMzI5LjgzOEw0OTAuMjQ5LDMwOC4wODd6XCI+PC9wYXRoPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTU0LjM3NiwyMjguOTE2bDIwMC4yMjEsMjAwLjIyMmMxNy4wMjQsMTcuMDI0LDQ0LjY0MywxNy4wMjQsNjEuNjY3LDBsMTQxLjM1OC0xNDEuMzY5XG5cdFx0YzE3LjA0NC0xNy4wMzQsMTcuMDI0LTQ0LjY0MywwLTYxLjY1NkwyNTcuNDIyLDI1Ljg5MWMtNy42NTEtNy42MzEtMTcuODQ2LTEyLjE2OC0yOC42Mi0xMi43MDhMNzkuODUyLDUuNjAxXG5cdFx0QzY3LjUzNSw0Ljk3MSw1NS41MzgsOS41OTcsNDYuODA1LDE4LjMyYy04LjcxMiw4LjcyMi0xMy4zMzksMjAuNzMtMTIuNjk4LDMzLjA0Nmw3LjU3MSwxNDguOTM5XG5cdFx0QzQyLjIyLDIxMS4wOSw0Ni43NDYsMjIxLjI4NSw1NC4zNzYsMjI4LjkxNnogTTExNS4wNDEsODYuNTM1YzE0LjAyLTE0LjAyLDM2LjczMi0xNC4wMiw1MC43NTEsMFxuXHRcdGMxNC4wMiwxNC4wMiwxNC4wMiwzNi43NDIsMCw1MC43NjFjLTE0LjAyLDE0LjAyLTM2LjczMSwxNC4wMi01MC43NTEsMEMxMDEuMDIyLDEyMy4yNzcsMTAxLjAyMiwxMDAuNTU1LDExNS4wNDEsODYuNTM1elwiPjwvcGF0aD5cbiAgICAgICAgPC9nPlxuICAgICAgPC9zdmc+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgc3ZnIHtcbiAgICB3aWR0aDogaW5oZXJpdDtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gIH1cbiAgcGF0aCB7XG4gICAgZmlsbDogJHtzdHlsZXMuYmFzZUNvbG9yfTtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgRmxleEJveExheW91dFByb3BzVHlwZSwgZmxleExheW91dENlbnRlclByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0gRmxleEJveExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmZsZXhMYXlvdXRDZW50ZXJQcm9wc0luaXQsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciB7Li4ucH0+XG4gICAgICA8c3ZnIHZlcnNpb249XCIxLjFcIiBpZD1cIl94MzJfXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgeG1sU3BhY2U9XCJwcmVzZXJ2ZVwiPlxuICAgICAgICA8Zz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk0yNTYsMjY1LjMwOGM3My4yNTIsMCwxMzIuNjQ0LTU5LjM5MSwxMzIuNjQ0LTEzMi42NTRDMzg4LjY0NCw1OS40MTIsMzI5LjI1MiwwLDI1NiwwXG5cdFx0Yy03My4yNjIsMC0xMzIuNjQzLDU5LjQxMi0xMzIuNjQzLDEzMi42NTRDMTIzLjM1NywyMDUuOTE3LDE4Mi43MzgsMjY1LjMwOCwyNTYsMjY1LjMwOHpcIj48L3BhdGg+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNNDI1Ljg3NCwzOTMuMTA0Yy01LjkyMi0zNS40NzQtMzYtODQuNTA5LTU3LjU1Mi0xMDcuNDY1Yy01LjgyOS02LjIxMi0xNS45NDgtMy42MjgtMTkuNTA0LTEuNDI3XG5cdFx0Yy0yNy4wNCwxNi42NzItNTguNzgyLDI2LjM5OS05Mi44MTksMjYuMzk5Yy0zNC4wMzYsMC02NS43NzgtOS43MjctOTIuODE4LTI2LjM5OWMtMy41NTUtMi4yMDEtMTMuNjc1LTQuNzg1LTE5LjUwNSwxLjQyN1xuXHRcdGMtMjEuNTUsMjIuOTU2LTUxLjYyOCw3MS45OTEtNTcuNTUxLDEwNy40NjVDNzEuNTczLDQ4MC40NDQsMTY0Ljg3Nyw1MTIsMjU2LDUxMkMzNDcuMTIzLDUxMiw0NDAuNDI3LDQ4MC40NDQsNDI1Ljg3NCwzOTMuMTA0elwiPjwvcGF0aD5cbiAgICAgICAgPC9nPlxuICAgICAgPC9zdmc+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbmA7XG4iLCJpbXBvcnQgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBDaGVja21hcmsgZnJvbSAnLi9DaGVja21hcmsnO1xuaW1wb3J0IENsb3NlIGZyb20gJy4vQ2xvc2UnO1xuaW1wb3J0IEVkaXQgZnJvbSAnLi9FZGl0JztcbmltcG9ydCBHb29nbGUgZnJvbSAnLi9Hb29nbGUnO1xuaW1wb3J0IExvYXJkaW5nIGZyb20gJy4vTG9hcmRpbmcnO1xuaW1wb3J0IE5vdGlmIGZyb20gJy4vTm90aWYnO1xuaW1wb3J0IFJlc2V0IGZyb20gJy4vUmVzZXQnO1xuaW1wb3J0IFN0b3J5IGZyb20gJy4vU3RvcnknO1xuaW1wb3J0IFRhZyBmcm9tICcuL1RhZyc7XG5pbXBvcnQgVXNlciBmcm9tICcuL1VzZXInO1xuXG5leHBvcnQgdHlwZSBJY29uVHlwZSA9ICdDaGVja21hcmsnIHwgJ0VkaXQnIHwgJ0dvb2dsZScgfCAnUmVzZXQnIHwgJ1RhZycgfCAnVXNlcicgfCAnU3RvcnknIHwgJ05vdGlmJyB8ICdDbG9zZScgfCAnTG9hcmRpbmcnO1xuXG5leHBvcnQgY29uc3Qgc3ZnQ3NzID0gY3NzYFxuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBDaGVja21hcmssXG4gIEVkaXQsXG4gIEdvb2dsZSxcbiAgUmVzZXQsXG4gIFRhZyxcbiAgVXNlcixcbiAgU3RvcnksXG4gIE5vdGlmLFxuICBDbG9zZSxcbiAgTG9hcmRpbmcsXG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuaW1wb3J0IGNvbW1vblV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgZW52IGZyb20gJ2NvdmVyLy4uL2Vudi5qc29uJztcbmltcG9ydCBhcGkgZnJvbSAnY292ZXIvYXBpJztcbmltcG9ydCBTdmcgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcnO1xuaW1wb3J0IEZsb2F0TWVudSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9GbG9hdE1lbnUnO1xuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCB7IEFjY291bnRNZW51c0xvZ291dCwgQWNjb3VudE1lbnVzLCBBY2NvdW50TWVudXNNeU1lbnUsIEFjY291bnRNZW51c1NlbGVjdEFjY291bnQgfSBmcm9tICdjb3Zlci9tb2RlbC9NZW51JztcbmltcG9ydCBVc2VyIGZyb20gJ2NvdmVyL21vZGVsL1VzZXInO1xuaW1wb3J0IHsgbXlVc2VyS2V5LCBnb29nbGVBY2NvdW50Q29va2llS2V5IH0gZnJvbSAnY292ZXIvdXRpbHMvY29uc3RhbnRzL3N0b3JhZ2UnO1xuXG50eXBlIFByb3BzID0ge1xuICBteVVzZXI6IFVzZXI7XG4gIHNldE15VXNlcjogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248VXNlcj4+O1xuICBzZXRJc015UGFnZTogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xufTtcblxuY29uc3QgZ2V0TXlVc2VyRnJvbVNlc3Npb24gPSAoKSA9PiB7XG4gIGNvbnN0IGl0ZW0gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShteVVzZXJLZXkpO1xuICByZXR1cm4gbmV3IFVzZXIoSlNPTi5wYXJzZShpdGVtKSk7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IG15VXNlciwgc2V0TXlVc2VyIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtzaG93TWVudSwgc2V0U2hvd01lbnVdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tMb2dpbiA9ICgpID0+IHtcbiAgICBkb2N1bWVudC5jb29raWUgPSBnb29nbGVBY2NvdW50Q29va2llS2V5O1xuICAgIGNvbnN0IG15VXNlclNlc3Npb24gPSBnZXRNeVVzZXJGcm9tU2Vzc2lvbigpO1xuICAgIGlmIChteVVzZXJTZXNzaW9uID09PSBudWxsKSB7XG4gICAgICB3aW5kb3cuZ29vZ2xlLmFjY291bnRzLmlkLnByb21wdCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTaG93TWVudSh0cnVlKTtcbiAgICB9XG4gICAgaWYgKG15VXNlclNlc3Npb24pIHtcbiAgICAgIHNldE15VXNlcihteVVzZXJTZXNzaW9uKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlR29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlID0gYXN5bmMgKGdvb2xnZUNyZWRlbnRpYWxSZXNwb25zZSkgPT4ge1xuICAgIGNvbnN0IGdvb2dsZVJlc3BvbnNlID0gY29tbW9uVXRpbC5wYXJzZUp3dChnb29sZ2VDcmVkZW50aWFsUmVzcG9uc2UuY3JlZGVudGlhbCk7XG4gICAgY29uc3Qgc25zSWNvbiA9IGdvb2dsZVJlc3BvbnNlLnBpY3R1cmU7XG4gICAgY29uc3QgcmVxdWVzdCA9IGNvbW1vblV0aWwuZGVlcENvcHkoZ29vZ2xlUmVzcG9uc2UpO1xuICAgIGRlbGV0ZSByZXF1ZXN0LmlzcztcbiAgICBkZWxldGUgcmVxdWVzdC5uYmY7XG4gICAgZGVsZXRlIHJlcXVlc3QuYXVkO1xuICAgIGRlbGV0ZSByZXF1ZXN0LnN1YjtcbiAgICBkZWxldGUgcmVxdWVzdC5henA7XG4gICAgZGVsZXRlIHJlcXVlc3QucGljdHVyZTsgLy8g5YCk44GrOuOBjOWQq+OBvuOCjOOBpkpTT04ucGFyc2XjgYzlpLHmlZfjgZnjgotcbiAgICBkZWxldGUgcmVxdWVzdC5pYXQ7XG4gICAgZGVsZXRlIHJlcXVlc3QuZXhwO1xuICAgIGRlbGV0ZSByZXF1ZXN0Lmp0aTtcbiAgICBkZWxldGUgcmVxdWVzdC5naXZlbl9uYW1lO1xuICAgIGRlbGV0ZSByZXF1ZXN0LmZhbWlseV9uYW1lO1xuICAgIGlmIChyZXF1ZXN0LmVtYWlsX3ZlcmlmaWVkKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdC5lbWFpbF92ZXJpZmllZDtcbiAgICAgIGNvbnN0IF91c2VyID0gYXdhaXQgYXBpLmpzb24oJ2xvZ2luJywgcmVxdWVzdCk7XG4gICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoeyAuLi5fdXNlciwgc25zSWNvbiB9KTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKG15VXNlcktleSwgSlNPTi5zdHJpbmdpZnkodXNlcikpO1xuICAgIH1cbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHt9LCBbbXlVc2VyXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBteVVzZXJTZXNzaW9uID0gZ2V0TXlVc2VyRnJvbVNlc3Npb24oKTtcblxuICAgIGlmIChteVVzZXJTZXNzaW9uKSB7XG4gICAgICBzZXRNeVVzZXIobXlVc2VyU2Vzc2lvbik7XG4gICAgfVxuICAgIGlmICh3aW5kb3cuZ29vZ2xlKSB7XG4gICAgICB3aW5kb3cuZ29vZ2xlLmFjY291bnRzLmlkLmluaXRpYWxpemUoe1xuICAgICAgICBjbGllbnRfaWQ6IGVudi5jbGllbnRJZCxcbiAgICAgICAgY2FuY2VsX29uX3RhcF9vdXRzaWRlOiB0cnVlLFxuICAgICAgICBjYWxsYmFjazogaGFuZGxlR29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlLFxuICAgICAgfSk7XG5cbiAgICAgIGlmIChteVVzZXJTZXNzaW9uID09PSBudWxsKSB7XG4gICAgICAgIHdpbmRvdy5nb29nbGUuYWNjb3VudHMuaWQucHJvbXB0KChub3RpZmljYXRpb24pID0+IHtcbiAgICAgICAgICBpZiAobm90aWZpY2F0aW9uLmlzTm90RGlzcGxheWVkKCkgfHwgbm90aWZpY2F0aW9uLmlzU2tpcHBlZE1vbWVudCgpKSB7XG4gICAgICAgICAgICAvLyBjb250aW51ZSB3aXRoIGFub3RoZXIgaWRlbnRpdHkgcHJvdmlkZXIuXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cIkFjY291bnRcIiBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrTG9naW59IGFsdD17eyBsYWJlbDogbXlVc2VyLm5hbWUsIHR5cGU6ICdib3R0b20gcmlnaHQnIH19PlxuICAgICAgICB7bXlVc2VyLnNuc0ljb24gPT09ICcnID8gKFxuICAgICAgICAgIDxMb2dpbiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiB3aWR0aD1cIjQ4cHhcIiBoZWlnaHQ9XCI0OHB4XCIgYm9yZGVyIGJvcmRlclJhZGl1cz1cImNpcmNsZVwiPlxuICAgICAgICAgICAgPFN2Zy5Hb29nbGUgLz5cbiAgICAgICAgICA8L0xvZ2luPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxNeUFjY291bnQgY2xhc3NOYW1lPVwiTXlBY2NvdW50XCIgYmFja2dyb3VuZEltYWdlPXtteVVzZXIuc25zSWNvbn0gLz5cbiAgICAgICAgKX1cbiAgICAgIDwvQ29udGFpbmVyPlxuXG4gICAgICA8RmxvYXRNZW51XG4gICAgICAgIHNob3c9e3Nob3dNZW51fVxuICAgICAgICBzZXRTaG93PXtzZXRTaG93TWVudX1cbiAgICAgICAgbWVudXM9e0FjY291bnRNZW51c31cbiAgICAgICAgb25DbGljaz17KG1lbnUpID0+IHtcbiAgICAgICAgICBjb25zdCBwYWdlID0gbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKVsxXTtcbiAgICAgICAgICBzd2l0Y2ggKG1lbnUpIHtcbiAgICAgICAgICAgIGNhc2UgQWNjb3VudE1lbnVzTXlNZW51OlxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhteVVzZXIuaWQpO1xuICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoYC8vJHtjb25mLmNvdmVyVVJMfS8ke3BhZ2V9LyR7dXNlcklkfWApO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQWNjb3VudE1lbnVzU2VsZWN0QWNjb3VudDpcbiAgICAgICAgICAgICAgd2luZG93Lmdvb2dsZS5hY2NvdW50cy5pZC5wcm9tcHQoKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEFjY291bnRNZW51c0xvZ291dDpcbiAgICAgICAgICAgICAgd2luZG93Lmdvb2dsZS5hY2NvdW50cy5pZC5kaXNhYmxlQXV0b1NlbGVjdCgpO1xuICAgICAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBnb29nbGVBY2NvdW50Q29va2llS2V5O1xuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShteVVzZXJLZXkpO1xuICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZXRTaG93TWVudShmYWxzZSk7XG4gICAgICAgIH19XG4gICAgICAgIGZpdFJpZ2h0XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBkZWxldGVSZXF1ZXN0ID0gKHJlcXVlc3QpID0+IHtcbiAgZGVsZXRlIHJlcXVlc3QuaXNzO1xuICBkZWxldGUgcmVxdWVzdC5uYmY7XG4gIGRlbGV0ZSByZXF1ZXN0LmF1ZDtcbiAgZGVsZXRlIHJlcXVlc3Quc3ViO1xuICBkZWxldGUgcmVxdWVzdC5henA7XG4gIGRlbGV0ZSByZXF1ZXN0LnBpY3R1cmU7IC8vIOWApOOBqzrjgYzlkKvjgb7jgozjgaZKU09OLnBhcnNl44GM5aSx5pWX44GZ44KLXG4gIGRlbGV0ZSByZXF1ZXN0LmlhdDtcbiAgZGVsZXRlIHJlcXVlc3QuZXhwO1xuICBkZWxldGUgcmVxdWVzdC5qdGk7XG4gIGRlbGV0ZSByZXF1ZXN0LmdpdmVuX25hbWU7XG4gIGRlbGV0ZSByZXF1ZXN0LmZhbWlseV9uYW1lO1xuICByZXR1cm4gcmVxdWVzdDtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgd2lkdGg6IDM4cHg7XG4gIGhlaWdodDogMzhweDtcbiAgbWluLXdpZHRoOiAzOHB4O1xuICBtaW4taGVpZ2h0OiAzOHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG5gO1xuXG5jb25zdCBMb2dpbiA9IHN0eWxlZChGbGV4KWBcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgbWluLXdpZHRoOiBpbmhlcml0O1xuICBtaW4taGVpZ2h0OiBpbmhlcml0O1xuICBzdmcge1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgfVxuYDtcblxudHlwZSBNeUFjY291bnRUeXBlID0ge1xuICBiYWNrZ3JvdW5kSW1hZ2U6IHN0cmluZztcbn07XG5cbmNvbnN0IE15QWNjb3VudCA9IHN0eWxlZC5kaXY8TXlBY2NvdW50VHlwZT5gXG4gIHdpZHRoOiAzOHB4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7KHByb3BzKSA9PiBwcm9wcy5iYWNrZ3JvdW5kSW1hZ2V9KTtcbiAgYmFja2dyb3VuZC1zaXplOiAzOHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmNvbnN0IFRoZW1lR3JlZW4gPSAnZ3JlZW4nO1xuY29uc3QgVGhlbWVEYXJrID0gJ2RhcmsnO1xudHlwZSBUaGVtZVR5cGVzID0gdHlwZW9mIFRoZW1lR3JlZW4gfCB0eXBlb2YgVGhlbWVEYXJrO1xudHlwZSBQcm9wcyA9IHtcbiAgbGFiZWw6IHN0cmluZztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBhY3RpdmU/OiBib29sZWFuO1xuICBvbkNsaWNrPzogKGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB2b2lkO1xuICBocmVmPzogc3RyaW5nO1xuICB0aGVtZT86IFRoZW1lVHlwZXM7XG59O1xuXG5jb25zdCBMYWJlbHM6IEZ1bmN0aW9uQ29tcG9uZW50PHsgbGFiZWw6IHN0cmluZyB9PiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8bGFiZWw+e3Byb3BzLmxhYmVsfTwvbGFiZWw+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxhbXBcIj4mbmJzcDs8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmNvbnN0IEJ1dHRvbjogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGJ1dHRvbiBvbkNsaWNrPXsoZSkgPT4gcHJvcHMub25DbGljayAmJiBwcm9wcy5vbkNsaWNrKGUpfT5cbiAgICAgIDxMYWJlbHMgbGFiZWw9e3Byb3BzLmxhYmVsfSAvPlxuICAgIDwvYnV0dG9uPlxuICApO1xufTtcblxuY29uc3QgQW5jaG9yOiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8YSBocmVmPXtwcm9wcy5ocmVmfT5cbiAgICAgIDxMYWJlbHMgbGFiZWw9e3Byb3BzLmxhYmVsfSAvPlxuICAgIDwvYT5cbiAgKTtcbn07XG5cbmNvbnN0IENvbnRlbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gcHJvcHMuaHJlZiA/IDxBbmNob3Igey4uLnByb3BzfSAvPiA6IDxCdXR0b24gey4uLnByb3BzfSAvPjtcbn07XG5cbmNvbnN0IEJveExpc3Q6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBhZGRDbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgPyBwcm9wcy5jbGFzc05hbWUgOiAnJztcbiAgY29uc3QgY2xhc3NOYW1lID0gcHJvcHMuYWN0aXZlID8gYCR7YWRkQ2xhc3NOYW1lfSBhY3RpdmVgIDogYWRkQ2xhc3NOYW1lO1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIga2V5PXtwcm9wcy5sYWJlbH0gdGhlbWU9e3Byb3BzLnRoZW1lfSBjbGFzc05hbWU9e2NsYXNzTmFtZX0+XG4gICAgICA8Q29udGVudCB7Li4ucHJvcHN9IC8+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5Cb3hMaXN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgYWN0aXZlOiBmYWxzZSxcbiAgdGhlbWU6IFRoZW1lR3JlZW4sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb3hMaXN0O1xuXG50eXBlIENvbnRhaW5lclByb3BUeXBlID0ge1xuICB0aGVtZTogVGhlbWVUeXBlcztcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5saTxDb250YWluZXJQcm9wVHlwZT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogYXV0bztcbiAgbWluLXdpZHRoOiAxODBweDtcbiAgaGVpZ2h0OiA3MHB4O1xuICBwYWRkaW5nOiAke3N0eWxlcy5iYXNlUGFkZGluZ31weDtcbiAgbWFyZ2luOiAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICBidXR0b24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy50aGVtZSA9PT0gVGhlbWVHcmVlbiA/ICdyZ2JhKDAsIDAsIDAsIDEpJyA6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDEpJyl9O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gKHByb3BzLnRoZW1lID09PSBUaGVtZUdyZWVuID8gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMSknIDogJ3JnYmEoNjgsIDY4LCA2OCwgMSknKX07XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB9XG4gIGEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgY29sb3I6ICNkZGQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gKHByb3BzLnRoZW1lID09PSBUaGVtZUdyZWVuID8gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMSknIDogJ3JnYmEoNjgsIDY4LCA2OCwgMSknKX07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG4gIGE6aG92ZXIsXG4gIGJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IChwcm9wcy50aGVtZSA9PT0gVGhlbWVHcmVlbiA/ICdyZ2JhKDI0NSwgMjQ1LCAyNDUsIDEpJyA6ICdyZ2JhKDk4LCA5OCwgOTgsIDEpJyl9O1xuICB9XG4gIC5sYW1wIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXgtd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIG1heC1oZWlnaHQ6IDEwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMudGhlbWUgPT09IFRoZW1lR3JlZW4gPyBzdHlsZXMubWFya3VwQ29sb3IgOiAncmdiYSgxNTUsIDE1NSwgMTU1LCAxKScpfTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgfVxuICBsYWJlbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgJi5hY3RpdmUgZGl2LmxhbXAge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gKHByb3BzLnRoZW1lID09PSBUaGVtZUdyZWVuID8gJ3JnYmEoNzksIDE3NCwgMTU5LCAxKScgOiAncmdiYSg3OSwgMTc0LCAxNTksIDEpJyl9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgU3ZnLCB7IEljb25UeXBlIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcnO1xuaW1wb3J0IENoZWNrbWFyayBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3N2Zy9DaGVja21hcmsnO1xuaW1wb3J0IEZsZXgsIHsgU2VjdGlvbiwgSDUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICB0aXRsZTogc3RyaW5nO1xuICBjb250ZW50OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGhlYWRlck1lbnU/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGljb25UeXBlPzogSWNvblR5cGU7XG4gIGNoZWNrQW5pbWF0aW9uPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdGl0bGUsIGhlYWRlck1lbnUsIGNvbnRlbnQsIGljb25UeXBlID0gJ1RhZycsIGNoZWNrQW5pbWF0aW9uIH0pID0+IHtcbiAgY29uc3QgU3ZnSWNvbiA9IFN2Z1tpY29uVHlwZV07XG4gIHJldHVybiAoXG4gICAgPFNlY3Rpb25DdXN0b21cbiAgICAgIGNsYXNzTmFtZT1cIkhlYWRlclNlY3Rpb25cIlxuICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgIGZsb3c9XCJjb2x1bW4gbm93cmFwXCJcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgcmVzZXRPcmlnaW5cbiAgICAgIGJvcmRlclxuICAgICAgYm9yZGVyUmFkaXVzXG4gICAgICB1cHBlck1hcmdpblxuICAgICAgc2lkZU1hcmdpblxuICAgICAgc2lkZVBhZGRpbmdcbiAgICAgIGJvdHRvbVBhZGRpbmdcbiAgICAgIGJvdHRvbU1hcmdpbj5cbiAgICAgIDxIZWFkZXJcbiAgICAgICAgY2xhc3NOYW1lPXsnSGVhZGVyU2VjdGlvbkhlYWRlcid9XG4gICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIlxuICAgICAgICBib3JkZXI9XCJ1bmRlcmxpbmVcIlxuICAgICAgICB1cHBlclBhZGRpbmdcbiAgICAgICAgc2lkZVBhZGRpbmdcbiAgICAgICAgYm90dG9tUGFkZGluZz5cbiAgICAgICAgPEg1IGNsYXNzTmFtZT17dGl0bGV9IHVwcGVyTWFyZ2luIGJvdHRvbU1hcmdpbj5cbiAgICAgICAgICB7Lyo8U3ZnSWNvbiBjbGFzc05hbWU9XCJQcm9maWxlU2VjdGlvblN2Z0ljb25cIiAvPiovfVxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9INT5cbiAgICAgICAge2hlYWRlck1lbnUgJiYgKFxuICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT17J1Byb2ZpbGVTZWN0aW9uTWVudSd9IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgICAgICB7aGVhZGVyTWVudX1cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICl9XG4gICAgICA8L0hlYWRlcj5cbiAgICAgIDxDb250ZW50XG4gICAgICAgIGNsYXNzTmFtZT17J0hlYWRlclNlY3Rpb25Db250ZW50J31cbiAgICAgICAgZmxvdz1cImNvbHVtbiBub3dyYXBcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICAgIHVwcGVyUGFkZGluZ1xuICAgICAgICBzaWRlUGFkZGluZ1xuICAgICAgICBzaWRlTWFyZ2luXG4gICAgICAgIGJvdHRvbVBhZGRpbmc+XG4gICAgICAgIHtjb250ZW50fVxuICAgICAgPC9Db250ZW50PlxuICAgICAge2NoZWNrQW5pbWF0aW9uICYmIDxDaGVja21hcmsgLz59XG4gICAgPC9TZWN0aW9uQ3VzdG9tPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBTZWN0aW9uQ3VzdG9tID0gc3R5bGVkKFNlY3Rpb24pYFxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBib3JkZXItcmlnaHQ6IDA7XG4gICAgYm9yZGVyLWxlZnQ6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAuSGVhZGVyU2VjdGlvbiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIC5IZWFkZXJTZWN0aW9uQ29udGVudCB7XG4gICAgICBwYWRkaW5nOiAke3N0eWxlcy5iYXNlUGFkZGluZ31weDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChGbGV4KWBcbiAgLlByb2ZpbGVTZWN0aW9uU3ZnSWNvbiB7XG4gICAgbWFyZ2luOiAwICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCAwIDA7XG4gIH1cbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDIwMHB4O1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgRmxleEJveExheW91dFByb3BzVHlwZSwgdXNlRmxleGVzQ29udGV4dCwgRmxleGVzQ29udGV4dFR5cGUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIENvbW1vblByb3BzID0ge1xuICBzaG93QWR2ZXJ0OiBib29sZWFuO1xufTtcblxudHlwZSBIZWFkZXJQcm9wcyA9IENvbW1vblByb3BzICYge1xuICBoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydDogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBIZWFkZXI6IFJlYWN0LkZDPEhlYWRlclByb3BzPiA9ICh7IHNob3dBZHZlcnQsIGhhbmRsZU9uQ2xpY2tDb250cm9sQWR2ZXJ0IH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QWR2ZXJ0SGVhZGVyIHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9PlxuICAgICAgPEFkdmVydEF0dGFjaCBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydH0+XG4gICAgICAgIEFEXG4gICAgICAgIDxiciAvPlxuICAgICAgICB7c2hvd0FkdmVydCA/ICdPRkYnIDogJ09OJ31cbiAgICAgIDwvQWR2ZXJ0QXR0YWNoPlxuICAgIDwvQWR2ZXJ0SGVhZGVyPlxuICApO1xufTtcblxuY29uc3QgQ29udGVudCA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAg44K544Od44Oz44K144O8XG4gICAgICA8YnIgLz5cbiAgICAgIOWLn+mbhuS4rVxuICAgICAgPGJyIC8+XG4gICAgICA8YnIgLz5cbiAgICAgIMKlMH5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBSaWdodDogUmVhY3QuRkM8Q29tbW9uUHJvcHM+ID0gKHsgc2hvd0FkdmVydCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEFkdmVydFJpZ2h0IGNsYXNzTmFtZT1cIkFkdmVydFJpZ2h0XCIgc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICA8Q29udGVudCAvPlxuICAgIDwvQWR2ZXJ0UmlnaHQ+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgTGVmdDogUmVhY3QuRkM8Q29tbW9uUHJvcHM+ID0gKHsgc2hvd0FkdmVydCA9IHRydWUgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBZHZlcnRMZWZ0IGNsYXNzTmFtZT1cIkFkdmVydExlZnRcIiBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fT5cbiAgICAgIDxDb250ZW50IC8+XG4gICAgPC9BZHZlcnRMZWZ0PlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IFVuZGVyOiBSZWFjdC5GQzxDb21tb25Qcm9wcz4gPSAoKSA9PiB7XG4gIGNvbnN0IGdsb2JhbENvbnRleHQ6IEZsZXhlc0NvbnRleHRUeXBlID0gdXNlRmxleGVzQ29udGV4dCgpO1xuICByZXR1cm4gKFxuICAgIDxBZHZlcnRVbmRlciBjbGFzc05hbWU9XCJBZHZlcnRVbmRlclwiIHNob3dBZHZlcnQ9e2dsb2JhbENvbnRleHQuaXNTY3JvbGxUb3B9PlxuICAgICAgPEFkdmVydFVuZGVyQ29udGVudCBmbG93PVwicm93IG5vd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImZsZXgtc3RhcnRcIiB3aWR0aD1cIjEwMCVcIiBzaWRlTWFyZ2luPVwiaHVnZVwiIGJvcmRlcj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwaWN0dXJlXCIgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZXNjcmlwdGlvblwiPiBERVNDUklQVElPTiA8L2Rpdj5cbiAgICAgIDwvQWR2ZXJ0VW5kZXJDb250ZW50PlxuICAgIDwvQWR2ZXJ0VW5kZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIEhlYWRlcixcbiAgUmlnaHQsXG4gIExlZnQsXG4gIFVuZGVyLFxufTtcblxudHlwZSBDb21tb25Dc3NQcm9wcyA9IENvbW1vblByb3BzICYgRmxleEJveExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQWR2ZXJ0Q3NzID0gY3NzPENvbW1vbkNzc1Byb3BzPmBcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAke3N0eWxlcy5iYXNlSGVpZ2h0ICogMiArIHN0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICBmbGV4OiAxIDEgJHtzdHlsZXMuYWR2ZXJ0V2lkdGh9cHg7XG4gIGRpc3BsYXk6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvd0FkdmVydCA/ICdmbGV4JyA6ICdub25lJyl9O1xuICBvcGFjaXR5OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3dBZHZlcnQgPyAxIDogMCl9O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6ICR7c3R5bGVzLmFkdmVydFdpZHRofXB4O1xuICBtaW4td2lkdGg6ICR7c3R5bGVzLmFkdmVydFdpZHRofXB4O1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFkdmVydFdpZHRofXB4O1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAke3N0eWxlcy5iYXNlSGVpZ2h0ICogMiArIHN0eWxlcy5iYXNlTWFyZ2luICogMn1weCk7XG4gIG1hcmdpbi10b3A6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0Q29sb3J9O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLCB0cmFuc2Zvcm07XG4gIHRyYW5zaXRpb24tZHVyYXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0SG92ZXJDb2xvcn07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCk7XG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAke3N0eWxlcy5kb3VibGVNYXJnaW59cHgpO1xuICAgIG1hcmdpbjogMCAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICB9XG5gO1xuXG5jb25zdCBBZHZlcnRIZWFkZXIgPSBzdHlsZWQuZGl2PENvbW1vbkNzc1Byb3BzPmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5kb3VibGVBZHZlcnRXaWR0aH1weCkge1xuICAgIHBhZGRpbmctcmlnaHQ6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICB9XG5gO1xuXG5jb25zdCBBZHZlcnRBdHRhY2ggPSBzdHlsZWQuZGl2PENvbW1vbkNzc1Byb3BzPmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0Q29sb3J9O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0SG92ZXJDb2xvcn07XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWR2ZXJ0UmlnaHQgPSBzdHlsZWQuZGl2PENvbW1vbkNzc1Byb3BzPmBcbiAgJHtBZHZlcnRDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IEFkdmVydExlZnQgPSBzdHlsZWQuZGl2PENvbW1vbkNzc1Byb3BzPmBcbiAgJHtBZHZlcnRDc3N9O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuZG91YmxlQWR2ZXJ0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tYm90dG9tOiAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICB9XG5gO1xuXG5jb25zdCB1bmRlckFkdmVydFNpemUgPSBzdHlsZXMuYmFzZUhlaWdodCAqIDI7XG5jb25zdCB1bmRlckFkdmVydFNwYWNlID0gc3R5bGVzLmRvdWJsZU1hcmdpbiAqIDI7XG5jb25zdCB1bmRlckFkdmVydFkgPSB1bmRlckFkdmVydFNpemUgKyB1bmRlckFkdmVydFNwYWNlO1xuY29uc3QgdW5kZXJQaWN0dXJlU2l6ZSA9IHVuZGVyQWR2ZXJ0U2l6ZSAtIHVuZGVyQWR2ZXJ0U3BhY2U7XG5leHBvcnQgY29uc3QgQWR2ZXJ0VW5kZXIgPSBzdHlsZWQoRmxleCk8Q29tbW9uQ3NzUHJvcHM+YFxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aH1weDtcbiAgaGVpZ2h0OiAke3VuZGVyQWR2ZXJ0U2l6ZX1weDtcbiAgcGFkZGluZzogMCA2NHB4O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCwgJHsocHJvcHMpID0+IChwcm9wcy5zaG93QWR2ZXJ0ID8gMCA6IHVuZGVyQWR2ZXJ0WSl9cHgpO1xuICAucGljdHVyZSB7XG4gICAgd2lkdGg6ICR7dW5kZXJQaWN0dXJlU2l6ZX1weDtcbiAgICBtaW4td2lkdGg6ICR7dW5kZXJQaWN0dXJlU2l6ZX1weDtcbiAgICBtYXgtd2lkdGg6ICR7dW5kZXJQaWN0dXJlU2l6ZX1weDtcbiAgICBoZWlnaHQ6ICR7dW5kZXJQaWN0dXJlU2l6ZX1weDtcbiAgICBtaW4taGVpZ2h0OiAke3VuZGVyUGljdHVyZVNpemV9cHg7XG4gICAgbWF4LWhlaWdodDogJHt1bmRlclBpY3R1cmVTaXplfXB4O1xuICAgIG1hcmdpbjogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5ib3JkZXJSYWRpdXN9cHg7XG4gIH1cbiAgLmRlc2NyaXB0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weDtcbiAgICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgfVxuYDtcblxuY29uc3QgQWR2ZXJ0VW5kZXJDb250ZW50ID0gc3R5bGVkKEZsZXgpYFxuICBoZWlnaHQ6IDEwMCU7XG4gICR7c3R5bGVzLmFscGhhTGlnaHRCZ1NldH07XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJvcmRlclJhZGl1c31weDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICA6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CcmlnaHR9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgSGVhZGVyU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9IZWFkZXJTZWN0aW9uJztcbmltcG9ydCBBZGRUYWcgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS90aXAvQWRkJztcbmltcG9ydCBUYWdDb21wbGV4aXR5IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL0NvbXBsZXhpdHknO1xuaW1wb3J0IFRhZ1NpbXBseSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL3RpcC9TaW1wbHknO1xuaW1wb3J0IHsgVGFnUGFyZW50VHlwZSwgVGFnVHlwZSwgdGFnSW52ZXN0b3IsIHRhZ0ZvdW5kZXIsIHRhZ01lbWJlciwgdGFnUGFyZW50U3RvcnksIHRhZ1R5cGVzLCB0YWdTdG9yeSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzJztcbmltcG9ydCBGbGV4LCB7IFNlY3Rpb24sIEg1IH0gZnJvbSAnY292ZXIvZmxleGVzJztcblxuaW1wb3J0IHsgVGFnVmFsdWVUeXBlIH0gZnJvbSAnLi9jb21tb24nO1xuXG50eXBlIFByb3BzID0ge1xuICBpc015UGFnZTogYm9vbGVhbjtcbiAgdGFnUGFyZW50OiBUYWdQYXJlbnRUeXBlO1xuICBzb21lVGFnczogVGFnVmFsdWVUeXBlW107XG4gIGlzU2F2ZWRBbmltYXRpb25zOiBib29sZWFuO1xuICBoYW5kbGVPbkNsaWNrT3BlblRhZzogKHRhZ1BhcmVudDogVGFnUGFyZW50VHlwZSwgdGFnVHlwZT86IFRhZ1R5cGUsIGluZGV4PzogbnVtYmVyLCB0YWdTdHJ1Y3R1cmU/OiBhbnkpID0+IHZvaWQ7XG4gIGhhbmRsZU9uQ2xpY2tSZW1vdmU6ICh0YWdQYXJlbnQ6IFRhZ1BhcmVudFR5cGUsIHRhZ1R5cGU6IFRhZ1R5cGUsIGluZGV4OiBudW1iZXIpID0+IHZvaWQ7XG59O1xuXG50eXBlIFRhZ0xhYmVsVHlwZSA9IHtcbiAgaW5kdXN0b3J5OiBzdHJpbmc7XG4gIGluZHVzdG9yeVBhcmVudDogc3RyaW5nO1xuICBzdGFydHVwU2VyaWVzOiBzdHJpbmc7XG4gIGpvYlBhcmVudDogc3RyaW5nO1xuICBqb2I6IHN0cmluZztcbiAgc3Rvcnk6IHN0cmluZztcbn07XG5cbmNvbnN0IHRhZ0xhYmVsSW5pdDogVGFnTGFiZWxUeXBlID0ge1xuICBpbmR1c3Rvcnk6ICcnLFxuICBpbmR1c3RvcnlQYXJlbnQ6ICcnLFxuICBzdGFydHVwU2VyaWVzOiAnJyxcbiAgam9iUGFyZW50OiAnJyxcbiAgam9iOiAnJyxcbiAgc3Rvcnk6ICcnLFxufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBpc015UGFnZSA9IGZhbHNlLFxuICB0YWdQYXJlbnQsXG4gIHNvbWVUYWdzLFxuICBpc1NhdmVkQW5pbWF0aW9ucyxcbiAgaGFuZGxlT25DbGlja09wZW5UYWcsXG4gIGhhbmRsZU9uQ2xpY2tSZW1vdmUsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBnZXRUYWdDb21wbGV4aXR5Tm9kZSA9ICh0YWdQYXJlbnQ6IFRhZ1BhcmVudFR5cGUsIHRhZ1R5cGU6IFRhZ1R5cGUsIGluZGV4OiBudW1iZXIsIHRhZyk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gICAgY29uc3QgbGFiZWxzID0gZ2V0Q29udmVydFRhZ0lkVG9MYWJlbCh0YWdUeXBlLCB0YWcpO1xuICAgIGNvbnN0IGtleSA9IGAke3RhZ1BhcmVudH1fJHt0YWdUeXBlfV8ke2luZGV4fWA7XG4gICAgY29uc3QgdXBwZXJMZWZ0ID0gbGFiZWxzLmluZHVzdG9yeVBhcmVudDtcbiAgICBjb25zdCB1cHBlclJpZ2h0ID0gbGFiZWxzLmluZHVzdG9yeTtcbiAgICBjb25zdCBib3R0b21MZWZ0ID0gdGFnVHlwZSA9PT0gdGFnTWVtYmVyID8gbGFiZWxzLmpvYiA6IGxhYmVscy5zdGFydHVwU2VyaWVzO1xuICAgIGNvbnN0IGJvdHRvbVJpZ2h0ID0gYCgke3RhZy55ZWFyfSlgO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWdDb21wbGV4aXR5XG4gICAgICAgIGtleT17a2V5fVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVPbkNsaWNrT3BlblRhZyh0YWdQYXJlbnQsIHRhZ1R5cGUsIGluZGV4LCB0YWcpfVxuICAgICAgICBvbkNsaWNrUmVtb3ZlPXsoKSA9PiBpc015UGFnZSAmJiBoYW5kbGVPbkNsaWNrUmVtb3ZlKHRhZ1BhcmVudCwgdGFnVHlwZSwgaW5kZXgpfVxuICAgICAgICB1cHBlckxlZnQ9e3VwcGVyTGVmdH1cbiAgICAgICAgdXBwZXJSaWdodD17dXBwZXJSaWdodH1cbiAgICAgICAgYm90dG9tTGVmdD17Ym90dG9tTGVmdH1cbiAgICAgICAgYm90dG9tUmlnaHQ9e2JvdHRvbVJpZ2h0fVxuICAgICAgLz5cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGdldENvbnRlbnROb2RlID0gKCk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gICAgaWYgKHRhZ1BhcmVudCA9PT0gdGFnUGFyZW50U3RvcnkpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxTZWN0aW9uIGtleT17YCR7dGFnUGFyZW50U3Rvcnl9YH0gZmxvdz1cImNvbHVtbiBub3dyYXBcIiB1cHBlclBhZGRpbmc+XG4gICAgICAgICAgPEZsZXggY2xhc3NOYW1lPXtgVGFnU2VjdGlvbiAke3RhZ1BhcmVudH1gfSBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIgd2lkdGg9XCIxMDAlXCIgdXBwZXJNYXJnaW4gYm90dG9tTWFyZ2luPlxuICAgICAgICAgICAge3NvbWVUYWdzICYmXG4gICAgICAgICAgICAgIHNvbWVUYWdzW3RhZ1BhcmVudFN0b3J5XSAmJlxuICAgICAgICAgICAgICBzb21lVGFnc1t0YWdQYXJlbnRTdG9yeV0ubWFwKCh0YWcsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGFiZWxzID0gZ2V0Q29udmVydFRhZ0lkVG9MYWJlbCh0YWdTdG9yeSwgdGFnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPFRhZ1NpbXBseVxuICAgICAgICAgICAgICAgICAgICBrZXk9e2BzdG9yeV8ke3RhZy5zdG9yeUlkfWB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2xpY2tPcGVuVGFnKHRhZ1N0b3J5LCB0YWdTdG9yeSwgaW5kZXgsIHRhZyl9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2tSZW1vdmU9eygpID0+IGlzTXlQYWdlICYmIGhhbmRsZU9uQ2xpY2tSZW1vdmUodGFnUGFyZW50LCB0YWdTdG9yeSwgaW5kZXgpfVxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17bGFiZWxzLnN0b3J5fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIHtpc015UGFnZSAmJiAoXG4gICAgICAgICAgICAgIDxBZGRUYWdcbiAgICAgICAgICAgICAgICBzaG93XG4gICAgICAgICAgICAgICAgYWx0PVwiQWRkXCJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgICAgICAgaGFuZGxlT25DbGlja09wZW5UYWcodGFnU3RvcnksIHRhZ1N0b3J5LCBzb21lVGFncyAmJiBzb21lVGFnc1t0YWdQYXJlbnRTdG9yeV0gPyBzb21lVGFnc1t0YWdQYXJlbnRTdG9yeV0ubGVuZ3RoIDogMClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRhZ1R5cGVzLm1hcCgodGFnVHlwZTogVGFnVHlwZSwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKHRhZ1R5cGUgIT09IHRhZ1N0b3J5KSB7XG4gICAgICAgICAgY29uc3QgdGFnQ250ID0gc29tZVRhZ3MgJiYgc29tZVRhZ3NbdGFnVHlwZV0gPyBzb21lVGFnc1t0YWdUeXBlXS5sZW5ndGggOiAwO1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8U2VjdGlvbiBrZXk9e2Ake3RhZ1R5cGV9XyR7aW5kZXh9YH0gY2xhc3NOYW1lPXtgJHt0YWdUeXBlfV8ke2luZGV4fWB9IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgICAgICAgIDxINT57dXRpbC5nZXRIZWFkVXBwZXIodGFnVHlwZSl9PC9INT5cbiAgICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPXtgVGFnU2VjdGlvbiAke3RhZ1BhcmVudH1gfSBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIgd2lkdGg9XCIxMDAlXCIgdXBwZXJNYXJnaW4gYm90dG9tTWFyZ2luPlxuICAgICAgICAgICAgICAgIHtzb21lVGFncyAmJlxuICAgICAgICAgICAgICAgICAgc29tZVRhZ3NbdGFnVHlwZV0gJiZcbiAgICAgICAgICAgICAgICAgIHNvbWVUYWdzW3RhZ1R5cGVdLm1hcCgodGFnLCBpbmRleCkgPT4gZ2V0VGFnQ29tcGxleGl0eU5vZGUodGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCwgdGFnKSl9XG4gICAgICAgICAgICAgICAge2lzTXlQYWdlICYmIDxBZGRUYWcgc2hvdz17aXNNeVBhZ2V9IG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2xpY2tPcGVuVGFnKHRhZ1BhcmVudCwgdGFnVHlwZSwgdGFnQ250KX0gYWx0PVwiQWRkXCIgLz59XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIDwvU2VjdGlvbj5cbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxIZWFkZXJTZWN0aW9uXG4gICAgICBrZXk9e2Ake3RhZ1BhcmVudH0gVGFnc2B9XG4gICAgICB0aXRsZT17dXRpbC5nZXRIZWFkVXBwZXIoYCR7dGFnUGFyZW50fSBUYWdzYCl9XG4gICAgICBjb250ZW50PXtnZXRDb250ZW50Tm9kZSgpfVxuICAgICAgY2hlY2tBbmltYXRpb249e2lzU2F2ZWRBbmltYXRpb25zfVxuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IGdldENvbnZlcnRUYWdJZFRvTGFiZWwgPSAodGFnVHlwZTogVGFnVHlwZSwgdGFnU3RydWN0dXJlKTogVGFnTGFiZWxUeXBlID0+IHtcbiAgbGV0IGluZHVzdG9yeUlkID0gJyc7XG4gIGxldCBpbmR1c3RvcnlQYXJlbnRJZCA9ICcnO1xuICBsZXQgc3RhcnR1cFNlcmllc0lkID0gJyc7XG4gIGxldCBqb2JJZCA9ICcnO1xuICBsZXQgam9iUGFyZW50SWQgPSAnJztcbiAgbGV0IHN0b3J5SWQgPSAnJztcbiAgbGV0IHRhZ0xhYmVscyA9IHsgLi4udGFnTGFiZWxJbml0IH07XG5cbiAgc3dpdGNoICh0YWdUeXBlKSB7XG4gICAgY2FzZSB0YWdJbnZlc3RvcjpcbiAgICAgIGluZHVzdG9yeUlkID0gdGFnU3RydWN0dXJlLmluZHVzdG9yeUlkO1xuICAgICAgaW5kdXN0b3J5UGFyZW50SWQgPSBpbmR1c3RvcnlJZC5zcGxpdCgnLScpWzBdO1xuICAgICAgc3RhcnR1cFNlcmllc0lkID0gdGFnU3RydWN0dXJlLnN0YXJ0dXBTZXJpZXNJZDtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnkgPSB3aW5kb3cudGFsa25EYXRhcy5zdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlbaW5kdXN0b3J5SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLmluZHVzdG9yeVBhcmVudCA9IHdpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3NCeUlkLmluZHVzdG9yeVBhcmVudFtpbmR1c3RvcnlQYXJlbnRJZF0uamE7XG4gICAgICB0YWdMYWJlbHMuc3RhcnR1cFNlcmllcyA9IHdpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3NCeUlkLnN0YXJ0dXBTZXJpZXNbc3RhcnR1cFNlcmllc0lkXS5qYTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgdGFnRm91bmRlcjpcbiAgICAgIGluZHVzdG9yeUlkID0gdGFnU3RydWN0dXJlLmluZHVzdG9yeUlkO1xuICAgICAgaW5kdXN0b3J5UGFyZW50SWQgPSBpbmR1c3RvcnlJZC5zcGxpdCgnLScpWzBdO1xuICAgICAgc3RhcnR1cFNlcmllc0lkID0gdGFnU3RydWN0dXJlLnN0YXJ0dXBTZXJpZXNJZDtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnkgPSB3aW5kb3cudGFsa25EYXRhcy5zdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlbaW5kdXN0b3J5SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLmluZHVzdG9yeVBhcmVudCA9IHdpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3NCeUlkLmluZHVzdG9yeVBhcmVudFtpbmR1c3RvcnlQYXJlbnRJZF0uamE7XG4gICAgICB0YWdMYWJlbHMuc3RhcnR1cFNlcmllcyA9IHdpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3NCeUlkLnN0YXJ0dXBTZXJpZXNbc3RhcnR1cFNlcmllc0lkXS5qYTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgdGFnTWVtYmVyOlxuICAgICAgaW5kdXN0b3J5SWQgPSB0YWdTdHJ1Y3R1cmUuaW5kdXN0b3J5SWQ7XG4gICAgICBpbmR1c3RvcnlQYXJlbnRJZCA9IGluZHVzdG9yeUlkLnNwbGl0KCctJylbMF07XG4gICAgICBqb2JJZCA9IHRhZ1N0cnVjdHVyZS5qb2JJZDtcbiAgICAgIGpvYlBhcmVudElkID0gam9iSWQuc3BsaXQoJy0nKVswXTtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnkgPSB3aW5kb3cudGFsa25EYXRhcy5zdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlbaW5kdXN0b3J5SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLmluZHVzdG9yeVBhcmVudCA9IHdpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3NCeUlkLmluZHVzdG9yeVBhcmVudFtpbmR1c3RvcnlQYXJlbnRJZF0uamE7XG4gICAgICB0YWdMYWJlbHMuam9iID0gd2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFnc0J5SWQuam9ic1tqb2JJZF0uamE7XG4gICAgICB0YWdMYWJlbHMuam9iUGFyZW50ID0gd2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFnc0J5SWQuam9iUGFyZW50c1tqb2JQYXJlbnRJZF0uamE7XG4gICAgICBicmVhaztcbiAgICBjYXNlIHRhZ1N0b3J5OlxuICAgICAgc3RvcnlJZCA9IHRhZ1N0cnVjdHVyZS5zdG9yeUlkO1xuICAgICAgdGFnTGFiZWxzLnN0b3J5ID0gd2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFnc0J5SWQuc3Rvcnlbc3RvcnlJZF0uamE7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gdGFnTGFiZWxzO1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgQnV0dG9uLCB7IGJ1dHRvblRoZW1lQ29sZCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQnV0dG9uJztcbmltcG9ydCBTZWxlY3RCaXJ0aGRheSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdEJpcnRoZGF5JztcbmltcG9ydCBTZWxlY3RMYW5ndWFnZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RMYW5ndWFnZXMnO1xuaW1wb3J0IFNlbGVjdFNleGVzIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0U2V4ZXMnO1xuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuZXhwb3J0IHR5cGUgVGFnVmFsdWVUeXBlID0ge1xuICBpZDogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xufTtcbmV4cG9ydCBjb25zdCBub1NlbGVjdE9wdGlvbkxhYmVsID0gJy0nO1xuXG5leHBvcnQgY29uc3QgTm9TZXRDb21wb25lbnM6IFJlYWN0LkZDID0gKCkgPT4gKFxuICA8QnV0dG9uIGNsYXNzTmFtZT1cIk5vU2V0QnV0dG9uXCIgZGlzYWJsZWQgYm90dG9tTWFyZ2luPlxuICAgIE5PIFNFVFxuICA8L0J1dHRvbj5cbik7XG5leHBvcnQgY29uc3QgZ2V0Tm9TZWxlY3RPcHRpb24gPSAoKTogUmVhY3QuUmVhY3ROb2RlID0+IHtcbiAgcmV0dXJuIDxvcHRpb24gdmFsdWU9e3VuZGVmaW5lZH0+e25vU2VsZWN0T3B0aW9uTGFiZWx9PC9vcHRpb24+O1xufTtcblxuZXhwb3J0IGNvbnN0IFRhZ0lkID0gc3R5bGVkKEZsZXgpYFxuICBtYXJnaW4tdG9wOiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdXNlci1zZWxlY3Q6IHRleHQ7XG5gO1xuXG50eXBlIFByb2ZpbGVzUHJvcHNUeXBlID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG5cbiAgc2V4ZXM6IHN0cmluZ1tdO1xuICBsYW5ndWFnZXM6IHN0cmluZ1tdO1xuICBiaXJ0aGRheTogbnVtYmVyO1xuICBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlczogKGxhbmd1YWdlczogc3RyaW5nW10pID0+IHZvaWQ7XG4gIGhhbmRsZU9uQ2hhbmdlU2V4ZXM6IChzZXhlczogc3RyaW5nW10pID0+IHZvaWQ7XG4gIGhhbmRsZU9uQ2hhbmdlQmlydGhkYXk6IChiaXJ0aGRheTogc3RyaW5nKSA9PiB2b2lkO1xuICBpZD86IHN0cmluZztcbiAgdW5kZXJsaW5lPzogYm9vbGVhbjtcbiAgaXNIb3Jpem9uPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjb25zdCBQcm9maWxlczogUmVhY3QuRkM8UHJvZmlsZXNQcm9wc1R5cGU+ID0gKHtcbiAgdHlwZSA9ICdQcm9maWxlcycsXG4gIGlkLFxuICBpc0VkaXRhYmxlID0gZmFsc2UsXG4gIHNleGVzLFxuICBsYW5ndWFnZXMsXG4gIGJpcnRoZGF5LFxuICBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcyxcbiAgaGFuZGxlT25DaGFuZ2VTZXhlcyxcbiAgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheSxcbiAgdW5kZXJsaW5lID0gZmFsc2UsXG4gIGlzSG9yaXpvbixcbn06IFByb2ZpbGVzUHJvcHNUeXBlKSA9PiB7XG4gIGNvbnN0IFt3aWR0aCwgc2V0V2lkdGhdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBoYW5kbGVPbk1vbnRlZCA9IChlbG06IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgaWYgKGlzSG9yaXpvbikge1xuICAgICAgc2V0V2lkdGgoU3RyaW5nKGVsbS5jbGllbnRXaWR0aCkpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgd2lkdGg9XCIxMDAlXCIgYm9yZGVyPXt1bmRlcmxpbmUgPyAndW5kZXJsaW5lJyA6IHVuZGVmaW5lZH0gbW91dGVkPXtoYW5kbGVPbk1vbnRlZH0gYm90dG9tUGFkZGluZyBib3R0b21NYXJnaW4+XG4gICAgICA8U2VsZWN0U2V4ZXMgdHlwZT17dHlwZX0gaXNFZGl0YWJsZT17aXNFZGl0YWJsZX0gaXNIb3Jpem9uPXtpc0hvcml6b259IHNleGVzPXtzZXhlc30gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlU2V4ZXN9IC8+XG4gICAgICA8U2VsZWN0TGFuZ3VhZ2VzXG4gICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgIGlzRWRpdGFibGU9e2lzRWRpdGFibGV9XG4gICAgICAgIGlzSG9yaXpvbj17aXNIb3Jpem9ufVxuICAgICAgICBsYW5ndWFnZXM9e2xhbmd1YWdlc31cbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzfVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAvPlxuICAgICAgPFNlbGVjdEJpcnRoZGF5IHR5cGU9e3R5cGV9IGlzRWRpdGFibGU9e2lzRWRpdGFibGV9IGlzSG9yaXpvbj17aXNIb3Jpem9ufSBiaXJ0aGRheT17YmlydGhkYXl9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUJpcnRoZGF5fSAvPlxuICAgICAge2lkICYmIGlkICE9PSAnJyAmJiAoXG4gICAgICAgIDxUYWdJZCBjbGFzc05hbWU9XCJUYWdJZFwiIHNlbGVjdD5cbiAgICAgICAgICBJRDoge2lkICE9PSAnJyA/IGlkIDogJy0nfVxuICAgICAgICA8L1RhZ0lkPlxuICAgICAgKX1cbiAgICA8L0ZsZXg+XG4gICk7XG59O1xuXG50eXBlIE1vZGFsRm9vdGVyVHlwZSA9IHtcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIGhhbmRsZU9uQ2xpY2tSZW1vdmU6ICgpID0+IHZvaWQ7XG4gIGhhbmRsZU9uQ2xpY2tTYXZlPzogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBNb2RhbEZvb3RlcjogUmVhY3QuRkM8TW9kYWxGb290ZXJUeXBlPiA9ICh7IGlzTXlQYWdlLCBoYW5kbGVPbkNsaWNrUmVtb3ZlLCBoYW5kbGVPbkNsaWNrU2F2ZSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEZsZXggZmxvdz1cInJvdyBub3dyYXBcIiB3aWR0aD1cIjEwMCVcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICB7aXNNeVBhZ2UgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxCdXR0b24gZGlzYWJsZWQ9e2ZhbHNlfSB0aGVtZT17YnV0dG9uVGhlbWVDb2xkfSBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrUmVtb3ZlfSBzaWRlTWFyZ2luPlxuICAgICAgICAgICAgUkVNT1ZFXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPEJ1dHRvbiBkaXNhYmxlZD17ZmFsc2V9IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tTYXZlfSBzaWRlTWFyZ2luPlxuICAgICAgICAgICAgRURJVFxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9GbGV4PlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEFsbEZpbGxJbnB1dHMgPSAoZml4VmFsdWVzLCB0YWdUeXBlKSA9PiB7XG4gIHJldHVybiAhT2JqZWN0LmtleXMoZml4VmFsdWVzKS5maW5kKChrZXkpID0+IHtcbiAgICBzd2l0Y2ggKHR5cGVvZiBmaXhWYWx1ZXNba2V5XSkge1xuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAgcmV0dXJuIGZpeFZhbHVlc1trZXldLmxlbmd0aCA9PT0gMDtcbiAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgIHJldHVybiBmaXhWYWx1ZXNba2V5XSA9PT0gJycgfHwgZml4VmFsdWVzW2tleV0gPT09ICctJztcbiAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgIHJldHVybiBmaXhWYWx1ZXNba2V5XSA9PT0gMCB8fCBpc05hTihmaXhWYWx1ZXNba2V5XSk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb25zb2xlLndhcm4oYENvbmZpcm0gdHlwZSAke2tleX0gJHtmaXhWYWx1ZXNba2V5XX0gJHt0eXBlb2YgZml4VmFsdWVzW2tleV19YCk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSk7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1dGlsIGZyb20gJ2NvbW1vbi91dGlsJztcblxuaW1wb3J0IFN0b3J5T3JkZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnknO1xuaW1wb3J0IFVzZXIsIHsgVXNlckhhc1NlbGZUYWdzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL1VzZXInO1xuaW1wb3J0IHtcbiAgVXNlclRhZ3NUeXBlLFxuICBUYWdUeXBlLFxuICBUYWdQYXJlbnRUeXBlLFxuICB0YWdQYXJlbnRUeXBlcyxcbiAgdGFnUGFyZW50U2VsZixcbiAgdGFnUGFyZW50U3RvcnksXG4gIHRhZ01lbWJlcixcbiAgT3Blbk1vZGFsT3B0aW9uVHlwZSxcbiAgb3Blbk1vZGFsT3B0aW9uSW5pdCxcbn0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MnO1xuXG5pbXBvcnQgVGFnU2VjdGlvbnMgZnJvbSAnLi9UYWdTZWN0aW9ucyc7XG5pbXBvcnQgVmlld1RhZ01vZGFsIGZyb20gJy4vbW9kYWwvVmlld1RhZ01vZGFsJztcblxubGV0IGlzQ2hhbmdlVXNlclRhZ3NJbml0ID0ge307XG5sZXQgaXNTYXZpbmdBbmltYXRpb25zSW5pdCA9IHt9O1xudGFnUGFyZW50VHlwZXMuZm9yRWFjaCgodGFnUGFyZW50VHlwZSkgPT4ge1xuICBpc0NoYW5nZVVzZXJUYWdzSW5pdFt0YWdQYXJlbnRUeXBlXSA9IGZhbHNlO1xuICBpc1NhdmluZ0FuaW1hdGlvbnNJbml0W3RhZ1BhcmVudFR5cGVdID0gZmFsc2U7XG59KTtcblxudHlwZSBQcm9wcyA9IHtcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIHVzZXJJZDogc3RyaW5nO1xuICB1c2VyOiBVc2VyO1xuICB1c2VyVGFnczogVXNlclRhZ3NUeXBlO1xuICB1c2VyVGFnc0luaXQ6IFVzZXJUYWdzVHlwZTtcbiAgc2V0U2hvd1NlYXJjaE1vZGFsT3B0aW9uOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxPcGVuTW9kYWxPcHRpb25UeXBlPj47XG4gIHNldFVzZXI6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXI+PjtcbiAgc2V0VXNlclRhZ3M6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJUYWdzVHlwZT4+O1xuICBzZXRVc2VyVGFnc0luaXQ6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJUYWdzVHlwZT4+O1xuICBzaG93UHJvZmlsZU1vZGFsT3B0aW9uOiBPcGVuTW9kYWxPcHRpb25UeXBlO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBpc015UGFnZSwgdXNlcklkLCB1c2VyLCB1c2VyVGFncywgdXNlclRhZ3NJbml0LCBzZXRVc2VyLCBzZXRVc2VyVGFncywgc2V0VXNlclRhZ3NJbml0IH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtvcGVuTW9kYWxPcHRpb25zLCBzZXRPcGVuTW9kYWxPcHRpb25zXSA9IHVzZVN0YXRlPE9wZW5Nb2RhbE9wdGlvblR5cGU+KHsgLi4ub3Blbk1vZGFsT3B0aW9uSW5pdCB9KTtcbiAgY29uc3QgW2lzU2F2ZWRBbmltYXRpb25zLCBzZXRJc1NhdmVkQW5pbWF0aW9uc10gPSB1c2VTdGF0ZShpc1NhdmluZ0FuaW1hdGlvbnNJbml0KTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrT3BlblRhZyA9IChcbiAgICB0YWdQYXJlbnRUeXBlOiBUYWdQYXJlbnRUeXBlLFxuICAgIHRhZ1R5cGU/OiBUYWdUeXBlLFxuICAgIGluZGV4PzogbnVtYmVyLFxuICAgIHRhZz86IE9wZW5Nb2RhbE9wdGlvblR5cGUgJiB7IF9pZDogc3RyaW5nIH1cbiAgKSA9PiB7XG4gICAgbGV0IHRhZ0lkID0gJyc7XG4gICAgbGV0IGluZHVzdG9yeVBhcmVudElkID0gJyc7XG4gICAgbGV0IGpvYlBhcmVudElkID0gJyc7XG5cbiAgICBpZiAodGFnKSB7XG4gICAgICB0YWdJZCA9IGdldFRhZ0lkKHRhZyk7XG4gICAgICBpbmR1c3RvcnlQYXJlbnRJZCA9IHRhZy5pbmR1c3RvcnlJZCAmJiB0YWcuaW5kdXN0b3J5SWQgIT09ICcnID8gdGFnLmluZHVzdG9yeUlkLnNwbGl0KCctJylbMF0gOiB1bmRlZmluZWQ7XG4gICAgICBqb2JQYXJlbnRJZCA9IHRhZy5qb2JJZCAmJiB0YWcuam9iSWQgIT09ICcnID8gdGFnLmpvYklkLnNwbGl0KCctJylbMF0gOiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKHRhZ1BhcmVudFR5cGUgPT09IHRhZ1BhcmVudFNlbGYpIHtcbiAgICAgIHNldE9wZW5Nb2RhbE9wdGlvbnMoe1xuICAgICAgICAuLi5vcGVuTW9kYWxPcHRpb25Jbml0LFxuICAgICAgICAuLi50YWcsXG4gICAgICAgIHVzZXJJZCxcbiAgICAgICAgc2V4ZXM6IHVzZXIuc2V4ZXMsXG4gICAgICAgIGxhbmd1YWdlczogdXNlci5sYW5ndWFnZXMsXG4gICAgICAgIGJpcnRoZGF5OiB1c2VyLmJpcnRoZGF5LFxuICAgICAgICBqb2JQYXJlbnRJZCxcbiAgICAgICAgaW5kdXN0b3J5UGFyZW50SWQsXG4gICAgICAgIHRhZ0lkLFxuICAgICAgICB0YWdQYXJlbnRUeXBlLFxuICAgICAgICB0YWdUeXBlLFxuICAgICAgICBpbmRleCxcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRPcGVuTW9kYWxPcHRpb25zKHtcbiAgICAgICAgLi4ub3Blbk1vZGFsT3B0aW9uSW5pdCxcbiAgICAgICAgLi4udGFnLFxuICAgICAgICB1c2VySWQsXG4gICAgICAgIGpvYlBhcmVudElkLFxuICAgICAgICBpbmR1c3RvcnlQYXJlbnRJZCxcbiAgICAgICAgdGFnSWQsXG4gICAgICAgIHRhZ1BhcmVudFR5cGUsXG4gICAgICAgIHRhZ1R5cGUsXG4gICAgICAgIGluZGV4LFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tSZW1vdmUgPSAodGFnUGFyZW50VHlwZTogVGFnUGFyZW50VHlwZSwgdGFnVHlwZTogVGFnVHlwZSwgaW5kZXg6IG51bWJlciwgaGFzU2VsZlRhZ3M/OiBVc2VySGFzU2VsZlRhZ3NUeXBlKSA9PiB7XG4gICAgaWYgKHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdW3RhZ1R5cGVdW2luZGV4XSkge1xuICAgICAgdXNlclRhZ3NbdGFnUGFyZW50VHlwZV1bdGFnVHlwZV0uc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHNldFVzZXJUYWdzKHtcbiAgICAgICAgLi4udXNlclRhZ3MsXG4gICAgICAgIFt0YWdQYXJlbnRUeXBlXToge1xuICAgICAgICAgIC4uLnVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdLFxuICAgICAgICAgIFt0YWdUeXBlXTogWy4uLnVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdW3RhZ1R5cGVdXSxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChoYXNTZWxmVGFncyAmJiB0YWdQYXJlbnRUeXBlID09PSB0YWdQYXJlbnRTZWxmKSB7XG4gICAgICBzZXRVc2VyKHsgLi4udXNlciwgaGFzU2VsZlRhZ3MgfSBhcyBVc2VyKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja1NhdmVVc2VyVGFnID0gKG9wZW5Nb2RhbE9wdGlvbnM6IE9wZW5Nb2RhbE9wdGlvblR5cGUsIGhhc1NlbGZUYWdzPzogVXNlckhhc1NlbGZUYWdzVHlwZSkgPT4ge1xuICAgIGNvbnN0IHsgdGFnUGFyZW50VHlwZSwgdGFnVHlwZSwgdXNlcklkLCB0YWdJZCwgaW5kZXgsIGluZHVzdG9yeUlkLCBzZXhlcywgbGFuZ3VhZ2VzLCBiaXJ0aGRheSwgc3RvcnlJZCB9ID0gb3Blbk1vZGFsT3B0aW9ucztcbiAgICBjb25zdCB5ZWFyID0gTnVtYmVyKG9wZW5Nb2RhbE9wdGlvbnMueWVhcik7XG4gICAgbGV0IHVwZGF0ZVVzZXJUYWcgPSB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlXVt0YWdUeXBlXTtcblxuICAgIGlmICh0YWdQYXJlbnRUeXBlICE9PSB0YWdQYXJlbnRTdG9yeSkge1xuICAgICAgY29uc3QgY29sdW1uVHlwZSA9IHRhZ1R5cGUgPT09IHRhZ01lbWJlciA/ICdqb2JJZCcgOiAnc3RhcnR1cFNlcmllc0lkJztcbiAgICAgIGNvbnN0IGNvbHVtblZhbHVlID0gb3Blbk1vZGFsT3B0aW9uc1tjb2x1bW5UeXBlXTtcblxuICAgICAgaWYgKHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdW3RhZ1R5cGVdW2luZGV4XSkge1xuICAgICAgICB1cGRhdGVVc2VyVGFnID0gdXNlclRhZ3NbdGFnUGFyZW50VHlwZV1bdGFnVHlwZV0ubWFwKChvcHRpb24sIGkpID0+IHtcbiAgICAgICAgICByZXR1cm4gaW5kZXggPT09IGlcbiAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgIC4uLm9wdGlvbixcbiAgICAgICAgICAgICAgICB1c2VySWQsXG4gICAgICAgICAgICAgICAgdGFnSWQsXG4gICAgICAgICAgICAgICAgaW5kdXN0b3J5SWQsXG4gICAgICAgICAgICAgICAgW2NvbHVtblR5cGVdOiBjb2x1bW5WYWx1ZSxcbiAgICAgICAgICAgICAgICBzZXhlcyxcbiAgICAgICAgICAgICAgICBsYW5ndWFnZXMsXG4gICAgICAgICAgICAgICAgYmlydGhkYXksXG4gICAgICAgICAgICAgICAgeWVhcixcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiBvcHRpb247XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXBkYXRlVXNlclRhZy5wdXNoKHtcbiAgICAgICAgICB0YWdQYXJlbnRUeXBlLFxuICAgICAgICAgIHRhZ1R5cGUsXG4gICAgICAgICAgdXNlcklkLFxuICAgICAgICAgIHRhZ0lkLFxuICAgICAgICAgIHNleGVzLFxuICAgICAgICAgIGxhbmd1YWdlcyxcbiAgICAgICAgICBiaXJ0aGRheSxcbiAgICAgICAgICBpbmR1c3RvcnlJZCxcbiAgICAgICAgICBbY29sdW1uVHlwZV06IGNvbHVtblZhbHVlLFxuICAgICAgICAgIHllYXIsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodXNlclRhZ3NbdGFnUGFyZW50VHlwZV1bdGFnVHlwZV1baW5kZXhdKSB7XG4gICAgICAgIHVwZGF0ZVVzZXJUYWcgPSB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlXVt0YWdUeXBlXS5tYXAoKG9wdGlvbiwgaSkgPT5cbiAgICAgICAgICBpbmRleCA9PT0gaVxuICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgLi4ub3B0aW9uLFxuICAgICAgICAgICAgICAgIHRhZ0lkLFxuICAgICAgICAgICAgICAgIHVzZXJJZCxcbiAgICAgICAgICAgICAgICBzZXhlcyxcbiAgICAgICAgICAgICAgICBsYW5ndWFnZXMsXG4gICAgICAgICAgICAgICAgYmlydGhkYXksXG4gICAgICAgICAgICAgICAgc3RvcnlJZCxcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgOiBvcHRpb25cbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVwZGF0ZVVzZXJUYWcucHVzaCh7XG4gICAgICAgICAgdGFnUGFyZW50VHlwZSxcbiAgICAgICAgICB0YWdUeXBlLFxuICAgICAgICAgIHVzZXJJZCxcbiAgICAgICAgICB0YWdJZCxcbiAgICAgICAgICBzZXhlcyxcbiAgICAgICAgICBsYW5ndWFnZXMsXG4gICAgICAgICAgYmlydGhkYXksXG4gICAgICAgICAgc3RvcnlJZCxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGhhc1NlbGZUYWdzICYmIHRhZ1BhcmVudFR5cGUgPT09IHRhZ1BhcmVudFNlbGYpIHtcbiAgICAgIHNldFVzZXIoeyAuLi51c2VyLCBoYXNTZWxmVGFncyB9IGFzIFVzZXIpO1xuICAgIH1cblxuICAgIHNldE9wZW5Nb2RhbE9wdGlvbnMoeyAuLi5vcGVuTW9kYWxPcHRpb25zIH0pO1xuICAgIHNldFVzZXJUYWdzKHtcbiAgICAgIC4uLnVzZXJUYWdzLFxuICAgICAgW3RhZ1BhcmVudFR5cGVdOiB7XG4gICAgICAgIC4uLnVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdLFxuICAgICAgICBbdGFnVHlwZV06IHVwZGF0ZVVzZXJUYWcsXG4gICAgICB9LFxuICAgIH0pO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzRXhpc3RBY2NvdW50VGFncyh1c2VyVGFncykpIHtcbiAgICAgIGlmICh1c2VyVGFnc0luaXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBzZXRVc2VyVGFnc0luaXQodXRpbC5kZWVwQ29weSh1c2VyVGFncykpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3VzZXJUYWdzXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFN0b3J5T3JkZXIgaXNNeVBhZ2U9e2lzTXlQYWdlfSB1c2VySWQ9e3VzZXJJZH0gc2xpZGUgLz5cblxuICAgICAgey8qIFRhZ3MgKi99XG4gICAgICB7dGFnUGFyZW50VHlwZXMubWFwKCh0YWdQYXJlbnRUeXBlOiBUYWdQYXJlbnRUeXBlKSA9PiB7XG4gICAgICAgIGNvbnN0IHNvbWVUYWdzID0gdXNlclRhZ3MgPyB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlXSA6IFtdO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxUYWdTZWN0aW9uc1xuICAgICAgICAgICAgaXNNeVBhZ2U9e2lzTXlQYWdlfVxuICAgICAgICAgICAga2V5PXt0YWdQYXJlbnRUeXBlfVxuICAgICAgICAgICAgdGFnUGFyZW50PXt0YWdQYXJlbnRUeXBlfVxuICAgICAgICAgICAgc29tZVRhZ3M9e3NvbWVUYWdzfVxuICAgICAgICAgICAgaXNTYXZlZEFuaW1hdGlvbnM9e2lzU2F2ZWRBbmltYXRpb25zW3RhZ1BhcmVudFR5cGVdfVxuICAgICAgICAgICAgaGFuZGxlT25DbGlja09wZW5UYWc9e2hhbmRsZU9uQ2xpY2tPcGVuVGFnfVxuICAgICAgICAgICAgaGFuZGxlT25DbGlja1JlbW92ZT17aGFuZGxlT25DbGlja1JlbW92ZX1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfSl9XG5cbiAgICAgIHtvcGVuTW9kYWxPcHRpb25zLmluZGV4ICE9PSB1bmRlZmluZWQgJiYgKFxuICAgICAgICA8Vmlld1RhZ01vZGFsXG4gICAgICAgICAgc2hvdz17b3Blbk1vZGFsT3B0aW9ucy5pbmRleCAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIGlzTXlQYWdlPXtpc015UGFnZX1cbiAgICAgICAgICB1c2VyVGFncz17dXNlclRhZ3N9XG4gICAgICAgICAgb3Blbk1vZGFsT3B0aW9ucz17b3Blbk1vZGFsT3B0aW9uc31cbiAgICAgICAgICBoYW5kbGVPbkNsaWNrUmVtb3ZlPXtoYW5kbGVPbkNsaWNrUmVtb3ZlfVxuICAgICAgICAgIGhhbmRsZU9uQ2xpY2tTYXZlVXNlclRhZz17aGFuZGxlT25DbGlja1NhdmVVc2VyVGFnfVxuICAgICAgICAgIGhhbmRsZU9uQ2xpY2tDYW5jZWw9eygpID0+IHNldE9wZW5Nb2RhbE9wdGlvbnMoeyAuLi5vcGVuTW9kYWxPcHRpb25Jbml0IH0pfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgaXNFeGlzdEFjY291bnRUYWdzID0gKHVzZXJUYWdzKSA9PiB7XG4gIGxldCBpc0V4aXN0ID0gZmFsc2U7XG4gIGlmICh1c2VyVGFncykge1xuICAgIHJldHVybiBCb29sZWFuKHRhZ1BhcmVudFR5cGVzLmZpbmQoKHRhZ1BhcmVudFR5cGUpID0+IHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVdKSk7XG4gIH1cbiAgcmV0dXJuIGlzRXhpc3Q7XG59O1xuXG5jb25zdCBnZXRUYWdJZCA9ICh0YWcpID0+IHtcbiAgaWYgKHRhZy50YWdJZCAmJiB0YWcudGFnSWQgIT09ICcnKSB7XG4gICAgcmV0dXJuIHRhZy50YWdJZDtcbiAgfVxuICBpZiAodGFnLl9pZCAmJiB0YWcuX2lkICE9PSAnJykge1xuICAgIHJldHVybiB0YWcuX2lkO1xuICB9XG4gIHJldHVybiAnJztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBQcm9maWxlcyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBTZWxlY3RJbmR1c3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnknO1xuaW1wb3J0IFNlbGVjdFN0YXJ0dXBTZXJpZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdGFydHVwU2VyaWVzJztcbmltcG9ydCB7IEZpeEZvdW5kZXJWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvRm91bmRlcic7XG5cbnR5cGUgRm91bmRlck1lbnVQcm9wc1R5cGUgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgZml4VmFsdWVzOiBGaXhGb3VuZGVyVmFsdWVzVHlwZTtcbiAgc2V0Rml4VmFsdWVzOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxGaXhGb3VuZGVyVmFsdWVzVHlwZT4+O1xuICBpc0VkaXRhYmxlPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8Rm91bmRlck1lbnVQcm9wc1R5cGU+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSA9IGZhbHNlLCBmaXhWYWx1ZXMsIHNldEZpeFZhbHVlcyB9OiBGb3VuZGVyTWVudVByb3BzVHlwZSkgPT4ge1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5ID0gKGJpcnRoZGF5KSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBiaXJ0aGRheSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcyA9IChsYW5ndWFnZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGxhbmd1YWdlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVNleGVzID0gKHNleGVzKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzZXhlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUluZHVzdG9yeSA9IChpbmR1c3RvcnlQYXJlbnRJZCwgaW5kdXN0b3J5SWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGluZHVzdG9yeVBhcmVudElkLCBpbmR1c3RvcnlJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVN0YXJ0dXBTZXJpZXMgPSAoc3RhcnR1cFNlcmllc0lkKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzdGFydHVwU2VyaWVzSWQgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VZZWFyID0gKHllYXIpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHllYXI6IE51bWJlcih5ZWFyKSB9KTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8UHJvZmlsZXNcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgaXNIb3Jpem9uXG4gICAgICAgIHNleGVzPXtmaXhWYWx1ZXMuc2V4ZXN9XG4gICAgICAgIGxhbmd1YWdlcz17Zml4VmFsdWVzLmxhbmd1YWdlc31cbiAgICAgICAgYmlydGhkYXk9e2ZpeFZhbHVlcy5iaXJ0aGRheX1cbiAgICAgICAgaGFuZGxlT25DaGFuZ2VMYW5ndWFnZXM9e2hhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzfVxuICAgICAgICBoYW5kbGVPbkNoYW5nZVNleGVzPXtoYW5kbGVPbkNoYW5nZVNleGVzfVxuICAgICAgICBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5PXtoYW5kbGVPbkNoYW5nZUJpcnRoZGF5fVxuICAgICAgICB1bmRlcmxpbmVcbiAgICAgIC8+XG4gICAgICA8U2VsZWN0SW5kdXN0b3J5XG4gICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgIGlzRWRpdGFibGU9e2lzRWRpdGFibGV9XG4gICAgICAgIGluZHVzdG9yeVBhcmVudElkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5UGFyZW50SWR9XG4gICAgICAgIGluZHVzdG9yeUlkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5SWR9XG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUluZHVzdG9yeX1cbiAgICAgIC8+XG4gICAgICA8U2VsZWN0U3RhcnR1cFNlcmllc1xuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfVxuICAgICAgICBzdGFydHVwU2VyaWVzSWQ9e2ZpeFZhbHVlcy5zdGFydHVwU2VyaWVzSWR9XG4gICAgICAgIHllYXI9e2ZpeFZhbHVlcy55ZWFyfVxuICAgICAgICBvbkNoYW5nZVN0YXJ0dXBTZXJpZXNJZD17aGFuZGxlT25DaGFuZ2VTdGFydHVwU2VyaWVzfVxuICAgICAgICBvbkNoYW5nZVllYXI9e2hhbmRsZU9uQ2hhbmdlWWVhcn1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBQcm9maWxlcyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBTZWxlY3RJbmR1c3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnknO1xuaW1wb3J0IFNlbGVjdFN0YXJ0dXBTZXJpZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdGFydHVwU2VyaWVzJztcbmltcG9ydCB7IEZpeFZhbHVlc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgeyBGaXhJbnZlc3RvclZhbHVlc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9JbnZlc3Rvcic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgZml4VmFsdWVzOiBGaXhJbnZlc3RvclZhbHVlc1R5cGU7XG4gIHNldEZpeFZhbHVlczogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Rml4VmFsdWVzVHlwZT4+O1xuICBpc0VkaXRhYmxlPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSA9IGZhbHNlLCBmaXhWYWx1ZXMsIHNldEZpeFZhbHVlcyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5ID0gKGJpcnRoZGF5KSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBiaXJ0aGRheSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcyA9IChsYW5ndWFnZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGxhbmd1YWdlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVNleGVzID0gKHNleGVzKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzZXhlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUluZHVzdG9yeSA9IChpbmR1c3RvcnlQYXJlbnRJZCwgaW5kdXN0b3J5SWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGluZHVzdG9yeVBhcmVudElkLCBpbmR1c3RvcnlJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVN0YXJ0dXBTZXJpZXMgPSAoc3RhcnR1cFNlcmllc0lkKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzdGFydHVwU2VyaWVzSWQgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VZZWFyID0gKHllYXIpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHllYXI6IE51bWJlcih5ZWFyKSB9KTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8UHJvZmlsZXNcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgaXNIb3Jpem9uXG4gICAgICAgIHNleGVzPXtmaXhWYWx1ZXMuc2V4ZXN9XG4gICAgICAgIGxhbmd1YWdlcz17Zml4VmFsdWVzLmxhbmd1YWdlc31cbiAgICAgICAgYmlydGhkYXk9e2ZpeFZhbHVlcy5iaXJ0aGRheX1cbiAgICAgICAgaGFuZGxlT25DaGFuZ2VMYW5ndWFnZXM9e2hhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzfVxuICAgICAgICBoYW5kbGVPbkNoYW5nZVNleGVzPXtoYW5kbGVPbkNoYW5nZVNleGVzfVxuICAgICAgICBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5PXtoYW5kbGVPbkNoYW5nZUJpcnRoZGF5fVxuICAgICAgICB1bmRlcmxpbmVcbiAgICAgIC8+XG4gICAgICA8U2VsZWN0SW5kdXN0b3J5XG4gICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgIGlzRWRpdGFibGU9e2lzRWRpdGFibGV9XG4gICAgICAgIGluZHVzdG9yeVBhcmVudElkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5UGFyZW50SWR9XG4gICAgICAgIGluZHVzdG9yeUlkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5SWR9XG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUluZHVzdG9yeX1cbiAgICAgIC8+XG4gICAgICA8U2VsZWN0U3RhcnR1cFNlcmllc1xuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfVxuICAgICAgICBzdGFydHVwU2VyaWVzSWQ9e2ZpeFZhbHVlcy5zdGFydHVwU2VyaWVzSWR9XG4gICAgICAgIHllYXI9e2ZpeFZhbHVlcy55ZWFyfVxuICAgICAgICBvbkNoYW5nZVN0YXJ0dXBTZXJpZXNJZD17aGFuZGxlT25DaGFuZ2VTdGFydHVwU2VyaWVzfVxuICAgICAgICBvbkNoYW5nZVllYXI9e2hhbmRsZU9uQ2hhbmdlWWVhcn1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBQcm9maWxlcyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBTZWxlY3RJbmR1c3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnknO1xuaW1wb3J0IFNlbGVjdEpvYiBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdEpvYic7XG5pbXBvcnQgeyBGaXhNZW1iZXJWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvTWVtYmVyJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBmaXhWYWx1ZXM6IEZpeE1lbWJlclZhbHVlc1R5cGU7XG4gIHNldEZpeFZhbHVlczogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Rml4TWVtYmVyVmFsdWVzVHlwZT4+O1xuICBpc0VkaXRhYmxlPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSA9IGZhbHNlLCBmaXhWYWx1ZXMsIHNldEZpeFZhbHVlcyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5ID0gKGJpcnRoZGF5KSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBiaXJ0aGRheSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcyA9IChsYW5ndWFnZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGxhbmd1YWdlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVNleGVzID0gKHNleGVzKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzZXhlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUluZHVzdG9yeSA9IChpbmR1c3RvcnlQYXJlbnRJZCwgaW5kdXN0b3J5SWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGluZHVzdG9yeVBhcmVudElkLCBpbmR1c3RvcnlJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUpvYiA9IChqb2JQYXJlbnRJZCwgam9iSWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGpvYlBhcmVudElkLCBqb2JJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVllYXIgPSAoeWVhcikgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgeWVhcjogTnVtYmVyKHllYXIpIH0pO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxQcm9maWxlc1xuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfVxuICAgICAgICBpc0hvcml6b25cbiAgICAgICAgc2V4ZXM9e2ZpeFZhbHVlcy5zZXhlc31cbiAgICAgICAgbGFuZ3VhZ2VzPXtmaXhWYWx1ZXMubGFuZ3VhZ2VzfVxuICAgICAgICBiaXJ0aGRheT17Zml4VmFsdWVzLmJpcnRoZGF5fVxuICAgICAgICBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcz17aGFuZGxlT25DaGFuZ2VMYW5ndWFnZXN9XG4gICAgICAgIGhhbmRsZU9uQ2hhbmdlU2V4ZXM9e2hhbmRsZU9uQ2hhbmdlU2V4ZXN9XG4gICAgICAgIGhhbmRsZU9uQ2hhbmdlQmlydGhkYXk9e2hhbmRsZU9uQ2hhbmdlQmlydGhkYXl9XG4gICAgICAgIHVuZGVybGluZVxuICAgICAgLz5cbiAgICAgIDxTZWxlY3RJbmR1c3RvcnlcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgaW5kdXN0b3J5UGFyZW50SWQ9e2ZpeFZhbHVlcy5pbmR1c3RvcnlQYXJlbnRJZH1cbiAgICAgICAgaW5kdXN0b3J5SWQ9e2ZpeFZhbHVlcy5pbmR1c3RvcnlJZH1cbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5fVxuICAgICAgLz5cbiAgICAgIDxTZWxlY3RKb2JcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgam9iUGFyZW50SWQ9e2ZpeFZhbHVlcy5qb2JQYXJlbnRJZH1cbiAgICAgICAgam9iSWQ9e2ZpeFZhbHVlcy5qb2JJZH1cbiAgICAgICAgeWVhcj17Zml4VmFsdWVzLnllYXJ9XG4gICAgICAgIG9uQ2hhbmdlSm9iPXtoYW5kbGVPbkNoYW5nZUpvYn1cbiAgICAgICAgb25DaGFuZ2VZZWFyPXtoYW5kbGVPbkNoYW5nZVllYXJ9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFNlbGVjdFN0b3J5IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0U3RvcnknO1xuaW1wb3J0IHsgVXNlclRhZ3NUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MnO1xuaW1wb3J0IHsgRml4U3RvcnlWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvU3RvcnknO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG5cbiAgdXNlclRhZ3M6IFVzZXJUYWdzVHlwZTtcbiAgZml4VmFsdWVzOiBGaXhTdG9yeVZhbHVlc1R5cGU7XG4gIHNldEZpeFZhbHVlczogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Rml4U3RvcnlWYWx1ZXNUeXBlPj47XG4gIG9wdGlvblN0b3J5SWQ/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUsIG9wdGlvblN0b3J5SWQsIGZpeFZhbHVlcywgdXNlclRhZ3MsIHNldEZpeFZhbHVlcyB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZVN0b3J5ID0gKHN0b3J5SWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHN0b3J5SWQgfSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8U2VsZWN0U3RvcnlcbiAgICAgIGlzRWRpdGFibGVcbiAgICAgIGNsaWNrZWRTdG9yeUlkPXtvcHRpb25TdG9yeUlkfVxuICAgICAgc2VsZWN0ZWQ9e3VzZXJUYWdzID8gdXNlclRhZ3Muc3Rvcnkuc3RvcnkubWFwKChvYmopID0+IG9iai5zdG9yeUlkKSA6IFtdfVxuICAgICAgc3RvcnlJZD17Zml4VmFsdWVzLnN0b3J5SWR9XG4gICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VTdG9yeX1cbiAgICAvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuaW1wb3J0IHV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgYXBpIGZyb20gJ2NvdmVyL2FwaSc7XG5pbXBvcnQgU3ZnIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc3ZnJztcbmltcG9ydCB7IE1vZGFsRm9vdGVyLCBnZXRBbGxGaWxsSW5wdXRzLCBUYWdJZCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBNb2RhbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbCc7XG5pbXBvcnQgVXNlckNvbnRlbnQsIHsgaG92ZXJBbmltYXRpb25Cb3hTaGFkb3cgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Vc2VyL0NvbnRlbnQnO1xuaW1wb3J0IEZsZXgsIHsgQSwgSDUsIEZsZXhlc0NvbnRleHRUeXBlLCB1c2VGbGV4ZXNDb250ZXh0IH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCB7XG4gIEZpeFZhbHVlc1R5cGUsXG4gIFRhZ1BhcmVudFR5cGUsXG4gIFRhZ1R5cGUsXG4gIHRhZ0ZvdW5kZXIsXG4gIHRhZ0ludmVzdG9yLFxuICB0YWdNZW1iZXIsXG4gIHRhZ1N0b3J5LFxuICB0YWdQYXJlbnRTZWxmLFxuICBPcGVuTW9kYWxPcHRpb25UeXBlLFxufSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgeyBVc2VyVGFnc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgeyBGaXhGb3VuZGVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL0ZvdW5kZXInO1xuaW1wb3J0IHsgRml4SW52ZXN0b3JWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvSW52ZXN0b3InO1xuaW1wb3J0IHsgRml4TWVtYmVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL01lbWJlcic7XG5pbXBvcnQgeyBGaXhTdG9yeVZhbHVlc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9TdG9yeSc7XG5pbXBvcnQgeyBnZXRGaXhWYWx1ZXNFbXB0eSwgZ2V0SGFzU2VsZlRhZ3MsIGdldEV4dHJhY3RGaXhWYWx1ZXMgfSBmcm9tICdjb3Zlci91dGlscy91c2VyVGFncyc7XG5cbmltcG9ydCBGb3VuZGVyTWVudSBmcm9tICcuL0ZvdW5kZXJNZW51JztcbmltcG9ydCBJbnZlc3Rvck1lbnUgZnJvbSAnLi9JbnZlc3Rvck1lbnUnO1xuaW1wb3J0IE1lbWJlck1lbnUgZnJvbSAnLi9NZW1iZXJNZW51JztcbmltcG9ydCBTdG9yeU1lbnUgZnJvbSAnLi9TdG9yeU1lbnUnO1xuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICBvcGVuTW9kYWxPcHRpb25zOiBPcGVuTW9kYWxPcHRpb25UeXBlO1xuICBpc015UGFnZTogYm9vbGVhbjtcbiAgdXNlclRhZ3M6IFVzZXJUYWdzVHlwZTtcbiAgaGFuZGxlT25DbGlja1JlbW92ZTogKHRhZ1BhcmVudFR5cGU6IFRhZ1BhcmVudFR5cGUsIHRhZ1R5cGU6IFRhZ1R5cGUsIGluZGV4OiBudW1iZXIsIGhhc1NlbGZUYWdzOiB7fSkgPT4gdm9pZDtcbiAgaGFuZGxlT25DbGlja0NhbmNlbDogKCkgPT4gdm9pZDtcbiAgaGFuZGxlT25DbGlja1NhdmVVc2VyVGFnOiAob3Blbk1vZGFsT3B0aW9uczogT3Blbk1vZGFsT3B0aW9uVHlwZSwgaGFzU2VsZlRhZ3M6IHt9KSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBzaG93LFxuICBvcGVuTW9kYWxPcHRpb25zLFxuICBpc015UGFnZSA9IGZhbHNlLFxuICB1c2VyVGFncyxcbiAgaGFuZGxlT25DbGlja1JlbW92ZTogaGFuZGxlT25DbGlja1JlbW92ZVVzZXJUYWdzLFxuICBoYW5kbGVPbkNsaWNrQ2FuY2VsLFxuICBoYW5kbGVPbkNsaWNrU2F2ZVVzZXJUYWcsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCB7IHRhZ1BhcmVudFR5cGUsIHRhZ1R5cGUsIHRhZ0lkLCB1c2VySWQsIGluZGV4IH0gPSBvcGVuTW9kYWxPcHRpb25zO1xuICBjb25zdCBnbG9iYWxDb250ZXh0OiBGbGV4ZXNDb250ZXh0VHlwZSA9IHVzZUZsZXhlc0NvbnRleHQoKTtcbiAgY29uc3QgZml4VmFsdWVzRW1wdHkgPSBnZXRGaXhWYWx1ZXNFbXB0eSh0YWdUeXBlKTtcbiAgY29uc3QgW2lzRGlkTW91bnQsIHNldElzRGlkTW91bnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtpc0NoZWNrQW5pbWF0aW9uLCBzZXRJc0NoZWNrQW5pbWF0aW9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2NvbnRlbnRJbmRleCwgc2V0Q29udGVudEluZGV4XSA9IHVzZVN0YXRlKDApO1xuXG4gIGNvbnN0IFtzZWFyY2hlZFVzZXJzLCBzZXRTZWFyY2hlZFVzZXJzXSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4gIGNvbnN0IFtkaXNhYmxlU2VhcmNoQnV0dG9uLCBzZXREaXNhYmxlU2VhcmNoQnV0dG9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Rpc2FibGVTYXZlQnV0dG9uLCBzZXREaXNhYmxlU2F2ZUJ1dHRvbl0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW2ZpeFZhbHVlcywgc2V0Rml4VmFsdWVzXSA9IHVzZVN0YXRlPEZpeFZhbHVlc1R5cGU+KGZpeFZhbHVlc0VtcHR5KTtcbiAgY29uc3QgW2ZpeFZhbHVlc0luaXQsIHNldEZpeFZhbHVlc0luaXRdID0gdXNlU3RhdGU8Rml4VmFsdWVzVHlwZT4oZml4VmFsdWVzRW1wdHkpO1xuXG4gIGNvbnN0IGlzQ3JlYXRlID0gdGFnSWQgPT09ICcnO1xuICBjb25zdCBpc0NoYW5nZSA9IHV0aWwuZGVlcEVxdWFscyhmaXhWYWx1ZXNJbml0LCBmaXhWYWx1ZXMpO1xuICBjb25zdCBlbmFibGVSZW1vdmVCdXR0b24gPSBpc0NoYW5nZSAmJiAhaXNDcmVhdGU7XG4gIGNvbnN0IGlzU2VsZiA9IG9wZW5Nb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZSA9PT0gdGFnUGFyZW50U2VsZjtcblxuICBjb25zdCBnZXREaXNhYmxlU2F2ZUJ1dHRvbiA9ICgpID0+IHtcbiAgICBjb25zdCBhbGxGaWxsSW5wdXRzID0gZ2V0QWxsRmlsbElucHV0cyhmaXhWYWx1ZXMsIHRhZ1R5cGUpO1xuICAgIGNvbnN0IGlzRXF1YWxzID0gdXRpbC5kZWVwRXF1YWxzKGZpeFZhbHVlc0luaXQsIGZpeFZhbHVlcyk7XG4gICAgcmV0dXJuICEoYWxsRmlsbElucHV0cyAmJiAhaXNFcXVhbHMpO1xuICB9O1xuICBjb25zdCBoYW5kbGVPbkNsaWNrU2F2ZSA9IGFzeW5jICgpID0+IHtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgY29uc3QgaGFzU2VsZlRhZ3MgPSBnZXRIYXNTZWxmVGFncyh1c2VyVGFncywgJ3NhdmUnLCB0YWdUeXBlIGFzIFRhZ1R5cGUpO1xuICAgIGNvbnN0IHJlcXVlc3RNb2RhbE9wdGlvbnMgPSB1dGlsLmRlZXBDb3B5KHsgLi4ub3Blbk1vZGFsT3B0aW9ucywgLi4uZml4VmFsdWVzIH0pO1xuICAgIGNvbnN0IHJlcXVlc3RQYXJhbXMgPSB7IHVzZXJUYWdzOiB7IC4uLnJlcXVlc3RNb2RhbE9wdGlvbnMgfSwgdXNlcjogeyBfaWQ6IHVzZXJJZCwgaGFzU2VsZlRhZ3MgfSB9O1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmpzb24oJ3Vwc2VydFVzZXJUYWcnLCByZXF1ZXN0UGFyYW1zKTtcbiAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIGlmIChyZXNwb25zZS51cHNlcnRlZElkKSB7XG4gICAgICByZXF1ZXN0TW9kYWxPcHRpb25zLnRhZ0lkID0gcmVzcG9uc2UudXBzZXJ0ZWRJZDtcbiAgICB9XG5cbiAgICBoYW5kbGVPbkNsaWNrU2F2ZVVzZXJUYWcocmVxdWVzdE1vZGFsT3B0aW9ucyBhcyBPcGVuTW9kYWxPcHRpb25UeXBlLCBoYXNTZWxmVGFncyk7XG4gICAgc2V0Rml4VmFsdWVzSW5pdChnZXRFeHRyYWN0Rml4VmFsdWVzKHJlcXVlc3RNb2RhbE9wdGlvbnMpKTtcbiAgICBzZXRJc0NoZWNrQW5pbWF0aW9uKHRydWUpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0SXNDaGVja0FuaW1hdGlvbihmYWxzZSk7XG4gICAgfSwgMjAwMCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VDb250ZW50SW5kZXggPSAoY29udGVudEluZGV4KSA9PiB7XG4gICAgc2V0Q29udGVudEluZGV4KGNvbnRlbnRJbmRleCk7XG4gIH07XG5cbiAgY29uc3QgZmV0Y2hVc2VyID0gKGZpeFZhbHVlcykgPT4ge1xuICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICBjb25zdCByZXF1ZXN0SnNvbiA9IHV0aWwuZGVlcENvcHkoeyAuLi5vcGVuTW9kYWxPcHRpb25zLCAuLi5maXhWYWx1ZXMgfSk7XG5cbiAgICBkZWxldGUgcmVxdWVzdEpzb24uaXNFZGl0YWJsZTtcbiAgICBkZWxldGUgcmVxdWVzdEpzb24uaW5kZXg7XG5cbiAgICBjb25zdCBmZXRjaERhdGEgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5qc29uKCdzZWFyY2gnLCByZXF1ZXN0SnNvbik7XG4gICAgICBzZXRTZWFyY2hlZFVzZXJzKHJlc3BvbnNlKTtcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgfTtcblxuICAgIGZldGNoRGF0YSgpLmNhdGNoKChlKSA9PiB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrUmVtb3ZlID0gKCkgPT4ge1xuICAgIGNvbnN0IGhhc1NlbGZUYWdzID0gZ2V0SGFzU2VsZlRhZ3ModXNlclRhZ3MsICdyZW1vdmUnLCB0YWdUeXBlIGFzIFRhZ1R5cGUpO1xuICAgIGFwaS5qc29uKCdyZW1vdmVVc2VyVGFnJywgeyB1c2VyVGFnczogeyBfaWQ6IHRhZ0lkIH0sIHVzZXI6IHsgX2lkOiB1c2VySWQsIGhhc1NlbGZUYWdzIH0gfSk7XG4gICAgaGFuZGxlT25DbGlja1JlbW92ZVVzZXJUYWdzKHRhZ1BhcmVudFR5cGUgYXMgVGFnUGFyZW50VHlwZSwgdGFnVHlwZSBhcyBUYWdUeXBlLCBpbmRleCwgaGFzU2VsZlRhZ3MpO1xuICAgIGhhbmRsZU9uQ2xpY2tDYW5jZWwoKTtcbiAgfTtcblxuICBjb25zdCBnZXRNZW51Tm9kZSA9ICgpID0+IHtcbiAgICBjb25zdCB0eXBlID0gYCR7dGFnUGFyZW50VHlwZX1fJHt0YWdUeXBlfWA7XG4gICAgbGV0IG1lbnVOb2RlO1xuXG4gICAgc3dpdGNoICh0YWdUeXBlKSB7XG4gICAgICBjYXNlIHRhZ0ludmVzdG9yOlxuICAgICAgICBtZW51Tm9kZSA9IDxJbnZlc3Rvck1lbnUgdHlwZT17dHlwZX0gZml4VmFsdWVzPXtmaXhWYWx1ZXMgYXMgRml4SW52ZXN0b3JWYWx1ZXNUeXBlfSBzZXRGaXhWYWx1ZXM9e3NldEZpeFZhbHVlc30gLz47XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0YWdGb3VuZGVyOlxuICAgICAgICBtZW51Tm9kZSA9IDxGb3VuZGVyTWVudSB0eXBlPXt0eXBlfSBmaXhWYWx1ZXM9e2ZpeFZhbHVlcyBhcyBGaXhGb3VuZGVyVmFsdWVzVHlwZX0gc2V0Rml4VmFsdWVzPXtzZXRGaXhWYWx1ZXN9IC8+O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGFnTWVtYmVyOlxuICAgICAgICBtZW51Tm9kZSA9IDxNZW1iZXJNZW51IHR5cGU9e3R5cGV9IGZpeFZhbHVlcz17Zml4VmFsdWVzIGFzIEZpeE1lbWJlclZhbHVlc1R5cGV9IHNldEZpeFZhbHVlcz17c2V0Rml4VmFsdWVzfSAvPjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRhZ1N0b3J5OlxuICAgICAgICBtZW51Tm9kZSA9IChcbiAgICAgICAgICA8U3RvcnlNZW51XG4gICAgICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICAgICAgb3B0aW9uU3RvcnlJZD17b3Blbk1vZGFsT3B0aW9ucy5zdG9yeUlkfVxuICAgICAgICAgICAgZml4VmFsdWVzPXtmaXhWYWx1ZXMgYXMgRml4U3RvcnlWYWx1ZXNUeXBlfVxuICAgICAgICAgICAgdXNlclRhZ3M9e3VzZXJUYWdzfVxuICAgICAgICAgICAgc2V0Rml4VmFsdWVzPXtzZXRGaXhWYWx1ZXN9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICB7bWVudU5vZGV9XG4gICAgICAgIDxUYWdJZCBjbGFzc05hbWU9XCJUYWdJZFwiIHNlbGVjdD5cbiAgICAgICAgICBJRDoge3RhZ0lkICE9PSAnJyA/IHRhZ0lkIDogJy0nfVxuICAgICAgICA8L1RhZ0lkPlxuICAgICAgPC8+XG4gICAgKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzaG93KSB7XG4gICAgICBpZiAoaXNEaWRNb3VudCkge1xuICAgICAgICBzZXREaXNhYmxlU2F2ZUJ1dHRvbihnZXREaXNhYmxlU2F2ZUJ1dHRvbigpKTtcbiAgICAgICAgc2V0RGlzYWJsZVNlYXJjaEJ1dHRvbighZ2V0QWxsRmlsbElucHV0cyhmaXhWYWx1ZXMsIHRhZ1R5cGUpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldElzRGlkTW91bnQodHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbc2hvdywgZml4VmFsdWVzXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaFVzZXIob3Blbk1vZGFsT3B0aW9ucyk7XG4gICAgY29uc3QgdmFsdWVzID0gZ2V0RXh0cmFjdEZpeFZhbHVlcyhvcGVuTW9kYWxPcHRpb25zKTtcbiAgICBzZXRGaXhWYWx1ZXModmFsdWVzKTtcbiAgICBzZXRGaXhWYWx1ZXNJbml0KHZhbHVlcyk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxNb2RhbC5GdWxsXG4gICAgICBzaG93PXtzaG93fVxuICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgIG92ZXJmbG93PVwiaGlkZGVuXCJcbiAgICAgIGZsb3c9XCJjb2x1bW4gbm93cmFwXCJcbiAgICAgIGNvbnRlbnRJbmRleD17Y29udGVudEluZGV4fVxuICAgICAgaGFuZGxlT25DbGlja0Nsb3NlPXtoYW5kbGVPbkNsaWNrQ2FuY2VsfVxuICAgICAgaGFuZGxlT25DaGFuZ2VDb250ZW50SW5kZXg9e2hhbmRsZU9uQ2hhbmdlQ29udGVudEluZGV4fVxuICAgICAgaXNDaGVja0FuaW1hdGlvbj17aXNDaGVja0FuaW1hdGlvbn1cbiAgICAgIGlzTG9hZGluZz17aXNMb2FkaW5nfVxuICAgICAgaGVhZGVyPXtcbiAgICAgICAgPD5cbiAgICAgICAgICA8SDU+XG4gICAgICAgICAgICB7dGFnUGFyZW50VHlwZX0gLSB7dGFnVHlwZX1cbiAgICAgICAgICAgIHtpbmRleCAhPT0gdW5kZWZpbmVkICYmIGAgKE5vJHtpbmRleCArIDF9KWB9XG4gICAgICAgICAgPC9INT5cbiAgICAgICAgICA8RmxleCB3aWR0aD1cIjI1JVwiIG1heFdpZHRoPVwiMTIwcHhcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWFyb3VuZFwiPlxuICAgICAgICAgICAge2lzTXlQYWdlICYmIDxTdmcuTm90aWYgLz59XG4gICAgICAgICAgICA8U3ZnLkNsb3NlIG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tDYW5jZWx9IC8+XG4gICAgICAgICAgPC9GbGV4PlxuICAgICAgICA8Lz5cbiAgICAgIH1cbiAgICAgIG1lbnU9e2dldE1lbnVOb2RlKCl9XG4gICAgICBjb250ZW50PXtcbiAgICAgICAgPD5cbiAgICAgICAgICB7c2VhcmNoZWRVc2VycyAmJlxuICAgICAgICAgICAgc2VhcmNoZWRVc2Vycy5tYXAoKHVzZXIsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgIDxBQ3VzdG9tIGtleT17YFVzZXJDb250ZW50XyR7aW5kZXh9YH0gaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfS8ke3VzZXJJZH0vYH0gZGlzcGxheT1cImJsb2NrXCI+XG4gICAgICAgICAgICAgICAgPFVzZXJDb250ZW50XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9eydTZWFyY2hVc2VyQ29udGVudCd9XG4gICAgICAgICAgICAgICAgICB1c2VyPXt1c2VyfVxuICAgICAgICAgICAgICAgICAgZnVsbFdpZHRoPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgIGxheW91dD1cInNlYXJjaFwiXG4gICAgICAgICAgICAgICAgICBob3ZlckFuaW1hdGlvblR5cGU9e2hvdmVyQW5pbWF0aW9uQm94U2hhZG93fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvQUN1c3RvbT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8Lz5cbiAgICAgIH1cbiAgICAgIGZvb3Rlcj17PE1vZGFsRm9vdGVyIGlzTXlQYWdlPXtpc015UGFnZX0gaGFuZGxlT25DbGlja1JlbW92ZT17aGFuZGxlT25DbGlja1JlbW92ZX0gaGFuZGxlT25DbGlja1NhdmU9e2hhbmRsZU9uQ2xpY2tTYXZlfSAvPn1cbiAgICAgIHVwcGVyUGFkZGluZ1xuICAgICAgc2lkZVBhZGRpbmdcbiAgICAgIGJvdHRvbVBhZGRpbmdcbiAgICAvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBBQ3VzdG9tID0gc3R5bGVkKEEpYFxuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgSW5wdXQgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9pbnB1dCc7XG5pbXBvcnQgeyBOb1NldENvbXBvbmVucyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBGbGV4LCB7IExhYmVsLCBQIH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBiaXJ0aGRheTogbnVtYmVyO1xuICBvbkNoYW5nZTogKGJpcnRoZGF5OiBzdHJpbmcpID0+IHZvaWQ7XG4gIGlzSG9yaXpvbj86IGJvb2xlYW47XG4gIHdpZHRoPzogc3RyaW5nO1xufTtcblxudHlwZSBBZ2VQcm9wc1R5cGUgPSB7XG4gIHZhbHVlOiBudW1iZXIgfCAnLSc7XG59O1xuXG5jb25zdCBBZ2U6IFJlYWN0LkZDPEFnZVByb3BzVHlwZT4gPSAoeyB2YWx1ZSB9OiBBZ2VQcm9wc1R5cGUpID0+IHtcbiAgcmV0dXJuIDxBZ2VQYXJhbXMgY2xhc3NOYW1lPVwiQWdlUGFyYW1cIj5BR0U6IHt2YWx1ZX08L0FnZVBhcmFtcz47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUsIGlzRWRpdGFibGUsIGJpcnRoZGF5OiBfYmlydGhkYXksIG9uQ2hhbmdlLCBpc0hvcml6b24sIHdpZHRoIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtiaXJ0aGRheSwgc2V0QmlydGhkYXldID0gdXNlU3RhdGUoX2JpcnRoZGF5KTtcbiAgY29uc3QgW2FnZSwgc2V0QWdlXSA9IHVzZVN0YXRlKHV0aWwuZ2V0QWdlQnlCaXJ0aGRheShiaXJ0aGRheSkpO1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldEJpcnRoZGF5KHZhbHVlKTtcbiAgICBzZXRBZ2UodXRpbC5nZXRBZ2VCeUJpcnRoZGF5KHZhbHVlKSk7XG4gICAgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEJpcnRoZGF5KF9iaXJ0aGRheSk7XG4gICAgc2V0QWdlKHV0aWwuZ2V0QWdlQnlCaXJ0aGRheShfYmlydGhkYXkpKTtcbiAgfSwgW19iaXJ0aGRheV0pO1xuXG4gIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgICAgPElucHV0LkRhdGUgbmFtZT17dHlwZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSB2YWx1ZT17YmlydGhkYXl9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gLz5cbiAgICAgICAgICB7YmlydGhkYXkgIT09IDAgJiYgPEFnZSB2YWx1ZT17YWdlfSAvPn1cbiAgICAgICAgPC9GbGV4PlxuICAgICAgPC9GbGV4PlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGJpcnRoZGF5ID09PSAwKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICAgIDxOb1NldENvbXBvbmVucyAvPlxuICAgICAgICA8L0ZsZXg+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxJbnB1dC5EYXRlIG5hbWU9e3R5cGV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gdmFsdWU9e2JpcnRoZGF5fSBkaXNhYmxlZD17IWlzRWRpdGFibGV9IC8+XG4gICAgICAgICAgICB7YmlydGhkYXkgIT09IDAgJiYgPEFnZSB2YWx1ZT17YWdlfSAvPn1cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgIDwvRmxleD5cbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IEFnZVBhcmFtcyA9IHN0eWxlZChQKWBcbiAgdGV4dC1pbmRlbnQ6ICR7c3R5bGVzLmRvdWJsZVNpemV9cHg7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTZWxlY3QgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zZWxlY3QnO1xuaW1wb3J0IEZsZXgsIHsgTGFiZWwgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIGluZHVzdG9yeVBhcmVudElkOiBhbnk7XG4gIGluZHVzdG9yeUlkOiBhbnk7XG4gIG9uQ2hhbmdlOiAoaW5kdXN0b3J5UGFyZW50SWQ6IHN0cmluZywgaW5kdXN0b3J5SWQ6IHN0cmluZykgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHtcbiAgdHlwZSxcbiAgaXNFZGl0YWJsZSxcbiAgaW5kdXN0b3J5UGFyZW50SWQ6IF9pbmR1c3RvcnlQYXJlbnRJZCxcbiAgaW5kdXN0b3J5SWQ6IF9pbmR1c3RvcnlJZCxcbiAgb25DaGFuZ2UsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbaW5kdXN0b3J5UGFyZW50SWQsIHNldEluZHVzdG9yeVBhcmVudElkXSA9IHVzZVN0YXRlKF9pbmR1c3RvcnlQYXJlbnRJZCk7XG4gIGNvbnN0IFtpbmR1c3RvcnlJZCwgc2V0SW5kdXN0b3J5SWRdID0gdXNlU3RhdGUoX2luZHVzdG9yeUlkKTtcbiAgY29uc3QgW2luZHVzdG9yeVN0YXRpY0RhdGEsIHNldEluZHVzdG9yeVN0YXRpY0RhdGFdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUluZHVzdG9yeVBhcmVudCA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldEluZHVzdG9yeVBhcmVudElkKHZhbHVlKTtcbiAgICBzZXRJbmR1c3RvcnlJZCgnJyk7XG4gICAgb25DaGFuZ2UodmFsdWUsICcnKTtcbiAgfTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VJbmR1c3RvcnkgPSAodmFsdWUpID0+IHtcbiAgICBzZXRJbmR1c3RvcnlJZCh2YWx1ZSk7XG4gICAgb25DaGFuZ2UoaW5kdXN0b3J5UGFyZW50SWQsIHZhbHVlKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEluZHVzdG9yeVBhcmVudElkKF9pbmR1c3RvcnlQYXJlbnRJZCk7XG4gIH0sIFtfaW5kdXN0b3J5UGFyZW50SWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEluZHVzdG9yeUlkKF9pbmR1c3RvcnlJZCk7XG4gIH0sIFtfaW5kdXN0b3J5SWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZUluZHVzdG9yeVN0YXRpY0RhdGEgPSB3aW5kb3cudGFsa25EYXRhcy5zdGF0aWNUYWdzLmluZHVzdG9yeS5maWx0ZXIoKGluZCkgPT4gaW5kLnBhcmVudElkID09PSBpbmR1c3RvcnlQYXJlbnRJZCk7XG4gICAgc2V0SW5kdXN0b3J5U3RhdGljRGF0YSh1cGRhdGVJbmR1c3RvcnlTdGF0aWNEYXRhKTtcbiAgfSwgW2luZHVzdG9yeVBhcmVudElkXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgPExhYmVsIGJvdHRvbU1hcmdpbj5JbmR1c3Rvcnk8L0xhYmVsPlxuICAgICAgPEZsZXggZmxvdz1cInJvdyB3cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICA8U2VsZWN0LlNpbmdsZVxuICAgICAgICAgIG5hbWU9e2Ake3R5cGV9X2luZHVzdG9yeVBhcmVudH1gfVxuICAgICAgICAgIGRpc2FibGVkPXshaXNFZGl0YWJsZX1cbiAgICAgICAgICBsYWJlbD17J0luZHVzdG9yeSd9XG4gICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5UGFyZW50fVxuICAgICAgICAgIHZhbHVlPXtpbmR1c3RvcnlQYXJlbnRJZH1cbiAgICAgICAgICBub1NlbGVjdE9wdGlvbj5cbiAgICAgICAgICB7d2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFncy5pbmR1c3RvcnlQYXJlbnQubWFwKCh0YWcpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YEluZHVzdG9yeVBhcmVudElkXyR7dGFnLnVuaXF1ZUlkfWB9IHZhbHVlPXt0YWcudW5pcXVlSWR9PlxuICAgICAgICAgICAgICB7dGFnLmphfVxuICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L1NlbGVjdC5TaW5nbGU+XG5cbiAgICAgICAgPFNlbGVjdC5TaW5nbGUgbmFtZT17J2luZHVzdG9yeVtdJ30gZGlzYWJsZWQ9eyFpc0VkaXRhYmxlfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VJbmR1c3Rvcnl9IHZhbHVlPXtpbmR1c3RvcnlJZH0gbm9TZWxlY3RPcHRpb24+XG4gICAgICAgICAge2luZHVzdG9yeVN0YXRpY0RhdGEubWFwKCh0YWcpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YEluZHVzdG9yeUlkXyR7dGFnLnVuaXF1ZUlkfWB9IHZhbHVlPXt0YWcudW5pcXVlSWR9PlxuICAgICAgICAgICAgICB7dGFnLmphfVxuICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L1NlbGVjdC5TaW5nbGU+XG4gICAgICA8L0ZsZXg+XG4gICAgPC9GbGV4PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTZWxlY3QgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zZWxlY3QnO1xuaW1wb3J0IFNlbGVjdFllYXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RZZWFyJztcbmltcG9ydCBGbGV4LCB7IExhYmVsIH0gZnJvbSAnY292ZXIvZmxleGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBqb2JQYXJlbnRJZDogc3RyaW5nO1xuICBqb2JJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG4gIG9uQ2hhbmdlSm9iOiAoam9iUGFyZW50SWQ6IHN0cmluZywgam9iSWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgb25DaGFuZ2VZZWFyOiAoeWVhcjogbnVtYmVyKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICB0eXBlLFxuICBpc0VkaXRhYmxlLFxuICBqb2JQYXJlbnRJZDogX2pvYlBhcmVudElkLFxuICBqb2JJZDogX2pvYklkLFxuICB5ZWFyOiBfeWVhcixcbiAgb25DaGFuZ2VKb2IsXG4gIG9uQ2hhbmdlWWVhcixcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtqb2JQYXJlbnRJZCwgc2V0Sm9iUGFyZW50SWRdID0gdXNlU3RhdGUoX2pvYlBhcmVudElkKTtcbiAgY29uc3QgW2pvYklkLCBzZXRKb2JJZF0gPSB1c2VTdGF0ZShfam9iSWQpO1xuICBjb25zdCBbam9iU3RhdGljRGF0YSwgc2V0Sm9iU3RhdGljRGF0YV0gPSB1c2VTdGF0ZShbXSk7XG4gIGNvbnN0IFt5ZWFyLCBzZXRZZWFyXSA9IHVzZVN0YXRlKF95ZWFyKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VKb2JQYXJlbnQgPSAodmFsdWUpID0+IHtcbiAgICBzZXRKb2JQYXJlbnRJZCh2YWx1ZSk7XG4gICAgc2V0Sm9iSWQoJycpO1xuICAgIG9uQ2hhbmdlSm9iKHZhbHVlLCAnJyk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VKb2IgPSAodmFsdWUpID0+IHtcbiAgICBzZXRKb2JJZCh2YWx1ZSk7XG4gICAgb25DaGFuZ2VKb2Ioam9iUGFyZW50SWQsIHZhbHVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVllYXIgPSAodmFsdWUpID0+IHtcbiAgICBzZXRZZWFyKHllYXIpO1xuICAgIG9uQ2hhbmdlWWVhcih2YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRKb2JQYXJlbnRJZChfam9iUGFyZW50SWQpO1xuICB9LCBbX2pvYlBhcmVudElkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRKb2JJZChfam9iSWQpO1xuICB9LCBbX2pvYklkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRZZWFyKF95ZWFyKTtcbiAgfSwgW195ZWFyXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB1cGRhdGVKb2JTdGF0aWNEYXRhID0gd2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFncy5qb2JzLmZpbHRlcigoaW5kKSA9PiBpbmQucGFyZW50SWQgPT09IGpvYlBhcmVudElkKTtcbiAgICBzZXRKb2JTdGF0aWNEYXRhKHVwZGF0ZUpvYlN0YXRpY0RhdGEpO1xuICB9LCBbam9iUGFyZW50SWRdKTtcblxuICByZXR1cm4gKFxuICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICA8TGFiZWwgYm90dG9tTWFyZ2luPkpvYjwvTGFiZWw+XG4gICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxTZWxlY3QuU2luZ2xlXG4gICAgICAgICAgbmFtZT17YCR7dHlwZX1fam9iUGFyZW50fWB9XG4gICAgICAgICAgZGlzYWJsZWQ9eyFpc0VkaXRhYmxlfVxuICAgICAgICAgIGxhYmVsPXsnSm9iJ31cbiAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VKb2JQYXJlbnR9XG4gICAgICAgICAgdmFsdWU9e2pvYlBhcmVudElkfVxuICAgICAgICAgIG5vU2VsZWN0T3B0aW9uPlxuICAgICAgICAgIHt3aW5kb3cudGFsa25EYXRhcy5zdGF0aWNUYWdzLmpvYlBhcmVudHMubWFwKCh0YWcsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiBrZXk9e2BKb2JQYXJlbnRzXyR7dHlwZX1fJHt0YWcudW5pcXVlSWR9XyR7aW5kZXh9YH0gdmFsdWU9e3RhZy51bmlxdWVJZH0+XG4gICAgICAgICAgICAgIHt0YWcuamF9XG4gICAgICAgICAgICA8L1NlbGVjdC5PcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU2VsZWN0LlNpbmdsZT5cblxuICAgICAgICA8U2VsZWN0LlNpbmdsZSBuYW1lPXtgam9iW11gfSBkaXNhYmxlZD17IWlzRWRpdGFibGV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUpvYn0gdmFsdWU9e2pvYklkfSBub1NlbGVjdE9wdGlvbj5cbiAgICAgICAgICB7am9iU3RhdGljRGF0YS5tYXAoKHRhZywgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YEpvYl8ke3R5cGV9XyR7dGFnLnVuaXF1ZUlkfV8ke2luZGV4fWB9IHZhbHVlPXt0YWcudW5pcXVlSWR9PlxuICAgICAgICAgICAgICB7dGFnLmphfVxuICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L1NlbGVjdC5TaW5nbGU+XG5cbiAgICAgICAgPFNlbGVjdFllYXIgdHlwZT17dHlwZX0gaXNFZGl0YWJsZT17aXNFZGl0YWJsZX0geWVhcj17eWVhcn0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlWWVhcn0gLz5cbiAgICAgIDwvRmxleD5cbiAgICA8L0ZsZXg+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgQnV0dG9uLCB7IGJ1dHRvblRoZW1lQnJpZ2h0LCBidXR0b25UaGVtZURlZmF1bHQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0J1dHRvbic7XG5pbXBvcnQgeyBOb1NldENvbXBvbmVucyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBGbGV4LCB7IExhYmVsIH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCB7IGFsbExhbmd1YWdlLCBkZWZhdWx0TGFuZ3VhZ2VzIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvUHJvZmlsZSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgb25DaGFuZ2U6IChsYW5ndWFnZTogc3RyaW5nW10pID0+IHZvaWQ7XG4gIGlzSG9yaXpvbj86IGJvb2xlYW47XG4gIHdpZHRoPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IGNvbnN0IGxhbmd1YWdlc0luaXQgPSBkZWZhdWx0TGFuZ3VhZ2VzLm1hcCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLnVuaXF1ZUlkKTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB0eXBlLCBpc0VkaXRhYmxlLCBsYW5ndWFnZXM6IF9sYW5ndWFnZXMsIG9uQ2hhbmdlLCBpc0hvcml6b24gPSBmYWxzZSwgd2lkdGggPSAnYXV0bycgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2lzQWN0aXZlQWxsLCBzZXRJc0FjdGl2ZUFsbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtsYW5ndWFnZXMsIHNldExhbmd1YWdlc10gPSB1c2VTdGF0ZShfbGFuZ3VhZ2VzKTtcblxuICBjb25zdCBnZXRDb250ZW50ID0gKCkgPT4ge1xuICAgIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImxhbmd1YWdlc1wiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBvdmVyZmxvdz1cInNjcm9sbCBoaWRkZW5cIiBpc0hvcml6b249e2lzSG9yaXpvbn0gd2lkdGg9e3dpZHRofT5cbiAgICAgICAgICA8QnV0dG9uQ3VzdG9tXG4gICAgICAgICAgICBrZXk9e2Ake3R5cGV9XyR7YWxsTGFuZ3VhZ2UudW5pcXVlSWR9YH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17YEJ1dHRvbkN1c3RvbSR7dHlwZX1fJHthbGxMYW5ndWFnZS51bmlxdWVJZH1gfVxuICAgICAgICAgICAgdGhlbWU9e2dldEJ1dHRvblRoZW1lKGlzQWN0aXZlQWxsKX1cbiAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU9uQ2hhbmdlQWxsfT5cbiAgICAgICAgICAgIHthbGxMYW5ndWFnZS5qYX1cbiAgICAgICAgICA8L0J1dHRvbkN1c3RvbT5cblxuICAgICAgICAgIHtkZWZhdWx0TGFuZ3VhZ2VzLm1hcCgobGFuZ3VhZ2UpID0+IChcbiAgICAgICAgICAgIDxCdXR0b25DdXN0b21cbiAgICAgICAgICAgICAga2V5PXtgJHt0eXBlfV8ke2xhbmd1YWdlLnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17YEJ1dHRvbkN1c3RvbSR7dHlwZX1fJHthbGxMYW5ndWFnZS51bmlxdWVJZH1gfVxuICAgICAgICAgICAgICB0aGVtZT17Z2V0QnV0dG9uVGhlbWUobGFuZ3VhZ2VzLmluY2x1ZGVzKGxhbmd1YWdlLnVuaXF1ZUlkKSl9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2hhbmdlKGxhbmd1YWdlLnVuaXF1ZUlkKX0+XG4gICAgICAgICAgICAgIHtsYW5ndWFnZS5qYX1cbiAgICAgICAgICAgIDwvQnV0dG9uQ3VzdG9tPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsYW5ndWFnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiA8Tm9TZXRDb21wb25lbnMgLz47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwibGFuZ3VhZ2VzXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIG92ZXJmbG93PVwic2Nyb2xsIGhpZGRlblwiIGlzSG9yaXpvbj17aXNIb3Jpem9ufSB3aWR0aD17d2lkdGh9PlxuICAgICAgICAgICAge2RlZmF1bHRMYW5ndWFnZXMubWFwKChsYW5ndWFnZSkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIGxhbmd1YWdlcy5pbmNsdWRlcyhsYW5ndWFnZS51bmlxdWVJZCkgJiYgKFxuICAgICAgICAgICAgICAgICAgPEJ1dHRvbkN1c3RvbVxuICAgICAgICAgICAgICAgICAgICBrZXk9e2Ake3R5cGV9XyR7bGFuZ3VhZ2UudW5pcXVlSWR9YH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgQnV0dG9uQ3VzdG9tJHt0eXBlfV8ke2FsbExhbmd1YWdlLnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICAgICAgICAgIHRoZW1lPXtnZXRCdXR0b25UaGVtZSgpfT5cbiAgICAgICAgICAgICAgICAgICAge2xhbmd1YWdlLmphfVxuICAgICAgICAgICAgICAgICAgPC9CdXR0b25DdXN0b20+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC9Db250YWluZXI+XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlQWxsID0gKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZUxhbmd1YWdlcyA9ICFpc0FjdGl2ZUFsbCA/IGdldEZ1bGxMYW5ndWFnZXMoKSA6IG5ldyBBcnJheSgpO1xuICAgIHNldElzQWN0aXZlQWxsKCFpc0FjdGl2ZUFsbCk7XG4gICAgc2V0TGFuZ3VhZ2VzKHVwZGF0ZUxhbmd1YWdlcyk7XG4gICAgb25DaGFuZ2UodXBkYXRlTGFuZ3VhZ2VzKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZSA9IChjbGlja2VkVW5pcXVlSWQpID0+IHtcbiAgICBsZXQgdXBkYXRlTGFuZ3VhZ2VzID0gWy4uLmxhbmd1YWdlc107XG4gICAgaWYgKGxhbmd1YWdlcy5pbmNsdWRlcyhjbGlja2VkVW5pcXVlSWQpKSB7XG4gICAgICB1cGRhdGVMYW5ndWFnZXMgPSBsYW5ndWFnZXMuZmlsdGVyKCh1bmlxdWVJZCkgPT4gdW5pcXVlSWQgIT09IGNsaWNrZWRVbmlxdWVJZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVwZGF0ZUxhbmd1YWdlcy5wdXNoKGNsaWNrZWRVbmlxdWVJZCk7XG4gICAgfVxuICAgIHNldElzQWN0aXZlQWxsKHVwZGF0ZUxhbmd1YWdlcy5sZW5ndGggPT09IGRlZmF1bHRMYW5ndWFnZXMubGVuZ3RoKTtcbiAgICBzZXRMYW5ndWFnZXModXBkYXRlTGFuZ3VhZ2VzKTtcbiAgICBvbkNoYW5nZSh1cGRhdGVMYW5ndWFnZXMpO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKF9sYW5ndWFnZXMpIHtcbiAgICAgIGNvbnN0IHVwZGF0ZUlzQWN0aXZlQWxsID0gX2xhbmd1YWdlcy5sZW5ndGggPT09IGRlZmF1bHRMYW5ndWFnZXMubGVuZ3RoO1xuICAgICAgY29uc3QgdXBkYXRlTGFuZ3VhZ2VzID0gdXBkYXRlSXNBY3RpdmVBbGwgPyBnZXRGdWxsTGFuZ3VhZ2VzKCkgOiBbLi4uX2xhbmd1YWdlc107XG4gICAgICBzZXRJc0FjdGl2ZUFsbCh1cGRhdGVJc0FjdGl2ZUFsbCk7XG4gICAgICBzZXRMYW5ndWFnZXModXBkYXRlTGFuZ3VhZ2VzKTtcbiAgICB9XG4gIH0sIFtfbGFuZ3VhZ2VzXSk7XG5cbiAgaWYgKGxhbmd1YWdlcykge1xuICAgIHJldHVybiAoXG4gICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiIG92ZXJmbG93PVwiaGlkZGVuXCI+XG4gICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+TGFuZ3VhZ2U8L0xhYmVsPlxuICAgICAgICB7Z2V0Q29udGVudCgpfVxuICAgICAgPC9GbGV4PlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIGlzSG9yaXpvbjogYm9vbGVhbjtcbiAgd2lkdGg/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleCk8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgZmxleC1mbG93OiAkeyhwcm9wcykgPT4gKHByb3BzLmlzSG9yaXpvbiA/ICdyb3cgbm93cmFwJyA6ICdyb3cgd3JhcCcpfTtcblxuICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy5pc0hvcml6b24gPyBgJHtzdHlsZXMubWVudVBjV2lkdGggLSBzdHlsZXMuZG91YmxlTWFyZ2luICogMn1weGAgOiAnYXV0bycpfTtcbmA7XG5cbmNvbnN0IGdldEZ1bGxMYW5ndWFnZXMgPSAoKSA9PiBkZWZhdWx0TGFuZ3VhZ2VzLm1hcCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLnVuaXF1ZUlkKTtcbmNvbnN0IGdldEJ1dHRvblRoZW1lID0gKGNvbmRpdGlvbiA9IHRydWUpID0+IChjb25kaXRpb24gPyBidXR0b25UaGVtZURlZmF1bHQgOiBidXR0b25UaGVtZUJyaWdodCk7XG5cbmNvbnN0IEJ1dHRvbkN1c3RvbSA9IHN0eWxlZChCdXR0b24pYFxuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgbWFyZ2luLWJvdHRvbTogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICBtYXJnaW4tbGVmdDogMDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1dGlsIGZyb20gJ2NvbW1vbi91dGlsJztcblxuaW1wb3J0IFNlbGVjdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5pbXBvcnQgRmxleCwgeyBMYWJlbCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgeyB0YWdUeXBlcywgVGFnVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBvbkNoYW5nZTogKHNlYXJjaFR5cGU6IFRhZ1R5cGUpID0+IHZvaWQ7XG4gIHNlYXJjaFR5cGU/OiBUYWdUeXBlO1xuICB1bmRlcmxpbmU/OiBib29sZWFuO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB0eXBlLCBpc0VkaXRhYmxlLCBzZWFyY2hUeXBlLCB1bmRlcmxpbmUgPSBmYWxzZSwgb25DaGFuZ2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShzZWFyY2hUeXBlKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAodmFsdWUpID0+IHtcbiAgICBzZXRWYWx1ZSh2YWx1ZSk7XG4gICAgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIiB3aWR0aD1cIjEwMCVcIiBib3JkZXI9e3VuZGVybGluZSA/ICd1bmRlcmxpbmUnIDogJ25vbmUnfSBib3R0b21QYWRkaW5nIGJvdHRvbU1hcmdpbj5cbiAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+U2VhcmNoIFR5cGVzPC9MYWJlbD5cbiAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgPFNlbGVjdC5TaW5nbGUgbmFtZT17J1NlYXJjaFR5cGUnfSBkaXNhYmxlZD17IWlzRWRpdGFibGV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gdmFsdWU9e3ZhbHVlfSBub1NlbGVjdE9wdGlvbj5cbiAgICAgICAgICB7dGFnVHlwZXMubWFwKCh0YWdUeXBlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YWdUeXBlVXBwZXIgPSB1dGlsLmdldEhlYWRVcHBlcih0YWdUeXBlKTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YFNlYXJjaFR5cGUke3RhZ1R5cGVVcHBlcn1gfSB2YWx1ZT17dGFnVHlwZX0+XG4gICAgICAgICAgICAgICAge3RhZ1R5cGVVcHBlcn1cbiAgICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBCdXR0b24sIHsgYnV0dG9uVGhlbWVCcmlnaHQsIGJ1dHRvblRoZW1lRGVmYXVsdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQnV0dG9uJztcbmltcG9ydCB7IE5vU2V0Q29tcG9uZW5zIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9jb21tb24nO1xuaW1wb3J0IEZsZXgsIHsgTGFiZWwgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHsgYWxsU2V4LCBkZWZhdWx0U2V4ZXMgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9Qcm9maWxlJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBzZXhlczogc3RyaW5nW107XG4gIG9uQ2hhbmdlOiAoc2V4ZXM6IHN0cmluZ1tdKSA9PiB2b2lkO1xuICBpc0hvcml6b24/OiBib29sZWFuO1xuICB3aWR0aD86IHN0cmluZztcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSwgc2V4ZXM6IF9zZXhlcywgb25DaGFuZ2UsIGlzSG9yaXpvbiwgd2lkdGggPSAnYXV0bycgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2lzQWN0aXZlQWxsLCBzZXRJc0FjdGl2ZUFsbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZXhlcywgc2V0U2V4ZXNdID0gdXNlU3RhdGUoX3NleGVzKTtcblxuICBjb25zdCBnZXRDb250ZW50ID0gKCkgPT4ge1xuICAgIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImxhbmd1YWdlc1wiIGZsb3c9eydyb3cgd3JhcCd9IGFsaWduSXRlbXM9XCJjZW50ZXJcIiBpc0hvcml6b249e2lzSG9yaXpvbn0+XG4gICAgICAgICAgPEJ1dHRvbkN1c3RvbSBrZXk9e2Ake3R5cGV9XyR7YWxsU2V4LnVuaXF1ZUlkfWB9IHRoZW1lPXtnZXRCdXR0b25UaGVtZShpc0FjdGl2ZUFsbCl9IG9uQ2xpY2s9e2hhbmRsZU9uQ2hhbmdlQWxsfT5cbiAgICAgICAgICAgIHthbGxTZXguamF9XG4gICAgICAgICAgPC9CdXR0b25DdXN0b20+XG4gICAgICAgICAge2RlZmF1bHRTZXhlcy5tYXAoKHNleCkgPT4gKFxuICAgICAgICAgICAgPEJ1dHRvbkN1c3RvbVxuICAgICAgICAgICAgICBrZXk9e2Ake3R5cGV9XyR7c2V4LnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICAgIHRoZW1lPXtnZXRCdXR0b25UaGVtZShzZXhlcy5pbmNsdWRlcyhzZXgudW5pcXVlSWQpKX1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlT25DaGFuZ2Uoc2V4LnVuaXF1ZUlkKX0+XG4gICAgICAgICAgICAgIHtzZXguamF9XG4gICAgICAgICAgICA8L0J1dHRvbkN1c3RvbT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc2V4ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiA8Tm9TZXRDb21wb25lbnMgLz47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwibGFuZ3VhZ2VzXCIgZmxvdz17J3JvdyB3cmFwJ30gYWxpZ25JdGVtcz1cImNlbnRlclwiIGlzSG9yaXpvbj17aXNIb3Jpem9ufT5cbiAgICAgICAgICAgIHtkZWZhdWx0U2V4ZXMubWFwKChzZXgpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICBzZXhlcy5pbmNsdWRlcyhzZXgudW5pcXVlSWQpICYmIChcbiAgICAgICAgICAgICAgICAgIDxCdXR0b25DdXN0b20ga2V5PXtgJHt0eXBlfV8ke3NleC51bmlxdWVJZH1gfSB0aGVtZT17Z2V0QnV0dG9uVGhlbWUoKX0+XG4gICAgICAgICAgICAgICAgICAgIHtzZXguamF9XG4gICAgICAgICAgICAgICAgICA8L0J1dHRvbkN1c3RvbT5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VBbGwgPSAoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlU2V4ZXMgPSAhaXNBY3RpdmVBbGwgPyBnZXRGdWxsU2V4ZXMoKSA6IG5ldyBBcnJheSgpO1xuICAgIHNldElzQWN0aXZlQWxsKCFpc0FjdGl2ZUFsbCk7XG4gICAgc2V0U2V4ZXModXBkYXRlU2V4ZXMpO1xuICAgIG9uQ2hhbmdlKHVwZGF0ZVNleGVzKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZSA9IChjbGlja2VkVW5pcXVlSWQpID0+IHtcbiAgICBsZXQgdXBkYXRlU2V4ZXMgPSBbLi4uc2V4ZXNdO1xuICAgIGlmIChzZXhlcy5pbmNsdWRlcyhjbGlja2VkVW5pcXVlSWQpKSB7XG4gICAgICB1cGRhdGVTZXhlcyA9IHNleGVzLmZpbHRlcigodW5pcXVlSWQpID0+IHVuaXF1ZUlkICE9PSBjbGlja2VkVW5pcXVlSWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cGRhdGVTZXhlcy5wdXNoKGNsaWNrZWRVbmlxdWVJZCk7XG4gICAgfVxuICAgIHNldElzQWN0aXZlQWxsKHVwZGF0ZVNleGVzLmxlbmd0aCA9PT0gZGVmYXVsdFNleGVzLmxlbmd0aCk7XG4gICAgc2V0U2V4ZXModXBkYXRlU2V4ZXMpO1xuICAgIG9uQ2hhbmdlKHVwZGF0ZVNleGVzKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChfc2V4ZXMpIHtcbiAgICAgIGNvbnN0IHVwZGF0ZUlzQWN0aXZlQWxsID0gX3NleGVzLmxlbmd0aCA9PT0gZGVmYXVsdFNleGVzLmxlbmd0aDtcbiAgICAgIGNvbnN0IHVwZGF0ZVNleGVzID0gdXBkYXRlSXNBY3RpdmVBbGwgPyBnZXRGdWxsU2V4ZXMoKSA6IFsuLi5fc2V4ZXNdO1xuICAgICAgc2V0SXNBY3RpdmVBbGwodXBkYXRlSXNBY3RpdmVBbGwpO1xuICAgICAgc2V0U2V4ZXModXBkYXRlU2V4ZXMpO1xuICAgIH1cbiAgfSwgW19zZXhlc10pO1xuXG4gIGlmIChzZXhlcykge1xuICAgIHJldHVybiAoXG4gICAgICA8RmxleCBmbG93PVwiY29sdW1uIHdyYXBcIj5cbiAgICAgICAgPExhYmVsIGJvdHRvbU1hcmdpbj5TZXg8L0xhYmVsPlxuICAgICAgICB7Z2V0Q29udGVudCgpfVxuICAgICAgPC9GbGV4PlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIGlzSG9yaXpvbjogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KTxDb250YWluZXJQcm9wc1R5cGU+YFxuICBmbGV4LWZsb3c6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNIb3Jpem9uID8gJ3JvdyBub3dyYXAnIDogJ3JvdyB3cmFwJyl9O1xuYDtcblxuY29uc3QgZ2V0RnVsbFNleGVzID0gKCkgPT4gZGVmYXVsdFNleGVzLm1hcCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLnVuaXF1ZUlkKTtcbmNvbnN0IGdldEJ1dHRvblRoZW1lID0gKGNvbmRpdGlvbiA9IHRydWUpID0+IChjb25kaXRpb24gPyBidXR0b25UaGVtZURlZmF1bHQgOiBidXR0b25UaGVtZUJyaWdodCk7XG5cbmNvbnN0IEJ1dHRvbkN1c3RvbSA9IHN0eWxlZChCdXR0b24pYFxuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgbWFyZ2luLWJvdHRvbTogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICBtYXJnaW4tbGVmdDogMDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFNlbGVjdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5pbXBvcnQgU2VsZWN0WWVhciBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFllYXInO1xuaW1wb3J0IEZsZXgsIHsgTGFiZWwgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG4gIG9uQ2hhbmdlU3RhcnR1cFNlcmllc0lkOiAoc3RhcnR1cFNlcmllc0lkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uQ2hhbmdlWWVhcjogKHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICB0eXBlLFxuICBpc0VkaXRhYmxlLFxuICBzdGFydHVwU2VyaWVzSWQ6IF9zYXJ0dXBTZXJpZXNJZCxcbiAgeWVhcjogX3llYXIsXG4gIG9uQ2hhbmdlU3RhcnR1cFNlcmllc0lkLFxuICBvbkNoYW5nZVllYXIsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbc3RhcnR1cFNlcmllc0lkLCBzZXRTdGFydHVwU2VyaWVzSWRdID0gdXNlU3RhdGUoX3NhcnR1cFNlcmllc0lkKTtcbiAgY29uc3QgW3llYXIsIHNldFllYXJdID0gdXNlU3RhdGUoX3llYXIpO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0U3RhcnR1cFNlcmllc0lkKHZhbHVlKTtcbiAgICBvbkNoYW5nZVN0YXJ0dXBTZXJpZXNJZCh2YWx1ZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VZZWFyID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0WWVhcih2YWx1ZSk7XG4gICAgb25DaGFuZ2VZZWFyKHZhbHVlKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFN0YXJ0dXBTZXJpZXNJZChfc2FydHVwU2VyaWVzSWQpO1xuICB9LCBbX3NhcnR1cFNlcmllc0lkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRZZWFyKF95ZWFyKTtcbiAgfSwgW195ZWFyXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgPExhYmVsIGJvdHRvbU1hcmdpbj5QaGFzZTwvTGFiZWw+XG4gICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxTZWxlY3QuU2luZ2xlIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gZGlzYWJsZWQ9eyFpc0VkaXRhYmxlfSBuYW1lPXsnc3RhcnR1cFNlcmllc1tdJ30gdmFsdWU9e3N0YXJ0dXBTZXJpZXNJZH0gbm9TZWxlY3RPcHRpb24+XG4gICAgICAgICAge3dpbmRvdy50YWxrbkRhdGFzLnN0YXRpY1RhZ3Muc3RhcnR1cFNlcmllcy5tYXAoKHRhZykgPT4gKFxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24ga2V5PXtgU3RhcnR1cFNlcmllc18ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17dGFnLnVuaXF1ZUlkfT5cbiAgICAgICAgICAgICAge3RhZy5qYX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuICAgICAgICA8U2VsZWN0WWVhciB0eXBlPXt0eXBlfSBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfSB5ZWFyPXt5ZWFyfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VZZWFyfSAvPlxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2VsZWN0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc3RvcnlJZDogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBzZWxlY3RlZDogc3RyaW5nW107XG4gIG9uQ2hhbmdlOiAoc3RvcnlJZDogc3RyaW5nKSA9PiB2b2lkO1xuICBjbGlja2VkU3RvcnlJZD86IHN0cmluZztcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc3RvcnlJZDogX3N0b3J5SWQsIGlzRWRpdGFibGUsIHNlbGVjdGVkLCBvbkNoYW5nZSwgY2xpY2tlZFN0b3J5SWQgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW3N0b3J5SWQsIHNldFN0b3J5SWRdID0gdXNlU3RhdGUoX3N0b3J5SWQpO1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldFN0b3J5SWQodmFsdWUpO1xuICAgIG9uQ2hhbmdlKHZhbHVlKTtcbiAgfTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRTdG9yeUlkKF9zdG9yeUlkKTtcbiAgfSwgW19zdG9yeUlkXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U2VsZWN0LlNpbmdsZSBuYW1lPXsnc3RvcnlbXSd9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSB2YWx1ZT17c3RvcnlJZH0gbm9TZWxlY3RPcHRpb24+XG4gICAgICB7d2luZG93LnRhbGtuRGF0YXMuc3RhdGljVGFncy5zdG9yeS5tYXAoKHRhZykgPT4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGlzU2hvdyhpc0VkaXRhYmxlLCBzZWxlY3RlZCwgY2xpY2tlZFN0b3J5SWQsIHRhZy51bmlxdWVJZCkgJiYgKFxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24ga2V5PXtgU3RhcnR1cFNlcmllc18ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17U3RyaW5nKHRhZy51bmlxdWVJZCl9PlxuICAgICAgICAgICAgICB7dGFnLmphfVxuICAgICAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgICAgIClcbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvU2VsZWN0LlNpbmdsZT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgaXNTaG93ID0gKGlzRWRpdGFibGUsIHNlbGVjdGVkLCBjbGlja2VkU3RvcnlJZCwgdW5pcXVlSWQpID0+IHtcbiAgaWYgKGlzRWRpdGFibGUpIHtcbiAgICBpZiAoY2xpY2tlZFN0b3J5SWQgPT09IHVuaXF1ZUlkKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICFzZWxlY3RlZC5pbmNsdWRlcyh1bmlxdWVJZCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTZWxlY3QgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zZWxlY3QnO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIHllYXI6IG51bWJlcjtcbiAgb25DaGFuZ2U6ICh5ZWFyOiBudW1iZXIpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFllYXJzID0gW1xuICB7IHVuaXF1ZUlkOiAnMScsIGphOiAxIH0sXG4gIHsgdW5pcXVlSWQ6ICcyJywgamE6IDIgfSxcbiAgeyB1bmlxdWVJZDogJzMnLCBqYTogMyB9LFxuICB7IHVuaXF1ZUlkOiAnNCcsIGphOiA0IH0sXG4gIHsgdW5pcXVlSWQ6ICc1JywgamE6IDUgfSxcbiAgeyB1bmlxdWVJZDogJzYnLCBqYTogNiB9LFxuICB7IHVuaXF1ZUlkOiAnNycsIGphOiA3IH0sXG4gIHsgdW5pcXVlSWQ6ICc4JywgamE6IDggfSxcbiAgeyB1bmlxdWVJZDogJzknLCBqYTogOSB9LFxuICB7IHVuaXF1ZUlkOiAnMTAnLCBqYTogMTAgfSxcbiAgeyB1bmlxdWVJZDogJzExJywgamE6IDExIH0sXG4gIHsgdW5pcXVlSWQ6ICcxMicsIGphOiAxMiB9LFxuICB7IHVuaXF1ZUlkOiAnMTMnLCBqYTogMTMgfSxcbiAgeyB1bmlxdWVJZDogJzE0JywgamE6IDE0IH0sXG4gIHsgdW5pcXVlSWQ6ICcxNScsIGphOiAxNSB9LFxuICB7IHVuaXF1ZUlkOiAnMTYnLCBqYTogMTYgfSxcbiAgeyB1bmlxdWVJZDogJzE3JywgamE6IDE3IH0sXG4gIHsgdW5pcXVlSWQ6ICcxOCcsIGphOiAxOCB9LFxuICB7IHVuaXF1ZUlkOiAnMTknLCBqYTogMTkgfSxcbiAgeyB1bmlxdWVJZDogJzIwJywgamE6IDIwIH0sXG5dO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUsIGlzRWRpdGFibGUsIHllYXI6IF95ZWFyLCBvbkNoYW5nZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbeWVhciwgc2V0WWVhcl0gPSB1c2VTdGF0ZShfeWVhcik7XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0WWVhcih2YWx1ZSk7XG4gICAgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFllYXIoX3llYXIpO1xuICB9LCBbX3llYXJdKTtcbiAgcmV0dXJuIChcbiAgICA8U2VsZWN0LlNpbmdsZSBuYW1lPXt0eXBlfSBkaXNhYmxlZD17IWlzRWRpdGFibGV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gdmFsdWU9e1N0cmluZyh5ZWFyKX0gbm9TZWxlY3RPcHRpb24+XG4gICAgICB7ZGVmYXVsdFllYXJzLm1hcCgodGFnKSA9PiAoXG4gICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YFllYXJfJHt0eXBlfV8ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17U3RyaW5nKHRhZy51bmlxdWVJZCl9PlxuICAgICAgICAgIHtTdHJpbmcodGFnLmphKX1cbiAgICAgICAgPC9TZWxlY3QuT3B0aW9uPlxuICAgICAgKSl9XG4gICAgPC9TZWxlY3QuU2luZ2xlPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBBbHRQcm9wc1R5cGUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICBvbkNsaWNrOiAoKSA9PiB2b2lkO1xuICBhbHQ/OiBBbHRQcm9wc1R5cGU7XG4gIHNob3dGb3JjZUhvdmVyPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2hvdywgb25DbGljaywgYWx0LCBzaG93Rm9yY2VIb3ZlciA9IGZhbHNlIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyXG4gICAgICBjbGFzc05hbWU9XCJBZGRUYWdcIlxuICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgc2hvdz17c2hvd31cbiAgICAgIHNob3dGb3JjZUhvdmVyPXtzaG93Rm9yY2VIb3Zlcn1cbiAgICAgIGFsdD17YWx0fT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWRkTGluZUhvcml6b25cIiAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhZGRMaW5lVmVydGljYWxcIiAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGUgPSB7XG4gIHNob3c6IGJvb2xlYW47XG4gIHNob3dGb3JjZUhvdmVyOiBib29sZWFuO1xufTtcblxuY29uc3QgaG92ZXJDc3MgPSBjc3M8Q29udGFpbmVyVHlwZT5gXG4gIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dDaXJjbGVCYXNlfTtcbmA7XG5cbmNvbnN0IGhvdmVyQ3NzTm9Cb3hTaGFkb3cgPSBjc3M8Q29udGFpbmVyVHlwZT5gXG4gIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuYDtcblxuY29uc3Qgd2lkdGggPSA0ODtcbmNvbnN0IGhlaWdodCA9IDEwO1xuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpPENvbnRhaW5lclR5cGU+YFxuICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gJzU0JyA6IDApfXB4O1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICc1NCcgOiAwKX1weDtcbiAgbWluLXdpZHRoOiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAnNTQnIDogMCl9cHg7XG4gIG1pbi1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICc1NCcgOiAwKX1weDtcbiAgbWFyZ2luOiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyBzdHlsZXMuYmFzZU1hcmdpbiA6IDApfXB4O1xuICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50YWdCZ0NvbG9yfTtcbiAgYm9yZGVyOiAzcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gJ3JvdGF0ZSgwZGVnKSBzY2FsZSgxKScgOiAncm90YXRlKDBkZWcpIHNjYWxlKDApJyl9O1xuICB0cmFuc2l0aW9uOiAkeyhwcm9wcykgPT4gZ2V0VHJhbnNpdGlvbihwcm9wcyl9O1xuICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCByZ2IoMCwgMCwgMCwgMC4yKTtcbiAgJHsocHJvcHMpID0+IHByb3BzLnNob3dGb3JjZUhvdmVyICYmIGhvdmVyQ3NzTm9Cb3hTaGFkb3d9O1xuICA6aG92ZXIge1xuICAgICR7KHByb3BzKSA9PiAhcHJvcHMuc2hvd0ZvcmNlSG92ZXIgJiYgaG92ZXJDc3N9O1xuICB9XG4gIC5hZGRMaW5lSG9yaXpvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAke2hlaWdodH0lO1xuICAgIGhlaWdodDogJHt3aWR0aH0lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAlO1xuICB9XG4gIC5hZGRMaW5lVmVydGljYWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogJHt3aWR0aH0lO1xuICAgIGhlaWdodDogJHtoZWlnaHR9JTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0VHJhbnNpdGlvbiA9IChwcm9wczogQ29udGFpbmVyVHlwZSkgPT4ge1xuICByZXR1cm4gcHJvcHMuc2hvd1xuICAgID8gYHRyYW5zZm9ybSAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXMsIGJhY2tncm91bmQgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBib3gtc2hhZG93ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tc2BcbiAgICA6ICcwJztcbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgb25DbGljazogKCkgPT4gdm9pZDtcbiAgdXBwZXJMZWZ0OiBSZWFjdC5SZWFjdE5vZGU7XG4gIHVwcGVyUmlnaHQ6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgYm90dG9tTGVmdDogUmVhY3QuUmVhY3ROb2RlO1xuICBib3R0b21SaWdodDogUmVhY3QuUmVhY3ROb2RlO1xuICBvbkNsaWNrUmVtb3ZlPzogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgb25DbGljaywgb25DbGlja1JlbW92ZSwgdXBwZXJMZWZ0LCB1cHBlclJpZ2h0LCBib3R0b21MZWZ0LCBib3R0b21SaWdodCB9KSA9PiB7XG4gIGNvbnN0IFtpc0hvdmVyLCBzZXRJc0hvdmVyXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyXG4gICAgICBjbGFzc05hbWU9XCJDb21wbGV4aXR5XCJcbiAgICAgIGZsb3c9XCJjb2x1bW4gbm93cmFwXCJcbiAgICAgIGFsdD1cIlZpZXdcIlxuICAgICAgb25Nb3VzZU92ZXI9eygpID0+IHNldElzSG92ZXIodHJ1ZSl9XG4gICAgICBvbk1vdXNlTGVhdmU9eygpID0+IHNldElzSG92ZXIoZmFsc2UpfT5cbiAgICAgIDxIZWFkZXIgY2xhc3NOYW1lPVwiQ2xvc2VIZWFlZXJcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJmbGV4LWVuZFwiPlxuICAgICAgICA8Q2xvc2VJY29uIGNsYXNzTmFtZT1cIkNsb3NlSWNvblwiIG9uQ2xpY2s9e29uQ2xpY2tSZW1vdmV9IHNob3c9e2ZhbHNlIC8qb25DbGlja1JlbW92ZSAmJiBpc0hvdmVyKi99PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGluZUhvcml6b25cIiAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGluZVZlcnRpY2FsXCIgLz5cbiAgICAgICAgPC9DbG9zZUljb24+XG4gICAgICA8L0hlYWRlcj5cbiAgICAgIDxCb2R5IGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgb25DbGljaz17b25DbGlja30+XG4gICAgICAgIDxNaWRkbHdGbGV4IGZsb3c9XCJyb3cgbm93cmFwXCI+XG4gICAgICAgICAgPFVwcGVyTGVmdD57dXBwZXJMZWZ0fTwvVXBwZXJMZWZ0PlxuICAgICAgICAgIDxzcGFuPi88L3NwYW4+XG4gICAgICAgICAgPFVwcGVyUmlnaHQ+e3VwcGVyUmlnaHR9PC9VcHBlclJpZ2h0PlxuICAgICAgICA8L01pZGRsd0ZsZXg+XG4gICAgICAgIDxCb3R0b21GbGV4IGZsb3c9XCJyb3cgbm93cmFwXCIgYWxpZ24taXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8Qm90dG9tTGVmdD57Ym90dG9tTGVmdH08L0JvdHRvbUxlZnQ+XG4gICAgICAgICAgPEJvdHRvbVJpZ2h0Pntib3R0b21SaWdodH08L0JvdHRvbVJpZ2h0PlxuICAgICAgICA8L0JvdHRvbUZsZXg+XG4gICAgICA8L0JvZHk+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwcHgpO1xuYDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkKEZsZXgpYGA7XG5cbnR5cGUgQ2xvc2VJY29uVHlwZSA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IHdpZHRoID0gNDg7XG5jb25zdCBoZWlnaHQgPSAxMDtcbmNvbnN0IENsb3NlSWNvbiA9IHN0eWxlZC5kaXY8Q2xvc2VJY29uVHlwZT5gXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtNXB4O1xuICByaWdodDogLTVweDtcbiAgd2lkdGg6IDM4cHg7XG4gIGhlaWdodDogMzhweDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDEpJyA6ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDApJyl9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBiYWNrZ3JvdW5kICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYm94LXNoYWRvdyAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4IHJnYigwLCAwLCAwLCAwLjIpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93Q2lyY2xlRGFya307XG4gIH1cbiAgLmxpbmVIb3Jpem9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAyNSU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR7aGVpZ2h0fSU7XG4gICAgaGVpZ2h0OiAke3dpZHRofSU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XG4gIH1cbiAgLmxpbmVWZXJ0aWNhbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTQlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAke3dpZHRofSU7XG4gICAgaGVpZ2h0OiAke2hlaWdodH0lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAlO1xuICB9XG5gO1xuXG50eXBlIEJvZHlQcm9wc1R5cGUgPSB7fTtcblxuY29uc3QgQm9keSA9IHN0eWxlZChGbGV4KTxCb2R5UHJvcHNUeXBlPmBcbiAgaGVpZ2h0OiBpbmhlcml0O1xuICBwYWRkaW5nOiAxMHB4IDMwcHg7XG4gIG1hcmdpbjogMTBweDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMudGFnQmdDb2xvcn07XG4gIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBib3gtc2hhZG93ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQnJpZ2h0fTtcbiAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgfVxuYDtcblxuY29uc3QgTWlkZGx3RmxleCA9IHN0eWxlZChGbGV4KWBcbiAgZm9udC1zaXplOiAxMHB4O1xuICBsaW5lLWhlaWdodDogMTVweDtcbmA7XG5cbmNvbnN0IEJvdHRvbUZsZXggPSBzdHlsZWQoRmxleClgXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuYDtcblxuY29uc3QgVXBwZXJMZWZ0ID0gc3R5bGVkLmRpdmBgO1xuY29uc3QgVXBwZXJSaWdodCA9IHN0eWxlZC5kaXZgYDtcbmNvbnN0IEJvdHRvbUxlZnQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBCb3R0b21SaWdodCA9IHN0eWxlZC5kaXZgYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgb25DbGljazogKCkgPT4gdm9pZDtcbiAgb25DbGlja1JlbW92ZTogKCkgPT4gdm9pZDtcbiAgbGFiZWw6IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgb25DbGljaywgb25DbGlja1JlbW92ZSwgbGFiZWwgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwiU2ltcGx5VGFnXCIgYWx0PVwiVmlld1wiIGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICA8SGVhZGVyIGNsYXNzTmFtZT1cIkNsb3NlSGVhZWVyXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiZmxleC1lbmRcIj5cbiAgICAgICAgPENsb3NlSWNvbiBjbGFzc05hbWU9XCJDbG9zZUljb25cIiBvbkNsaWNrPXtvbkNsaWNrUmVtb3ZlfSBzaG93PXtmYWxzZX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lSG9yaXpvblwiIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lVmVydGljYWxcIiAvPlxuICAgICAgICA8L0Nsb3NlSWNvbj5cbiAgICAgIDwvSGVhZGVyPlxuICAgICAgPEJvZHkgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiBvbkNsaWNrPXtvbkNsaWNrfT5cbiAgICAgICAge2xhYmVsfVxuICAgICAgPC9Cb2R5PlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCwgMHB4KTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChGbGV4KWBgO1xuXG50eXBlIENsb3NlSWNvblR5cGUgPSB7XG4gIHNob3c6IGJvb2xlYW47XG59O1xuXG5jb25zdCB3aWR0aCA9IDQ4O1xuY29uc3QgaGVpZ2h0ID0gMTA7XG5jb25zdCBDbG9zZUljb24gPSBzdHlsZWQuZGl2PENsb3NlSWNvblR5cGU+YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTVweDtcbiAgcmlnaHQ6IC01cHg7XG4gIHdpZHRoOiAzOHB4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDEpJyA6ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDApJyl9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBiYWNrZ3JvdW5kICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYm94LXNoYWRvdyAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4IHJnYigwLCAwLCAwLCAwLjIpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93Q2lyY2xlRGFya307XG4gIH1cbiAgLmxpbmVIb3Jpem9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAyNSU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR7aGVpZ2h0fSU7XG4gICAgaGVpZ2h0OiAke3dpZHRofSU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XG4gIH1cbiAgLmxpbmVWZXJ0aWNhbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTQlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAke3dpZHRofSU7XG4gICAgaGVpZ2h0OiAke2hlaWdodH0lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAlO1xuICB9XG5gO1xudHlwZSBCb2R5UHJvcHNUeXBlID0ge307XG5cbmNvbnN0IEJvZHkgPSBzdHlsZWQoRmxleCk8Qm9keVByb3BzVHlwZT5gXG4gIGhlaWdodDogNTVweDtcbiAgcGFkZGluZzogMTBweCAzMHB4O1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRhZ0JnQ29sb3J9O1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYm94LXNoYWRvdyAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgQWRkIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL0FkZCc7XG5pbXBvcnQgeyBBLCBMaSB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmltcG9ydCB7IHNjcm9sbEJhc2VMZWZ0IH0gZnJvbSAnLi8nO1xuXG50eXBlIFByb3BzID0ge1xuICB1c2VySWQ6IHN0cmluZztcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIHRpdGxlPzogc3RyaW5nO1xuICBleWVDYXRjaD86IHN0cmluZztcbiAgY3JlYXRlPzogYm9vbGVhbjtcbiAgc2xpZGU/OiBib29sZWFuO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB1c2VySWQsIGlzTXlQYWdlLCB0aXRsZSA9ICcnLCBleWVDYXRjaCA9ICcnLCBjcmVhdGUgPSBmYWxzZSwgc2xpZGUgPSBmYWxzZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbaXNIb3Zlciwgc2V0SXNIb3Zlcl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGdldEJHQ29udGVudCA9IChleWVDYXRjaCkgPT4ge1xuICAgIGlmIChjcmVhdGUpIHtcbiAgICAgIHJldHVybiA8QWRkIG9uQ2xpY2s9eygpID0+IHt9fSBzaG93PXtjcmVhdGV9IHNob3dGb3JjZUhvdmVyPXtpc0hvdmVyfSAvPjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGV5ZUNhdGNoID09PSAnJyAmJiA8c3BhbiBjbGFzc05hbWU9XCJub0ltYWdlXCI+Tk8gSU1BR0U8L3NwYW4+O1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxDb250YWluZXJcbiAgICAgIGtleT17YEhlYWRFeWVDYXRjaExpc3ROb2B9XG4gICAgICBleWVDYXRjaD17ZXllQ2F0Y2h9XG4gICAgICBpc015UGFnZT17aXNNeVBhZ2V9XG4gICAgICBjcmVhdGU9e2NyZWF0ZX1cbiAgICAgIHNsaWRlPXtzbGlkZX1cbiAgICAgIGFsdD17dGl0bGUgIT09ICcnID8gdGl0bGUgOiAnQWRkJ31cbiAgICAgIG9uTW91c2VPdmVyPXsoKSA9PiBzZXRJc0hvdmVyKHRydWUpfVxuICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiBzZXRJc0hvdmVyKGZhbHNlKX0+XG4gICAgICA8QSBocmVmPXtgaHR0cHM6Ly8ke2NvbmYuY292ZXJVUkx9L3N0b3J5LyR7dXNlcklkfS9jcmVhdGVgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZ1wiPntnZXRCR0NvbnRlbnQoZXllQ2F0Y2gpfTwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uXCI+e3RpdGxlfTwvZGl2PlxuICAgICAgPC9BPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclByb3BzVHlwZSA9IHtcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIGV5ZUNhdGNoOiBzdHJpbmc7XG4gIGNyZWF0ZTogYm9vbGVhbjtcbiAgc2xpZGU6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKExpKTxDb250YWluZXJQcm9wc1R5cGU+YFxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiAkeyhwcm9wcykgPT4gKHByb3BzLmNyZWF0ZSA/ICdjZW50ZXInIDogJ2ZsZXgtc3RhcnQnKX07XG4gIGp1c3RpZnktY29udGVudDogJHsocHJvcHMpID0+IChwcm9wcy5jcmVhdGUgPyAnZmxleC1zdGFydCcgOiAnZmxleC1zdGFydCcpfTtcbiAgd2lkdGg6IDMzJTtcbiAgbWluLXdpZHRoOiAzNjBweDtcbiAgaGVpZ2h0OiAyNTZweDtcbiAgbWluLWhlaWdodDogMjU2cHg7XG4gIG1heC1oZWlnaHQ6IDI1NnB4O1xuICBtYXJnaW46ICR7c2Nyb2xsQmFzZUxlZnR9cHg7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5zbGlkZSB8fCBwcm9wcy5jcmVhdGUgPyAnc2Nyb2xsLXNuYXAtYWxpZ246IHN0YXJ0JyA6ICcnKX07XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmRvdWJsZVNpemV9cHg7XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwcHgpO1xuICBhIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICBhbGlnbi1pdGVtczogJHsocHJvcHMpID0+IChwcm9wcy5jcmVhdGUgPyAnY2VudGVyJyA6ICdmbGV4LXN0YXJ0Jyl9O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICAuYmcge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDE2MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuY3JlYXRlID8gJ25vbmUnIDogc3R5bGVzLmFydGljbGVCZ0NvbG9yKX07XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7KHByb3BzKSA9PiAocHJvcHMuZXllQ2F0Y2ggIT09ICcnID8gcHJvcHMuZXllQ2F0Y2ggOiAnbm9uZScpfScpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5kb3VibGVTaXplfXB4O1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgICBjb2xvcjogJHtzdHlsZXMud2hpdGVDb2xvcn07XG4gIH1cbiAgLmRlc2NyaXB0aW9uIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHggMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cbiAg44GGIDpob3ZlciB7XG4gICAgYSB7XG4gICAgfVxuICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBzb2xpZCAkeyhwcm9wcykgPT4gKHByb3BzLmlzTXlQYWdlICYmICFwcm9wcy5jcmVhdGUgPyBzdHlsZXMud2hpdGVDb2xvciA6IHN0eWxlcy5mb250Q29sb3IpfVxuICAgICAgICAkeyhwcm9wcykgPT4gKHByb3BzLmlzTXlQYWdlICYmICFwcm9wcy5jcmVhdGUgPyAwIDogMSl9cHg7XG4gICAgfVxuICAgIC5iZyB7XG4gICAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQnJpZ2h0fTtcbiAgICAgIG9wYWNpdHk6IDAuODtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWluLXdpZHRoOiA1MCU7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCB7IFN0b3JpZXNUeXBlLCBjb25maWdTdG9yaWVzTGltaXQgfSBmcm9tICdjb21tb24vdGFsa25Db25maWcnO1xuXG5pbXBvcnQgSGVhZGVyU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9IZWFkZXJTZWN0aW9uJztcbmltcG9ydCBTdG9yeUxpc3QgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvTGlzdCc7XG5pbXBvcnQgRmxleCwgeyBBLCBPbCB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHVzZXJJZDogc3RyaW5nO1xuICBpc015UGFnZTogYm9vbGVhbjtcbiAgc2xpZGU/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNvbnN0IHNjcm9sbEJhc2VMZWZ0ID0gc3R5bGVzLmJhc2VNYXJnaW47XG5leHBvcnQgY29uc3Qgc3Rvcmllc0luaXQ6IFN0b3JpZXNUeXBlW10gPSBbXTtcbmV4cG9ydCBjb25zdCBnZXRTY3JvbGxXaWR0aCA9ICgpID0+ICh3aW5kb3cuaW5uZXJXaWR0aCA+IHN0eWxlcy5hcHBXaWR0aCA/IHN0eWxlcy5hcHBXaWR0aCA6IHdpbmRvdy5pbm5lcldpZHRoKTtcblxubGV0IG9yZGVyRWxtO1xuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB1c2VySWQsIGlzTXlQYWdlID0gZmFsc2UsIHNsaWRlID0gZmFsc2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3Qgb3JkZXJSZWYgPSB1c2VSZWYoKTtcbiAgY29uc3QgW2Rpc3BsYXlTdG9yaWVzLCBzZXREaXNwbGF5U3Rvcmllc10gPSB1c2VTdGF0ZTxTdG9yaWVzVHlwZVtdPihzdG9yaWVzSW5pdCk7XG4gIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IGluZGV4Q250ID0gd2luZG93LnRhbGtuRGF0YXMuY29uZmlnICYmIHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZy5zdG9yaWVzID8gd2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnN0b3JpZXMubGVuZ3RoIDogMDtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IF9vZmZzZXQgPSB3aW5kb3cudGFsa25EYXRhcy5zdG9yaWVzUG9pbnRlciAtIGNvbmZpZ1N0b3JpZXNMaW1pdCAvIDI7XG4gICAgY29uc3Qgb2Zmc2V0ID0gMCA8PSBfb2Zmc2V0ID8gX29mZnNldCA6IDA7XG4gICAgY29uc3QgbGltaXQgPSBjb25maWdTdG9yaWVzTGltaXQ7XG4gICAgY29uc3QgdXBkYXRlRGlzcGxheVN0b3JpZXMgPSBbLi4ud2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnN0b3JpZXNdXG4gICAgICAubWFwKChzdG9yaWVzLCBpbmRleCkgPT4gc3RvcmllcylcbiAgICAgIC5zcGxpY2Uob2Zmc2V0LCBsaW1pdClcbiAgICAgIC5yZXZlcnNlKCk7XG5cbiAgICBzZXREaXNwbGF5U3Rvcmllcyh1cGRhdGVEaXNwbGF5U3Rvcmllcyk7XG4gIH0sIFt3aW5kb3cudGFsa25EYXRhcy5jb25maWcuc3Rvcmllc10pO1xuXG4gIGNvbnN0IGhhbmRsZU9uU2Nyb2xsID0gKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTE9MaXN0RWxlbWVudCwgVUlFdmVudD4pID0+IHtcbiAgICBjb25zdCBvbEVsbSA9IGUudGFyZ2V0IGFzIEhUTUxPTGlzdEVsZW1lbnQ7XG4gICAgaWYgKG9sRWxtLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IG9uZVNjcm9sbFdpZHRoID0gd2luZG93LmlubmVyV2lkdGggLSBzY3JvbGxCYXNlTGVmdCAqIDI7XG4gICAgICBjb25zdCBpbmRleCA9IG9sRWxtLnNjcm9sbExlZnQgLyBvbmVTY3JvbGxXaWR0aDtcbiAgICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKGluZGV4KSkge1xuICAgICAgICBzZXRJbmRleChpbmRleCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tDaXJjbGUgPSAoZSkgPT4ge1xuICAgIGlmIChvcmRlclJlZi5jdXJyZW50KSB7XG4gICAgICBvcmRlckVsbS5zY3JvbGxUbyh7XG4gICAgICAgIGxlZnQ6IGdldFNjcm9sbFdpZHRoKCkgKiBlLnRhcmdldC5kYXRhc2V0LmluZGV4LFxuICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCcsXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgZ2V0Q29udGVudCA9ICgpID0+IHtcbiAgICByZXR1cm4gaW5kZXhDbnQgPiAwID8gKFxuICAgICAgPD5cbiAgICAgICAgPENpcmNsZU9yZGVyIGluZGV4Q250PXtpbmRleENudH0gaW5kZXg9e2luZGV4fT5cbiAgICAgICAgICB7aXNNeVBhZ2UgJiYgPGxpIGtleT17YENpcmNsZU9yZGVyQ3JlYXRlYH0gZGF0YS1pbmRleD17MH0gb25DbGljaz17aGFuZGxlT25DbGlja0NpcmNsZX0gLz59XG4gICAgICAgICAge3dpbmRvdy50YWxrbkRhdGFzLmNvbmZpZyAmJlxuICAgICAgICAgICAgd2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnN0b3JpZXMubWFwKChjaXJjbGUsIGkpID0+IChcbiAgICAgICAgICAgICAgPGxpIGtleT17YCR7Y2lyY2xlLm5vfS0ke2l9YH0gZGF0YS1pbmRleD17aXNNeVBhZ2UgPyBpICsgMSA6IGl9IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tDaXJjbGV9IC8+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC9DaXJjbGVPcmRlcj5cblxuICAgICAgICB7c2xpZGUgJiYgKFxuICAgICAgICAgIDxGbGV4IHdpZHRoPVwiMTAwJVwiIGp1c3RpZnlDb250ZW50PVwiZmxleC1lbmRcIiBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIDxDdXN0b21BIGhyZWY9e2AvLyR7Y29uZi5jb3ZlclVSTH0ke3VzZXJJZH1zdG9yeWB9Pk1vcmUg4oaSPC9DdXN0b21BPlxuICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgKX1cbiAgICAgIDwvPlxuICAgICkgOiAoXG4gICAgICAnTk8gREFUQSdcbiAgICApO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEhlYWRlclNlY3Rpb25cbiAgICAgIHRpdGxlPXsnTXkgU3Rvcmllcyd9XG4gICAgICBpY29uVHlwZT1cIlN0b3J5XCJcbiAgICAgIGNvbnRlbnQ9e1xuICAgICAgICA8PlxuICAgICAgICAgIDxTdG9yeU9yZGVyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJTdG9yeU9yZGVyXCJcbiAgICAgICAgICAgIG1vdXRlZD17KGVsbSkgPT4gKG9yZGVyRWxtID0gZWxtKX1cbiAgICAgICAgICAgIG9uU2Nyb2xsPXtoYW5kbGVPblNjcm9sbH1cbiAgICAgICAgICAgIHNsaWRlPXtzbGlkZX1cbiAgICAgICAgICAgIGluZGV4Q250PXt3aW5kb3cudGFsa25EYXRhcy5jb25maWcuc3Rvcmllcy5sZW5ndGh9PlxuICAgICAgICAgICAge2lzTXlQYWdlICYmIDxTdG9yeUxpc3Qga2V5PXtgU3RvcnlMaXN0Q3JlYXRlYH0gdXNlcklkPXt1c2VySWR9IGlzTXlQYWdlPXtpc015UGFnZX0gY3JlYXRlIC8+fVxuICAgICAgICAgICAge2Rpc3BsYXlTdG9yaWVzLmxlbmd0aCA+IDAgJiZcbiAgICAgICAgICAgICAgZGlzcGxheVN0b3JpZXMubWFwKChzdG9yaWVzRXllQ2F0Y2gsIGkpID0+IChcbiAgICAgICAgICAgICAgICA8U3RvcnlMaXN0XG4gICAgICAgICAgICAgICAgICBrZXk9e2BTdG9yeUxpc3Qke2l9YH1cbiAgICAgICAgICAgICAgICAgIHVzZXJJZD17dXNlcklkfVxuICAgICAgICAgICAgICAgICAgdGl0bGU9e3N0b3JpZXNFeWVDYXRjaC50aXRsZX1cbiAgICAgICAgICAgICAgICAgIGV5ZUNhdGNoPXtzdG9yaWVzRXllQ2F0Y2guZXllQ2F0Y2h9XG4gICAgICAgICAgICAgICAgICBpc015UGFnZT17aXNNeVBhZ2V9XG4gICAgICAgICAgICAgICAgICBkYXRhLW5vPXtzdG9yaWVzRXllQ2F0Y2gubm99XG4gICAgICAgICAgICAgICAgICBzbGlkZT17c2xpZGV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9TdG9yeU9yZGVyPlxuICAgICAgICAgIHtnZXRDb250ZW50KCl9XG4gICAgICAgIDwvPlxuICAgICAgfVxuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICBpbmRleENudDogbnVtYmVyO1xuICBzbGlkZT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBTdG9yeU9yZGVyID0gc3R5bGVkKE9sKTxDb250YWluZXJQcm9wc1R5cGU+YFxuICAkeyhwcm9wcykgPT4gKHByb3BzLnNsaWRlID8gJ292ZXJmbG93OiBzY3JvbGwgdmlzaWJsZScgOiAnJyl9O1xuICBmbGV4LWZsb3c6IHJvdyAkeyhwcm9wcykgPT4gKHByb3BzLnNsaWRlID8gJ25vd3JhcCcgOiAnd3JhcCcpfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogJHsocHJvcHMpID0+IHtcbiAgICBpZiAocHJvcHMuc2xpZGUpIHtcbiAgICAgIHJldHVybiBwcm9wcy5pbmRleENudCA8IDMgJiYgcHJvcHMuaW5kZXhDbnQgIT09IDAgPyAnY2VudGVyJyA6ICdmbGV4LXN0YXJ0JztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICdmbGV4LXN0YXJ0JztcbiAgICB9XG4gIH19O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDEwMHB4O1xuICBtYXJnaW4tdG9wOiAtMTAwcHg7XG4gICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnknIDogJycpfTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbmA7XG5cbnR5cGUgQ2lyY2xlT3JkZXJQcm9wc1R5cGUgPSB7XG4gIGluZGV4Q250OiBudW1iZXI7XG4gIGluZGV4OiBudW1iZXI7XG59O1xuXG5jb25zdCBDaXJjbGVPcmRlciA9IHN0eWxlZC5vbDxDaXJjbGVPcmRlclByb3BzVHlwZT5gXG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHdpZHRoOiBjYWxjKCR7KHByb3BzKSA9PiBnZXRIZWFkRXllQ2F0Y2hTZWxlY3RPcmRlcldpZHRoKHByb3BzLmluZGV4Q250KX0lIC0gJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4KTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGxpIHtcbiAgICB3aWR0aDogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gICAgaGVpZ2h0OiAke3N0eWxlcy5iYXNlU2l6ZX1weDtcbiAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5iYXNlU2l6ZX1weDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBsaVtkYXRhLWluZGV4PSckeyhwcm9wcykgPT4gcHJvcHMuaW5kZXh9J10ge1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBsaSB7XG4gICAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VTaXplIC8gMn1weDtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGxpIHtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgbWluLXdpZHRoOiAxMHB4O1xuICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgbWluLWhlaWdodDogMTBweDtcbiAgICAgIG1hcmdpbjogMTBweDtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IEN1c3RvbUEgPSBzdHlsZWQoQSlgXG4gIDp2aXNpdGVkLFxuICA6aG92ZXIsXG4gIDphY3RpdmUge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICB0ZXh0LWRlY29yYXRpb246ICR7c3R5bGVzLmJyaWdodENvbG9yfSBzb2xpZCB1bmRlcmxpbmU7XG4gIH1cbmA7XG5cbmNvbnN0IGdldEhlYWRFeWVDYXRjaFNlbGVjdE9yZGVyV2lkdGggPSAoaW5kZXhDbnQpOiBudW1iZXIgPT4ge1xuICBpZiAoaW5kZXhDbnQgPCAxMCkgcmV0dXJuIE51bWJlcihgJHtpbmRleENudH0wYCk7XG4gIHJldHVybiAxMDA7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBGbGV4LCB7IExhYmVsLCBMaSwgRmxleEJveExheW91dFByb3BzVHlwZSwgZmxleExheW91dFByb3BzSW5pdCwgQm94TGF5b3V0UHJvcHNUeXBlLCBib3hMYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHsgTWVudXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvTWVudSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG1lbnVzOiBNZW51c1R5cGVbXTtcbiAgc2hvdzogYm9vbGVhbjtcbiAgc2V0U2hvdzogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xuICBvbkNsaWNrOiAobWVudTogc3RyaW5nKSA9PiB2b2lkO1xuICBmaXRSaWdodD86IGJvb2xlYW47XG4gIGxhYmVsPzogUmVhY3QuUmVhY3ROb2RlO1xufSAmIEJveExheW91dFByb3BzVHlwZSAmXG4gIEZsZXhCb3hMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IG1vZGFsQ29udGFpbmVyQ2xhc3NOYW1lID0gJ0Zsb2F0TWVudUNvbnRhaW5lcic7XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBbZGlkTW91bnQsIHNldERpZE1vdW50XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgcDogUHJvcHMgPSB7IC4uLmJveExheW91dFByb3BzSW5pdCwgLi4uZmxleExheW91dFByb3BzSW5pdCwgZml0UmlnaHQ6IGZhbHNlLCAuLi5wcm9wcyB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0RGlkTW91bnQocC5zaG93KTtcbiAgfSwgW3Auc2hvd10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxCYWNrZ3JvdW5kIHNob3c9e3Auc2hvd30gb25DbGljaz17KCkgPT4gcC5zZXRTaG93KGZhbHNlKX0gLz5cbiAgICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgY2xhc3NOYW1lPXttb2RhbENvbnRhaW5lckNsYXNzTmFtZX0+XG4gICAgICAgIHtwLmxhYmVsICYmIDxMYWJlbCBvbkNsaWNrPXsoKSA9PiBwLnNldFNob3codHJ1ZSl9PntwLmxhYmVsfTwvTGFiZWw+fVxuICAgICAgICB7cC5zaG93ICYmIChcbiAgICAgICAgICA8TWVudU9sIHNob3c9e3Auc2hvd30gZml0UmlnaHQ9e3AuZml0UmlnaHR9IGRpZE1vdW50PXtkaWRNb3VudH0gY2xhc3NOYW1lPVwiTWVudU9sXCI+XG4gICAgICAgICAgICB7cC5tZW51cy5tYXAoKG1lbnU6IE1lbnVzVHlwZSkgPT4gKFxuICAgICAgICAgICAgICA8TGkga2V5PXttZW51LmtleX0gb25DbGljaz17KCkgPT4gcC5vbkNsaWNrKG1lbnUua2V5KX0gbGluZUhlaWdodD1cIjM2cHhcIiBzaWRlUGFkZGluZyBwb2ludGVyIGhvdmVyPlxuICAgICAgICAgICAgICAgIHttZW51LmxhYmVsfVxuICAgICAgICAgICAgICA8L0xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9NZW51T2w+XG4gICAgICAgICl9XG4gICAgICA8L0ZsZXg+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbi8vIFRPRE86IGxpZmUgZ2FuYWRvcuOBp+OCouOCq+OCpuODs+ODiOeUn+aIkO+8huOCv+OCsOeUn+aIkOOBp+WLleS9nOeiuuiqjVxuXG50eXBlIEJhY2tncm91bmRUeXBlUHJvcHMgPSB7XG4gIHNob3c6IGJvb2xlYW47XG59O1xuXG5jb25zdCBCYWNrZ3JvdW5kID0gc3R5bGVkLmRpdjxCYWNrZ3JvdW5kVHlwZVByb3BzPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICdmbGV4JyA6ICdub25lJyl9O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAwIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbmA7XG5cbnR5cGUgTWVudU9sUHJvcHMgPSB7XG4gIHNob3c6IGJvb2xlYW47XG4gIGRpZE1vdW50OiBib29sZWFuO1xuICBmaXRSaWdodDogYm9vbGVhbjtcbn07XG5cbmNvbnN0IE1lbnVPbCA9IHN0eWxlZC5vbDxNZW51T2xQcm9wcz5gXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5zaG93ICYmIHByb3BzLmZpdFJpZ2h0ID8gJ3JpZ2h0OiAwJyA6ICcnKX07XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weCAke3N0eWxlcy5iYXNlUGFkZGluZ31weDtcbiAgbWFyZ2luOiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gICR7c3R5bGVzLmFscGhhQmdTZXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn07XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJvcmRlclJhZGl1c31weDtcbiAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJhc2V9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAxIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyAmJiAhcHJvcHMuZGlkTW91bnQgPyAwIDogYCR7c3R5bGVzLmJhc2VTaXplICogMn1weGApfSk7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBCb3hMaXN0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvbW9sZWN1bGVzL0JveExpc3QnO1xuaW1wb3J0IEZsZXgsIHsgSDUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoeyBjaCB9KSA9PiB7XG4gIGNvbnN0IFtjb3BpZWQsIHNldENvcGllZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2sgPSAoZSkgPT4ge1xuICAgIGUudGFyZ2V0LnNlbGVjdCgpO1xuICAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4gICAgc2V0Q29waWVkKHRydWUpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0Q29waWVkKGZhbHNlKTtcbiAgICB9LCAyMDAwKTtcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgPEg1IGNvbG9yPXtzdHlsZXMuZm9udExpZ2h0Q29sb3J9Pi0gQWN0aW9ucyAtPC9INT5cbiAgICAgIDxiciAvPlxuICAgICAgPGJyIC8+XG4gICAgICA8aDM+VXBkYXRlPC9oMz5cbiAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgICA8Qm94TGlzdCBsYWJlbD1cIkxpdmUgUGFnZXNcIiB0aGVtZT1cImRhcmtcIiBocmVmPXtgaHR0cHM6Ly8ke2NvbmYuY292ZXJVUkx9JHtjaH1idWlsZGB9IC8+XG4gICAgICAgIDxCb3hMaXN0IGxhYmVsPVwiQ29uZmlnXCIgdGhlbWU9XCJkYXJrXCIgaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfSR7Y2h9dXBkYXRlQ29uZmlnYH0gLz5cbiAgICAgIDwvRmxleD5cbiAgICAgIDxiciAvPlxuICAgICAgPGJyIC8+XG4gICAgICA8aDM+SW5jbHVkZSB5b3VyIHNpdGU8L2gzPlxuICAgICAgPE1lc3NhZ2UgY29waWVkPXtjb3BpZWR9Pntjb3BpZWQgJiYgJ0NvcGllZCd9PC9NZXNzYWdlPlxuICAgICAgPHVsPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgPHNwYW4+TGl2ZUNudOOCkuOCteOCpOODiOOBq+e1hOOBv+i+vOOCgDwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgb25DbGljaz17aGFuZGxlT25DbGlja30gb25DaGFuZ2U9eygpID0+IHt9fSB2YWx1ZT17YDxzY3JpcHQgc3JjPVwiLy90dW5lLnRhbGtuLmlvL1wiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiAvPmB9IC8+XG4gICAgICAgIDwvbGk+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICA8c3Bhbj5Db21wb25lbnTjgpLjgrXjgqTjg4jjgavntYTjgb/ovrzjgoA8L3NwYW4+XG4gICAgICAgICAgPGlucHV0IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2t9IG9uQ2hhbmdlPXsoKSA9PiB7fX0gdmFsdWU9e2A8c2NyaXB0IHNyYz1cIi8vY29tcG9uZW50cy50YWxrbi5pby9cIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgLz5gfSAvPlxuICAgICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgPHNwYW4+RnVsbCBQYWNrYWdl44KS44K144Kk44OI44Gr57WE44G/6L6844KAPC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrfSBvbkNoYW5nZT17KCkgPT4ge319IHZhbHVlPXtgPHNjcmlwdCBzcmM9XCIvL2V4dC50YWxrbi5pby9cIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgLz5gfSAvPlxuICAgICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgPHNwYW4+dGFsa25BUEnjgpLjgrXjgqTjg4jjgavntYTjgb/ovrzjgoA8L3NwYW4+XG4gICAgICAgICAgPGlucHV0IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2t9IG9uQ2hhbmdlPXsoKSA9PiB7fX0gdmFsdWU9e2A8c2NyaXB0IHNyYz1cIi8vYXBpLnRhbGtuLmlvL1wiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIiAvPmB9IC8+XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBiYWNrZ3JvdW5kOiByZ2IoODAsIDgwLCA4MCk7XG4gIGNvbG9yOiAjZmZmO1xuXG4gIHVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRoIC8gMS41fXB4O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgbGkge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgIHdpZHRoOiAzMjBweDtcbiAgICAgIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgICB9XG4gICAgc3BhbiB7XG4gICAgICB0ZXh0LWluZGVudDogJHtzdHlsZXMuYmFzZVNpemUgKiAyfXB4O1xuICAgIH1cbiAgICBpbnB1dCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1pbi13aWR0aDogMjMwcHg7XG4gICAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgICAgcGFkZGluZzogMTBweCAke3N0eWxlcy5iYXNlUGFkZGluZ31weDtcbiAgICAgIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgICAgIGJvcmRlcjogMDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJhc2VTaXplICogMn1weDtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICAgICA6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG50eXBlIE1lc3NhZ2VQcm9wc1R5cGUgPSB7XG4gIGNvcGllZDogYm9vbGVhbjtcbn07XG5cbmNvbnN0IE1lc3NhZ2UgPSBzdHlsZWQuZGl2PE1lc3NhZ2VQcm9wc1R5cGU+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAke3N0eWxlcy5iYXNlSGVpZ2h0fXB4O1xuICBwYWRkaW5nOiAwICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICBvcGFjaXR5OiAkeyhwcm9wcykgPT4gKHByb3BzLmNvcGllZCA/IDEgOiAwKX07XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHt9O1xuXG5jb25zdCBEZXNpZ25TZWN0aW9uOiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIDxDb250ZW50PlxuICAgICAgICA8QmFyQXJyb3dXcmFwPlxuICAgICAgICAgIDxCYXIgLz5cbiAgICAgICAgICA8QmFyQXJyb3cgLz5cbiAgICAgICAgPC9CYXJBcnJvd1dyYXA+XG4gICAgICAgIDxMb2dvIC8+XG4gICAgICA8L0NvbnRlbnQ+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEZXNpZ25TZWN0aW9uO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxNjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kOiAjMTExO1xuYDtcblxuY29uc3QgQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogJHtzdHlsZXMuYXBwV2lkdGh9cHg7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJhY2tncm91bmQ6IHVybChodHRwczovL2Fzc2V0cy50YWxrbi5pby9pbWcvd2FsazIucG5nKSAxMCUgODUlIC8gMjQwcHggbm8tcmVwZWF0O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGJhY2tncm91bmQ6IHVybChodHRwczovL2Fzc2V0cy50YWxrbi5pby9pbWcvd2FsazIucG5nKSA1MCUgMTAwJSAvIDI0MHB4IG5vLXJlcGVhdDtcbiAgfVxuYDtcblxuY29uc3QgQmFyQXJyb3dXcmFwID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IGNhbGMoODAlICsgMTkwcHgpO1xuICBtYXJnaW4tbGVmdDogLTQ1JTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSArIDE5MHB4KTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgfVxuYDtcblxuY29uc3QgQmFyID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogODAlO1xuICBiYWNrZ3JvdW5kOiByZ2IoMzUsIDM1LCAzNSk7XG5gO1xuXG5jb25zdCBCYXJBcnJvdyA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxNTBweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYigzNSwgMzUsIDM1KSB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxNTBweCAxNTBweCAxNTBweCAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDRweCwgLTIwM3B4LCAwKSByb3RhdGUoMzE1ZGVnKTtcbmA7XG5cbmNvbnN0IExvZ28gPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA1MTJweDtcbiAgaGVpZ2h0OiA1MTJweDtcbiAgYmFja2dyb3VuZDogdXJsKGh0dHBzOi8vYXNzZXRzLnRhbGtuLmlvL2ltZy9sb2dvX2dsYXkucG5nKSAxMDAlIC8gNTEycHggbm8tcmVwZWF0O1xuICBvcGFjaXR5OiAwLjI7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMHB4LCA2NDBweCwgMCk7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwcHgsIDc4MHB4LCAwKTtcbiAgfVxuYDtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge307XG5cbmNvbnN0IE1lc3NhZ2VTZWN0aW9uOiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIDxNZXNzYWdlPi0gVXBkYXRlIHRoZSBpbnRlcm5ldCBmb3IgY3JlYXRvcnMgLTwvTWVzc2FnZT5cbiAgICAgIDxDb3B5cmlnaHQ+Q29weXJpZ2h0IMKpIHRhbGtuLjwvQ29weXJpZ2h0PlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZVNlY3Rpb247XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWN0aW9uYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLnNlcE1hcmdpbn1weCAwO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzExMTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBwYWRkaW5nOiA2MHB4IDAgMTIwcHg7XG4gIH1cbmA7XG5cbmNvbnN0IE1lc3NhZ2UgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luOiAyMHB4O1xuYDtcblxuY29uc3QgQ29weXJpZ2h0ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDIwcHg7XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBNZWRpYVR5cGVOZXdzLCBNZWRpYVR5cGVTdWJkb21haW5zLCBOZXR3b3JrTGlzdCB9IGZyb20gJ2NvbW1vbi9OZXR3b3Jrcyc7XG5cbmltcG9ydCBCb3hMaXN0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvbW9sZWN1bGVzL0JveExpc3QnO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB1bmtub3duO1xuXG5jb25zdCBPdGhlckNvbnRlbnRzU2VjdGlvbjogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKCkgPT4ge1xuICBjb25zdCBMaXZlTWVkaWFMaXN0ID0gQXJyYXkuZnJvbShPYmplY3Qua2V5cyhOZXR3b3JrTGlzdCkpLm1hcCgoX21lZGlhVHlwZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgbWVkaWFUeXBlID0gX21lZGlhVHlwZSBhcyBNZWRpYVR5cGVTdWJkb21haW5zO1xuICAgIGNvbnN0IGxhYmVsID0gTmV0d29ya0xpc3RbbWVkaWFUeXBlXS5sYWJlbDtcbiAgICBjb25zdCBhY3RpdmUgPSBtZWRpYVR5cGUgPT09IE1lZGlhVHlwZU5ld3M7XG4gICAgcmV0dXJuIDxCb3hMaXN0IGxhYmVsPXtsYWJlbH0ga2V5PXtsYWJlbH0gYWN0aXZlPXthY3RpdmV9IHRoZW1lPVwiZGFya1wiIGhyZWY9XCJodHRwczovL25ld3MudGFsa24uaW9cIiAvPjtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgey8qXG4gICAgICA8Q29udGFpbmVyIGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIHVwcGVyUGFkZGluZyBib3R0b21QYWRkaW5nPlxuICAgICAgPEg1IGNvbG9yPXtzdHlsZXMuZm9udExpZ2h0Q29sb3J9Pi0gT3RoZXIgQ29udGVudHMgLTwvSDU+XG4gICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiB1cHBlck1hcmdpbj5cbiAgICAgICAgPFVsIGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJ0aXRsZVwiPlRhbGtuIEZvcjwvbGk+XG4gICAgICAgICAgPEJveExpc3QgbGFiZWw9XCJVc2VyXCIgdGhlbWU9XCJkYXJrXCIgaHJlZj1cImh0dHBzOi8vd3d3LnRhbGtuLmlvXCIgLz5cbiAgICAgICAgICA8Qm94TGlzdCBsYWJlbD1cIldlYnNpdGUgb3duZXJcIiB0aGVtZT1cImRhcmtcIiBocmVmPVwiaHR0cHM6Ly9vd24udGFsa24uaW9cIiAvPlxuICAgICAgICAgIDxCb3hMaXN0XG4gICAgICAgICAgICBsYWJlbD1cIkNocm9tZSBleHRlbnNpb25cIlxuICAgICAgICAgICAgdGhlbWU9XCJkYXJrXCJcbiAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC90YWxrbi1mb3ItY2hyb21lL2RrbmdubWRsY29mYW1icGZhY2NlcGJuamdmaG9sZ2JvP2hsPWVuXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L1VsPlxuICAgICAgICA8VWwgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgICAgPGxpIGNsYXNzTmFtZT1cInRpdGxlXCI+TGl2ZSBNZWRpYTwvbGk+XG4gICAgICAgICAgPEJveExpc3QgbGFiZWw9XCJ0YWxrblwiIHRoZW1lPVwiZGFya1wiIGhyZWY9XCJodHRwczovL3RhbGtuLmlvL1wiIC8+XG4gICAgICAgICAgPEJveExpc3QgbGFiZWw9XCJ0YWxrbiBuZXdzXCIgdGhlbWU9XCJkYXJrXCIgaHJlZj1cImh0dHBzOi8vbmV3cy50YWxrbi5pby9cIiAvPlxuICAgICAgICA8L1VsPlxuICAgICAgPC9GbGV4PlxuICAgICAgPC9Db250YWluZXI+XG4gICovfVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgT3RoZXJDb250ZW50c1NlY3Rpb247XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChTZWN0aW9uKWBcbiAgYmFja2dyb3VuZDogcmdiKDM1LCAzNSwgMzUpO1xuICBjb2xvcjogI2ZmZjtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBwYWRkaW5nOiAyMHB4IDA7XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgSDUgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge307XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8SDUgY29sb3I9e3N0eWxlcy5mb250TGlnaHRDb2xvcn0+LSBEb21haW4gUHJvZmlsZSBQcm9qZWN0IC08L0g1PlxuICAgICAgPGJyIC8+XG4gICAgICA8aDM+Q29uY2VwdDwvaDM+XG4gICAgICA8TWVzc2FnZT5cbiAgICAgICAgPHA+XG4gICAgICAgICAg44OJ44Oh44Kk44Oz44Gu5Lit44Gn44KC44Gu5L2c44KK44KS44GZ44KL5Lq644KS44OU44OD44Kv44Ki44OD44OX44GZ44KLV0VC44Oh44OH44Kj44Ki44Gn44GZ44CCXG4gICAgICAgICAgVE9Q44OJ44Oh44Kk44Oz44GM5L+d5pyJ44GZ44KL44CMTWV0YeOCv+OCsOOAjeOAjE9ncOOCv+OCsOOAjeOCkue3qOmbhuOBmeOCi+OBk+OBqOOBp+iHqueUseOBq+S9nOaIkOODu+e3qOmbhuOBjOWHuuadpeOBvuOBmeOAglxuICAgICAgICA8L3A+XG4gICAgICAgIHsvKlxuICAgICAgICA8cD5cbiAgICAgICAgICBUaGlzIGlzIGEgd2ViIG1lZGlhIHRoYXQgcGlja3MgdXAgcGVvcGxlIHdobyBtYWtlIHRoaW5ncyBpbiB0aGUgZG9tYWluLiBCeSBlZGl0aW5nIHRoZSBNZXRhIHRhZ3MgYW5kIE9ncCB0YWdzIG93bmVkIGJ5IHRoZSBUT1BcbiAgICAgICAgICBkb21haW5zLCB5b3UgY2FuIGZyZWVseSBjcmVhdGUgYW5kIGVkaXQgdGhlbS5cbiAgICAgICAgPC9wPlxuKi99XG4gICAgICA8L01lc3NhZ2U+XG4gICAgICA8aDM+TWlzc2lvbjwvaDM+XG4gICAgICA8TWVzc2FnZT5cbiAgICAgICAgPHA+XG4gICAgICAgICAg44KC44Gu5L2c44KK44Gr6Zai44KP44KL5Lq644O757mL44GM44KK44Gf44GE5Lq644KS44K/44Kw5LuY44GR44Gn5Y+v6KaW5YyW44CBQUnjg57jg4Pjg4Hjg7PjgrDjgZnjgovjgZPjgajjgafjgIHjgqTjg7Pjgr/jg7zjg43jg4Pjg4jkuIrjgafkuI3opoHjgarjgIzku7Lku4vjgI3jgoTjgIzpnIDntabjgq7jg6Pjg4Pjg5fjgI3jgpLnhKHjgY/jgZfjgb7jgZnjgIJcbiAgICAgICAgPC9wPlxuICAgICAgICB7LypcbiAgICAgICAgPHA+XG4gICAgICAgICAgT3VyIG1pc3Npb24gaXMgdG8gZWxpbWluYXRlIHVubmVjZXNzYXJ5IOOAjGludGVybWVkaWFyaWVz44CNYW5k44CMc3VwcGx5LWRlbWFuZCBnYXBz44CNIG9uIHRoZSBJbnRlcm5ldCBieSB2aXN1YWxpemluZyBhbmQgQUktbWF0Y2hpbmdcbiAgICAgICAgICBwZW9wbGUgd2hvIGFyZSBpbnZvbHZlZCBpbiBtYW51ZmFjdHVyaW5nIGFuZCBwZW9wbGUgd2hvIHdhbnQgdG8gYmUgY29ubmVjdGVkIHdpdGggTWV0YSBUYWdzIGFuZCBPZ3AgVGFncy5cbiAgICAgICAgPC9wPlxuICAgICAgICAqL31cbiAgICAgIDwvTWVzc2FnZT5cbiAgICAgIDxoMz5TcG9uc2VyPC9oMz5cbiAgICAgIDxHcm91cHM+XG4gICAgICAgIDxNZW1iZXI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlcj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICA8L0dyb3Vwcz5cbiAgICAgIDxoMz5NZW1iZXI8L2gzPlxuICAgICAgPEdyb3Vwcz5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCIgYmdTcmM9XCJodHRwczovL3Bicy50d2ltZy5jb20vcHJvZmlsZV9pbWFnZXMvMTcyNTY0MDgwMS9iYWJhX3g5Ni5wbmdcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+bWlyYXpsZUB0YWxrbjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgIDwvR3JvdXBzPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weCAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4ICR7c3R5bGVzLnNlcE1hcmdpbn1weCAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBiYWNrZ3JvdW5kOiByZ2IoNjgsIDY4LCA2OCk7XG4gIGNvbG9yOiAjZmZmO1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgaDMge1xuICAgIG1hcmdpbjogNDVweCAwO1xuICB9XG5gO1xuXG5jb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIHAge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgfVxuYDtcblxuY29uc3QgR3JvdXBzID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1heC13aWR0aDogJHtzdHlsZXMuYXBwV2lkdGh9cHg7XG5gO1xuXG50eXBlIE1lbWJlclR5cGUgPSB7XG4gIGJnU3JjPzogc3RyaW5nO1xufTtcblxuY29uc3QgTWVtYmVyID0gc3R5bGVkLmE8TWVtYmVyVHlwZT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgZm9udC1zaXplOiA2MCU7XG4gIGNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIDpob3ZlciB7XG4gICAgb3BhY2l0eTogMC42O1xuICAgIC5pY29uIHtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogNzRweDtcbiAgICB9XG4gIH1cbiAgLmljb24ge1xuICAgIHdpZHRoOiA2NHB4O1xuICAgIGhlaWdodDogNjRweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6IHVybCgkeyhwcm9wcykgPT4gcHJvcHMuYmdTcmN9KTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiA2NHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB9XG4gIC5uYW1lIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICB9XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHt9O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICgpID0+IHtcbiAgY29uc3QgaGFuZGxlT25DbGlja1RvVG9wID0gKCkgPT4ge1xuICAgIHdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgYmVoYXZpb3I6ICdzbW9vdGgnIH0pO1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxUb1RvcCBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrVG9Ub3B9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9eydUb1RvcEFycm93J30gLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsnVG9Ub3BBcnJvd1VuZGVyQmFyJ30gLz5cbiAgICA8L1RvVG9wPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBUb1RvcCA9IHN0eWxlZC5kaXZgXG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC50b1RvcH07XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogY2FsYygxMDB2aCAtIDExMHB4KTtcbiAgcmlnaHQ6IDcwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAke3N0eWxlcy5xdWludFNpemV9cHg7XG4gIGhlaWdodDogJHtzdHlsZXMucXVpbnRTaXplfXB4O1xuICBwYWRkaW5nOiAke3N0eWxlcy5xdWludFNpemV9cHg7XG4gIG1hcmdpbjogMCAwIDYwcHggYXV0bztcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMud2hpdGVDb2xvcn07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGRpdi5Ub1RvcEFycm93IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNHB4O1xuICAgIGJvcmRlci1yaWdodDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAyNXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyLWxlZnQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cbiAgZGl2LlRvVG9wQXJyb3dVbmRlckJhciB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiA1cHg7XG4gICAgbWluLWhlaWdodDogNXB4O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuICA6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgICBkaXYuVG9Ub3BBcnJvdyB7XG4gICAgICBib3JkZXItYm90dG9tOiAyNXB4IHNvbGlkICNmZmY7XG4gICAgfVxuICAgIGRpdi5Ub1RvcEFycm93VW5kZXJCYXIge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICByaWdodDogMTVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBBY3Rpb25zU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvQWN0aW9uc1NlY3Rpb24nO1xuaW1wb3J0IERlc2lnblNlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL0Rlc2lnblNlY3Rpb24nO1xuaW1wb3J0IE1lc3NhZ2VTZWN0aW9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9NZXNzYWdlU2VjdGlvbic7XG5pbXBvcnQgT3RoZXJDb250ZW50c1NlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL090aGVyQ29udGVudHNTZWN0aW9uJztcbmltcG9ydCBTZXJ2aWNlQ29uY2VwdFNlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL1NlcnZpY2VDb25jZXB0U2VjdGlvbic7XG5pbXBvcnQgVG9Ub3BTZWN0aW9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9Ub1RvcFNlY3Rpb24nO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoeyBjaCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEZvb3Rlcj5cbiAgICAgIDxUb1RvcFNlY3Rpb24gLz5cbiAgICAgIDxBY3Rpb25zU2VjdGlvbiBjaD17Y2h9IC8+XG4gICAgICA8U2VydmljZUNvbmNlcHRTZWN0aW9uIC8+XG4gICAgICA8T3RoZXJDb250ZW50c1NlY3Rpb24gLz5cbiAgICAgIDxEZXNpZ25TZWN0aW9uIC8+XG4gICAgICA8TWVzc2FnZVNlY3Rpb24gLz5cbiAgICA8L0Zvb3Rlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgRm9vdGVyID0gc3R5bGVkLmZvb3RlcmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgU2VhcmNoIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvaWNvbi9TZWFyY2gnO1xuaW1wb3J0IEFjY291bnQgZnJvbSAnY292ZXIvY29tcG9uZW50cy9tb2xlY3VsZXMvQWNjb3VudCc7XG5pbXBvcnQgRmxleCwgeyBBLCBJbWcsIEgxLCBIZWFkZXIgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IFVzZXIgZnJvbSAnY292ZXIvbW9kZWwvVXNlcic7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9wZW5NZW51OiBib29sZWFuO1xuICBjaDogc3RyaW5nO1xuICBhY2NvdW50OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGhhbmRsZU9uQ2xpY2tNZW51OiAoZTogUmVhY3QuTW91c2VFdmVudDxIVE1MRWxlbWVudCwgTW91c2VFdmVudD4pID0+IHZvaWQ7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IGNoLCBvcGVuTWVudSwgYWNjb3VudCwgaGFuZGxlT25DbGlja01lbnUgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXJcbiAgICAgIGNsYXNzTmFtZT1cIkhlYWRlclwiXG4gICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgaGVpZ2h0PXtgJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4YH1cbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCJcbiAgICAgIGJvcmRlcj1cInVuZGVybGluZVwiPlxuICAgICAgPEhlYWRlckluU2lkZU1lbnVcbiAgICAgICAgZmxvdz1cImNvbHVtbiB3cmFwXCJcbiAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgICAgY2xhc3NOYW1lPXtvcGVuTWVudSAmJiAnb3Blbid9XG4gICAgICAgIGFsdD17eyBsYWJlbDogJ1NlYXJjaCcsIHR5cGU6ICdib3R0b20gbGVmdCcgfX1cbiAgICAgICAgc2lkZU1hcmdpbj5cbiAgICAgICAgPFNlYXJjaFxuICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaGFuZGxlT25DbGlja01lbnUoZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBjbG9zZT17b3Blbk1lbnV9XG4gICAgICAgIC8+XG4gICAgICA8L0hlYWRlckluU2lkZU1lbnU+XG5cbiAgICAgIDxIMSBpZD17J0FwcEhlYWRlcid9PlxuICAgICAgICA8VGl0bGVBbmNob3IgaHJlZj17YGh0dHBzOi8ke2NofWB9IGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgICAgIDxJbWcgc3JjPXtgLy8ke2NvbmYuYXNzZXRzVVJMfS9jb3Zlci9sb2dvLnBuZ2B9IHdpZHRoPVwiMzJweFwiIGNsYXNzTmFtZT1cImxvZ29cIiAvPlxuICAgICAgICAgIFNUQVJUVVAtSFVCXG4gICAgICAgIDwvVGl0bGVBbmNob3I+XG4gICAgICA8L0gxPlxuXG4gICAgICA8SGVhZGVyU2lkZSBmbG93PVwiY29sdW1uIHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiBzaWRlTWFyZ2luPlxuICAgICAgICB7YWNjb3VudH1cbiAgICAgIDwvSGVhZGVyU2lkZT5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEhlYWRlcilgXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5oZWFkZXJ9O1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gICR7c3R5bGVzLmFscGhhQmdTZXR9O1xuICBhIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgY29sb3I6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlckluU2lkZU1lbnUgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC5IZWFkZXJNZW51TGluZSB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjYmJiO1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgfVxuICAmLm9wZW4ge1xuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMSkge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSg4cHgsIDhweCk7XG4gICAgfVxuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMikge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgwcHgsIDBweCk7XG4gICAgfVxuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMykge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoN3B4LCAtOHB4KTtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlclNpZGUgPSBzdHlsZWQoRmxleClgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogNjBweDtcbiAgaGVpZ2h0OiA2MHB4O1xuYDtcblxuY29uc3QgVGl0bGVBbmNob3IgPSBzdHlsZWQoQSlgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogLTMycHg7XG4gIGxldHRlci1zcGFjaW5nOiAzcHg7XG4gIC5odWIge1xuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gIH1cbiAgLmxvZ28ge1xuICAgIG1hcmdpbi1yaWdodDogMTJweDtcbiAgfVxuYDtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCB7IE1lbnUsIEEsIEgyIH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCB7XG4gIFNlbGVjdENvbnRlbnRNZW51VHlwZSwgLy8gIHNlbGVjdENvbnRlbnRNZW51TGl2ZVBhZ2VzLFxuICBzZWxlY3RDb250ZW50TWVudUJ1c2luZXNzLFxuICBzZWxlY3RDb250ZW50TWVudVN0b3JpZXMsXG4gIHNlbGVjdENvbnRlbnRNZW51VXNlcnMsXG59IGZyb20gJ2NvdmVyL21vZGVsL01lbnVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgY2g6IHN0cmluZztcbiAgc2VsZWN0Q29udGVudE1lbnU6IFNlbGVjdENvbnRlbnRNZW51VHlwZTtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgY2gsIHNlbGVjdENvbnRlbnRNZW51IH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cIkNvbnRlbnRNZW51XCI+XG4gICAgICA8Q29udGVudE1lbnVPcmRlcj5cbiAgICAgICAgPENvbnRlbnRNZW51TGlzdCBjbGFzc05hbWU9e3NlbGVjdENvbnRlbnRNZW51ID09PSBzZWxlY3RDb250ZW50TWVudVVzZXJzICYmICdhY3RpdmUnfT5cbiAgICAgICAgICA8QSBocmVmPXtgLy8ke2NvbmYuY292ZXJVUkx9JHtjaH1kYXNoYm9hcmRgfT5cbiAgICAgICAgICAgIDxIMj5EQVNIQk9BUkQ8L0gyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1bmRlckJhclwiIC8+XG4gICAgICAgICAgPC9BPlxuICAgICAgICA8L0NvbnRlbnRNZW51TGlzdD5cbiAgICAgICAgPENvbnRlbnRNZW51TGlzdCBjbGFzc05hbWU9e3NlbGVjdENvbnRlbnRNZW51ID09PSBzZWxlY3RDb250ZW50TWVudUJ1c2luZXNzICYmICdhY3RpdmUnfT5cbiAgICAgICAgICA8QSBocmVmPXtgLy8ke2NvbmYuY292ZXJVUkx9JHtjaH1idXNpbmVzc2B9PlxuICAgICAgICAgICAgPEgyPkJVU0lORVNTPC9IMj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidW5kZXJCYXJcIiAvPlxuICAgICAgICAgIDwvQT5cbiAgICAgICAgPC9Db250ZW50TWVudUxpc3Q+XG4gICAgICAgIDxDb250ZW50TWVudUxpc3QgY2xhc3NOYW1lPXtzZWxlY3RDb250ZW50TWVudSA9PT0gc2VsZWN0Q29udGVudE1lbnVTdG9yaWVzICYmICdhY3RpdmUnfT5cbiAgICAgICAgICA8QSBocmVmPXtgLy8ke2NvbmYuY292ZXJVUkx9JHtjaH1zdG9yeWB9PlxuICAgICAgICAgICAgPEgyPlNUT1JZPC9IMj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidW5kZXJCYXJcIiAvPlxuICAgICAgICAgIDwvQT5cbiAgICAgICAgPC9Db250ZW50TWVudUxpc3Q+XG4gICAgICA8L0NvbnRlbnRNZW51T3JkZXI+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChNZW51KWBcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAke3N0eWxlcy5iYXNlSGVpZ2h0fXB4O1xuICB6LWluZGV4OiAke3N0eWxlcy56SW5kZXguY29udGVudHNNZW51fTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c3R5bGVzLmJhc2VIZWlnaHR9cHg7XG4gIG1hcmdpbi10b3A6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICAke3N0eWxlcy5hbHBoYUJnU2V0fTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbmA7XG5jb25zdCBDb250ZW50TWVudU9yZGVyID0gc3R5bGVkLnVsYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBpbmhlcml0O1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LXdlaWdodDogMjAwO1xuICBsZXR0ZXItc3BhY2luZzogNXB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGJvcmRlci1sZWZ0OiAwcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICB9XG5gO1xuXG5jb25zdCBDb250ZW50TWVudUxpc3QgPSBzdHlsZWQubGlgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgZmxleDogMSAxIGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMjUlO1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICAudW5kZXJCYXIge1xuICAgIHdpZHRoOiAzNSU7XG4gICAgbWluLXdpZHRoOiA2MHB4O1xuICAgIGhlaWdodDogOHB4O1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbiAqIDJ9bXM7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLXJpZ2h0OiAwcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICAgIH1cbiAgfVxuXG4gIDpob3ZlciB7XG4gICAgLnVuZGVyQmFyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmRhcmtDb2xvcn07XG4gICAgfVxuICB9XG4gICYuYWN0aXZlIHtcbiAgICAudW5kZXJCYXIge1xuICAgICAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gIH1cbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgY29sb3I6ICM2NjY7XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlTWVtbywgZm9yd2FyZFJlZiwgdXNlUmVmLCBjcmVhdGVSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEJ1dHRvbiwgeyBidXR0b25UaGVtZUJyaWdodCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQnV0dG9uJztcbmltcG9ydCBGb3VuZGVyTWVudSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL0ZvdW5kZXJNZW51JztcbmltcG9ydCBJbnZlc3Rvck1lbnUgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9JbnZlc3Rvck1lbnUnO1xuaW1wb3J0IE1lbWJlck1lbnUgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9NZW1iZXJNZW51JztcbmltcG9ydCBTdG9yeU1lbnUgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9TdG9yeU1lbnUnO1xuaW1wb3J0IFNlbGVjdFNlYXJjaFR5cGUgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTZWFyY2hUeXBlJztcbmltcG9ydCBGbGV4LCB7IEEsIEZvb3RlciBhcyBGbGV4ZXNGb290ZXIgfSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHsgRml4VmFsdWVzVHlwZSwgdGFnRm91bmRlciwgdGFnSW52ZXN0b3IsIHRhZ01lbWJlciwgdGFnU3RvcnksIFRhZ1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgeyBVc2VyVGFnc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgeyBGaXhGb3VuZGVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL0ZvdW5kZXInO1xuaW1wb3J0IHsgRml4SW52ZXN0b3JWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvSW52ZXN0b3InO1xuaW1wb3J0IHsgRml4TWVtYmVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL01lbWJlcic7XG5pbXBvcnQgeyBGaXhTdG9yeVZhbHVlc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9TdG9yeSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5pbXBvcnQgeyBnZXRGaXhWYWx1ZXNFbXB0eSB9IGZyb20gJ2NvdmVyL3V0aWxzL3VzZXJUYWdzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgb3Blbk1lbnU6IGJvb2xlYW47XG4gIHVzZXJUYWdzOiBVc2VyVGFnc1R5cGU7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IG9wZW5NZW51LCB1c2VyVGFncyB9KSA9PiB7XG4gIGNvbnN0IFtkaWRNb3VudCwgc2V0RGlkTW91bnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2VhcmNoVHlwZSwgc2V0U2VhcmNoVHlwZV0gPSB1c2VTdGF0ZTxUYWdUeXBlPigpO1xuICBjb25zdCBmaXhWYWx1ZXNFbXB0eSA9IGdldEZpeFZhbHVlc0VtcHR5KHNlYXJjaFR5cGUsIHRydWUpO1xuICBjb25zdCBbZml4VmFsdWVzLCBzZXRGaXhWYWx1ZXNdID0gdXNlU3RhdGU8Rml4VmFsdWVzVHlwZT4oZml4VmFsdWVzRW1wdHkpO1xuICBjb25zdCBbZm9vdGVySGVpZ2h0LCBzZXRGb290ZXJIZWlnaHRdID0gdXNlU3RhdGUoMCk7XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja0NsZWFyID0gKCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlc0VtcHR5IH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uRGlkTW91bnRGaXhlZEZvb3RlciA9IChlbG06IEhUTUxFbGVtZW50KSA9PiB7XG4gICAgc2V0Rm9vdGVySGVpZ2h0KGVsbS5jbGllbnRIZWlnaHQpO1xuICB9O1xuXG4gIGNvbnN0IHNlYXJjaE1lbnVNZW1vID0gdXNlTWVtbygoKSA9PiB7XG4gICAgc3dpdGNoIChzZWFyY2hUeXBlKSB7XG4gICAgICBjYXNlIHRhZ0ludmVzdG9yOlxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxJbnZlc3Rvck1lbnUgdHlwZT1cIlNlYXJjaEludmVzdG9yTWVudVwiIGlzRWRpdGFibGUgZml4VmFsdWVzPXtmaXhWYWx1ZXMgYXMgRml4SW52ZXN0b3JWYWx1ZXNUeXBlfSBzZXRGaXhWYWx1ZXM9e3NldEZpeFZhbHVlc30gLz5cbiAgICAgICAgKTtcbiAgICAgIGNhc2UgdGFnRm91bmRlcjpcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8Rm91bmRlck1lbnUgdHlwZT1cIlNlYXJjaEZvdW5kZXJNZW51XCIgaXNFZGl0YWJsZSBmaXhWYWx1ZXM9e2ZpeFZhbHVlcyBhcyBGaXhGb3VuZGVyVmFsdWVzVHlwZX0gc2V0Rml4VmFsdWVzPXtzZXRGaXhWYWx1ZXN9IC8+XG4gICAgICAgICk7XG4gICAgICBjYXNlIHRhZ01lbWJlcjpcbiAgICAgICAgcmV0dXJuIDxNZW1iZXJNZW51IHR5cGU9XCJTZWFyY2hNZW1iZXJNZW51XCIgaXNFZGl0YWJsZSBmaXhWYWx1ZXM9e2ZpeFZhbHVlcyBhcyBGaXhNZW1iZXJWYWx1ZXNUeXBlfSBzZXRGaXhWYWx1ZXM9e3NldEZpeFZhbHVlc30gLz47XG4gICAgICBjYXNlIHRhZ1N0b3J5OlxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxTdG9yeU1lbnUgdHlwZT1cIlNlYXJjaFN0b3J5TWVudVwiIHVzZXJUYWdzPXt1c2VyVGFnc30gZml4VmFsdWVzPXtmaXhWYWx1ZXMgYXMgRml4U3RvcnlWYWx1ZXNUeXBlfSBzZXRGaXhWYWx1ZXM9e3NldEZpeFZhbHVlc30gLz5cbiAgICAgICAgKTtcbiAgICB9XG4gIH0sIFtmaXhWYWx1ZXNdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChvcGVuTWVudSkge1xuICAgICAgc2V0RGlkTW91bnQodHJ1ZSk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiBzZXREaWRNb3VudChmYWxzZSk7XG4gIH0sIFtvcGVuTWVudV0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKGZpeFZhbHVlc0VtcHR5KTtcbiAgfSwgW3NlYXJjaFR5cGVdKTtcblxuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8QmFja2dyb3VuZCBvcGVuTWVudT17b3Blbk1lbnV9IHNob3c9e2RpZE1vdW50fSAvPlxuICAgICAgPFNlYXJjaENvbnRhaW5lclxuICAgICAgICBjbGFzc05hbWU9XCJTaWRlTWVudU9yZGVyXCJcbiAgICAgICAgb3Blbk1lbnU9e29wZW5NZW51fVxuICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJmbGV4LXN0YXJ0XCJcbiAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJmbGV4LXN0YXJ0XCJcbiAgICAgICAgYm9yZGVyPVwicmlnaHRsaW5lXCI+XG4gICAgICAgIDxTZWFyY2hDb250ZW50XG4gICAgICAgICAgY2xhc3NOYW1lPVwiU2VhcmNoQ29udGVudFwiXG4gICAgICAgICAgZmxvdz1cImNvbHVtbiBub3dyYXBcIlxuICAgICAgICAgIG92ZXJmbG93PVwiaGlkZGVuIHNjcm9sbFwiXG4gICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICBtYXJnaW5Cb3R0b209e2Zvb3RlckhlaWdodH1cbiAgICAgICAgICB1cHBlclBhZGRpbmdcbiAgICAgICAgICBzaWRlUGFkZGluZ1xuICAgICAgICAgIGJvdHRvbVBhZGRpbmc+XG4gICAgICAgICAgPFNlbGVjdFNlYXJjaFR5cGVcbiAgICAgICAgICAgIHR5cGU9XCJTZWxlY3RTZWFyY2hUeXBlXCJcbiAgICAgICAgICAgIGlzRWRpdGFibGVcbiAgICAgICAgICAgIHVuZGVybGluZVxuICAgICAgICAgICAgc2VhcmNoVHlwZT17c2VhcmNoVHlwZX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoX3NlYXJjaFR5cGUpID0+IHNldFNlYXJjaFR5cGUoX3NlYXJjaFR5cGUpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAge3NlYXJjaE1lbnVNZW1vfVxuICAgICAgICA8L1NlYXJjaENvbnRlbnQ+XG4gICAgICAgIDxGaXhlZEZvb3RlclxuICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cIkZpeGVkRm9vdGVyXCJcbiAgICAgICAgICBtb3V0ZWQ9e2hhbmRsZU9uRGlkTW91bnRGaXhlZEZvb3Rlcn1cbiAgICAgICAgICBib3JkZXI9XCJ0b3BsaW5lXCJcbiAgICAgICAgICB1cHBlclBhZGRpbmdcbiAgICAgICAgICBib3R0b21QYWRkaW5nPlxuICAgICAgICAgIDxCdXR0b24gZGlzYWJsZWQ9e2ZhbHNlfSB0aGVtZT17YnV0dG9uVGhlbWVCcmlnaHR9IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tDbGVhcn0gc2lkZU1hcmdpbj5cbiAgICAgICAgICAgIENMRUFSXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPEJ1dHRvbiBjbGFzc05hbWU9XCJTZWFyY2hCdXR0b25cIiBzaWRlTWFyZ2luPlxuICAgICAgICAgICAgPEFDdXN0b20gaHJlZj1cImh0dHBzOi8veWFob28uY28uanAvXCI+U0VBUkNIPC9BQ3VzdG9tPlxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L0ZpeGVkRm9vdGVyPlxuICAgICAgPC9TZWFyY2hDb250YWluZXI+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBgO1xuXG50eXBlIEJhY2tncm91bmRQcm9wc1R5cGUgPSB7XG4gIG9wZW5NZW51OiBib29sZWFuO1xuICBzaG93OiBib29sZWFuO1xufTtcblxuY29uc3QgQmFja2dyb3VuZCA9IHN0eWxlZChGbGV4KTxCYWNrZ3JvdW5kUHJvcHNUeXBlPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5zaWRlTWVudSAtIDF9O1xuICBkaXNwbGF5OiAkeyhwcm9wcykgPT4gKHByb3BzLm9wZW5NZW51ID8gJ2Jsb2NrJyA6ICdub25lJyl9O1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IHN0eWxlcy5mdWxsQmFja2dyb3VuZENvbG9yIDogJ3JnYmEoMCwwLDAsMCknKX07XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbmA7XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICBvcGVuTWVudTogYm9vbGVhbjtcbn07XG5cbmNvbnN0IFNlYXJjaENvbnRhaW5lciA9IHN0eWxlZChGbGV4KTxDb250YWluZXJQcm9wc1R5cGU+YFxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5zaWRlTWVudX07XG4gIHRvcDogJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4O1xuICBsZWZ0OiAtJHtzdHlsZXMubWVudVBjV2lkdGh9cHg7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICB3aWR0aDogJHtzdHlsZXMubWVudVBjV2lkdGh9cHg7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgbWF4LWhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgJHtzdHlsZXMuYWxwaGFCZ1NldH07XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHsocHJvcHMpID0+IChwcm9wcy5vcGVuTWVudSA/IGAke3N0eWxlcy5tZW51UGNXaWR0aH1weGAgOiAwKX0sIDBweCk7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeyhwcm9wcykgPT4gKHByb3BzLm9wZW5NZW51ID8gYCR7c3R5bGVzLm1lbnVQY1dpZHRofXB4YCA6IDApfSwgMHB4KTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIGxlZnQ6IC0xMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKCR7KHByb3BzKSA9PiAocHJvcHMub3Blbk1lbnUgPyAnMTAwJScgOiAwKX0sIDBweCk7XG4gIH1cbmA7XG5cbnR5cGUgU2VhcmNoQ29udGVudFByb3BzVHlwZSA9IHtcbiAgbWFyZ2luQm90dG9tOiBudW1iZXI7XG59O1xuXG5jb25zdCBTZWFyY2hDb250ZW50ID0gc3R5bGVkKEZsZXgpPFNlYXJjaENvbnRlbnRQcm9wc1R5cGU+YFxuICBtYXJnaW4tYm90dG9tOiAkeyhwcm9wcykgPT4gcHJvcHMubWFyZ2luQm90dG9tfXB4O1xuYDtcblxuY29uc3QgRml4ZWRGb290ZXIgPSBzdHlsZWQoRmxleGVzRm9vdGVyKWBcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDA7XG5gO1xuXG5jb25zdCBBQ3VzdG9tID0gc3R5bGVkKEEpYFxuICBjb2xvcjogI2ZmZjtcbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBTcGlubmVyIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvaWNvbi9TcGlubmVyJztcbmltcG9ydCBDaGVja21hcmsgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcvQ2hlY2ttYXJrJztcbmltcG9ydCBGbGV4LCB7XG4gIEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUsXG4gIGZsZXhMYXlvdXRQcm9wc0luaXQsXG4gIHVzZUZsZXhlc0NvbnRleHQsXG4gIEZsZXhlc0NvbnRleHRUeXBlLFxuICBCb3hMYXlvdXRQcm9wc1R5cGUsXG4gIGJveExheW91dFByb3BzSW5pdCxcbn0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgY29udGVudDogUmVhY3QuUmVhY3ROb2RlO1xuICBoZWFkZXI/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIG1lbnU/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGZvb3Rlcj86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgY29udGVudEluZGV4PzogbnVtYmVyO1xuICBpc0xvYWRpbmc/OiBib29sZWFuO1xuICBpc0NoZWNrQW5pbWF0aW9uPzogYm9vbGVhbjtcbiAgaGFuZGxlT25DaGFuZ2VDb250ZW50SW5kZXg/OiAoY29udGVudEluZGV4OiBudW1iZXIpID0+IHZvaWQ7XG4gIGhhbmRsZU9uQ2xpY2tDbG9zZT86ICgpID0+IHZvaWQ7XG59ICYgQm94TGF5b3V0UHJvcHNUeXBlICZcbiAgRmxleEJveExheW91dFByb3BzVHlwZTtcblxuY29uc3QgZGVmYXVsdE92ZXJmbG93ID0gJ2hpZGRlbiBzY3JvbGwnO1xuY29uc3Qgc3BhY2UgPSBzdHlsZXMuZG91YmxlTWFyZ2luO1xuY29uc3QgcGFydHNIZWlnaHQgPSA4MDtcbmNvbnN0IG1vZGFsQ29udGFpbmVyQ2xhc3NOYW1lID0gJ01vZGFsRnVsbCc7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBjb250ZW50T3JkZXJSZWYgPSB1c2VSZWYoPGRpdiAvPik7XG4gIGNvbnN0IGdsb2JhbENvbnRleHQ6IEZsZXhlc0NvbnRleHRUeXBlID0gdXNlRmxleGVzQ29udGV4dCgpO1xuICBjb25zdCBbY29udGVudEluZGV4LCBzZXRDb250ZW50SW5kZXhdID0gdXNlU3RhdGUocHJvcHMuY29udGVudEluZGV4ID8gcHJvcHMuY29udGVudEluZGV4IDogMCk7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmJveExheW91dFByb3BzSW5pdCxcbiAgICAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LFxuICAgIG92ZXJmbG93OiBkZWZhdWx0T3ZlcmZsb3csXG4gICAgd2lkdGg6IHN0eWxlcy5zcExheW91dFN0cmljdFdpZHRoUHgsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIGNvbnN0IG9wdGluYWxQYXJ0Q250ID0gZ2V0T3B0aW9uYWxQYXJ0c0NudChwKTtcbiAgY29uc3QgY29udGVudEhlaWdodCA9IGdldENvbnRlbnRIZWlnaHQoZ2xvYmFsQ29udGV4dCwgb3B0aW5hbFBhcnRDbnQpO1xuICBjb25zdCBpc0NvbnRlbnRMb2FkaW5nID0gcC5pc0xvYWRpbmcgfHwgKGdsb2JhbENvbnRleHQuaXNTcExheW91dCAmJiBjb250ZW50SW5kZXggPT09IDApO1xuICBjb25zdCBpc0xvYWRpbmcgPSBwLmlzTG9hZGluZyAmJiAhZ2xvYmFsQ29udGV4dC5pc1NwTGF5b3V0ICYmICFnbG9iYWxDb250ZXh0LmlzU3BMYXlvdXRTdHJpY3Q7XG4gIGNvbnN0IGhhbmRsZU9uU2Nyb2xsID0gKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB7XG4gICAgY29uc3QgZWxtID0gZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgaWYgKGVsbS5zY3JvbGxMZWZ0ID09PSAwKSB7XG4gICAgICBzZXRDb250ZW50SW5kZXgoMCk7XG4gICAgICBwLmhhbmRsZU9uQ2hhbmdlQ29udGVudEluZGV4ICYmIHAuaGFuZGxlT25DaGFuZ2VDb250ZW50SW5kZXgoMCk7XG4gICAgfSBlbHNlIGlmIChlbG0uc2Nyb2xsTGVmdCA9PT0gZWxtLnNjcm9sbFdpZHRoIC8gMikge1xuICAgICAgc2V0Q29udGVudEluZGV4KDEpO1xuICAgICAgcC5oYW5kbGVPbkNoYW5nZUNvbnRlbnRJbmRleCAmJiBwLmhhbmRsZU9uQ2hhbmdlQ29udGVudEluZGV4KDEpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChwcm9wcy5jb250ZW50SW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgc2V0Q29udGVudEluZGV4KHByb3BzLmNvbnRlbnRJbmRleCk7XG4gICAgICBpZiAocHJvcHMuY29udGVudEluZGV4ID09PSAxKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRPcmRlckVsbSA9IGNvbnRlbnRPcmRlclJlZi5jdXJyZW50IGFzIHVua25vd24gYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIGNvbnRlbnRPcmRlckVsbS5zY3JvbGxUbyh7XG4gICAgICAgICAgbGVmdDogY29udGVudE9yZGVyRWxtLnNjcm9sbFdpZHRoLFxuICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbcHJvcHMuY29udGVudEluZGV4XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyXG4gICAgICBjbGFzc05hbWU9e21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfVxuICAgICAgc2hvdz17cC5zaG93fVxuICAgICAgb25DbGljaz17KGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB7XG4gICAgICAgIGNvbnN0IGVsbSA9IGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgICBjb25zdCBpc0Nsb3NlID0gQm9vbGVhbihBcnJheS5mcm9tKGVsbS5jbGFzc0xpc3QpLmZpbmQoKGNsYXNzTmFtZSkgPT4gY2xhc3NOYW1lID09PSBtb2RhbENvbnRhaW5lckNsYXNzTmFtZSkpO1xuICAgICAgICBpZiAoaXNDbG9zZSkge1xuICAgICAgICAgIHAuaGFuZGxlT25DbGlja0Nsb3NlICYmIHAuaGFuZGxlT25DbGlja0Nsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH19PlxuICAgICAgPFNlY3Rpb25Cb2FyZCBjbGFzc05hbWU9e2Ake21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfUJvYXJkYH0gc2hvdz17cC5zaG93fSB3aWR0aD17cC53aWR0aH0+XG4gICAgICAgIHtwLmhlYWRlciAmJiAoXG4gICAgICAgICAgPEhlYWRlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1IZWFkZXJgfVxuICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJzcGFjZS1iZXR3ZWVuXCJcbiAgICAgICAgICAgIGJvcmRlcj1cInVuZGVybGluZVwiXG4gICAgICAgICAgICBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIHtwLmhlYWRlcn1cbiAgICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgKX1cbiAgICAgICAgPEJvZHlPcmRlciByZWY9e2NvbnRlbnRPcmRlclJlZn0gY2xhc3NOYW1lPVwiTW9kYWxGdWxsQm9keU9yZGVyXCIgY29udGVudEhlaWdodD17Y29udGVudEhlaWdodH0gb25TY3JvbGw9e2hhbmRsZU9uU2Nyb2xsfT5cbiAgICAgICAgICA8TWVudVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiTW9kYWxGdWxsTWVudVwiXG4gICAgICAgICAgICB3aWR0aD17YCR7c3R5bGVzLmFwcE1lbnVNaW5XaWR0aH1weGB9XG4gICAgICAgICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICAgICAgICBvdmVyZmxvdz1cImhpZGRlbiBzY3JvbGxcIlxuICAgICAgICAgICAgdXBwZXJQYWRkaW5nXG4gICAgICAgICAgICBzaWRlUGFkZGluZ1xuICAgICAgICAgICAgYm90dG9tUGFkZGluZz5cbiAgICAgICAgICAgIHtwLm1lbnV9XG4gICAgICAgICAgPC9NZW51PlxuICAgICAgICAgIDxDb250ZW50IGNsYXNzTmFtZT1cIk1vZGFsRnVsbENvbnRlbnRcIiB3aWR0aD1cIjEwMCVcIiBmbG93PVwicm93IG5vd3JhcFwiIG92ZXJmbG93PVwiaGlkZGVuIHNjcm9sbFwiIGJvcmRlcj1cImxlZnRsaW5lXCI+XG4gICAgICAgICAgICB7aXNDb250ZW50TG9hZGluZyA/IChcbiAgICAgICAgICAgICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIiB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgPFNwaW5uZXIgLz5cbiAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgcC5jb250ZW50XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvQ29udGVudD5cbiAgICAgICAgPC9Cb2R5T3JkZXI+XG4gICAgICAgIHtwLmZvb3RlciAmJiAoXG4gICAgICAgICAgPEZvb3RlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Gb290ZXJgfVxuICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgICAgYm9yZGVyPVwidG9wbGluZVwiXG4gICAgICAgICAgICBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIHtwLmZvb3Rlcn1cbiAgICAgICAgICA8L0Zvb3Rlcj5cbiAgICAgICAgKX1cbiAgICAgIDwvU2VjdGlvbkJvYXJkPlxuICAgICAge3AuaXNDaGVja0FuaW1hdGlvbiAmJiA8Q2hlY2ttYXJrIC8+fVxuICAgICAgey8qIGlzTG9hZGluZyAmJiA8U3ZnLkxvYXJkaW5nIC8+Ki99XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29udGFpbmVyVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxDb250YWluZXJUeXBlUHJvcHM+YFxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtzdHlsZXMuZnVsbEJhY2tncm91bmRDb2xvcn07XG4gIHotaW5kZXg6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IDEwMDAgOiAtMSl9O1xuICBvcGFjaXR5OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxIDogMCl9O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbmA7XG5cbnR5cGUgU2VjdGlvbkJvYXJkVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB3aWR0aDogc3RyaW5nO1xufTtcblxuY29uc3QgU2VjdGlvbkJvYXJkID0gc3R5bGVkLnNlY3Rpb248U2VjdGlvbkJvYXJkVHlwZVByb3BzPmBcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiAocHJvcHMud2lkdGggPyBwcm9wcy53aWR0aCA6ICdmaXQtY29udGVudCcpfTtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aH1weDtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtICR7c3BhY2UgKiAyfXB4KTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAke3NwYWNlfXB4O1xuICAke3N0eWxlcy5hbHBoYUJnU2V0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYm9yZGVyUmFkaXVzfXB4O1xuICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQmFzZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAwIDogYCR7c3R5bGVzLmJhc2VTaXplICogMn1weGApfSk7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgbWF4LWhlaWdodDogbm9uZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG5gO1xuXG5jb25zdCBIZWFkZXIgPSBzdHlsZWQoRmxleClgXG4gIGhlaWdodDogJHtwYXJ0c0hlaWdodH1weDtcbmA7XG5cbnR5cGUgQm9keU9yZGVyUHJvcHNUeXBlID0ge1xuICByZWY6IGFueTtcbiAgY29udGVudEhlaWdodDogc3RyaW5nO1xufSAmIEZsZXhCb3hMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IEJvZHlPcmRlciA9IHN0eWxlZC5vbDxCb2R5T3JkZXJQcm9wc1R5cGU+YFxuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5jb250ZW50SGVpZ2h0fTtcbiAgbWluLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmNvbnRlbnRIZWlnaHR9O1xuICBtYXgtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuY29udGVudEhlaWdodH07XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBvdmVyZmxvdzogc2Nyb2xsIGhpZGRlbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHNjcm9sbC1zbmFwLXR5cGU6IHggbWFuZGF0b3J5O1xuICB9XG5gO1xuXG5jb25zdCBNZW51ID0gc3R5bGVkKEZsZXgpPEZsZXhCb3hMYXlvdXRQcm9wc1R5cGU+YFxuICB3aWR0aDogJHsocHJvcHMpID0+IHByb3BzLndpZHRofTtcbiAgbWluLXdpZHRoOiAkeyhwcm9wcykgPT4gcHJvcHMud2lkdGh9O1xuICBtYXgtd2lkdGg6ICR7KHByb3BzKSA9PiBwcm9wcy53aWR0aH07XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBzY3JvbGwtc25hcC1hbGlnbjogc3RhcnQ7XG4gIH1cbmA7XG5cbnR5cGUgQ29udGVudFByb3BzVHlwZSA9IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQoRmxleCk8Q29udGVudFByb3BzVHlwZT5gXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBzY3JvbGwtc25hcC1hbGlnbjogc3RhcnQ7XG4gIH1cbmA7XG5cbmNvbnN0IEZvb3RlciA9IHN0eWxlZChGbGV4KWBcbiAgaGVpZ2h0OiAke3BhcnRzSGVpZ2h0fXB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206IDA7XG4gIH1cbmA7XG5cbmNvbnN0IGdldE9wdGlvbmFsUGFydHNDbnQgPSAocDogUHJvcHMpID0+IHtcbiAgbGV0IG9wdGluYWxQYXJ0Q250ID0gMDtcbiAgQm9vbGVhbihwLmhlYWRlcikgJiYgb3B0aW5hbFBhcnRDbnQrKztcbiAgQm9vbGVhbihwLmZvb3RlcikgJiYgb3B0aW5hbFBhcnRDbnQrKztcbiAgcmV0dXJuIG9wdGluYWxQYXJ0Q250O1xufTtcblxuY29uc3QgZ2V0Q29udGVudEhlaWdodCA9IChnbG9iYWxDb250ZXh0OiBGbGV4ZXNDb250ZXh0VHlwZSwgb3B0aW5hbFBhcnRDbnQpID0+IHtcbiAgY29uc3QgYWRkU3BhY2UgPSBnbG9iYWxDb250ZXh0LmlzU3BMYXlvdXRTdHJpY3QgPyAwIDogc3BhY2U7XG4gIHJldHVybiBgJHtnbG9iYWxDb250ZXh0LmlubmVySGVpZ2h0IC0gKHBhcnRzSGVpZ2h0ICsgYWRkU3BhY2UpICogb3B0aW5hbFBhcnRDbnR9cHhgO1xufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBGbGV4LCB7IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUsIGZsZXhMYXlvdXRQcm9wc0luaXQsIEJveExheW91dFByb3BzVHlwZSwgYm94TGF5b3V0UHJvcHNJbml0IH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgY2xvc2VNb2RhbDogKCkgPT4gdm9pZDtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0gJiBCb3hMYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBtb2RhbENvbnRhaW5lckNsYXNzTmFtZSA9ICdNb2RhbENvbnRhaW5lcic7XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHsgLi4uYm94TGF5b3V0UHJvcHNJbml0LCAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LCB3aWR0aDogc3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGhQeCwgLi4ucHJvcHMgfTtcbiAgY29uc3QgaGFuZGxlT25DbGljayA9IChlKSA9PiB7XG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKG1vZGFsQ29udGFpbmVyQ2xhc3NOYW1lKSA+PSAwKSB7XG4gICAgICBwLmNsb3NlTW9kYWwoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT17bW9kYWxDb250YWluZXJDbGFzc05hbWV9IHNob3c9e3Auc2hvd30gb25DbGljaz17aGFuZGxlT25DbGlja30gb25UcmFuc2l0aW9uRW5kPXsoKSA9PiB7fX0+XG4gICAgICA8Qm9hcmQgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Cb2FyZGB9IHNob3c9e3Auc2hvd30gd2lkdGg9e3Aud2lkdGh9PlxuICAgICAgICA8RmxleCBjbGFzc05hbWU9e2Ake21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfUZsZXhgfSBmbG93PXtwLmZsb3d9PlxuICAgICAgICAgIHtwLmNoaWxkcmVufVxuICAgICAgICA8L0ZsZXg+XG4gICAgICA8L0JvYXJkPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGVQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8Q29udGFpbmVyVHlwZVByb3BzPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwLCAwLjMpO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAwIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG5gO1xuXG50eXBlIEJvYXJkVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB3aWR0aDogc3RyaW5nO1xufTtcblxuY29uc3QgQm9hcmQgPSBzdHlsZWQuc2VjdGlvbjxCb2FyZFR5cGVQcm9wcz5gXG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gKHByb3BzLndpZHRoID8gcHJvcHMud2lkdGggOiAnZml0LWNvbnRlbnQnKX07XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICAke3N0eWxlcy5hbHBoYUJnU2V0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYm9yZGVyUmFkaXVzfXB4O1xuICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQmFzZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAwIDogYCR7c3R5bGVzLmJhc2VTaXplICogMn1weGApfSk7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHtcbiAgRmxleEJveExheW91dFByb3BzVHlwZSxcbiAgZmxleExheW91dFByb3BzSW5pdCxcbiAgQm94TGF5b3V0UHJvcHNUeXBlLFxuICBib3hMYXlvdXRQcm9wc0luaXQsXG4gIHVzZUZsZXhlc0NvbnRleHQsXG4gIEZsZXhlc0NvbnRleHRUeXBlLFxufSBmcm9tICdjb3Zlci9mbGV4ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICBjbG9zZU1vZGFsOiAoKSA9PiB2b2lkO1xuICBoZWFkZXI/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNvbnRlbnQ6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgZm9vdGVyPzogUmVhY3QuUmVhY3ROb2RlO1xuICBmdWxsSGVpZ2h0PzogYm9vbGVhbjtcbn0gJiBCb3hMYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBkZWZhdWx0T3ZlcmZsb3cgPSAnaGlkZGVuIHNjcm9sbCc7XG5jb25zdCBzcGFjZSA9IHN0eWxlcy5kb3VibGVNYXJnaW47XG5jb25zdCBwYXJ0c0hlaWdodCA9IDgwO1xuY29uc3QgbW9kYWxDb250YWluZXJDbGFzc05hbWUgPSAnTW9kYWxDb250YWluZXInO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgZ2xvYmFsQ29udGV4dDogRmxleGVzQ29udGV4dFR5cGUgPSB1c2VGbGV4ZXNDb250ZXh0KCk7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmJveExheW91dFByb3BzSW5pdCxcbiAgICAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LFxuICAgIG92ZXJmbG93OiBkZWZhdWx0T3ZlcmZsb3csXG4gICAgd2lkdGg6IHN0eWxlcy5zcExheW91dFN0cmljdFdpZHRoUHgsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIGNvbnN0IG9wdGluYWxQYXJ0Q250ID0gZ2V0T3B0aW9uYWxQYXJ0c0NudChwKTtcblxuICByZXR1cm4gKFxuICAgIDxDb250YWluZXJcbiAgICAgIGNsYXNzTmFtZT17bW9kYWxDb250YWluZXJDbGFzc05hbWV9XG4gICAgICBzaG93PXtwLnNob3d9XG4gICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgIHdpZHRoPVwiMTAwdndcIlxuICAgICAgaGVpZ2h0PVwiMTAwdmhcIlxuICAgICAgb25DbGljaz17KGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB7XG4gICAgICAgIGNvbnN0IGVsbSA9IGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgICAgICBjb25zdCBpc0Nsb3NlID0gQm9vbGVhbihBcnJheS5mcm9tKGVsbS5jbGFzc0xpc3QpLmZpbmQoKGNsYXNzTmFtZSkgPT4gY2xhc3NOYW1lID09PSBtb2RhbENvbnRhaW5lckNsYXNzTmFtZSkpO1xuICAgICAgICBpZiAoaXNDbG9zZSkge1xuICAgICAgICAgIHAuY2xvc2VNb2RhbCgpO1xuICAgICAgICB9XG4gICAgICB9fT5cbiAgICAgIDxTZWN0aW9uQm9hcmQgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Cb2FyZGB9IHNob3c9e3Auc2hvd30gd2lkdGg9e3Aud2lkdGh9PlxuICAgICAgICB7cC5oZWFkZXIgJiYgKFxuICAgICAgICAgIDxIZWFkZXJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17YCR7bW9kYWxDb250YWluZXJDbGFzc05hbWV9SGVhZGVyYH1cbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJmbGV4LXN0YXJ0XCJcbiAgICAgICAgICAgIGJvcmRlcj1cInVuZGVybGluZVwiXG4gICAgICAgICAgICBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIHtwLmhlYWRlcn1cbiAgICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgKX1cbiAgICAgICAgPENvbnRlbnRcbiAgICAgICAgICBjbGFzc05hbWU9e2Ake21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfUNvbnRlbnRgfVxuICAgICAgICAgIGZsb3c9e3AuZmxvd31cbiAgICAgICAgICB3aW5kb3dJbm5lckhlaWdodD17Z2xvYmFsQ29udGV4dC5pbm5lckhlaWdodH1cbiAgICAgICAgICBmdWxsSGVpZ2h0PXtwLmZ1bGxIZWlnaHR9XG4gICAgICAgICAgb3B0aW5hbFBhcnRDbnQ9e29wdGluYWxQYXJ0Q250fVxuICAgICAgICAgIG92ZXJmbG93PXtwLm92ZXJmbG93fVxuICAgICAgICAgIHVwcGVyUGFkZGluZ1xuICAgICAgICAgIHNpZGVQYWRkaW5nXG4gICAgICAgICAgYm90dG9tUGFkZGluZz5cbiAgICAgICAgICB7cC5jb250ZW50fVxuICAgICAgICA8L0NvbnRlbnQ+XG4gICAgICAgIHtwLmZvb3RlciAmJiAoXG4gICAgICAgICAgPEZvb3RlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Gb290ZXJgfVxuICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgICAgYm9yZGVyPVwidG9wbGluZVwiXG4gICAgICAgICAgICBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIHtwLmZvb3Rlcn1cbiAgICAgICAgICA8L0Zvb3Rlcj5cbiAgICAgICAgKX1cbiAgICAgIDwvU2VjdGlvbkJvYXJkPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGVQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KTxDb250YWluZXJUeXBlUHJvcHM+YFxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCwgMC4zKTtcbiAgei1pbmRleDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMTAwMCA6IC0xKX07XG4gIG9wYWNpdHk6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IDEgOiAwKX07XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuYDtcblxudHlwZSBCb2FyZFR5cGVQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgd2lkdGg6IHN0cmluZztcbn07XG5cbmNvbnN0IFNlY3Rpb25Cb2FyZCA9IHN0eWxlZC5zZWN0aW9uPEJvYXJkVHlwZVByb3BzPmBcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiAocHJvcHMud2lkdGggPyBwcm9wcy53aWR0aCA6ICdmaXQtY29udGVudCcpfTtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgbWF4LWhlaWdodDogY2FsYygxMDB2aCAtICR7c3BhY2UgKiAyfXB4KTtcbiAgcGFkZGluZzogMCAke3NwYWNlfXB4O1xuICBtYXJnaW46ICR7c3BhY2V9cHg7XG4gICR7c3R5bGVzLmFscGhhQmdTZXR9O1xuICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5ib3JkZXJSYWRpdXN9cHg7XG4gIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CYXNlfTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IDAgOiBgJHtzdHlsZXMuYmFzZVNpemUgKiAyfXB4YCl9KTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBtYXgtaGVpZ2h0OiBub25lO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChGbGV4KWBcbiAgaGVpZ2h0OiAke3BhcnRzSGVpZ2h0fXB4O1xuYDtcblxudHlwZSBDb250ZW50UHJvcHNUeXBlID0ge1xuICB3aW5kb3dJbm5lckhlaWdodDogbnVtYmVyO1xuICBvcHRpbmFsUGFydENudDogbnVtYmVyO1xuICBvdmVyZmxvdzogc3RyaW5nO1xuICBmdWxsSGVpZ2h0PzogYm9vbGVhbjtcbn0gJiBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb250ZW50ID0gc3R5bGVkKEZsZXgpPENvbnRlbnRQcm9wc1R5cGU+YFxuICBvdmVyZmxvdzogJHsocHJvcHMpID0+IHByb3BzLm92ZXJmbG93fTtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5mdWxsSGVpZ2h0ID8gJ2hlaWdodDogMTAwdmgnIDogJycpfTtcbiAgbWF4LWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLndpbmRvd0lubmVySGVpZ2h0IC0gKHBhcnRzSGVpZ2h0ICsgc3BhY2UpICogcHJvcHMub3B0aW5hbFBhcnRDbnR9cHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgbWF4LWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLndpbmRvd0lubmVySGVpZ2h0IC0gcGFydHNIZWlnaHQgKiBwcm9wcy5vcHRpbmFsUGFydENudH1weDtcbiAgfVxuYDtcblxuY29uc3QgRm9vdGVyID0gc3R5bGVkKEZsZXgpYFxuICBoZWlnaHQ6ICR7cGFydHNIZWlnaHR9cHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJvdHRvbTogMDtcbiAgfVxuYDtcblxuY29uc3QgZ2V0T3B0aW9uYWxQYXJ0c0NudCA9IChwOiBQcm9wcykgPT4ge1xuICBsZXQgb3B0aW5hbFBhcnRDbnQgPSAwO1xuICBCb29sZWFuKHAuaGVhZGVyKSAmJiBvcHRpbmFsUGFydENudCsrO1xuICBCb29sZWFuKHAuZm9vdGVyKSAmJiBvcHRpbmFsUGFydENudCsrO1xuICByZXR1cm4gb3B0aW5hbFBhcnRDbnQ7XG59O1xuXG5jb25zdCBnZXRDb250ZW50SGVpZ2h0ID0gKHdpbmRvd0lubmVySGVpZ2h0LCBvcHRpbmFsUGFydENudCkgPT4ge1xuICByZXR1cm4gYCR7d2luZG93SW5uZXJIZWlnaHQgLSAocGFydHNIZWlnaHQgKyBzcGFjZSkgKiBvcHRpbmFsUGFydENudH1weGA7XG59O1xuIiwiaW1wb3J0IE1vZGFsRnVsbCBmcm9tICcuL01vZGFsRnVsbCc7XG5pbXBvcnQgTW9kYWxQbGFpbiBmcm9tICcuL01vZGFsUGxhaW4nO1xuaW1wb3J0IE1vZGFsU3RydWN0dXJlIGZyb20gJy4vTW9kYWxTdHJ1Y3R1cmUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFBsYWluOiBNb2RhbFBsYWluLFxuICBTdHJ1Y3R1cmU6IE1vZGFsU3RydWN0dXJlLFxuICBGdWxsOiBNb2RhbEZ1bGwsXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoOiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IGNoIH06IFByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIDxUd2l0dGVyIGNsYXNzTmFtZT1cInR3aXR0ZXJcIj5cbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9zaGFyZT9yZWZfc3JjPXR3c3JjJTVFdGZ3JnVybD1odHRwczovL2NvdmVyLnRhbGtuLmlvL3d3dy5zdW5icmlkZ2UuY29tL1wiXG4gICAgICAgICAgY2xhc3NOYW1lPVwidHdpdHRlci1zaGFyZS1idXR0b25cIlxuICAgICAgICAgIGRhdGEtc2hvdy1jb3VudD1cImZhbHNlXCI+XG4gICAgICAgICAgPFR3aXR0ZXJJY29uIC8+XG4gICAgICAgICAgVHdlZXRcbiAgICAgICAgPC9hPlxuICAgICAgICA8c2NyaXB0IGFzeW5jIHNyYz1cImh0dHBzOi8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qc1wiIGNoYXJTZXQ9XCJ1dGYtOFwiPjwvc2NyaXB0PlxuICAgICAgPC9Ud2l0dGVyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmYWNlYm9va1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZiLXNoYXJlLWJ1dHRvblwiIGRhdGEtaHJlZj17YGh0dHBzOi8vY292ZXIudGFsa24uaW8ke2NofWB9IGRhdGEtbGF5b3V0PVwiYnV0dG9uX2NvdW50XCIgZGF0YS1zaXplPVwibGFyZ2VcIj5cbiAgICAgICAgICA8YVxuICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgICAgICAgIGhyZWY9e2BodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT1odHRwczovL2NvdmVyLnRhbGtuLmlvJHtjaH07c3JjPXNka3ByZXBhcnNlYH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImZiLXhmYm1sLXBhcnNlLWlnbm9yZVwiXG4gICAgICAgICAgICByZWw9XCJub3JlZmVycmVyXCI+XG4gICAgICAgICAgICBTaGFyZVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG5gO1xuXG5jb25zdCBUd2l0dGVyID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogNXB4IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgYmFja2dyb3VuZDogIzFkYTFmMjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBpIHtcbiAgICBtYXJnaW4tdG9wOiAycHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIH1cbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuYDtcblxuY29uc3QgVHdpdHRlckljb24gPSBzdHlsZWQuaWBcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGJhY2tncm91bmQ6IHVybChkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnJTIweG1sbnMlM0QlMjJodHRwJTNBJTJGJTJGd3d3LnczLm9yZyUyRjIwMDAlMkZzdmclMjIlMjB2aWV3Qm94JTNEJTIyMCUyMDAlMjA3MiUyMDcyJTIyJTNFJTNDcGF0aCUyMGZpbGwlM0QlMjJub25lJTIyJTIwZCUzRCUyMk0wJTIwMGg3MnY3MkgweiUyMiUyRiUzRSUzQ3BhdGglMjBjbGFzcyUzRCUyMmljb24lMjIlMjBmaWxsJTNEJTIyJTIzZmZmJTIyJTIwZCUzRCUyMk02OC44MTIlMjAxNS4xNGMtMi4zNDglMjAxLjA0LTQuODclMjAxLjc0NC03LjUyJTIwMi4wNiUyMDIuNzA0LTEuNjIlMjA0Ljc4LTQuMTg2JTIwNS43NTctNy4yNDMtMi41MyUyMDEuNS01LjMzJTIwMi41OTItOC4zMTQlMjAzLjE3NkM1Ni4zNSUyMDEwLjU5JTIwNTIuOTQ4JTIwOSUyMDQ5LjE4MiUyMDljLTcuMjMlMjAwLTEzLjA5MiUyMDUuODYtMTMuMDkyJTIwMTMuMDkzJTIwMCUyMDEuMDI2LjExOCUyMDIuMDIuMzM4JTIwMi45OEMyNS41NDMlMjAyNC41MjclMjAxNS45JTIwMTkuMzE4JTIwOS40NCUyMDExLjM5NmMtMS4xMjUlMjAxLjkzNi0xLjc3JTIwNC4xODQtMS43NyUyMDYuNTglMjAwJTIwNC41NDMlMjAyLjMxMiUyMDguNTUyJTIwNS44MjQlMjAxMC45LTIuMTQ2LS4wNy00LjE2NS0uNjU4LTUuOTMtMS42NC0uMDAyLjA1Ni0uMDAyLjExLS4wMDIuMTYzJTIwMCUyMDYuMzQ1JTIwNC41MTMlMjAxMS42MzglMjAxMC41MDQlMjAxMi44NC0xLjEuMjk4LTIuMjU2LjQ1Ny0zLjQ1LjQ1Ny0uODQ1JTIwMC0xLjY2Ni0uMDc4LTIuNDY0LS4yMyUyMDEuNjY3JTIwNS4yJTIwNi41JTIwOC45ODUlMjAxMi4yMyUyMDkuMDktNC40ODIlMjAzLjUxLTEwLjEzJTIwNS42MDUtMTYuMjYlMjA1LjYwNS0xLjA1NSUyMDAtMi4wOTYtLjA2LTMuMTIyLS4xODQlMjA1Ljc5NCUyMDMuNzE3JTIwMTIuNjc2JTIwNS44ODIlMjAyMC4wNjclMjA1Ljg4MiUyMDI0LjA4MyUyMDAlMjAzNy4yNS0xOS45NSUyMDM3LjI1LTM3LjI1JTIwMC0uNTY1LS4wMTMtMS4xMzMtLjAzOC0xLjY5MyUyMDIuNTU4LTEuODQ3JTIwNC43NzgtNC4xNSUyMDYuNTMyLTYuNzc0eiUyMiUyRiUzRSUzQyUyRnN2ZyUzRSk7XG4gIG1pbi13aWR0aDogMTRweDtcbiAgbWluLWhlaWdodDogMTRweDtcbiAgd2lkdGg6IDE0cHg7XG4gIGhlaWdodDogMTRweDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5pbXBvcnQgdXRpbCBmcm9tICdjb21tb24vdXRpbCc7XG5cbmltcG9ydCBDaGVja21hcmsgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcvQ2hlY2ttYXJrJztcbmltcG9ydCBGbGV4LCB7IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUsIHVzZUZsZXhlc0NvbnRleHQsIEZsZXhlc0NvbnRleHRUeXBlIH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCB7IEdvb2dsZVNlc3Npb25UeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvR29vZ2xlJztcbmltcG9ydCBVc2VyLCB7IFVzZXJIYXNTZWxmVGFnc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC9Vc2VyJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuZXhwb3J0IGNvbnN0IGxheW91dFRvcCA9ICd0b3AnO1xuZXhwb3J0IGNvbnN0IGxheW91dFNlYXJjaCA9ICdzZWFyY2gnO1xuZXhwb3J0IGNvbnN0IGxheW91dERlZmF1bHQgPSBsYXlvdXRUb3A7XG5leHBvcnQgdHlwZSBMYXlvdXRUeXBlID0gdHlwZW9mIGxheW91dFRvcCB8IHR5cGVvZiBsYXlvdXRTZWFyY2g7XG5cbmV4cG9ydCBjb25zdCBob3ZlckFuaW1hdGlvbkJveFNoYWRvdyA9ICdzaGFkb3cnO1xuZXhwb3J0IGNvbnN0IGhvdmVyQW5pbWF0aW9uQmx1ciA9ICdibHVyJztcbmV4cG9ydCBjb25zdCBob3ZlckFuaW1hdGlvbkRlZmF1bHQgPSBob3ZlckFuaW1hdGlvbkJsdXI7XG5leHBvcnQgdHlwZSBIb3ZlckFuaW1hdGlvblR5cGUgPSB0eXBlb2YgaG92ZXJBbmltYXRpb25Cb3hTaGFkb3cgfCB0eXBlb2YgaG92ZXJBbmltYXRpb25CbHVyO1xuXG5jb25zdCBNYXJrOiBSZWFjdC5GQzx7IGxhYmVsOiBzdHJpbmcgfT4gPSAoeyBsYWJlbCB9KSA9PiA8TWFya0NvbnRhaW5lciBjbGFzc05hbWU9XCJtYXJrXCI+e2xhYmVsfTwvTWFya0NvbnRhaW5lcj47XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgdXNlcj86IFVzZXI7XG4gIGxheW91dD86IExheW91dFR5cGU7XG4gIGlzU2F2ZWRBbmltYXRpb24/OiBib29sZWFuO1xuICBob3ZlckFuaW1hdGlvblR5cGU/OiBIb3ZlckFuaW1hdGlvblR5cGU7XG4gIGZ1bGxXaWR0aD86IGJvb2xlYW47XG4gIGhhbmRsZU9uQ2xpY2s/OiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBjbGFzc05hbWUgPSAnVXNlckNvbnRlbnQnLFxuICB1c2VyLFxuICBsYXlvdXQgPSBsYXlvdXREZWZhdWx0LFxuICBpc1NhdmVkQW5pbWF0aW9uLFxuICBob3ZlckFuaW1hdGlvblR5cGUgPSBob3ZlckFuaW1hdGlvbkRlZmF1bHQsXG4gIGZ1bGxXaWR0aCA9IHRydWUsXG4gIGhhbmRsZU9uQ2xpY2ssXG59KSA9PiB7XG4gIGNvbnN0IHsgaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHQgfTogRmxleGVzQ29udGV4dFR5cGUgPSB1c2VGbGV4ZXNDb250ZXh0KCk7XG4gIGNvbnN0IFtpc0hvdmVyLCBzZXRJc0hvdmVyXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2RpZE1vdW50LCBzZXREaWRNb3VudF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGNvbnRyb2xIZWlnaHQgPSBnZXRDb250cm9sSGVpZ2h0KGlubmVyV2lkdGgsIGlubmVySGVpZ2h0KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldERpZE1vdW50KHRydWUpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJhY2tncm91bmRcbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgICAgIGlkPXt1c2VyLmlkfVxuICAgICAgICBpbWFnZT17dXNlci5iZ31cbiAgICAgICAgaXNIb3Zlcj17aXNIb3Zlcn1cbiAgICAgICAgaG92ZXJBbmltYXRpb25UeXBlPXtob3ZlckFuaW1hdGlvblR5cGV9XG4gICAgICAgIGNvbnRyb2xIZWlnaHQ9e2NvbnRyb2xIZWlnaHR9XG4gICAgICAgIGZ1bGxXaWR0aD17ZnVsbFdpZHRofVxuICAgICAgICBwb2ludGVyXG4gICAgICAgIG92ZXJmbG93PVwiaGlkZGVuXCJcbiAgICAgICAgZmxvdz1cInJvdyBub3dyYXBcIlxuICAgICAgICBhbGlnbkl0ZW1zPVwiZmxleC1zdGFydFwiXG4gICAgICAgIGp1c3RpZnlDb250ZW50PVwiZmxleC1zdGFydFwiXG4gICAgICAvPlxuICAgICAge2RpZE1vdW50ICYmIChcbiAgICAgICAgPEJvZHlcbiAgICAgICAgICBjbGFzc05hbWU9XCJVc2VyQ29udGVudEJvZHlcIlxuICAgICAgICAgIG9uTW91c2VPdmVyPXsoKSA9PiBzZXRJc0hvdmVyKHRydWUpfVxuICAgICAgICAgIG9uTW91c2VMZWF2ZT17KCkgPT4gc2V0SXNIb3ZlcihmYWxzZSl9XG4gICAgICAgICAgaXNIb3Zlcj17aXNIb3Zlcn1cbiAgICAgICAgICBob3ZlckFuaW1hdGlvblR5cGU9e2hvdmVyQW5pbWF0aW9uVHlwZX1cbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrICYmIGhhbmRsZU9uQ2xpY2t9XG4gICAgICAgICAgZnVsbFdpZHRoPXtmdWxsV2lkdGh9XG4gICAgICAgICAgcG9pbnRlclxuICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgICAgICBjb250cm9sSGVpZ2h0PXtjb250cm9sSGVpZ2h0fT5cbiAgICAgICAgICA8UHJvZmlsZUNvbnRlbnRcbiAgICAgICAgICAgIGNsYXNzTmFtZT17YFByb2ZpbGVDb250ZW50ICR7bGF5b3V0fWB9XG4gICAgICAgICAgICBmbG93PVwicm93IHdyYXBcIlxuICAgICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudD1cImZsZXgtc3RhcnRcIlxuICAgICAgICAgICAgaWQ9e3VzZXIuaWR9XG4gICAgICAgICAgICBpbWFnZT17dXNlci5pY29ufT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXNlckljb25cIiAvPlxuICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwidXNlckRhdGFXcmFwXCIgZmxvdz1cImNvbHVtbiBub3dyYXBcIj5cbiAgICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwidXNlckRhdGFcIiBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFtZVwiPnt1c2VyLm5hbWV9PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhZ2VcIj5BR0U6IHt1dGlsLmdldEFnZUJ5QmlydGhkYXkodXNlci5iaXJ0aGRheSl9PC9kaXY+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwidXNlckRldGFpbERhdGFcIiBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT1cInVzZXJUYWdzXCIgZmxvdz1cInJvdyB3cmFwXCIgdXBwZXJNYXJnaW4+XG4gICAgICAgICAgICAgICAgICB7T2JqZWN0LmtleXModXNlci5oYXNTZWxmVGFncykubWFwKChrZXkpID0+IHVzZXIuaGFzU2VsZlRhZ3Nba2V5XSAmJiA8TWFyayBrZXk9e2tleX0gbGFiZWw9e3V0aWwuZ2V0SGVhZFVwcGVyKGtleSl9IC8+KX1cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwic2VsZkludHJvXCIgZmxvdz1cInJvdyB3cmFwXCIgdXBwZXJNYXJnaW4+XG4gICAgICAgICAgICAgICAgICB7dXNlci5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgICA8L1Byb2ZpbGVDb250ZW50PlxuICAgICAgICAgIHtpc1NhdmVkQW5pbWF0aW9uICYmIDxDaGVja21hcmsgLz59XG4gICAgICAgIDwvQm9keT5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQmFja2dyb3VuZFByb3BzVHlwZSA9IHtcbiAgaWQ6IHN0cmluZztcbiAgaXNIb3ZlcjogYm9vbGVhbjtcbiAgaG92ZXJBbmltYXRpb25UeXBlOiBIb3ZlckFuaW1hdGlvblR5cGU7XG4gIGNvbnRyb2xIZWlnaHQ6IG51bWJlcjtcbiAgZnVsbFdpZHRoOiBib29sZWFuO1xuICBpbWFnZT86IHN0cmluZztcbn07XG5cbmNvbnN0IEJhY2tncm91bmQgPSBzdHlsZWQoRmxleCk8QmFja2dyb3VuZFByb3BzVHlwZT5gXG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gKHByb3BzLmZ1bGxXaWR0aCA/IGAke3N0eWxlcy5leWVDYXRjaFZ3VmFsdWV9dndgIDogJzEwMCUnKX07XG4gIGhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmNvbnRyb2xIZWlnaHR9cHg7XG4gIG1pbi1oZWlnaHQ6ICR7c3R5bGVzLmV5ZUNhdGNoTWluSGVpZ2h0UHhWYWx1ZX1weDtcbiAgbWF4LWhlaWdodDogJHtzdHlsZXMuZXllQ2F0Y2hNaW5IZWlnaHRQeFZhbHVlfXB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiAkeyhwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEltYWdlKHsgaWQ6IHByb3BzLmlkLCBpbWFnZTogcHJvcHMuaW1hZ2UgfSl9O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGNvbG9yOiAke3N0eWxlcy53aGl0ZUNvbG9yfTtcbiAgb3BhY2l0eTogMTtcbiAgYm94LXNoYWRvdzogJHsocHJvcHMpID0+IGdldEJveFNoYWRvdyhwcm9wcyl9O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IGdldEJhY2tncm91bmRUcmFuc2Zvcm0ocHJvcHMpfTtcbiAgOmJlZm9yZSB7XG4gICAgJHtzdHlsZXMuYmVmb3JlQmx1cn07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgaGVpZ2h0OiAke3N0eWxlcy5leWVDYXRjaFZoVmFsdWV9dmg7XG4gICAgbWluLWhlaWdodDogdW5zZXQ7XG4gIH1cbmA7XG5cbnR5cGUgQm9keVByb3BzVHlwZSA9IHtcbiAgaXNIb3ZlcjogYm9vbGVhbjtcbiAgaG92ZXJBbmltYXRpb25UeXBlOiBIb3ZlckFuaW1hdGlvblR5cGU7XG4gIGNvbnRyb2xIZWlnaHQ6IG51bWJlcjtcbiAgZnVsbFdpZHRoOiBib29sZWFuO1xuICBvbk1vdXNlT3ZlcjogKCkgPT4gdm9pZDtcbiAgb25Nb3VzZUxlYXZlOiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQm9keSA9IHN0eWxlZChGbGV4KTxCb2R5UHJvcHNUeXBlPmBcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiAocHJvcHMuZnVsbFdpZHRoID8gYCR7c3R5bGVzLmV5ZUNhdGNoVndWYWx1ZX12d2AgOiAnMTAwJScpfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuY29udHJvbEhlaWdodH1weDtcbiAgbWluLWhlaWdodDogJHtzdHlsZXMuZXllQ2F0Y2hNaW5IZWlnaHRQeFZhbHVlfXB4O1xuICBtYXJnaW4tdG9wOiAtJHsocHJvcHMpID0+IHByb3BzLmNvbnRyb2xIZWlnaHR9cHg7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5leWVDYXRjaH07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2Ryb3AtZmlsdGVyOiAkeyhwcm9wcykgPT4gZ2V0QmFja2Ryb3BGaWx0ZXIocHJvcHMpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kVHJhbnNmb3JtKHByb3BzKX07XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6ICR7c3R5bGVzLmV5ZUNhdGNoVmhWYWx1ZX12aDtcbiAgICBtaW4taGVpZ2h0OiB1bnNldDtcbiAgfVxuYDtcblxudHlwZSBQcm9maWxlQ29udGVudFByb3BzVHlwZSA9IHtcbiAgaWQ6IHN0cmluZztcbiAgaW1hZ2U6IHN0cmluZztcbn0gJiBGbGV4Qm94TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBQcm9maWxlQ29udGVudCA9IHN0eWxlZChGbGV4KTxQcm9maWxlQ29udGVudFByb3BzVHlwZT5gXG4gIHdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IHVuc2V0O1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuICBjb2xvcjogJHtzdHlsZXMud2hpdGVDb2xvcn07XG4gIC51c2VyRGF0YVdyYXAge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG4gIC51c2VySWNvbiB7XG4gICAgZmxleDogMSAxIDEyMHB4O1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICBtaW4td2lkdGg6IDEyMHB4O1xuICAgIG1heC13aWR0aDogMTIwcHg7XG4gICAgaGVpZ2h0OiAxMjBweDtcbiAgICBtaW4taGVpZ2h0OiAxMjBweDtcbiAgICBtYXgtaGVpZ2h0OiAxMjBweDtcbiAgICBtYXJnaW46IDAgMzBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6ICR7KHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kSW1hZ2UoeyBpZDogcHJvcHMuaWQsIGltYWdlOiBwcm9wcy5pbWFnZSB9KX07XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxuICAubmFtZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDE3NSU7XG4gIH1cbiAgLmFnZSB7XG4gICAgbWFyZ2luLXRvcDogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIC51c2VySWNvbiB7XG4gICAgICBtYXJnaW46IDAgMzBweDtcbiAgICB9XG4gICAgLm5hbWUge1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTUwJTtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgLnVzZXJEYXRhV3JhcCB7XG4gICAgICBkaXNwbGF5OiBjb250ZW50cztcbiAgICB9XG4gICAgLnVzZXJJY29uIHtcbiAgICAgIGZsZXg6IDEgMSA2MHB4O1xuICAgICAgd2lkdGg6IDYwcHg7XG4gICAgICBtaW4td2lkdGg6IDYwcHg7XG4gICAgICBtYXgtd2lkdGg6IDYwcHg7XG4gICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICBtaW4taGVpZ2h0OiA2MHB4O1xuICAgICAgbWF4LWhlaWdodDogNjBweDtcbiAgICAgIG1hcmdpbjogMCAwIDAgMjBweDtcbiAgICB9XG4gICAgLnVzZXJEYXRhIHtcbiAgICAgIG1hcmdpbjogMCAwIDAgMjBweDtcbiAgICB9XG4gICAgLnVzZXJEZXRhaWxEYXRhIHtcbiAgICAgIG1hcmdpbjogMCAwIDAgMjBweDtcbiAgICB9XG4gICAgLm5hbWUge1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTUwJTtcbiAgICB9XG4gICAgLnVzZXJUYWdzIHtcbiAgICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgIH1cbiAgICAuc2VsZkludHJvIHtcbiAgICAgIG1hcmdpbi10b3A6ICR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gICAgICBmb250LXNpemU6IDkwJTtcbiAgICB9XG4gICAgLm1hcmsge1xuICAgICAgcGFkZGluZzogJHtzdHlsZXMuYmFzZVBhZGRpbmcgLyAyfXB4ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBNYXJrQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgcGFkZGluZzogJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHggJHtzdHlsZXMuYmFzZVBhZGRpbmcgKiAyfXB4O1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgY29sb3I6ICR7c3R5bGVzLndoaXRlQ29sb3J9O1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBsaW5lLWhlaWdodDogMjZweDtcbmA7XG5cbmNvbnN0IGdldENvbnRyb2xIZWlnaHQgPSAoaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHQpID0+IHtcbiAgY29uc3QgeyBzcExheW91dFN0cmljdFdpZHRoLCBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgfSA9IHN0eWxlcztcbiAgbGV0IGNvbnRyb2xIZWlnaHQgPSBNYXRoLmZsb29yKGlubmVySGVpZ2h0ICogKHN0eWxlcy5leWVDYXRjaFZoVmFsdWUgLyAxMDApKTtcbiAgaWYgKGlubmVyV2lkdGggPCBzcExheW91dFN0cmljdFdpZHRoKSB7XG4gICAgcmV0dXJuIGNvbnRyb2xIZWlnaHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNvbnRyb2xIZWlnaHQgPCBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgPyBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgOiBjb250cm9sSGVpZ2h0O1xuICB9XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kSW1hZ2UgPSAoeyBpZCwgaW1hZ2UgfSkgPT4ge1xuICBpZiAoaW1hZ2UgJiYgaW1hZ2UgIT09ICcnKSB7XG4gICAgcmV0dXJuIGB1cmwoaHR0cHM6Ly8ke2NvbmYuYXNzZXRzQ292ZXJQYXRofSR7aWR9LyR7aW1hZ2V9KSwgdXJsKGh0dHBzOi8vJHtjb25mLmFzc2V0c0NvdmVyUGF0aH0ke2ltYWdlfSkgYDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYGh0dHBzOi8vJHtjb25mLmFzc2V0c0NvdmVyUGF0aH0vJHtpbWFnZX1gO1xuICB9XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kVHJhbnNmb3JtID0gKHByb3BzOiBCb2R5UHJvcHNUeXBlIHwgQmFja2dyb3VuZFByb3BzVHlwZSk6IHN0cmluZyA9PiB7XG4gIGlmIChwcm9wcy5pc0hvdmVyKSB7XG4gICAgaWYgKHByb3BzLmhvdmVyQW5pbWF0aW9uVHlwZSA9PT0gaG92ZXJBbmltYXRpb25CbHVyKSB7XG4gICAgICByZXR1cm4gYHNjYWxlKDEuMDMpYDtcbiAgICB9IGVsc2UgaWYgKHByb3BzLmhvdmVyQW5pbWF0aW9uVHlwZSA9PT0gaG92ZXJBbmltYXRpb25Cb3hTaGFkb3cpIHtcbiAgICAgIHJldHVybiBgc2NhbGUoMSlgO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYHNjYWxlKDEpYDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICdzY2FsZSgxKSc7XG4gIH1cbn07XG5cbmNvbnN0IGdldEJhY2tkcm9wRmlsdGVyID0gKHsgaXNIb3ZlciB9KTogc3RyaW5nID0+IHtcbiAgaWYgKGlzSG92ZXIpIHtcbiAgICByZXR1cm4gYGJsdXIoM3B4KSBicmlnaHRuZXNzKDAuNylgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgYmx1cigwKSBicmlnaHRuZXNzKDEpYDtcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm94U2hhZG93ID0gKHByb3BzOiBCYWNrZ3JvdW5kUHJvcHNUeXBlKTogc3RyaW5nID0+IHtcbiAgaWYgKHByb3BzLmlzSG92ZXIgJiYgcHJvcHMuaG92ZXJBbmltYXRpb25UeXBlID09PSBob3ZlckFuaW1hdGlvbkJveFNoYWRvdykge1xuICAgIHJldHVybiBzdHlsZXMuc2hhZG93SG9yaXpvbkJhc2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGBub25lYDtcbiAgfVxufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCB1dGlsIGZyb20gJ2NvbW1vbi91dGlsJztcblxuaW1wb3J0IGFwaSBmcm9tICdjb3Zlci9hcGknO1xuaW1wb3J0IEJ1dHRvbiwgeyBidXR0b25UaGVtZUJyaWdodCwgYnV0dG9uVGhlbWVIb3QgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0J1dHRvbic7XG5pbXBvcnQgSW5wdXQgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9pbnB1dCc7XG5pbXBvcnQgeyBpbWFnZUJnLCBpbWFnZUljb24gfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL2lucHV0L0Ryb3BJbWFnZSc7XG5pbXBvcnQgeyBQcm9maWxlcyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBNb2RhbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbCc7XG5pbXBvcnQgVXNlckNvbnRlbnQgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvVXNlci9Db250ZW50JztcbmltcG9ydCBGbGV4LCB7IEg1IH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBVc2VyIGZyb20gJ2NvdmVyL21vZGVsL1VzZXInO1xuaW1wb3J0IHsgdGFnUGFyZW50U2VsZiwgT3Blbk1vZGFsT3B0aW9uVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzJztcblxuZXhwb3J0IHR5cGUgRml4VmFsdWVzVHlwZSA9IHtcbiAgYmc6IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xuICBzZXhlczogc3RyaW5nW107XG4gIGxhbmd1YWdlczogc3RyaW5nW107XG4gIGJpcnRoZGF5OiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZml4VmFsdWVzSW5pdDogRml4VmFsdWVzVHlwZSA9IHtcbiAgYmc6ICcnLFxuICBpY29uOiAnJyxcbiAgc2V4ZXM6IFtdLFxuICBsYW5ndWFnZXM6IFtdLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbn07XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGlzTXlQYWdlOiBib29sZWFuO1xuICBvcGVuTW9kYWxPcHRpb25zOiBPcGVuTW9kYWxPcHRpb25UeXBlO1xuICB1c2VyOiBVc2VyO1xuICBzZXRTaG93UHJvZmlsZU1vZGFsT3B0aW9uOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxPcGVuTW9kYWxPcHRpb25UeXBlPj47XG4gIHNldE15VXNlcj86IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXI+Pjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgaXNNeVBhZ2UsIG9wZW5Nb2RhbE9wdGlvbnMsIHVzZXIsIHNldE15VXNlciwgc2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbiB9KSA9PiB7XG4gIGNvbnN0IFtpc1NhdmVkQW5pbWF0aW9uLCBzZXRJc1NhdmVkQW5pbWF0aW9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzRGlzYWJsZWRTYXZlQnV0dG9uLCBzZXRJc0Rpc2FibGVkU2F2ZUJ1dHRvbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93TW9kYWwsIHNldFNob3dNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtiZ0Zvcm1EYXRhLCBzZXRCZ0Zyb21EYXRhXSA9IHVzZVN0YXRlPEZvcm1EYXRhPihuZXcgRm9ybURhdGEoKSk7XG4gIGNvbnN0IFtpY29uRm9ybURhdGEsIHNldEljb25Gb3JtRGF0YV0gPSB1c2VTdGF0ZTxGb3JtRGF0YT4obmV3IEZvcm1EYXRhKCkpO1xuICBjb25zdCBbZml4VmFsdWVzLCBzZXRGaXhWYWx1ZXNdID0gdXNlU3RhdGU8Rml4VmFsdWVzVHlwZT4oZml4VmFsdWVzSW5pdCk7XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VCZyA9IChmb3JtRGF0YSwgZmlsZU5hbWUpID0+IHtcbiAgICBzZXRCZ0Zyb21EYXRhKGZvcm1EYXRhKTtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGJnOiBmaWxlTmFtZSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUljb24gPSAoZm9ybURhdGEsIGZpbGVOYW1lKSA9PiB7XG4gICAgc2V0SWNvbkZvcm1EYXRhKGZvcm1EYXRhKTtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGljb246IGZpbGVOYW1lIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlQmlydGhkYXkgPSAoYmlydGhkYXkpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGJpcnRoZGF5IH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzID0gKGxhbmd1YWdlcykgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgbGFuZ3VhZ2VzIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlU2V4ZXMgPSAoc2V4ZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHNleGVzIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uU2F2ZSA9ICgpID0+IHtcbiAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuICAgIGNvbnN0IHVwZGF0ZVVzZXIgPSBuZXcgVXNlcih7IC4uLnVzZXIsIC4uLmZpeFZhbHVlcyB9IGFzIFVzZXIpO1xuXG4gICAgbGV0IGlzVXBkYXRlSW1hZ2UgPSBmYWxzZTtcblxuICAgIHNldE15VXNlciAmJiBzZXRNeVVzZXIodXBkYXRlVXNlcik7XG4gICAgc2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbih7XG4gICAgICAuLi5vcGVuTW9kYWxPcHRpb25zLFxuICAgICAgYmc6IHVwZGF0ZVVzZXIuYmcsXG4gICAgICBpY29uOiB1cGRhdGVVc2VyLmljb24sXG4gICAgICBsYW5ndWFnZXM6IHVwZGF0ZVVzZXIubGFuZ3VhZ2VzLFxuICAgICAgc2V4ZXM6IHVwZGF0ZVVzZXIuc2V4ZXMsXG4gICAgICBiaXJ0aGRheTogdXBkYXRlVXNlci5iaXJ0aGRheSxcbiAgICB9KTtcblxuICAgIGlmIChpY29uRm9ybURhdGEuaGFzKCdpY29uJykpIHtcbiAgICAgIGlzVXBkYXRlSW1hZ2UgPSB0cnVlO1xuICAgICAgaWNvbkZvcm1EYXRhLnNldCgndXNlcklkJywgdXNlci5pZCk7XG4gICAgICBwcm9taXNlcy5wdXNoKGFwaS5mb3JtRGF0YSgnc2F2ZVVzZXJJY29uJywgdXNlci5pZCwgaWNvbkZvcm1EYXRhKSk7XG4gICAgfVxuXG4gICAgaWYgKGJnRm9ybURhdGEuaGFzKCdiZycpKSB7XG4gICAgICBpc1VwZGF0ZUltYWdlID0gdHJ1ZTtcbiAgICAgIGJnRm9ybURhdGEuc2V0KCd1c2VySWQnLCB1c2VyLmlkKTtcbiAgICAgIHByb21pc2VzLnB1c2goYXBpLmZvcm1EYXRhKCdzYXZlVXNlckJnJywgdXNlci5pZCwgYmdGb3JtRGF0YSkpO1xuICAgIH1cblxuICAgIHByb21pc2VzLnB1c2goYXBpLmpzb24oJ3NhdmVVc2VyJywgdXBkYXRlVXNlcikpO1xuXG4gICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oKCkgPT4ge1xuICAgICAgc2V0SXNTYXZlZEFuaW1hdGlvbih0cnVlKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIHNldElzU2F2ZWRBbmltYXRpb24oZmFsc2UpO1xuICAgICAgfSwgMTAwMCk7XG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoXG4gICAgICBmaXhWYWx1ZXMgJiZcbiAgICAgIGZpeFZhbHVlcy5sYW5ndWFnZXMgJiZcbiAgICAgIGZpeFZhbHVlcy5zZXhlcyAmJlxuICAgICAgZml4VmFsdWVzLmljb24gIT09ICcnICYmXG4gICAgICBmaXhWYWx1ZXMuYmcgIT09ICcnICYmXG4gICAgICBmaXhWYWx1ZXMubGFuZ3VhZ2VzLmxlbmd0aCA+IDAgJiZcbiAgICAgIGZpeFZhbHVlcy5zZXhlcy5sZW5ndGggPiAwICYmXG4gICAgICBmaXhWYWx1ZXMuYmlydGhkYXkgIT09IDBcbiAgICApIHtcbiAgICAgIHNldElzRGlzYWJsZWRTYXZlQnV0dG9uKGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0SXNEaXNhYmxlZFNhdmVCdXR0b24odHJ1ZSk7XG4gICAgfVxuICB9LCBbZml4VmFsdWVzXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoe1xuICAgICAgLi4uZml4VmFsdWVzLFxuICAgICAgYmc6IG9wZW5Nb2RhbE9wdGlvbnMuYmcsXG4gICAgICBpY29uOiBvcGVuTW9kYWxPcHRpb25zLmljb24sXG4gICAgICBsYW5ndWFnZXM6IG9wZW5Nb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgc2V4ZXM6IG9wZW5Nb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICBiaXJ0aGRheTogb3Blbk1vZGFsT3B0aW9ucy5iaXJ0aGRheSxcbiAgICB9KTtcbiAgfSwgW29wZW5Nb2RhbE9wdGlvbnNdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8VXNlckNvbnRlbnQgdXNlcj17dXNlcn0gaGFuZGxlT25DbGljaz17KCkgPT4gaXNNeVBhZ2UgJiYgc2V0U2hvd01vZGFsKCFzaG93TW9kYWwpfSBpc1NhdmVkQW5pbWF0aW9uPXtpc1NhdmVkQW5pbWF0aW9ufSAvPlxuXG4gICAgICA8TW9kYWwuU3RydWN0dXJlXG4gICAgICAgIHNob3c9e3Nob3dNb2RhbH1cbiAgICAgICAgY2xvc2VNb2RhbD17KCkgPT4gc2V0U2hvd01vZGFsKGZhbHNlKX1cbiAgICAgICAgaGVhZGVyPXs8SDU+UHJvZmlsZTwvSDU+fVxuICAgICAgICBjb250ZW50PXtcbiAgICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgICAgPElucHV0LkRyb3BJbWFnZVxuICAgICAgICAgICAgICB0eXBlPXtpbWFnZUJnfVxuICAgICAgICAgICAgICBpZD17dXNlci5pZH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiSW5wdXREcm9wSW1hZ2VCZ1wiXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUJnfVxuICAgICAgICAgICAgICB2YWx1ZT17b3Blbk1vZGFsT3B0aW9ucy5iZ31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8SW5wdXREcm9wSW1hZ2VJY29uXG4gICAgICAgICAgICAgIHR5cGU9e2ltYWdlSWNvbn1cbiAgICAgICAgICAgICAgaWQ9e3VzZXIuaWR9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cIklucHV0RHJvcEltYWdlSWNvblwiXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUljb259XG4gICAgICAgICAgICAgIHZhbHVlPXtvcGVuTW9kYWxPcHRpb25zLmljb259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICA8UHJvZmlsZXNcbiAgICAgICAgICAgICAgdHlwZT1cIlVzZXJUb3BcIlxuICAgICAgICAgICAgICBpZD17dXNlci5pZH1cbiAgICAgICAgICAgICAgaXNFZGl0YWJsZT17b3Blbk1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlID09PSB0YWdQYXJlbnRTZWxmID8gZmFsc2UgOiB0cnVlfVxuICAgICAgICAgICAgICBzZXhlcz17Zml4VmFsdWVzLnNleGVzfVxuICAgICAgICAgICAgICBsYW5ndWFnZXM9e2ZpeFZhbHVlcy5sYW5ndWFnZXN9XG4gICAgICAgICAgICAgIGJpcnRoZGF5PXtmaXhWYWx1ZXMuYmlydGhkYXl9XG4gICAgICAgICAgICAgIGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzPXtoYW5kbGVPbkNoYW5nZUxhbmd1YWdlc31cbiAgICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VTZXhlcz17aGFuZGxlT25DaGFuZ2VTZXhlc31cbiAgICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheT17aGFuZGxlT25DaGFuZ2VCaXJ0aGRheX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9GbGV4PlxuICAgICAgICB9XG4gICAgICAgIGZvb3Rlcj17XG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxCdXR0b24gZGlzYWJsZWQ9e2ZhbHNlfSB0aGVtZT17YnV0dG9uVGhlbWVCcmlnaHR9IG9uQ2xpY2s9eygpID0+IHNldFNob3dNb2RhbChmYWxzZSl9IHNpZGVNYXJnaW4+XG4gICAgICAgICAgICAgIENMT1NFXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzRGlzYWJsZWRTYXZlQnV0dG9ufVxuICAgICAgICAgICAgICB0aGVtZT17aXNEaXNhYmxlZFNhdmVCdXR0b24gPyBidXR0b25UaGVtZUhvdCA6IGJ1dHRvblRoZW1lSG90fVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlT25TYXZlKCk7XG4gICAgICAgICAgICAgICAgc2V0U2hvd01vZGFsKGZhbHNlKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgc2lkZU1hcmdpbj5cbiAgICAgICAgICAgICAgU0FWRVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC8+XG4gICAgICAgIH1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IElucHV0RHJvcEltYWdlSWNvbiA9IHN0eWxlZChJbnB1dC5Ecm9wSW1hZ2UpYFxuICBtYXJnaW4tdG9wOiAtMTkwcHg7XG4gIG1hcmdpbi1sZWZ0OiAzMnB4O1xuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBQYWdlUHJvcHMgfSBmcm9tICdjb3Zlci9jb250YWluZXInO1xuXG5jb25zdCBDb21wb25lbnRzOiBSZWFjdC5GQzxQYWdlUHJvcHM+ID0gKCkgPT4ge1xuICByZXR1cm4gPD5UT1AhPC8+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50cztcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgY29uZmlnVXNlckNhdGVnb3J5Q2hMaW1pdCB9IGZyb20gJ2NvbW1vbi90YWxrbkNvbmZpZyc7XG5cbmltcG9ydCBBZHZlcnRzIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0FkdmVydHMnO1xuaW1wb3J0IFByb2ZpbGVDb250ZW50cyBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlJztcbmltcG9ydCBGb290ZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyJztcbmltcG9ydCBIZWFkZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvSGVhZGVyJztcbmltcG9ydCBDb250ZW50TWVudSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9NZW51L0NvbnRlbnRNZW51JztcbmltcG9ydCBTaWRlTWVudSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9NZW51L1NpZGVNZW51JztcbmltcG9ydCBTbnNTaGFyZSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9TbnNTaGFyZSc7XG5pbXBvcnQgVXNlclRvcCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Vc2VyL1RvcCc7XG5pbXBvcnQgeyBQYWdlUHJvcHMgfSBmcm9tICdjb3Zlci9jb250YWluZXInO1xuaW1wb3J0IEZsZXgsIHsgTWFpbiB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgeyBzZWxlY3RDb250ZW50TWVudVVzZXJzIH0gZnJvbSAnY292ZXIvbW9kZWwvTWVudXMnO1xuaW1wb3J0IFVzZXIsIHsgdXNlckluaXQgfSBmcm9tICdjb3Zlci9tb2RlbC9Vc2VyJztcbmltcG9ydCB7IFVzZXJUYWdzVHlwZSwgT3Blbk1vZGFsT3B0aW9uVHlwZSwgb3Blbk1vZGFsT3B0aW9uSW5pdCB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcbmltcG9ydCB7IFByb3BzIGFzIE5vZGVQcm9wcyB9IGZyb20gJ2NvdmVyL3V0aWxzL05vZGUnO1xuXG5leHBvcnQgdHlwZSBHbG9iYWxDb250ZXh0VHlwZSA9IHtcbiAgaW5uZXJXaWR0aDogbnVtYmVyO1xuICBpbm5lckhlaWdodDogbnVtYmVyO1xuICBpc1Njcm9sbFRvcDogYm9vbGVhbjtcbiAgaXNTcExheW91dDogYm9vbGVhbjtcbiAgaXNTcExheW91dFN0cmljdDogYm9vbGVhbjtcbiAgaXNUcmFuc2l0aW9uOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2xvYmFsQ29udGV4dGluaXQgPSB7XG4gIGlubmVyV2lkdGg6IDAsXG4gIGlubmVySGVpZ2h0OiAwLFxuICBpc1Njcm9sbFRvcDogZmFsc2UsXG4gIGlzU3BMYXlvdXQ6IGZhbHNlLFxuICBpc1NwTGF5b3V0U3RyaWN0OiBmYWxzZSxcbiAgaXNUcmFuc2l0aW9uOiB0cnVlLFxufTtcblxuY29uc3QgR2xvYmFsQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoZ2xvYmFsQ29udGV4dGluaXQpO1xuXG5leHBvcnQgY29uc3QgdXNlR2xvYmFsQ29udGV4dCA9ICgpID0+IHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoR2xvYmFsQ29udGV4dCk7XG59O1xuXG50eXBlIFN0b3JpZXNWZXJ0aWNhbERhdGFzID0ge1xuICBvZmZzZXRUb3A6IG51bWJlcjtcbiAgb2Zmc2V0Qm90dG9tOiBudW1iZXI7XG59O1xuXG50eXBlIE5hdmlnYXRpb25MYXlvdXQgPSB7XG4gIHdpZHRoOiBudW1iZXI7XG4gIG1hcmdpblRvcDogbnVtYmVyO1xuICBtYXJnaW5SaWdodDogbnVtYmVyO1xuICBtYXJnaW5Cb3R0b206IG51bWJlcjtcbiAgbWFyZ2luTGVmdDogbnVtYmVyO1xuICBwYWRkaW5nVG9wOiBudW1iZXI7XG4gIHBhZGRpbmdSaWdodDogbnVtYmVyO1xuICBwYWRkaW5nQm90dG9tOiBudW1iZXI7XG4gIHBhZGRpbmdMZWZ0OiBudW1iZXI7XG59O1xuXG50eXBlIFN0b3JpZXNTZWN0aW9uVHlwZSA9IHtcbiAgdGl0bGU6IHN0cmluZztcbiAgcmVzdW1lOiBzdHJpbmc7XG4gIGZsb3c6IHN0cmluZztcbiAgbm9kZXM6IE5vZGVQcm9wc1tdO1xufTtcblxudHlwZSBTdG9yaWVzVHlwZSA9IHtcbiAgdmVyc2lvbjogc3RyaW5nO1xuICBjcmVhdGVUaW1lOiBzdHJpbmc7XG4gIGNzczogc3RyaW5nO1xuICBoZWFkOiBzdHJpbmc7XG4gIHNlY3Rpb25zOiBTdG9yaWVzU2VjdGlvblR5cGVbXSB8IFtdO1xufTtcblxuY29uc3Qgc3Rvcmllc0luaXQ6IFN0b3JpZXNUeXBlID0ge1xuICB2ZXJzaW9uOiAnJyxcbiAgY3JlYXRlVGltZTogJycsXG4gIGNzczogJycsXG4gIGhlYWQ6ICcnLFxuICBzZWN0aW9uczogW10sXG59O1xuXG5sZXQgc3Rvcmllc1ZlcnRpY2FsRGF0YXM6IFN0b3JpZXNWZXJ0aWNhbERhdGFzW10gPSBbXTtcblxuY29uc3QgQ29tcG9uZW50czogUmVhY3QuRkM8UGFnZVByb3BzPiA9ICh7IGFjY291bnQsIGlzTXlQYWdlIH0pID0+IHtcbiAgY29uc3QgcGFyYW1zID0gdXNlUGFyYW1zKCk7XG4gIGNvbnN0IHVzZXJJZCA9IHBhcmFtcy51c2VySWQ7XG4gIGNvbnN0IFtkYXRhTW91bnQsIHNldE1vdW50RGF0YV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjb25maWcsIHNldENvbmZpZ10gPSB1c2VTdGF0ZTxhbnk+KHt9KTtcbiAgY29uc3QgW3RocmVhZCwgc2V0VGhyZWFkXSA9IHVzZVN0YXRlPGFueT4oe30pO1xuICBjb25zdCBbc2VydmVyTWV0YXMsIHNldFNlcnZlck1ldGFzXSA9IHVzZVN0YXRlPGFueT4oe30pO1xuICBjb25zdCBbc3Rvcmllcywgc2V0U3Rvcmllc10gPSB1c2VTdGF0ZTxTdG9yaWVzVHlwZT4oc3Rvcmllc0luaXQpO1xuXG4gIGNvbnN0IFt1c2VyLCBzZXRVc2VyXSA9IHVzZVN0YXRlPFVzZXI+KHVzZXJJbml0KTtcbiAgY29uc3QgW3VzZXJUYWdzSW5pdCwgc2V0VXNlclRhZ3NJbml0XSA9IHVzZVN0YXRlPFVzZXJUYWdzVHlwZT4oKTtcbiAgY29uc3QgW3VzZXJUYWdzLCBzZXRVc2VyVGFnc10gPSB1c2VTdGF0ZTxVc2VyVGFnc1R5cGU+KCk7XG5cbiAgY29uc3QgW3Nob3dQcm9maWxlTW9kYWxPcHRpb24sIHNldFNob3dQcm9maWxlTW9kYWxPcHRpb25dID0gdXNlU3RhdGU8T3Blbk1vZGFsT3B0aW9uVHlwZT4oeyAuLi5vcGVuTW9kYWxPcHRpb25Jbml0IH0pO1xuXG4gIGNvbnN0IFttYXhNYWluLCBzZXRNYXhNYWluXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dBZHZlcnQsIHNldFNob3dBZHZlcnRdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtzaG93U2VhcmNoTW9kYWxPcHRpb24sIHNldFNob3dTZWFyY2hNb2RhbE9wdGlvbl0gPSB1c2VTdGF0ZTxPcGVuTW9kYWxPcHRpb25UeXBlPih7IC4uLm9wZW5Nb2RhbE9wdGlvbkluaXQgfSk7XG5cbiAgY29uc3QgW3VzZXJDYXRlZ29yeUNocywgc2V0VXNlckNhdGVnb3J5Q2hzXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW29wZW5NZW51LCBzZXRPcGVuTWVudV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzdG9yaWVzUG9pbnRlciwgc2V0U3Rvcmllc1BvaW50ZXJdID0gdXNlU3RhdGU8bnVtYmVyIHwgdW5kZWZpbmVkPigpO1xuICBjb25zdCBbbmF2aWdhdGlvbkxheW91dCwgc2V0TmF2aWdhdGlvbkxheW91dF0gPSB1c2VTdGF0ZTxOYXZpZ2F0aW9uTGF5b3V0IHwgdW5kZWZpbmVkPigpO1xuXG4gIGNvbnN0IHJlc3VtZVJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3QgY2ggPSBsb2NhdGlvbi5wYXRobmFtZTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrQ29udGFpbmVyID0gKGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB7XG4gICAgaWYgKG9wZW5NZW51ICYmIHN0eWxlcy5tZW51UGNXaWR0aCA8IGUuY2xpZW50WCkge1xuICAgICAgc2V0T3Blbk1lbnUoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrTWVudSA9IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4ge1xuICAgIHNldE9wZW5NZW51KCFvcGVuTWVudSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnQgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dBZHZlcnQpIHtcbiAgICAgIHNldFNob3dBZHZlcnQoZmFsc2UpO1xuICAgICAgc2V0TWF4TWFpbih0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0TWF4TWFpbihmYWxzZSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0U2hvd0FkdmVydCh0cnVlKTtcbiAgICAgIH0sIHN0eWxlcy50cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICAvKioqKioqKioqKiovXG4gIC8qIFNUT1JZXG4gIC8qKioqKioqKioqKi9cblxuICBjb25zdCB1c2VDYWxsYmFja1Njcm9sbCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zdCBfc3Rvcmllc1BvaW50ZXIgPSBzdG9yaWVzVmVydGljYWxEYXRhcy5maW5kSW5kZXgoXG4gICAgICAob2JqKSA9PiBvYmoub2Zmc2V0VG9wIDw9IHdpbmRvdy5zY3JvbGxZICsgc3R5bGVzLmJhc2VIZWlnaHQgJiYgd2luZG93LnNjcm9sbFkgKyBzdHlsZXMuYmFzZUhlaWdodCA8IG9iai5vZmZzZXRCb3R0b21cbiAgICApO1xuICAgIHNldFN0b3JpZXNQb2ludGVyKF9zdG9yaWVzUG9pbnRlcik7XG4gIH0sIFtzdG9yaWVzVmVydGljYWxEYXRhc10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHJlc3VtZVJlZi5jdXJyZW50ICYmIHdpbmRvdy50YWxrbkRhdGFzLnN0b3JpZXMgJiYgd2luZG93LnRhbGtuRGF0YXMuc3Rvcmllcy5zZWN0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAoc3R5bGVzLnNwTGF5b3V0V2lkdGggPCB3aW5kb3cuaW5uZXJXaWR0aCkge1xuICAgICAgICBjb25zdCByZXN1bWVFbG0gPSByZXN1bWVSZWYuY3VycmVudDtcbiAgICAgICAgY29uc3QgcmVzdW1lU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKHJlc3VtZUVsbSk7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLndpZHRoKTtcbiAgICAgICAgY29uc3QgbWFyZ2luVG9wID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpblRvcCk7XG4gICAgICAgIGNvbnN0IG1hcmdpblJpZ2h0ID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpblJpZ2h0KTtcbiAgICAgICAgY29uc3QgbWFyZ2luQm90dG9tID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpbkJvdHRvbSk7XG4gICAgICAgIGNvbnN0IG1hcmdpbkxlZnQgPSBzdHlsZXMuZ2V0VHJpbVVuaXROdW1iZXIocmVzdW1lU3R5bGUubWFyZ2luTGVmdCk7XG4gICAgICAgIGNvbnN0IHBhZGRpbmdUb3AgPSBzdHlsZXMuZ2V0VHJpbVVuaXROdW1iZXIocmVzdW1lU3R5bGUucGFkZGluZ1RvcCk7XG4gICAgICAgIGNvbnN0IHBhZGRpbmdSaWdodCA9IHN0eWxlcy5nZXRUcmltVW5pdE51bWJlcihyZXN1bWVTdHlsZS5wYWRkaW5nUmlnaHQpO1xuICAgICAgICBjb25zdCBwYWRkaW5nQm90dG9tID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLnBhZGRpbmdCb3R0b20pO1xuICAgICAgICBjb25zdCBwYWRkaW5nTGVmdCA9IHN0eWxlcy5nZXRUcmltVW5pdE51bWJlcihyZXN1bWVTdHlsZS5wYWRkaW5nTGVmdCk7XG5cbiAgICAgICAgc2V0TmF2aWdhdGlvbkxheW91dCh7XG4gICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgbWFyZ2luVG9wLFxuICAgICAgICAgIG1hcmdpblJpZ2h0LFxuICAgICAgICAgIG1hcmdpbkJvdHRvbSxcbiAgICAgICAgICBtYXJnaW5MZWZ0LFxuICAgICAgICAgIHBhZGRpbmdUb3AsXG4gICAgICAgICAgcGFkZGluZ1JpZ2h0LFxuICAgICAgICAgIHBhZGRpbmdCb3R0b20sXG4gICAgICAgICAgcGFkZGluZ0xlZnQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3dpbmRvdy5pbm5lcldpZHRoLCBzdG9yaWVzICYmIHN0b3JpZXMuc2VjdGlvbnMubGVuZ3RoXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRTaG93UHJvZmlsZU1vZGFsT3B0aW9uKHsgLi4ub3Blbk1vZGFsT3B0aW9uSW5pdCwgLi4udXNlciB9KTtcbiAgICBzZXRTaG93U2VhcmNoTW9kYWxPcHRpb24oeyAuLi5vcGVuTW9kYWxPcHRpb25Jbml0LCAuLi51c2VyIH0pO1xuICB9LCBbdXNlcl0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0TW91bnREYXRhKHRydWUpO1xuICAgIGNvbnN0IHVzZXJDYXRlZ29yeUNoQ250ID0gd2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnVzZXJDYXRlZ29yeUNocy5sZW5ndGg7XG4gICAgd2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnVzZXJDYXRlZ29yeUNocyA9IHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZy51c2VyQ2F0ZWdvcnlDaHMuY29uY2F0KFxuICAgICAgbmV3IEFycmF5KGNvbmZpZ1VzZXJDYXRlZ29yeUNoTGltaXQgLSB1c2VyQ2F0ZWdvcnlDaENudCkuZmlsbCgnJylcbiAgICApO1xuXG4gICAgc2V0Q29uZmlnKHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZyk7XG4gICAgc2V0VGhyZWFkKHdpbmRvdy50YWxrbkRhdGFzLnRocmVhZCk7XG4gICAgc2V0U2VydmVyTWV0YXMod2luZG93LnRhbGtuRGF0YXMuc2VydmVyTWV0YXMpO1xuICAgIHNldFN0b3JpZXMod2luZG93LnRhbGtuRGF0YXMuc3Rvcmllcyk7XG4gICAgc2V0U3Rvcmllc1BvaW50ZXIod2luZG93LnRhbGtuRGF0YXMuc3Rvcmllc1BvaW50ZXIpO1xuICAgIHNldFVzZXJDYXRlZ29yeUNocyh3aW5kb3cudGFsa25EYXRhcy5jb25maWcudXNlckNhdGVnb3J5Q2hzKTtcbiAgICBzZXRVc2VyKG5ldyBVc2VyKHdpbmRvdy50YWxrbkRhdGFzLnVzZXIpKTtcbiAgICBzZXRVc2VyVGFncyh3aW5kb3cudGFsa25EYXRhcy51c2VyVGFncyk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXNlQ2FsbGJhY2tTY3JvbGwpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyXG4gICAgICBjbGFzc05hbWU9XCJDb250YWluZXJcIlxuICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgIGZsb3c9XCJjb2x1bW5cIlxuICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrQ29udGFpbmVyfT5cbiAgICAgIHsvKiDjgrXjgqTjg4njg6Hjg4vjg6Xjg7wgKi99XG4gICAgICA8U2lkZU1lbnUgb3Blbk1lbnU9e29wZW5NZW51fSB1c2VyVGFncz17dXNlclRhZ3N9IC8+XG4gICAgICB7Lyog44OY44OD44OA44O8ICovfVxuICAgICAgPEhlYWRlciBvcGVuTWVudT17b3Blbk1lbnV9IGNoPXtjaH0gYWNjb3VudD17YWNjb3VudH0gaGFuZGxlT25DbGlja01lbnU9e2hhbmRsZU9uQ2xpY2tNZW51fSAvPlxuXG4gICAgICA8VXNlclRvcFxuICAgICAgICBpc015UGFnZT17aXNNeVBhZ2V9XG4gICAgICAgIG9wZW5Nb2RhbE9wdGlvbnM9e3Nob3dQcm9maWxlTW9kYWxPcHRpb259XG4gICAgICAgIHVzZXI9e3VzZXJ9XG4gICAgICAgIHNldE15VXNlcj17c2V0VXNlcn1cbiAgICAgICAgc2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbj17c2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbn1cbiAgICAgIC8+XG4gICAgICB7Lyog44Kz44Oz44OG44Oz44OE44Oh44OL44Ol44O8ICovfVxuICAgICAgPE1haW5Db250ZW50c0JvYXJkIGNsYXNzTmFtZT1cIk1haW5Db250ZW50c0JvYXJkXCIgZmxvdz1cInJvdyB3cmFwXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgPENvbnRlbnRNZW51IGNoPXtjaH0gc2VsZWN0Q29udGVudE1lbnU9e3NlbGVjdENvbnRlbnRNZW51VXNlcnN9IC8+XG4gICAgICAgIDxBZHZlcnRzLkhlYWRlciBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSBoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydD17aGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnR9IC8+XG4gICAgICAgIDxNYWluQ29udGVudHNXcmFwIGNsYXNzTmFtZT1cIk1haW5Db250ZW50c1dyYXBcIiBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSBhbGlnbkl0ZW1zPVwiZmxleC1zdGFydFwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgPEFkdmVydHMuTGVmdCBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSAvPlxuICAgICAgICAgIDxNYWluQ29udGVudHMgY2xhc3NOYW1lPVwiTWFpbkNvbnRlbnRzXCIgZmxvdz1cImNvbHVtbiB3cmFwXCIgbWF4TWFpbj17bWF4TWFpbn0gc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICAgICAgICA8UHJvZmlsZUNvbnRlbnRzXG4gICAgICAgICAgICAgIGlzTXlQYWdlPXtpc015UGFnZX1cbiAgICAgICAgICAgICAgdXNlcklkPXt1c2VySWR9XG4gICAgICAgICAgICAgIHVzZXI9e3VzZXJ9XG4gICAgICAgICAgICAgIHVzZXJUYWdzPXt1c2VyVGFnc31cbiAgICAgICAgICAgICAgdXNlclRhZ3NJbml0PXt1c2VyVGFnc0luaXR9XG4gICAgICAgICAgICAgIHNob3dQcm9maWxlTW9kYWxPcHRpb249e3Nob3dQcm9maWxlTW9kYWxPcHRpb259XG4gICAgICAgICAgICAgIHNldFVzZXI9e3NldFVzZXJ9XG4gICAgICAgICAgICAgIHNldFVzZXJUYWdzPXtzZXRVc2VyVGFnc31cbiAgICAgICAgICAgICAgc2V0VXNlclRhZ3NJbml0PXtzZXRVc2VyVGFnc0luaXR9XG4gICAgICAgICAgICAgIHNldFNob3dTZWFyY2hNb2RhbE9wdGlvbj17c2V0U2hvd1NlYXJjaE1vZGFsT3B0aW9ufVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L01haW5Db250ZW50cz5cbiAgICAgICAgICA8QWR2ZXJ0cy5SaWdodCBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSAvPlxuICAgICAgICA8L01haW5Db250ZW50c1dyYXA+XG4gICAgICAgIDxBZHZlcnRzLlVuZGVyIHNob3dBZHZlcnQgLz5cbiAgICAgIDwvTWFpbkNvbnRlbnRzQm9hcmQ+XG4gICAgICA8U25zU2hhcmUgY2g9e2NofSAvPlxuXG4gICAgICA8Rm9vdGVyIGNoPXtjaH0gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudHM7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgbWluLXdpZHRoOiAke3N0eWxlcy5hcHBNaW5XaWR0aH1weDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZm9udC1zaXplOiAke3N0eWxlcy5mb250QmFzZVNpemV9cHg7XG4gIGZvbnQtd2VpZ2h0OiAke3N0eWxlcy5mb250QmFzZVdlaWdodH07XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgJ0hpcmFnaW5vIFNhbnMnLCAnTm90byBTYW5zIENKSyBKUCcsICdPcmlnaW5hbCBZdSBHb3RoaWMnLFxuICAgICAgJ1l1IEdvdGhpYycsIHNhbnMtc2VyaWYsICdBcHBsZSBDb2xvciBFbW9qaScsICdTZWdvZSBVSSBFbW9qaScsICdTZWdvZSBVSSBTeW1ib2wnLCAnTm90byBTYW5zIEVtb2ppJztcbiAgICA6OnNlbGVjdGlvbiB7XG4gICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgfVxuICA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogMC41ZW07XG4gIH1cbiAgOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgfVxuICA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JleTtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgc2xhdGVncmV5O1xuICB9XG4gIDo6LXdlYmtpdC1zY3JvbGxiYXI6aG92ZXIge1xuICAgIHdpZHRoOiAwLjdlbTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIGZvbnQtc2l6ZTogJHtzdHlsZXMuZm9udEJhc2VTcFNpemV9cHg7XG4gIH1cbmA7XG5cbmNvbnN0IE1haW5Db250ZW50c0JvYXJkID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IE1haW5Db250ZW50c1dyYXAgPSBzdHlsZWQoRmxleCk8eyBzaG93QWR2ZXJ0OiBib29sZWFuIH0+YFxuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIHdpZHRoOiAxMDAlO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgfVxuYDtcblxuY29uc3QgTWFpbkNvbnRlbnRzID0gc3R5bGVkKE1haW4pPHsgc2hvd0FkdmVydDogYm9vbGVhbjsgbWF4TWFpbjogYm9vbGVhbiB9PmBcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogJHsocHJvcHMpID0+ICghcHJvcHMubWF4TWFpbiA/IGAke3N0eWxlcy5hcHBXaWR0aH1weGAgOiAnMTAwJScpfTtcbiAgdHJhbnNpdGlvbjogbWF4LXdpZHRoICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcyBlYXNlIDBzO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuZG91YmxlQWR2ZXJ0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93QWR2ZXJ0ID8gYGNhbGMoIDEwMCUgLSAke3N0eWxlcy5hZHZlcnRXaWR0aCArIHN0eWxlcy5iYXNlTWFyZ2luICogMn1weClgIDogJzEwMCUnKX07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgSGVhZGVyU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9IZWFkZXJTZWN0aW9uJztcbmltcG9ydCBBZHZlcnRzIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0FkdmVydHMnO1xuaW1wb3J0IEZvb3RlciBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXInO1xuaW1wb3J0IEhlYWRlciBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9IZWFkZXInO1xuaW1wb3J0IENvbnRlbnRNZW51IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL01lbnUvQ29udGVudE1lbnUnO1xuaW1wb3J0IFNpZGVNZW51IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL01lbnUvU2lkZU1lbnUnO1xuaW1wb3J0IFNuc1NoYXJlIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL1Nuc1NoYXJlJztcbmltcG9ydCBVc2VyQ29udGVudCwgeyBob3ZlckFuaW1hdGlvbkJveFNoYWRvdyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL1VzZXIvQ29udGVudCc7XG5pbXBvcnQgVXNlclRvcCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Vc2VyL1RvcCc7XG5pbXBvcnQgeyBQYWdlUHJvcHMgfSBmcm9tICdjb3Zlci9jb250YWluZXInO1xuaW1wb3J0IEZsZXgsIHsgQSwgTWFpbiB9IGZyb20gJ2NvdmVyL2ZsZXhlcyc7XG5pbXBvcnQgeyBzZWxlY3RDb250ZW50TWVudVVzZXJzIH0gZnJvbSAnY292ZXIvbW9kZWwvTWVudXMnO1xuaW1wb3J0IFVzZXIgZnJvbSAnY292ZXIvbW9kZWwvVXNlcic7XG5pbXBvcnQgeyBVc2VyVGFnc1R5cGUsIE9wZW5Nb2RhbE9wdGlvblR5cGUsIG9wZW5Nb2RhbE9wdGlvbkluaXQgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5pbXBvcnQgeyBQcm9wcyBhcyBOb2RlUHJvcHMgfSBmcm9tICdjb3Zlci91dGlscy9Ob2RlJztcblxuZXhwb3J0IHR5cGUgR2xvYmFsQ29udGV4dFR5cGUgPSB7XG4gIGlubmVyV2lkdGg6IG51bWJlcjtcbiAgaW5uZXJIZWlnaHQ6IG51bWJlcjtcbiAgaXNTY3JvbGxUb3A6IGJvb2xlYW47XG4gIGlzU3BMYXlvdXQ6IGJvb2xlYW47XG4gIGlzU3BMYXlvdXRTdHJpY3Q6IGJvb2xlYW47XG4gIGlzVHJhbnNpdGlvbjogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdsb2JhbENvbnRleHRpbml0ID0ge1xuICBpbm5lcldpZHRoOiAwLFxuICBpbm5lckhlaWdodDogMCxcbiAgaXNTY3JvbGxUb3A6IGZhbHNlLFxuICBpc1NwTGF5b3V0OiBmYWxzZSxcbiAgaXNTcExheW91dFN0cmljdDogZmFsc2UsXG4gIGlzVHJhbnNpdGlvbjogdHJ1ZSxcbn07XG5cbmNvbnN0IEdsb2JhbENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGdsb2JhbENvbnRleHRpbml0KTtcblxuZXhwb3J0IGNvbnN0IHVzZUdsb2JhbENvbnRleHQgPSAoKSA9PiB7XG4gIHJldHVybiB1c2VDb250ZXh0KEdsb2JhbENvbnRleHQpO1xufTtcblxudHlwZSBTdG9yaWVzU2VjdGlvblR5cGUgPSB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHJlc3VtZTogc3RyaW5nO1xuICBmbG93OiBzdHJpbmc7XG4gIG5vZGVzOiBOb2RlUHJvcHNbXTtcbn07XG5cbnR5cGUgU3Rvcmllc1R5cGUgPSB7XG4gIHZlcnNpb246IHN0cmluZztcbiAgY3JlYXRlVGltZTogc3RyaW5nO1xuICBjc3M6IHN0cmluZztcbiAgaGVhZDogc3RyaW5nO1xuICBzZWN0aW9uczogU3Rvcmllc1NlY3Rpb25UeXBlW10gfCBbXTtcbn07XG5cbmNvbnN0IENvbXBvbmVudHM6IFJlYWN0LkZDPFBhZ2VQcm9wcz4gPSAoeyBpc015UGFnZSwgbXlVc2VyLCBzZXRNeVVzZXIsIGFjY291bnQgfSkgPT4ge1xuICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlPFVzZXJbXT4oW10pO1xuICBjb25zdCBbc2hvd1Byb2ZpbGVNb2RhbE9wdGlvbiwgc2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbl0gPSB1c2VTdGF0ZTxPcGVuTW9kYWxPcHRpb25UeXBlPih7IC4uLm9wZW5Nb2RhbE9wdGlvbkluaXQgfSk7XG4gIGNvbnN0IFttYXhNYWluLCBzZXRNYXhNYWluXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3Nob3dBZHZlcnQsIHNldFNob3dBZHZlcnRdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtvcGVuTWVudSwgc2V0T3Blbk1lbnVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdXNlclRhZ3MsIHNldFVzZXJUYWdzXSA9IHVzZVN0YXRlPFVzZXJUYWdzVHlwZT4oKTtcbiAgY29uc3QgY2ggPSBsb2NhdGlvbi5wYXRobmFtZTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrQ29udGFpbmVyID0gKGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEVsZW1lbnQsIE1vdXNlRXZlbnQ+KSA9PiB7XG4gICAgaWYgKG9wZW5NZW51ICYmIHN0eWxlcy5tZW51UGNXaWR0aCA8IGUuY2xpZW50WCkge1xuICAgICAgc2V0T3Blbk1lbnUoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrTWVudSA9IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4ge1xuICAgIHNldE9wZW5NZW51KCFvcGVuTWVudSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnQgPSAoKSA9PiB7XG4gICAgaWYgKHNob3dBZHZlcnQpIHtcbiAgICAgIHNldFNob3dBZHZlcnQoZmFsc2UpO1xuICAgICAgc2V0TWF4TWFpbih0cnVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0TWF4TWFpbihmYWxzZSk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0U2hvd0FkdmVydCh0cnVlKTtcbiAgICAgIH0sIHN0eWxlcy50cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFVzZXJzKHdpbmRvdy50YWxrbkRhdGFzLnVzZXJzLm1hcCgodXNlcjogVXNlcikgPT4gbmV3IFVzZXIodXNlcikpKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lclxuICAgICAgY2xhc3NOYW1lPVwiQ29udGFpbmVyXCJcbiAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICBmbG93PVwiY29sdW1uXCJcbiAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgb25DbGljaz17aGFuZGxlT25DbGlja0NvbnRhaW5lcn0+XG4gICAgICB7Lyog44K144Kk44OJ44Oh44OL44Ol44O8ICovfVxuICAgICAgPFNpZGVNZW51IG9wZW5NZW51PXtvcGVuTWVudX0gdXNlclRhZ3M9e3VzZXJUYWdzfSAvPlxuICAgICAgey8qIOODmOODg+ODgOODvCAqL31cbiAgICAgIDxIZWFkZXIgb3Blbk1lbnU9e29wZW5NZW51fSBjaD17Y2h9IGFjY291bnQ9e2FjY291bnR9IGhhbmRsZU9uQ2xpY2tNZW51PXtoYW5kbGVPbkNsaWNrTWVudX0gLz5cblxuICAgICAgPFVzZXJUb3BcbiAgICAgICAgaXNNeVBhZ2U9e2lzTXlQYWdlfVxuICAgICAgICBvcGVuTW9kYWxPcHRpb25zPXtzaG93UHJvZmlsZU1vZGFsT3B0aW9ufVxuICAgICAgICB1c2VyPXtteVVzZXJ9XG4gICAgICAgIHNldE15VXNlcj17c2V0TXlVc2VyfVxuICAgICAgICBzZXRTaG93UHJvZmlsZU1vZGFsT3B0aW9uPXtzZXRTaG93UHJvZmlsZU1vZGFsT3B0aW9ufVxuICAgICAgLz5cbiAgICAgIHsvKiDjgrPjg7Pjg4bjg7Pjg4Tjg6Hjg4vjg6Xjg7wgKi99XG4gICAgICA8TWFpbkNvbnRlbnRzQm9hcmQgY2xhc3NOYW1lPVwiTWFpbkNvbnRlbnRzQm9hcmRcIiBmbG93PVwicm93IHdyYXBcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgICA8Q29udGVudE1lbnUgY2g9e2NofSBzZWxlY3RDb250ZW50TWVudT17c2VsZWN0Q29udGVudE1lbnVVc2Vyc30gLz5cbiAgICAgICAgPEFkdmVydHMuSGVhZGVyIHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9IGhhbmRsZU9uQ2xpY2tDb250cm9sQWR2ZXJ0PXtoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydH0gLz5cbiAgICAgICAgPE1haW5Db250ZW50c1dyYXAgY2xhc3NOYW1lPVwiTWFpbkNvbnRlbnRzV3JhcFwiIHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9IGFsaWduSXRlbXM9XCJmbGV4LXN0YXJ0XCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8QWR2ZXJ0cy5MZWZ0IHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9IC8+XG4gICAgICAgICAgPE1haW5Db250ZW50cyBjbGFzc05hbWU9XCJNYWluQ29udGVudHNcIiBmbG93PVwiY29sdW1uIHdyYXBcIiBtYXhNYWluPXttYXhNYWlufSBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fT5cbiAgICAgICAgICAgIDxIZWFkZXJTZWN0aW9uXG4gICAgICAgICAgICAgIGtleT17J1VzZXJzJ31cbiAgICAgICAgICAgICAgdGl0bGU9eydVc2Vycyd9XG4gICAgICAgICAgICAgIGNvbnRlbnQ9e1xuICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICB7dXNlcnMgJiZcbiAgICAgICAgICAgICAgICAgICAgdXNlcnMubWFwKCh1c2VyLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxBIGtleT17YFVzZXJDb250ZW50XyR7aW5kZXh9YH0gaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfS91c2Vycy8ke3VzZXIuaWR9L2B9IGRpc3BsYXk9XCJibG9ja1wiIHdpZHRoPVwiMTAwJVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFVzZXJDb250ZW50IGNsYXNzTmFtZT17J1VzZXJJbmRleCd9IHVzZXI9e3VzZXJ9IGZ1bGxXaWR0aD17ZmFsc2V9IGhvdmVyQW5pbWF0aW9uVHlwZT17aG92ZXJBbmltYXRpb25Cb3hTaGFkb3d9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9BPlxuICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L01haW5Db250ZW50cz5cbiAgICAgICAgICA8QWR2ZXJ0cy5SaWdodCBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSAvPlxuICAgICAgICA8L01haW5Db250ZW50c1dyYXA+XG4gICAgICAgIDxBZHZlcnRzLlVuZGVyIHNob3dBZHZlcnQgLz5cbiAgICAgIDwvTWFpbkNvbnRlbnRzQm9hcmQ+XG4gICAgICA8U25zU2hhcmUgY2g9e2NofSAvPlxuXG4gICAgICA8Rm9vdGVyIGNoPXtjaH0gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudHM7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChGbGV4KWBcbiAgbWluLXdpZHRoOiAke3N0eWxlcy5hcHBNaW5XaWR0aH1weDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgZm9udC1zaXplOiAke3N0eWxlcy5mb250QmFzZVNpemV9cHg7XG4gIGZvbnQtd2VpZ2h0OiAke3N0eWxlcy5mb250QmFzZVdlaWdodH07XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgJ0hpcmFnaW5vIFNhbnMnLCAnTm90byBTYW5zIENKSyBKUCcsICdPcmlnaW5hbCBZdSBHb3RoaWMnLFxuICAgICAgJ1l1IEdvdGhpYycsIHNhbnMtc2VyaWYsICdBcHBsZSBDb2xvciBFbW9qaScsICdTZWdvZSBVSSBFbW9qaScsICdTZWdvZSBVSSBTeW1ib2wnLCAnTm90byBTYW5zIEVtb2ppJztcbiAgICA6OnNlbGVjdGlvbiB7XG4gICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgfVxuICA6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogMC41ZW07XG4gIH1cbiAgOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgfVxuICA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JleTtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgc2xhdGVncmV5O1xuICB9XG4gIDo6LXdlYmtpdC1zY3JvbGxiYXI6aG92ZXIge1xuICAgIHdpZHRoOiAwLjdlbTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIGZvbnQtc2l6ZTogJHtzdHlsZXMuZm9udEJhc2VTcFNpemV9cHg7XG4gIH1cbmA7XG5cbmNvbnN0IE1haW5Db250ZW50c0JvYXJkID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMTAwJTtcbmA7XG5cbmNvbnN0IE1haW5Db250ZW50c1dyYXAgPSBzdHlsZWQoRmxleCk8eyBzaG93QWR2ZXJ0OiBib29sZWFuIH0+YFxuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIHdpZHRoOiAxMDAlO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgfVxuYDtcblxuY29uc3QgTWFpbkNvbnRlbnRzID0gc3R5bGVkKE1haW4pPHsgc2hvd0FkdmVydDogYm9vbGVhbjsgbWF4TWFpbjogYm9vbGVhbiB9PmBcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogJHsocHJvcHMpID0+ICghcHJvcHMubWF4TWFpbiA/IGAke3N0eWxlcy5hcHBXaWR0aH1weGAgOiAnMTAwJScpfTtcbiAgdHJhbnNpdGlvbjogbWF4LXdpZHRoICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcyBlYXNlIDBzO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuZG91YmxlQWR2ZXJ0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93QWR2ZXJ0ID8gYGNhbGMoIDEwMCUgLSAke3N0eWxlcy5hZHZlcnRXaWR0aCArIHN0eWxlcy5iYXNlTWFyZ2luICogMn1weClgIDogJzEwMCUnKX07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcbiIsImltcG9ydCAnbm9ybWFsaXplLmNzcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSb3V0ZXMsIFJvdXRlLCBCcm93c2VyUm91dGVyIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmltcG9ydCBBY2NvdW50IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvbW9sZWN1bGVzL0FjY291bnQnO1xuaW1wb3J0IFRvcCBmcm9tICdjb3Zlci9jb21wb25lbnRzL3BhZ2VzL1RvcC8nO1xuaW1wb3J0IFVzZXJzSW5kZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9wYWdlcy9Vc2Vycyc7XG5pbXBvcnQgRGFzaGJvYXJkIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvcGFnZXMvVXNlcnMvRGFzaGJvYXJkJztcbmltcG9ydCB7IEZsZXhlc0NvbnRleHQsIGdldEZsZXhlc1ZhbHVlIH0gZnJvbSAnY292ZXIvZmxleGVzJztcbmltcG9ydCBVc2VyLCB7IHVzZXJJbml0IH0gZnJvbSAnY292ZXIvbW9kZWwvVXNlcic7XG5cbmV4cG9ydCB0eXBlIFBhZ2VQcm9wcyA9IHtcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIG15VXNlcjogVXNlcjtcbiAgc2V0TXlVc2VyOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxVc2VyPj47XG4gIGFjY291bnQ6IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbmNvbnN0IENvbnRhaW5lcjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IFtpc015UGFnZSwgc2V0SXNNeVBhZ2VdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbbXlVc2VyLCBzZXRNeVVzZXJdID0gdXNlU3RhdGU8VXNlcj4odXNlckluaXQpO1xuICBjb25zdCBjb21tb25Qcm9wczogUGFnZVByb3BzID0ge1xuICAgIGlzTXlQYWdlLFxuICAgIG15VXNlcixcbiAgICBzZXRNeVVzZXIsXG4gICAgYWNjb3VudDogPEFjY291bnQgbXlVc2VyPXtteVVzZXJ9IHNldE15VXNlcj17c2V0TXlVc2VyfSBzZXRJc015UGFnZT17c2V0SXNNeVBhZ2V9IC8+LFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXhlc0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2dldEZsZXhlc1ZhbHVlKCl9PlxuICAgICAgPEJyb3dzZXJSb3V0ZXI+XG4gICAgICAgIDxSb3V0ZXM+XG4gICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCIgZWxlbWVudD17PFRvcCB7Li4uY29tbW9uUHJvcHN9IC8+fSAvPlxuICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3VzZXJzXCIgZWxlbWVudD17PFVzZXJzSW5kZXggey4uLmNvbW1vblByb3BzfSAvPn0gLz5cbiAgICAgICAgICA8Um91dGUgcGF0aD1cIi91c2Vycy86dXNlcklkXCIgZWxlbWVudD17PERhc2hib2FyZCB7Li4uY29tbW9uUHJvcHN9IC8+fSAvPlxuICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiLyovXCIgZWxlbWVudD17PFRvcCB7Li4uY29tbW9uUHJvcHN9IC8+fSAvPlxuICAgICAgICA8L1JvdXRlcz5cbiAgICAgIDwvQnJvd3NlclJvdXRlcj5cbiAgICA8L0ZsZXhlc0NvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGxpYk5hbWU6ICdmbGV4ZXMnLFxuICB1c2VUaGVtZTogJ2NsYXNzaWMnLFxuICBiYXNlTWFyZ2luOiAxNixcbiAgYmFzZVBhZGRpbmc6IDE2LFxuICBiYXNlRm9udFNpemU6IDE4LFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGJveExheW91dFByb3BzSW5pdCB9IGZyb20gJy4vZW50aXR5L0JveExheW91dCc7XG5pbXBvcnQgeyBjb250ZW50UHJvcHNJbml0IH0gZnJvbSAnLi9lbnRpdHkvQ29udGVudCc7XG5pbXBvcnQgeyBQcm9wcyB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgZmxleExheW91dFByb3BzSW5pdCA9IHtcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBmbG93OiAncm93IG5vd3JhcCcsXG4gIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0Jyxcbn07XG5cbmV4cG9ydCBjb25zdCBmbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0ID0ge1xuICBkaXNwbGF5OiAnZmxleCcsXG4gIGZsb3c6ICdyb3cgbm93cmFwJyxcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbn07XG5cbmV4cG9ydCBjb25zdCBmbGV4ZXNQcm9wc0luaXQ6IFByb3BzID0ge1xuICBjaGlsZHJlbjogPD48Lz4sXG4gIC4uLmJveExheW91dFByb3BzSW5pdCxcbiAgLi4uZmxleExheW91dFByb3BzSW5pdCxcbiAgLi4uY29udGVudFByb3BzSW5pdCxcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jb25zdCBlYXNlSW5PdXRRdWFkID0gKGN1cnJlbnRUaW1lOiBudW1iZXIsIHN0YXJ0OiBudW1iZXIsIGVuZDogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKSA9PiB7XG4gIGNvbnN0IGFkZCA9IChjdXJyZW50VGltZTogbnVtYmVyLCBzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlciwgZHVyYXRpb246IG51bWJlcikgPT4ge1xuICAgIGN1cnJlbnRUaW1lIC89IGR1cmF0aW9uIC8gMjtcbiAgICBpZiAoY3VycmVudFRpbWUgPCAxKSB7XG4gICAgICByZXR1cm4gKGVuZCAvIDIpICogY3VycmVudFRpbWUgKiBjdXJyZW50VGltZSArIHN0YXJ0O1xuICAgIH0gZWxzZSB7XG4gICAgICBjdXJyZW50VGltZS0tO1xuICAgICAgcmV0dXJuICgtZW5kIC8gMikgKiAoY3VycmVudFRpbWUgKiAoY3VycmVudFRpbWUgLSAyKSAtIDEpICsgc3RhcnQ7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHN1YiA9IChjdXJyZW50VGltZTogbnVtYmVyLCBzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlciwgZHVyYXRpb246IG51bWJlcikgPT4ge1xuICAgIGN1cnJlbnRUaW1lIC89IGR1cmF0aW9uIC8gMjtcbiAgICBpZiAoY3VycmVudFRpbWUgPCAxKSB7XG4gICAgICByZXR1cm4gc3RhcnQgLSAoc3RhcnQgLyAyKSAqIGN1cnJlbnRUaW1lICogY3VycmVudFRpbWUgKyBlbmQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJlbnRUaW1lLS07XG4gICAgICByZXR1cm4gc3RhcnQgLSAoLXN0YXJ0IC8gMikgKiAoY3VycmVudFRpbWUgKiAoY3VycmVudFRpbWUgLSAyKSAtIDEpICsgZW5kO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHN0YXJ0IDwgZW5kID8gYWRkKGN1cnJlbnRUaW1lLCBzdGFydCwgZW5kLCBkdXJhdGlvbikgOiBzdWIoY3VycmVudFRpbWUsIHN0YXJ0LCBlbmQsIGR1cmF0aW9uKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzY3JvbGxMZWZ0QW5pbWF0aW9uID0gKGVsbTogSFRNTEVsZW1lbnQsIGVuZDogbnVtYmVyLCBzdGFydEJhY2s/OiAoKSA9PiB2b2lkLCBlbmRCYWNrPzogKCkgPT4gdm9pZCk6IHZvaWQgPT4ge1xuICBsZXQgY3VycmVudFRpbWUgPSAwO1xuICBsZXQgdGltZW91dElkOiBudW1iZXI7XG4gIGNvbnN0IGR1cmF0aW9uID0gMzAwMDtcbiAgY29uc3Qgc3RhcnQgPSBlbG0uc2Nyb2xsTGVmdDtcbiAgY29uc3QgaW5jcmVtZW50ID0gMjA7XG4gIGxldCBsZWZ0ID0gMDtcbiAgY29uc3QgYW5pbWF0ZVNjcm9sbCA9ICgpID0+IHtcbiAgICBjdXJyZW50VGltZSArPSBpbmNyZW1lbnQ7XG4gICAgbGVmdCA9IGVhc2VJbk91dFF1YWQoY3VycmVudFRpbWUsIHN0YXJ0LCBlbmQsIGR1cmF0aW9uKTtcbiAgICAvLyBjb25zb2xlLmxvZygnQW5pbWF0aW9uIExFRlQgJyArIE1hdGguZmxvb3IobGVmdCkpO1xuICAgIGVsbS5zY3JvbGxMZWZ0ID0gTWF0aC5mbG9vcihsZWZ0KTtcbiAgICBpZiAoY3VycmVudFRpbWUgPCBkdXJhdGlvbikge1xuICAgICAgdGltZW91dElkID0gd2luZG93LnNldFRpbWVvdXQoYW5pbWF0ZVNjcm9sbCwgaW5jcmVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICBlbmRCYWNrICYmIGVuZEJhY2soKTtcbiAgICB9XG4gIH07XG4gIHN0YXJ0QmFjayAmJiBzdGFydEJhY2soKTtcbiAgYW5pbWF0ZVNjcm9sbCgpO1xufTtcblxuZXhwb3J0IGNvbnN0IHNjcm9sbFdpbmRvd1RvcEFuaW1hdGlvbiA9IChfdG86IG51bWJlciwgZGlzcGF0aD86IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGJvb2xlYW4+Pik6IHZvaWQgPT4ge1xuICBjb25zdCBkdXJhdGlvbiA9IDMwMDtcbiAgY29uc3Qgc3RhcnQgPSB3aW5kb3cuc2Nyb2xsWTtcbiAgbGV0IGN1cnJlbnRUaW1lID0gMDtcbiAgY29uc3QgaW5jcmVtZW50ID0gMjA7XG4gIGNvbnN0IHRvID0gX3RvIC0gc3RhcnQ7XG4gIGNvbnN0IGFuaW1hdGVTY3JvbGwgPSAoKSA9PiB7XG4gICAgY3VycmVudFRpbWUgKz0gaW5jcmVtZW50O1xuICAgIGNvbnN0IHNjcm9sbFRvcCA9IGVhc2VJbk91dFF1YWQoY3VycmVudFRpbWUsIHN0YXJ0LCB0bywgZHVyYXRpb24pO1xuICAgIHdpbmRvdy5zY3JvbGxUbygwLCBzY3JvbGxUb3ApO1xuICAgIGlmIChjdXJyZW50VGltZSA8IGR1cmF0aW9uKSB7XG4gICAgICB3aW5kb3cuc2V0VGltZW91dChhbmltYXRlU2Nyb2xsLCBpbmNyZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkaXNwYXRoICYmIGRpc3BhdGgodHJ1ZSk7XG4gICAgfVxuICB9O1xuICBkaXNwYXRoICYmIGRpc3BhdGgoZmFsc2UpO1xuICBhbmltYXRlU2Nyb2xsKCk7XG59O1xuIiwiaW1wb3J0IHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCBjb25zdCBub25lID0gJ25vbmUnO1xuZXhwb3J0IGNvbnN0IHRvcGxpbmUgPSAndG9wbGluZSc7XG5leHBvcnQgY29uc3QgdW5kZXJsaW5lID0gJ3VuZGVybGluZSc7XG5leHBvcnQgY29uc3QgcmlnaHRsaW5lID0gJ3JpZ2h0bGluZSc7XG5leHBvcnQgY29uc3QgbGVmdGxpbmUgPSAnbGVmdGxpbmUnO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0NpcmNsZSA9ICdjaXJjbGUnO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0J1dHRvbiA9ICdidXR0b24nO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0lucHV0ID0gJ2lucHV0JztcbmV4cG9ydCBjb25zdCBzaXplT2ZmID0gJ29mZic7XG5leHBvcnQgY29uc3Qgc2l6ZVNtYWxsID0gJ3NtYWxsJztcbmV4cG9ydCBjb25zdCBzaXplTWlkZGxlID0gJ21pZGRsZSc7XG5leHBvcnQgY29uc3Qgc2l6ZUxhcmdlID0gJ2xhcmdlJztcbmV4cG9ydCBjb25zdCBzaXplSHVnZSA9ICdodWdlJztcbmV4cG9ydCBjb25zdCBzaXplRGVmYXVsdCA9IGZhbHNlO1xuXG5leHBvcnQgdHlwZSBTaXplVHlwZSA9IGJvb2xlYW4gfCB0eXBlb2Ygc2l6ZVNtYWxsIHwgdHlwZW9mIHNpemVNaWRkbGUgfCB0eXBlb2Ygc2l6ZUxhcmdlIHwgdHlwZW9mIHNpemVIdWdlO1xuXG5leHBvcnQgdHlwZSBCb3hMYXlvdXRQcm9wc1R5cGUgPSB7XG4gIHdpZHRoPzogc3RyaW5nO1xuICBtaW5XaWR0aD86IHN0cmluZyB8IG51bWJlcjtcbiAgbWF4V2lkdGg/OiBzdHJpbmcgfCBudW1iZXI7XG4gIGhlaWdodD86IHN0cmluZztcbiAgdXBwZXJQYWRkaW5nPzogU2l6ZVR5cGU7XG4gIHNpZGVQYWRkaW5nPzogU2l6ZVR5cGU7XG4gIGJvdHRvbVBhZGRpbmc/OiBTaXplVHlwZTtcbiAgdXBwZXJNYXJnaW4/OiBTaXplVHlwZTtcbiAgc2lkZU1hcmdpbj86IFNpemVUeXBlO1xuICBib3R0b21NYXJnaW4/OiBTaXplVHlwZTtcbiAgYm9yZGVyPzogYm9vbGVhbiB8IHR5cGVvZiB1bmRlcmxpbmUgfCB0eXBlb2YgdG9wbGluZSB8IHR5cGVvZiByaWdodGxpbmUgfCB0eXBlb2YgbGVmdGxpbmUgfCB0eXBlb2Ygbm9uZTtcbiAgYm9yZGVyUmFkaXVzPzogYm9vbGVhbiB8IHR5cGVvZiByYWRpdXNDaXJjbGUgfCB0eXBlb2YgcmFkaXVzQnV0dG9uIHwgdHlwZW9mIHJhZGl1c0lucHV0O1xuICBob3Zlcj86IGJvb2xlYW4gfCBzdHJpbmc7XG4gIHJlc2V0T3JpZ2luPzogYm9vbGVhbjtcbiAgb3ZlcmZsb3c/OiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY29uc3QgYm94TGF5b3V0UHJvcHNJbml0ID0ge1xuICB3aWR0aDogJ2F1dG8nLFxuICBtaW5XaWR0aDogMCxcbiAgbWF4V2lkdGg6ICdub25lJyxcbiAgaGVpZ2h0OiAnYXV0bycsXG4gIHVwcGVyUGFkZGluZzogc2l6ZURlZmF1bHQsXG4gIHNpZGVQYWRkaW5nOiBzaXplRGVmYXVsdCxcbiAgYm90dG9tUGFkZGluZzogc2l6ZURlZmF1bHQsXG4gIHVwcGVyTWFyZ2luOiBzaXplRGVmYXVsdCxcbiAgc2lkZU1hcmdpbjogc2l6ZURlZmF1bHQsXG4gIGJvdHRvbU1hcmdpbjogc2l6ZURlZmF1bHQsXG4gIGJvcmRlcjogZmFsc2UsXG4gIGJvcmRlclJhZGl1czogZmFsc2UsXG4gIGhvdmVyOiBmYWxzZSxcbiAgcmVzZXRPcmlnaW46IGZhbHNlLFxuICBvdmVyZmxvdzogJ3Zpc2libGUnLFxufTtcblxuZXhwb3J0IGNvbnN0IEJveExheW91dENzcyA9IGNzczxCb3hMYXlvdXRQcm9wc1R5cGU+YFxuICBvdmVyZmxvdzogJHsocHJvcHMpID0+IHByb3BzLm92ZXJmbG93fTtcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiBnZXRXaWR0aChwcm9wcyl9O1xuICBtaW4td2lkdGg6ICR7KHByb3BzKSA9PiBnZXRNaW5NYXhTaXplKHByb3BzLm1pbldpZHRoKX07XG4gIG1heC13aWR0aDogJHsocHJvcHMpID0+IGdldE1pbk1heFNpemUocHJvcHMubWF4V2lkdGgpfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gZ2V0SGVpZ2h0KHByb3BzKX07XG4gIHBhZGRpbmc6ICR7KHByb3BzKSA9PiBnZXRQYWRkaW5nKHByb3BzKX07XG4gIG1hcmdpbjogJHsocHJvcHMpID0+IGdldE1hcmdpbihwcm9wcyl9O1xuICAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRSYWRpdXMocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldEJhY2tncm91bmQocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5yZXNldE9yaWdpbiA/ICd0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDBweCknIDogJycpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuYDtcblxuZXhwb3J0IGNvbnN0IGdldEJhY2tncm91bmQgPSAocHJvcHM6IEJveExheW91dFByb3BzVHlwZSB8IGFueSkgPT4ge1xuICBpZiAocHJvcHMuaG92ZXIgPT09IHRydWUpIHtcbiAgICByZXR1cm4gYDpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy53aGl0ZUhvdmVyQ29sb3J9O1xuICAgIH1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmhvdmVyKSB7XG4gICAgcmV0dXJuIGA6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtwcm9wcy5ob3Zlcn07XG4gICAgfWA7XG4gIH1cbiAgcmV0dXJuICcnO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFdpZHRoID0gKHByb3BzOiBCb3hMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgbGV0IHdpZHRoID0gJ2F1dG8nO1xuXG4gIGlmIChwcm9wcy53aWR0aCA9PT0gJ2F1dG8nKSB7XG4gICAgcmV0dXJuIHByb3BzLndpZHRoO1xuICB9XG5cbiAgaWYgKHByb3BzLmRpc3BsYXkgJiYgcHJvcHMuZGlzcGxheS5pbmRleE9mKCdpbmxpbmUnKSA9PT0gMCkge1xuICAgIHJldHVybiAnYXV0byc7XG4gIH1cblxuICBpZiAocHJvcHMuc2lkZU1hcmdpbiA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgcmV0dXJuIGBjYWxjKCAxMDAlIC0gJHtzdHlsZXMuYmFzZU1hcmdpbiAqIDJ9cHggKWA7XG4gIH0gZWxzZSBpZiAocHJvcHMuc2lkZU1hcmdpbiA9PT0gdHJ1ZSB8fCBwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplTWlkZGxlKSB7XG4gICAgcmV0dXJuIGBjYWxjKCAxMDAlIC0gJHtzdHlsZXMuZG91YmxlTWFyZ2luICogMn1weCApYDtcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplTGFyZ2UpIHtcbiAgICByZXR1cm4gYGNhbGMoIDEwMCUgLSAke3N0eWxlcy50cmlwbGVNYXJnaW4gKiAyfXB4IClgO1xuICB9IGVsc2UgaWYgKHByb3BzLnNpZGVNYXJnaW4gPT09IHNpemVIdWdlKSB7XG4gICAgcmV0dXJuIGBjYWxjKCAxMDAlIC0gJHtzdHlsZXMucXVhZE1hcmdpbiAqIDJ9cHggKWA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHByb3BzLndpZHRoO1xuICB9XG5cbiAgcmV0dXJuIHdpZHRoO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE1pbk1heFNpemUgPSAodmFsdWU6IHN0cmluZyB8IG51bWJlcikgPT4gKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgPyB2YWx1ZSA6IGAke3ZhbHVlfXB4YCk7XG5leHBvcnQgY29uc3QgZ2V0SGVpZ2h0ID0gKHByb3BzOiBCb3hMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IChwcm9wcy5oZWlnaHQgPyBwcm9wcy5oZWlnaHQgOiAnYXV0bycpO1xuXG5leHBvcnQgY29uc3QgZ2V0UGFkZGluZyA9IChwcm9wczogQm94TGF5b3V0UHJvcHNUeXBlIHwgYW55KSA9PiB7XG4gIGxldCBwYWRkaW5nVG9wID0gMDtcbiAgbGV0IHBhZGRpbmdSaWdodCA9IDA7XG4gIGxldCBwYWRkaW5nQm90dG9tID0gMDtcbiAgbGV0IHBhZGRpbmdMZWZ0ID0gMDtcblxuICAvLyB1cHBlclxuICBpZiAocHJvcHMudXBwZXJQYWRkaW5nID09PSBzaXplU21hbGwpIHtcbiAgICBwYWRkaW5nVG9wID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLnVwcGVyUGFkZGluZyA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy51cHBlclBhZGRpbmcgPT09IHRydWUpIHtcbiAgICBwYWRkaW5nVG9wID0gc3R5bGVzLmRvdWJsZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMudXBwZXJQYWRkaW5nID09PSBzaXplTGFyZ2UpIHtcbiAgICBwYWRkaW5nVG9wID0gc3R5bGVzLnRyaXBsZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMudXBwZXJQYWRkaW5nID09PSBzaXplSHVnZSkge1xuICAgIHBhZGRpbmdUb3AgPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gIH1cblxuICAvLyBzaWRlXG4gIGlmIChwcm9wcy5zaWRlUGFkZGluZyA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgcGFkZGluZ1JpZ2h0ID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICAgIHBhZGRpbmdMZWZ0ID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLnNpZGVQYWRkaW5nID09PSBzaXplTWlkZGxlIHx8IHByb3BzLnNpZGVQYWRkaW5nID09PSB0cnVlKSB7XG4gICAgcGFkZGluZ1JpZ2h0ID0gc3R5bGVzLmRvdWJsZVBhZGRpbmc7XG4gICAgcGFkZGluZ0xlZnQgPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlUGFkZGluZyA9PT0gc2l6ZUxhcmdlKSB7XG4gICAgcGFkZGluZ1JpZ2h0ID0gc3R5bGVzLnRyaXBsZVBhZGRpbmc7XG4gICAgcGFkZGluZ0xlZnQgPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlUGFkZGluZyA9PT0gc2l6ZUh1Z2UpIHtcbiAgICBwYWRkaW5nUmlnaHQgPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gICAgcGFkZGluZ0xlZnQgPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gIH1cblxuICAvLyBib3R0b21cbiAgaWYgKHByb3BzLmJvdHRvbVBhZGRpbmcgPT09IHNpemVTbWFsbCkge1xuICAgIHBhZGRpbmdCb3R0b20gPSBzdHlsZXMuYmFzZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMuYm90dG9tUGFkZGluZyA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5ib3R0b21QYWRkaW5nID09PSB0cnVlKSB7XG4gICAgcGFkZGluZ0JvdHRvbSA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbVBhZGRpbmcgPT09IHNpemVMYXJnZSkge1xuICAgIHBhZGRpbmdCb3R0b20gPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3R0b21QYWRkaW5nID09PSBzaXplSHVnZSkge1xuICAgIHBhZGRpbmdCb3R0b20gPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gIH1cblxuICByZXR1cm4gYCR7cGFkZGluZ1RvcH1weCAke3BhZGRpbmdSaWdodH1weCAke3BhZGRpbmdCb3R0b219cHggJHtwYWRkaW5nTGVmdH1weGA7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TWFyZ2luID0gKHByb3BzOiBCb3hMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgbGV0IG1hcmdpblRvcCA9IDA7XG4gIGxldCBtYXJnaW5SaWdodCA9IDA7XG4gIGxldCBtYXJnaW5Cb3R0b20gPSAwO1xuICBsZXQgbWFyZ2luTGVmdCA9IDA7XG5cbiAgLy8gdXBwZXJcbiAgaWYgKHByb3BzLnVwcGVyTWFyZ2luID09PSBzaXplU21hbGwpIHtcbiAgICBtYXJnaW5Ub3AgPSBzdHlsZXMuYmFzZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMudXBwZXJNYXJnaW4gPT09IHNpemVNaWRkbGUgfHwgcHJvcHMudXBwZXJNYXJnaW4gPT09IHRydWUpIHtcbiAgICBtYXJnaW5Ub3AgPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy51cHBlck1hcmdpbiA9PT0gc2l6ZUxhcmdlKSB7XG4gICAgbWFyZ2luVG9wID0gc3R5bGVzLnRyaXBsZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMudXBwZXJNYXJnaW4gPT09IHNpemVIdWdlKSB7XG4gICAgbWFyZ2luVG9wID0gc3R5bGVzLnF1YWRQYWRkaW5nO1xuICB9XG5cbiAgLy8gc2lkZVxuICBpZiAocHJvcHMuc2lkZU1hcmdpbiA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgbWFyZ2luUmlnaHQgPSBzdHlsZXMuYmFzZVBhZGRpbmc7XG4gICAgbWFyZ2luTGVmdCA9IHN0eWxlcy5iYXNlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplTWlkZGxlIHx8IHByb3BzLnNpZGVNYXJnaW4gPT09IHRydWUpIHtcbiAgICBtYXJnaW5SaWdodCA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICAgIG1hcmdpbkxlZnQgPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplTGFyZ2UpIHtcbiAgICBtYXJnaW5SaWdodCA9IHN0eWxlcy50cmlwbGVQYWRkaW5nO1xuICAgIG1hcmdpbkxlZnQgPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplSHVnZSkge1xuICAgIG1hcmdpblJpZ2h0ID0gc3R5bGVzLnF1YWRQYWRkaW5nO1xuICAgIG1hcmdpbkxlZnQgPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gIH1cblxuICAvLyBib3R0b21cbiAgaWYgKHByb3BzLmJvdHRvbU1hcmdpbiA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgbWFyZ2luQm90dG9tID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbU1hcmdpbiA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5ib3R0b21NYXJnaW4gPT09IHRydWUpIHtcbiAgICBtYXJnaW5Cb3R0b20gPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3R0b21NYXJnaW4gPT09IHNpemVMYXJnZSkge1xuICAgIG1hcmdpbkJvdHRvbSA9IHN0eWxlcy50cmlwbGVQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbU1hcmdpbiA9PT0gc2l6ZUh1Z2UpIHtcbiAgICBtYXJnaW5Cb3R0b20gPSBzdHlsZXMucXVhZFBhZGRpbmc7XG4gIH1cblxuICByZXR1cm4gYCR7bWFyZ2luVG9wfXB4ICR7bWFyZ2luUmlnaHR9cHggJHttYXJnaW5Cb3R0b219cHggJHttYXJnaW5MZWZ0fXB4YDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRCb3JkZXIgPSAocHJvcHM6IEJveExheW91dFByb3BzVHlwZSB8IGFueSkgPT4ge1xuICBpZiAocHJvcHMuYm9yZGVyID09PSB1bmRlcmxpbmUpIHtcbiAgICByZXR1cm4gYGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvcmRlciA9PT0gcmlnaHRsaW5lKSB7XG4gICAgcmV0dXJuIGBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvcmRlciA9PT0gbGVmdGxpbmUpIHtcbiAgICByZXR1cm4gYGJvcmRlci1sZWZ0OiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9YDtcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3JkZXIgPT09IHRvcGxpbmUpIHtcbiAgICByZXR1cm4gYGJvcmRlci10b3A6IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvcmRlciA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9YDtcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3JkZXIgPT09IGZhbHNlIHx8IHByb3BzLmJvcmRlciA9PT0gbm9uZSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuICByZXR1cm4gJyc7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmFkaXVzID0gKHByb3BzOiBCb3hMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgaWYgKHByb3BzLmJvcmRlclJhZGl1cyA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYm9yZGVyUmFkaXVzfXB4YDtcbiAgfVxuICBpZiAocHJvcHMuYm9yZGVyUmFkaXVzID09PSByYWRpdXNDaXJjbGUpIHtcbiAgICByZXR1cm4gYGJvcmRlci1yYWRpdXM6IDUwJWA7XG4gIH1cbiAgaWYgKHByb3BzLmJvcmRlclJhZGl1cyA9PT0gcmFkaXVzQnV0dG9uKSB7XG4gICAgcmV0dXJuIGBib3JkZXItcmFkaXVzOiA2cHhgO1xuICB9XG4gIGlmIChwcm9wcy5ib3JkZXJSYWRpdXMgPT09IHJhZGl1c0lucHV0KSB7XG4gICAgcmV0dXJuIGBib3JkZXItcmFkaXVzOiAzcHhgO1xuICB9XG4gIHJldHVybiAnJztcbn07XG4iLCJpbXBvcnQgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmV4cG9ydCB0eXBlIENvbnRlbnRQcm9wcyA9IHtcbiAgY29sb3I/OiBzdHJpbmc7XG4gIGZvbnRTaXplPzogc3RyaW5nO1xuICBmb250V2VpZ2h0Pzogc3RyaW5nO1xuICBsaW5lSGVpZ2h0Pzogc3RyaW5nO1xuICBsZXR0ZXJTcGFjaW5nPzogc3RyaW5nO1xuICB1c2VTZWxlY3Q/OiBib29sZWFuO1xuICBwb2ludGVyPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjb25zdCBjb250ZW50UHJvcHNJbml0OiBDb250ZW50UHJvcHMgPSB7XG4gIGNvbG9yOiAnaW5oZXJpdCcsXG4gIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gIGZvbnRXZWlnaHQ6ICdpbmhlcml0JyxcbiAgbGluZUhlaWdodDogJ2luaGVyaXQnLFxuICBsZXR0ZXJTcGFjaW5nOiAnMnB4JyxcbiAgdXNlU2VsZWN0OiBmYWxzZSxcbiAgcG9pbnRlcjogZmFsc2UsXG59O1xuXG5leHBvcnQgY29uc3QgQ29udGVudENzcyA9IGNzczxDb250ZW50UHJvcHM+YFxuICBjb2xvcjogJHsocHJvcHMpID0+IHByb3BzLmNvbG9yfTtcbiAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFNpemV9O1xuICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmZvbnRXZWlnaHR9O1xuICBsaW5lLWhlaWdodDogJHsocHJvcHMpID0+IHByb3BzLmxpbmVIZWlnaHR9O1xuICB1c2Utc2VsZWN0OiAkeyhwcm9wcykgPT4gKHByb3BzLnVzZVNlbGVjdCA/ICdhdXRvJyA6ICdub25lJyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMucG9pbnRlciA/ICdwb2ludGVyJyA6ICdpbmhlcml0Jyl9O1xuICBsZXR0ZXItc3BhY2luZzogJHsocHJvcHMpID0+IHByb3BzLmxldHRlclNwYWNpbmd9O1xuYDtcbiIsImltcG9ydCB7IEZsZXhCb3hMYXlvdXRQcm9wc1R5cGUgfSBmcm9tICcuLic7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEJveExheW91dENzcyB9IGZyb20gJy4vQm94TGF5b3V0JztcbmltcG9ydCB7IENvbnRlbnRDc3MgfSBmcm9tICcuL0NvbnRlbnQnO1xuXG5pbXBvcnQgeyBnZXRIb3ZlckFsdENzcyB9IGZyb20gJy4uL3BsdWdpbi9ob3ZlckFsdCc7XG5cbnR5cGUgQ29tcG9uZW50UHJvcHNUeXBlID0gYW55O1xuXG5leHBvcnQgY29uc3QgRmxleENzcyA9IGNzczxGbGV4Qm94TGF5b3V0UHJvcHNUeXBlPmBcbiAgZGlzcGxheTogJHsocHJvcHMpID0+IHByb3BzLmRpc3BsYXl9O1xuICBmbGV4LWZsb3c6ICR7KHByb3BzKSA9PiBwcm9wcy5mbG93fTtcbiAgYWxpZ24taXRlbXM6ICR7KHByb3BzKSA9PiBwcm9wcy5hbGlnbkl0ZW1zfTtcbiAganVzdGlmeS1jb250ZW50OiAkeyhwcm9wcykgPT4gcHJvcHMuanVzdGlmeUNvbnRlbnR9O1xuICB1c2VyLXNlbGVjdDogJHsocHJvcHMpID0+IChwcm9wcy5zZWxlY3QgPyAndGV4dCcgOiAnbm9uZScpfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBGbGV4ZXNCYXNlQ3NzID0gY3NzPENvbXBvbmVudFByb3BzVHlwZT5gXG4gICR7RmxleENzc307XG4gICR7Qm94TGF5b3V0Q3NzfTtcbiAgJHtDb250ZW50Q3NzfTtcbiAgJHsocHJvcHMpID0+IHByb3BzLmFsdCAmJiBwcm9wcy5hbHQgIT09ICcnICYmIGdldEhvdmVyQWx0Q3NzKHByb3BzKX07XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IHR5cGUgT25IYW5kbGVUeXBlID0ge1xuICBvbkNsaWNrPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkNvbnRleHRNZW51PzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkRvdWJsZUNsaWNrPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkRyYWc/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uRHJhZ0VuZD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25EcmFnRW50ZXI/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uRHJhZ0V4aXQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uRHJhZ0xlYXZlPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkRyYWdPdmVyPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkRyYWdTdGFydD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25Ecm9wPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbk1vdXNlRG93bj86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25Nb3VzZUVudGVyPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbk1vdXNlTGVhdmU/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uTW91c2VNb3ZlPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbk1vdXNlT3V0PzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbk1vdXNlT3Zlcj86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25Nb3VzZVVwPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvblRvdWNoQ2FuY2VsPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvblRvdWNoRW5kPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvblRvdWNoTW92ZT86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25Ub3VjaFN0YXJ0PzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvblNjcm9sbD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25TY3JvbGxFbmQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uV2hlZWw/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgdHlwZSBPbklucHV0RXZlbnRUeXBlID0ge1xuICBvbkZvY3VzPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkJsdXI/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uSW5wdXQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uSW52YWxpZD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25SZXNldD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25TdWJtaXQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uRXJyb3I/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uTG9hZD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25TZWxlY3Q/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uQW5pbWF0aW9uU3RhcnQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uQW5pbWF0aW9uRW5kPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkFuaW1hdGlvbkl0ZXJhdGlvbj86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25UcmFuc2l0aW9uRW5kPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkNvbXBvc2l0aW9uRW5kPzogKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTEVsZW1lbnQsIFVJRXZlbnQ+KSA9PiB2b2lkO1xuICBvbkNvbXBvc2l0aW9uU3RhcnQ/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uQ29tcG9zaXRpb25VcGRhdGU/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRWxlbWVudCwgVUlFdmVudD4pID0+IHZvaWQ7XG4gIG9uS2V5RG93bj86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25LZXlQcmVzcz86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbiAgb25LZXlVcD86IChlOiBSZWFjdC5VSUV2ZW50PEhUTUxFbGVtZW50LCBVSUV2ZW50PikgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBvblNjcm9sbEVuZCA9ICgpID0+IHtcbiAgbGV0IG51bWJlcjogbnVtYmVyID0gTnVtYmVyKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2ZsZXhlc09uU2Nyb2xsRW5kJykpO1xuICBudW1iZXIgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7fSwgMjAwKTtcbiAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnZmxleGVzT25TY3JvbGxFbmQnLCBTdHJpbmcobnVtYmVyKSk7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZyc7XG5pbXBvcnQgeyBmbGV4ZXNQcm9wc0luaXQgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBGbGV4ZXNDb250ZXh0VHlwZSwgdXNlRmxleGVzQ29udGV4dCB9IGZyb20gJy4vbm9kZXMvY29udGV4dCc7XG5pbXBvcnQgc3R5bGVkQ29tcG9uZW50cyBmcm9tICcuL3N0eWxlZENvbXBvbmVudHMnO1xuaW1wb3J0IHsgUHJvcHMsIEZsZXhlc09wdGlvblR5cGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IFRhZ1R5cGUgfSBmcm9tICcuL3R5cGVzL3RhZyc7XG5cbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb25zdGFudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmNvbnN0IHsgbGliTmFtZSB9ID0gY29uZmlnO1xuY29uc3QgZGVsZXRlQ2hpbGRyZW4gPSBbJ0ltZyddO1xubGV0IGVsZW1lbnRzOiB7IFtrZXkgaW4gVGFnVHlwZV06IChwcm9wcywgb3B0aW9uKSA9PiBSZWFjdC5SZWFjdE5vZGUgfSB8IHsgRGl2OiAoKSA9PiB2b2lkIH0gPSB7IERpdjogKCkgPT4ge30gfTtcblxuT2JqZWN0LmtleXMoc3R5bGVkQ29tcG9uZW50cykuZm9yRWFjaCgoY2F0ZWdvcnkpID0+IHtcbiAgT2JqZWN0LmtleXMoc3R5bGVkQ29tcG9uZW50c1tjYXRlZ29yeV0pLmZvckVhY2goKHRhZ05hbWU6IFRhZ1R5cGUpID0+IHtcbiAgICBjb25zdCBGbGV4ZXNDb21wb25lbnQgPSBzdHlsZWRDb21wb25lbnRzW2NhdGVnb3J5XVt0YWdOYW1lXTtcbiAgICBlbGVtZW50c1t0YWdOYW1lXSA9IChwcm9wcywgb3B0aW9uKSA9PiB7XG4gICAgICBpZiAoZGVsZXRlQ2hpbGRyZW4uaW5jbHVkZXModGFnTmFtZSkpIGRlbGV0ZSBwcm9wcy5jaGlsZHJlbjtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxGbGV4ZXNDb21wb25lbnQgey4uLnByb3BzfSB7Li4ub3B0aW9ufT5cbiAgICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICAgIDwvRmxleGVzQ29tcG9uZW50PlxuICAgICAgKTtcbiAgICB9O1xuICB9KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCAodGFnVHlwZTogVGFnVHlwZSkgPT4gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBnbG9iYWxDb250ZXh0OiBGbGV4ZXNDb250ZXh0VHlwZSA9IHVzZUZsZXhlc0NvbnRleHQoKTtcblxuICBsZXQgcDogUHJvcHMgPSB7XG4gICAgcmVmOiB1c2VSZWYoKSxcbiAgICAuLi5mbGV4ZXNQcm9wc0luaXQsXG4gICAgLi4ucHJvcHMsXG4gICAgY2xhc3NOYW1lOiBwcm9wcy5jbGFzc05hbWUgPyBgJHtsaWJOYW1lfSAke3RhZ1R5cGV9ICR7cHJvcHMuY2xhc3NOYW1lfWAgOiBgJHtsaWJOYW1lfSAke3RhZ1R5cGV9YCxcbiAgfTtcblxuICBjb25zdCBbb3B0aW9uLCBzZXRPcHRpb25dID0gdXNlU3RhdGU8RmxleGVzT3B0aW9uVHlwZT4oeyBoZWlnaHQ6IHAuaGVpZ2h0IH0pO1xuICBjb25zdCBpc092ZXJmbG93WVNjcm9sbCA9IHAub3ZlcmZsb3cuc3BsaXQoJyAnKVsxXSAmJiBwLm92ZXJmbG93LnNwbGl0KCcgJylbMV0gPT09ICdzY3JvbGwnO1xuICBjb25zdCBzZWxmRWxtID0gcC5yZWYuY3VycmVudCBhcyB1bmtub3duIGFzIEhUTUxFbGVtZW50O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzZWxmRWxtKSB7XG4gICAgICBpZiAoaXNPdmVyZmxvd1lTY3JvbGwpIHtcbiAgICAgICAgY29uc3QgcGFyZW50RWxtID0gc2VsZkVsbS5wYXJlbnRFbGVtZW50O1xuICAgICAgICBzZXRPcHRpb24oeyAuLi5vcHRpb24sIGhlaWdodDogYCR7cGFyZW50RWxtLmNsaWVudEhlaWdodH1weGAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbaXNPdmVyZmxvd1lTY3JvbGwgJiYgZ2xvYmFsQ29udGV4dC5pbm5lckhlaWdodF0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHNlbGZFbG0pIHtcbiAgICAgIGlmIChwLm1vdXRlZCkge1xuICAgICAgICBwLm1vdXRlZChzZWxmRWxtKTtcbiAgICAgIH1cbiAgICAgIHNldE9wdGlvbih7IC4uLm9wdGlvbiwgY2xpZW50V2lkdGg6IHNlbGZFbG0uY2xpZW50V2lkdGgsIGNsaWVudEhlaWdodDogc2VsZkVsbS5jbGllbnRIZWlnaHQgfSk7XG4gICAgfVxuICB9LCBbc2VsZkVsbV0pO1xuXG4gIHJldHVybiBlbGVtZW50c1t0YWdUeXBlXSA/IGVsZW1lbnRzW3RhZ1R5cGVdKHAsIG9wdGlvbikgOiBlbGVtZW50cy5EaXYocCwgb3B0aW9uKTtcbn07XG4iLCJpbXBvcnQgZ2VuZXJhdGUgZnJvbSAnLi9nZW5lcmF0ZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb25zdGFudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHkvRmxleExheW91dCc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS9Cb3hMYXlvdXQnO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdHkvQ29udGVudCc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS9PbkhhbmRsZSc7XG5leHBvcnQgKiBmcm9tICcuL2VudGl0eS9BbmltYXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9ub2Rlcy9jb250ZXh0JztcbmV4cG9ydCAqIGZyb20gJy4vcGx1Z2luL2hvdmVyQWx0JztcbmV4cG9ydCAqIGZyb20gJy4vc3R5bGVkQ29tcG9uZW50cyc7XG5cbi8vIFNlY3Rpb25zXG5leHBvcnQgY29uc3QgU2VjdGlvbiA9IGdlbmVyYXRlKCdTZWN0aW9uJyk7XG5leHBvcnQgY29uc3QgTmF2ID0gZ2VuZXJhdGUoJ05hdicpO1xuZXhwb3J0IGNvbnN0IEFydGljbGUgPSBnZW5lcmF0ZSgnQXJ0aWNsZScpO1xuZXhwb3J0IGNvbnN0IEhlYWRlciA9IGdlbmVyYXRlKCdIZWFkZXInKTtcbmV4cG9ydCBjb25zdCBGb290ZXIgPSBnZW5lcmF0ZSgnRm9vdGVyJyk7XG5leHBvcnQgY29uc3QgTWFpbiA9IGdlbmVyYXRlKCdNYWluJyk7XG5leHBvcnQgY29uc3QgQWRkcmVzcyA9IGdlbmVyYXRlKCdBZGRyZXNzJyk7XG4vLyBIZWFkc1xuZXhwb3J0IGNvbnN0IEgxID0gZ2VuZXJhdGUoJ0gxJyk7XG5leHBvcnQgY29uc3QgSDIgPSBnZW5lcmF0ZSgnSDInKTtcbmV4cG9ydCBjb25zdCBIMyA9IGdlbmVyYXRlKCdIMycpO1xuZXhwb3J0IGNvbnN0IEg0ID0gZ2VuZXJhdGUoJ0g0Jyk7XG5leHBvcnQgY29uc3QgSDUgPSBnZW5lcmF0ZSgnSDUnKTtcbmV4cG9ydCBjb25zdCBINiA9IGdlbmVyYXRlKCdINicpO1xuLy8gR3JvdXBzXG5leHBvcnQgY29uc3QgRGl2ID0gZ2VuZXJhdGUoJ0RpdicpO1xuZXhwb3J0IGNvbnN0IFByZSA9IGdlbmVyYXRlKCdQcmUnKTtcbmV4cG9ydCBjb25zdCBCbG9ja3F1b3RlID0gZ2VuZXJhdGUoJ0Jsb2NrcXVvdGUnKTtcbmV4cG9ydCBjb25zdCBPbCA9IGdlbmVyYXRlKCdPbCcpO1xuZXhwb3J0IGNvbnN0IFUgPSBnZW5lcmF0ZSgnVWwnKTtcbmV4cG9ydCBjb25zdCBMaSA9IGdlbmVyYXRlKCdMaScpO1xuZXhwb3J0IGNvbnN0IERsID0gZ2VuZXJhdGUoJ0RsJyk7XG5leHBvcnQgY29uc3QgRHQgPSBnZW5lcmF0ZSgnRHQnKTtcbmV4cG9ydCBjb25zdCBEZCA9IGdlbmVyYXRlKCdEZCcpO1xuZXhwb3J0IGNvbnN0IEZpZ3VyZSA9IGdlbmVyYXRlKCdGaWd1cmUnKTtcbmV4cG9ydCBjb25zdCBGaWdjYXB0aW9uID0gZ2VuZXJhdGUoJ0ZpZ2NhcHRpb24nKTtcbmV4cG9ydCBjb25zdCBIciA9IGdlbmVyYXRlKCdIcicpO1xuLy8gVGV4dHNcbmV4cG9ydCBjb25zdCBQID0gZ2VuZXJhdGUoJ1AnKTtcbmV4cG9ydCBjb25zdCBBID0gZ2VuZXJhdGUoJ0EnKTtcbmV4cG9ydCBjb25zdCBFbSA9IGdlbmVyYXRlKCdFbScpO1xuZXhwb3J0IGNvbnN0IFN0cm9uZyA9IGdlbmVyYXRlKCdTdHJvbmcnKTtcbmV4cG9ydCBjb25zdCBTbWFsbCA9IGdlbmVyYXRlKCdTbWFsbCcpO1xuZXhwb3J0IGNvbnN0IFMgPSBnZW5lcmF0ZSgnUycpO1xuZXhwb3J0IGNvbnN0IENpdGUgPSBnZW5lcmF0ZSgnQ2l0ZScpO1xuZXhwb3J0IGNvbnN0IFEgPSBnZW5lcmF0ZSgnUScpO1xuZXhwb3J0IGNvbnN0IERmbiA9IGdlbmVyYXRlKCdEZm4nKTtcbmV4cG9ydCBjb25zdCBBYmJyID0gZ2VuZXJhdGUoJ0FiYnInKTtcbmV4cG9ydCBjb25zdCBUaW1lID0gZ2VuZXJhdGUoJ1RpbWUnKTtcbmV4cG9ydCBjb25zdCBDb2RlID0gZ2VuZXJhdGUoJ0NvZGUnKTtcbmV4cG9ydCBjb25zdCBWYXIgPSBnZW5lcmF0ZSgnVmFyJyk7XG5leHBvcnQgY29uc3QgU2FtcCA9IGdlbmVyYXRlKCdTYW1wJyk7XG5leHBvcnQgY29uc3QgS2JkID0gZ2VuZXJhdGUoJ0tiZCcpO1xuZXhwb3J0IGNvbnN0IFN1YiA9IGdlbmVyYXRlKCdTdWInKTtcbmV4cG9ydCBjb25zdCBTdXAgPSBnZW5lcmF0ZSgnU3VwJyk7XG5leHBvcnQgY29uc3QgSSA9IGdlbmVyYXRlKCdJJyk7XG5leHBvcnQgY29uc3QgQiA9IGdlbmVyYXRlKCdCJyk7XG5leHBvcnQgY29uc3QgTWFyayA9IGdlbmVyYXRlKCdNYXJrJyk7XG5leHBvcnQgY29uc3QgUnVieSA9IGdlbmVyYXRlKCdSdWJ5Jyk7XG5leHBvcnQgY29uc3QgUnQgPSBnZW5lcmF0ZSgnUnQnKTtcbmV4cG9ydCBjb25zdCBScCA9IGdlbmVyYXRlKCdScCcpO1xuZXhwb3J0IGNvbnN0IEJkbyA9IGdlbmVyYXRlKCdCZG8nKTtcbmV4cG9ydCBjb25zdCBTcGFuID0gZ2VuZXJhdGUoJ1NwYW4nKTtcbmV4cG9ydCBjb25zdCBCciA9IGdlbmVyYXRlKCdCcicpO1xuZXhwb3J0IGNvbnN0IFdiciA9IGdlbmVyYXRlKCdXYnInKTtcbmV4cG9ydCBjb25zdCBJbnMgPSBnZW5lcmF0ZSgnSW5zJyk7XG5leHBvcnQgY29uc3QgRGVsID0gZ2VuZXJhdGUoJ0RlbCcpO1xuLy8gRW1iZWRzXG5leHBvcnQgY29uc3QgSW1nID0gZ2VuZXJhdGUoJ0ltZycpO1xuZXhwb3J0IGNvbnN0IElmcmFtZSA9IGdlbmVyYXRlKCdJZnJhbWUnKTtcbmV4cG9ydCBjb25zdCBFbWJlZCA9IGdlbmVyYXRlKCdFbWJlZCcpO1xuZXhwb3J0IGNvbnN0IE9iamVjdCA9IGdlbmVyYXRlKCdPYmplY3QnKTtcbmV4cG9ydCBjb25zdCBQYXJhbSA9IGdlbmVyYXRlKCdQYXJhbScpO1xuZXhwb3J0IGNvbnN0IFZpZGVvID0gZ2VuZXJhdGUoJ1ZpZGVvJyk7XG5leHBvcnQgY29uc3QgQXVkaW8gPSBnZW5lcmF0ZSgnQXVkaW8nKTtcbmV4cG9ydCBjb25zdCBTb3VyY2UgPSBnZW5lcmF0ZSgnU291cmNlJyk7XG5leHBvcnQgY29uc3QgQ2FudmFzID0gZ2VuZXJhdGUoJ0NhbnZhcycpO1xuZXhwb3J0IGNvbnN0IE1hcCA9IGdlbmVyYXRlKCdNYXAnKTtcbmV4cG9ydCBjb25zdCBBcmVhID0gZ2VuZXJhdGUoJ0FyZWEnKTtcbi8vIFRhYmxlXG5leHBvcnQgY29uc3QgVGFibGUgPSBnZW5lcmF0ZSgnVGFibGUnKTtcbmV4cG9ydCBjb25zdCBDYXB0aW9uID0gZ2VuZXJhdGUoJ0NhcHRpb24nKTtcbmV4cG9ydCBjb25zdCBDb2xncm91cCA9IGdlbmVyYXRlKCdDb2xncm91cCcpO1xuZXhwb3J0IGNvbnN0IENvbCA9IGdlbmVyYXRlKCdDb2wnKTtcbmV4cG9ydCBjb25zdCBUYm9keSA9IGdlbmVyYXRlKCdUYm9keScpO1xuZXhwb3J0IGNvbnN0IFRoZWFkID0gZ2VuZXJhdGUoJ1RoZWFkJyk7XG5leHBvcnQgY29uc3QgVGZvb3QgPSBnZW5lcmF0ZSgnVGZvb3QnKTtcbmV4cG9ydCBjb25zdCBUciA9IGdlbmVyYXRlKCdUcicpO1xuZXhwb3J0IGNvbnN0IFRkID0gZ2VuZXJhdGUoJ1RkJyk7XG5leHBvcnQgY29uc3QgVGggPSBnZW5lcmF0ZSgnVGgnKTtcbi8vIEZvcm1zXG5leHBvcnQgY29uc3QgRm9ybSA9IGdlbmVyYXRlKCdGb3JtJyk7XG5leHBvcnQgY29uc3QgSW5wdXQgPSBnZW5lcmF0ZSgnSW5wdXQnKTtcbmV4cG9ydCBjb25zdCBGaWVsZHNldCA9IGdlbmVyYXRlKCdGaWVsZHNldCcpO1xuZXhwb3J0IGNvbnN0IExlZ2VuZCA9IGdlbmVyYXRlKCdMZWdlbmQnKTtcbmV4cG9ydCBjb25zdCBMYWJlbCA9IGdlbmVyYXRlKCdMYWJlbCcpO1xuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9IGdlbmVyYXRlKCdCdXR0b24nKTtcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBnZW5lcmF0ZSgnU2VsZWN0Jyk7XG5leHBvcnQgY29uc3QgRGF0YWxpc3QgPSBnZW5lcmF0ZSgnRGF0YWxpc3QnKTtcbmV4cG9ydCBjb25zdCBPcHRncm91cCA9IGdlbmVyYXRlKCdPcHRncm91cCcpO1xuZXhwb3J0IGNvbnN0IE9wdGlvbiA9IGdlbmVyYXRlKCdPcHRpb24nKTtcbmV4cG9ydCBjb25zdCBUZXh0YXJlYSA9IGdlbmVyYXRlKCdUZXh0YXJlYScpO1xuZXhwb3J0IGNvbnN0IEtleWdlbiA9IGdlbmVyYXRlKCdLZXlnZW4nKTtcbmV4cG9ydCBjb25zdCBPdXRwdXQgPSBnZW5lcmF0ZSgnT3V0cHV0Jyk7XG5leHBvcnQgY29uc3QgUHJvZ3Jlc3MgPSBnZW5lcmF0ZSgnUHJvZ3Jlc3MnKTtcbmV4cG9ydCBjb25zdCBNZXRlciA9IGdlbmVyYXRlKCdNZXRlcicpO1xuLy8gSW50ZXJhY3RpdmVcbmV4cG9ydCBjb25zdCBEZXRhaWxzID0gZ2VuZXJhdGUoJ0RldGFpbHMnKTtcbmV4cG9ydCBjb25zdCBTdW1tYXJ5ID0gZ2VuZXJhdGUoJ1N1bW1hcnknKTtcbmV4cG9ydCBjb25zdCBNZW51ID0gZ2VuZXJhdGUoJ01lbnUnKTtcblxuLy8gZGVmYXVsdFxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGUoJ0RpdicpO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEdvb2dsZVNlc3Npb25UeXBlLCBnb29nbGVTZXNzaW9uSW5pdCB9IGZyb20gJ2NvdmVyL21vZGVsL0dvb2dsZSc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIEZsZXhlc0NvbnRleHRUeXBlID0ge1xuICBpbm5lcldpZHRoOiBudW1iZXI7XG4gIGlubmVySGVpZ2h0OiBudW1iZXI7XG4gIGlzU2Nyb2xsVG9wOiBib29sZWFuO1xuICBpc1NwTGF5b3V0OiBib29sZWFuO1xuICBpc1NwTGF5b3V0U3RyaWN0OiBib29sZWFuO1xuICBpc1RyYW5zaXRpb246IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgZmxleGVzQ29udGV4dGluaXQgPSB7XG4gIGlubmVyV2lkdGg6IDAsXG4gIGlubmVySGVpZ2h0OiAwLFxuICBpc1Njcm9sbFRvcDogZmFsc2UsXG4gIGlzU3BMYXlvdXQ6IGZhbHNlLFxuICBpc1NwTGF5b3V0U3RyaWN0OiBmYWxzZSxcbiAgaXNUcmFuc2l0aW9uOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IEZsZXhlc0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KGZsZXhlc0NvbnRleHRpbml0KTtcblxuZXhwb3J0IGNvbnN0IHVzZUZsZXhlc0NvbnRleHQgPSAoKSA9PiB7XG4gIHJldHVybiB1c2VDb250ZXh0KEZsZXhlc0NvbnRleHQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEZsZXhlc1ZhbHVlID0gKCkgPT4ge1xuICBjb25zdCBbZmxleGVzQ29udGV4dCwgc2V0RmxleGVzQ29udGV4dF0gPSB1c2VTdGF0ZShmbGV4ZXNDb250ZXh0aW5pdCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVGbGV4ZXNBY3Rpb24gPSAoKSA9PiB7XG4gICAgICBzZXRGbGV4ZXNDb250ZXh0KHtcbiAgICAgICAgaW5uZXJXaWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgIGlubmVySGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgIGlzU2Nyb2xsVG9wOiB3aW5kb3cuc2Nyb2xsWSA9PT0gMCxcbiAgICAgICAgaXNTcExheW91dDogd2luZG93LmlubmVyV2lkdGggPD0gc3R5bGVzLnNwTGF5b3V0V2lkdGgsXG4gICAgICAgIGlzU3BMYXlvdXRTdHJpY3Q6IHdpbmRvdy5pbm5lcldpZHRoIDw9IHN0eWxlcy5zcExheW91dFN0cmljdFdpZHRoLFxuICAgICAgICBpc1RyYW5zaXRpb246IGZhbHNlLFxuICAgICAgfSk7XG4gICAgfTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlRmxleGVzQWN0aW9uKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaGFuZGxlRmxleGVzQWN0aW9uKTtcbiAgICBoYW5kbGVGbGV4ZXNBY3Rpb24oKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZUZsZXhlc0FjdGlvbik7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaGFuZGxlRmxleGVzQWN0aW9uKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIGZsZXhlc0NvbnRleHQ7XG59O1xuIiwiaW1wb3J0IHN0eWxlZCwgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuZXhwb3J0IGNvbnN0IGdldEhvdmVyQWx0Q3NzID0gKHByb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5hbHQpIHtcbiAgICBsZXQgYXR0O1xuICAgIGxldCBob3Jpem9uO1xuICAgIGxldCB2ZXJ0aWNhbDtcbiAgICBsZXQgY29udGVudDtcbiAgICBsZXQgdHJhbnNsYXRlWTtcbiAgICBpZiAodHlwZW9mIHByb3BzLmFsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGF0dCA9ICdiZWZvcmUnO1xuICAgICAgaG9yaXpvbiA9ICdib3R0b206IDEwMCUnO1xuICAgICAgdmVydGljYWwgPSAnbGVmdDogMCc7XG4gICAgICBjb250ZW50ID0gcHJvcHMuYWx0O1xuICAgICAgdHJhbnNsYXRlWSA9IC04O1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb3BzLmFsdC5sYWJlbCA9PT0gJ3N0cmluZycgJiYgcHJvcHMuYWx0LnR5cGUgJiYgcHJvcHMuYWx0LnR5cGUgIT09ICcnKSB7XG4gICAgICBhdHQgPSBwcm9wcy5hbHQudHlwZS5pbmRleE9mKCd1cHBlcicpID09PSAwID8gJ2JlZm9yZScgOiAnYWZ0ZXInO1xuICAgICAgaG9yaXpvbiA9IGF0dCA9PT0gJ2JlZm9yZScgPyAnYm90dG9tOiAxMDAlJyA6ICd0b3A6IDEwMCUnO1xuICAgICAgdmVydGljYWwgPSBwcm9wcy5hbHQudHlwZS5pbmRleE9mKCdyaWdodCcpID4gMCA/ICdyaWdodDogMCcgOiAnbGVmdDogMCc7XG4gICAgICBjb250ZW50ID0gcHJvcHMuYWx0LmxhYmVsO1xuICAgICAgdHJhbnNsYXRlWSA9IGF0dCA9PT0gJ2JlZm9yZScgPyAtOCA6IDg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgaWYgKGNvbnRlbnQgPT09ICcnKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNzczxhbnk+YFxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gICAgICA6JHthdHR9IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAke2hvcml6b259O1xuICAgICAgICAke3ZlcnRpY2FsfTtcbiAgICAgICAgZGlzcGxheTogY29udGVudHM7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgbWluLWhlaWdodDogMDtcbiAgICAgICAgbWF4LWhlaWdodDogMDtcbiAgICAgICAgcGFkZGluZzogOHB4IDE2cHg7XG4gICAgICAgIG1hcmdpbjogMCA4cHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgICAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICAgICAgfVxuICAgICAgOmhvdmVyIHtcbiAgICAgICAgOiR7YXR0fSB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICR7aG9yaXpvbn07XG4gICAgICAgICAgJHt2ZXJ0aWNhbH07XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgbWluLWhlaWdodDogYXV0bztcbiAgICAgICAgICBtYXgtaGVpZ2h0OiB1bnNldDtcbiAgICAgICAgICBwYWRkaW5nOiA4cHggMTZweDtcbiAgICAgICAgICBtYXJnaW46IDAgOHB4O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBmb250LXNpemU6IDc1JTtcbiAgICAgICAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQmFzZX07XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICAgIGNvbnRlbnQ6ICcke2NvbnRlbnR9JztcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgICAgICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCwgJHt0cmFuc2xhdGVZfXB4KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG59O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhlc0Jhc2VDc3MgfSBmcm9tICcuLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmV4cG9ydCBjb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBJZnJhbWUgPSBzdHlsZWQuaWZyYW1lYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBFbWJlZCA9IHN0eWxlZC5lbWJlZGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgT2JqZWN0ID0gc3R5bGVkLm9iamVjdGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgUGFyYW0gPSBzdHlsZWQucGFyYW1gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFZpZGVvID0gc3R5bGVkLnZpZGVvYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBBdWRpbyA9IHN0eWxlZC5hdWRpb2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU291cmNlID0gc3R5bGVkLnNvdXJjZWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQ2FudmFzID0gc3R5bGVkLmNhbnZhc2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgTWFwID0gc3R5bGVkLm1hcGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQXJlYSA9IHN0eWxlZC5hcmVhYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBJbWcsXG4gIElmcmFtZSxcbiAgRW1iZWQsXG4gIE9iamVjdCxcbiAgUGFyYW0sXG4gIFZpZGVvLFxuICBBdWRpbyxcbiAgU291cmNlLFxuICBDYW52YXMsXG4gIE1hcCxcbiAgQXJlYSxcbn07XG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgRmxleGVzQmFzZUNzcyB9IGZyb20gJy4uL2VudGl0eS9GbGV4TGF5b3V0JztcblxuZXhwb3J0IGNvbnN0IEZvcm0gPSBzdHlsZWQuZm9ybWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBGaWVsZHNldCA9IHN0eWxlZC5maWVsZHNldGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBMZWdlbmQgPSBzdHlsZWQubGVnZW5kYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IExhYmVsID0gc3R5bGVkLmxhYmVsYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEYXRhbGlzdCA9IHN0eWxlZC5kYXRhbGlzdGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBPcHRncm91cCA9IHN0eWxlZC5vcHRncm91cGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBPcHRpb24gPSBzdHlsZWQub3B0aW9uYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFRleHRhcmVhID0gc3R5bGVkLnRleHRhcmVhYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IEtleWdlbiA9IHN0eWxlZC5rZXlnZW5gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgY29uc3QgT3V0cHV0ID0gc3R5bGVkLm91dHB1dGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBQcm9ncmVzcyA9IHN0eWxlZC5wcm9ncmVzc2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXRlciA9IHN0eWxlZC5tZXRlcmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRm9ybSxcbiAgSW5wdXQsXG4gIEZpZWxkc2V0LFxuICBMZWdlbmQsXG4gIExhYmVsLFxuICBCdXR0b24sXG4gIFNlbGVjdCxcbiAgRGF0YWxpc3QsXG4gIE9wdGdyb3VwLFxuICBPcHRpb24sXG4gIFRleHRhcmVhLFxuICBLZXlnZW4sXG4gIE91dHB1dCxcbiAgUHJvZ3Jlc3MsXG4gIE1ldGVyLFxufTtcbiIsImltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBGbGV4ZXNCYXNlQ3NzIH0gZnJvbSAnLi4vZW50aXR5L0ZsZXhMYXlvdXQnO1xuXG5leHBvcnQgY29uc3QgRGl2ID0gc3R5bGVkLmRpdmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBQcmUgPSBzdHlsZWQucHJlYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IEJsb2NrcXVvdGUgPSBzdHlsZWQuYmxvY2txdW90ZWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBPbCA9IHN0eWxlZC5vbGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBVbCA9IHN0eWxlZC51bGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBMaSA9IHN0eWxlZC5saWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEbCA9IHN0eWxlZC5kbGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEdCA9IHN0eWxlZC5kdGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBEZCA9IHN0eWxlZC5kZGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBGaWd1cmUgPSBzdHlsZWQuZmlndXJlYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IEZpZ2NhcHRpb24gPSBzdHlsZWQuZmlnY2FwdGlvbmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBIciA9IHN0eWxlZC5ocmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgRGl2LFxuICBQcmUsXG4gIEJsb2NrcXVvdGUsXG4gIE9sLFxuICBVbCxcbiAgTGksXG4gIERsLFxuICBEdCxcbiAgRGQsXG4gIEZpZ3VyZSxcbiAgRmlnY2FwdGlvbixcbiAgSHIsXG59O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhlc0Jhc2VDc3MgfSBmcm9tICcuLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmV4cG9ydCBjb25zdCBIMSA9IHN0eWxlZC5oMWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbiAgZm9udC1zaXplOiAxMjUlO1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6IGluaGVyaXQ7XG5gO1xuXG5leHBvcnQgY29uc3QgSDIgPSBzdHlsZWQuaDJgXG4gICR7RmxleGVzQmFzZUNzc307XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gIGNvbG9yOiBpbmhlcml0O1xuYDtcblxuZXhwb3J0IGNvbnN0IEgzID0gc3R5bGVkLmgzYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuICBmb250LXNpemU6IDEyMCU7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBjb2xvcjogaW5oZXJpdDtcbmA7XG5cbmV4cG9ydCBjb25zdCBINCA9IHN0eWxlZC5oNGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbiAgZm9udC1zaXplOiAxMjAlO1xuICBmb250LXdlaWdodDogMjAwO1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6IGluaGVyaXQ7XG5gO1xuXG5leHBvcnQgY29uc3QgSDUgPSBzdHlsZWQuaDVgXG4gICR7RmxleGVzQmFzZUNzc307XG4gIGZvbnQtc2l6ZTogMTIwJTtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gIGNvbG9yOiBpbmhlcml0O1xuYDtcblxuZXhwb3J0IGNvbnN0IEg2ID0gc3R5bGVkLmg2YFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuICBmb250LXNpemU6IDEyMCU7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBjb2xvcjogaW5oZXJpdDtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgSDEsXG4gIEgyLFxuICBIMyxcbiAgSDQsXG4gIEg1LFxuICBINixcbn07XG4iLCJpbXBvcnQgZW1iZWRzIGZyb20gJy4vZW1iZWRzJztcbmltcG9ydCBmb3JtcyBmcm9tICcuL2Zvcm1zJztcbmltcG9ydCBncm91cHMgZnJvbSAnLi9ncm91cHMnO1xuaW1wb3J0IGhlYWRzIGZyb20gJy4vaGVhZHMnO1xuaW1wb3J0IGludGVyYWN0aXZlIGZyb20gJy4vaW50ZXJhY3RpdmUnO1xuaW1wb3J0IHNlY3Rpb25zIGZyb20gJy4vc2VjdGlvbnMnO1xuaW1wb3J0IHRhYmxlcyBmcm9tICcuL3RhYmxlcyc7XG5pbXBvcnQgdGV4dHMgZnJvbSAnLi90ZXh0cyc7XG5cbmV4cG9ydCAqIGZyb20gJy4vZW1iZWRzJztcbmV4cG9ydCAqIGZyb20gJy4vZm9ybXMnO1xuZXhwb3J0ICogZnJvbSAnLi9ncm91cHMnO1xuZXhwb3J0ICogZnJvbSAnLi9oZWFkcyc7XG5leHBvcnQgKiBmcm9tICcuL2ludGVyYWN0aXZlJztcbmV4cG9ydCAqIGZyb20gJy4vc2VjdGlvbnMnO1xuZXhwb3J0ICogZnJvbSAnLi90YWJsZXMnO1xuZXhwb3J0ICogZnJvbSAnLi90ZXh0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZW1iZWRzLFxuICBmb3JtcyxcbiAgZ3JvdXBzLFxuICBoZWFkcyxcbiAgaW50ZXJhY3RpdmUsXG4gIHNlY3Rpb25zLFxuICB0YWJsZXMsXG4gIHRleHRzLFxufTtcbiIsImltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBGbGV4ZXNCYXNlQ3NzIH0gZnJvbSAnLi4vZW50aXR5L0ZsZXhMYXlvdXQnO1xuXG4vLyBpbnRlcmFjdGl2ZVxuZXhwb3J0IGNvbnN0IERldGFpbHMgPSBzdHlsZWQuZGV0YWlsc2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU3VtbWFyeSA9IHN0eWxlZC5zdW1tYXJ5YFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBNZW51ID0gc3R5bGVkLm1lbnVgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIERldGFpbHMsXG4gIFN1bW1hcnksXG4gIE1lbnUsXG59O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhlc0Jhc2VDc3MgfSBmcm9tICcuLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmV4cG9ydCBjb25zdCBTZWN0aW9uID0gc3R5bGVkLnNlY3Rpb25gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgY29uc3QgTmF2ID0gc3R5bGVkLm5hdmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBBcnRpY2xlID0gc3R5bGVkLmFydGljbGVgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBGb290ZXIgPSBzdHlsZWQuZm9vdGVyYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcblxuZXhwb3J0IGNvbnN0IE1haW4gPSBzdHlsZWQubWFpbmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBBZGRyZXNzID0gc3R5bGVkLmFkZHJlc3NgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFNlY3Rpb24sXG4gIE5hdixcbiAgQXJ0aWNsZSxcbiAgSGVhZGVyLFxuICBGb290ZXIsXG4gIE1haW4sXG4gIEFkZHJlc3MsXG59O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhlc0Jhc2VDc3MgfSBmcm9tICcuLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmV4cG9ydCBjb25zdCBUYWJsZSA9IHN0eWxlZC50YWJsZWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQ2FwdGlvbiA9IHN0eWxlZC5jYXB0aW9uYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBDb2xncm91cCA9IHN0eWxlZC5jb2xncm91cGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQ29sID0gc3R5bGVkLmNvbGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgVGJvZHkgPSBzdHlsZWQudGJvZHlgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFRoZWFkID0gc3R5bGVkLnRoZWFkYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBUZm9vdCA9IHN0eWxlZC50Zm9vdGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgVHIgPSBzdHlsZWQudHJgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFRkID0gc3R5bGVkLnRkYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBUaCA9IHN0eWxlZC50aGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgVGFibGUsXG4gIENhcHRpb24sXG4gIENvbGdyb3VwLFxuICBDb2wsXG4gIFRib2R5LFxuICBUaGVhZCxcbiAgVGZvb3QsXG4gIFRyLFxuICBUZCxcbiAgVGgsXG59O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhlc0Jhc2VDc3MgfSBmcm9tICcuLi9lbnRpdHkvRmxleExheW91dCc7XG5cbmV4cG9ydCBjb25zdCBQID0gc3R5bGVkLnBgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IEEgPSBzdHlsZWQuYWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuYDtcbmV4cG9ydCBjb25zdCBFbSA9IHN0eWxlZC5lbWBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU3Ryb25nID0gc3R5bGVkLnN0cm9uZ2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU21hbGwgPSBzdHlsZWQuc21hbGxgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFMgPSBzdHlsZWQuc2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQ2l0ZSA9IHN0eWxlZC5jaXRlYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBRID0gc3R5bGVkLnFgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IERmbiA9IHN0eWxlZC5kZm5gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IEFiYnIgPSBzdHlsZWQuYWJicmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgVGltZSA9IHN0eWxlZC50aW1lYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBDb2RlID0gc3R5bGVkLmNvZGVgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFZhciA9IHN0eWxlZC52YXJgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFNhbXAgPSBzdHlsZWQuc2FtcGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgS2JkID0gc3R5bGVkLmtiZGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU3ViID0gc3R5bGVkLnN1YmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgU3VwID0gc3R5bGVkLnN1cGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgSSA9IHN0eWxlZC5pYFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBCID0gc3R5bGVkLmJgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IE1hcmsgPSBzdHlsZWQubWFya2BcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgUnVieSA9IHN0eWxlZC5ydWJ5YFxuICAke0ZsZXhlc0Jhc2VDc3N9O1xuYDtcbmV4cG9ydCBjb25zdCBSdCA9IHN0eWxlZC5ydGBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgUnAgPSBzdHlsZWQucnBgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IEJkbyA9IHN0eWxlZC5iZG9gXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFNwYW4gPSBzdHlsZWQuc3BhbmBcbiAgJHtGbGV4ZXNCYXNlQ3NzfTtcbmA7XG5leHBvcnQgY29uc3QgQnIgPSBzdHlsZWQuYnJgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IFdiciA9IHN0eWxlZC53YnJgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IElucyA9IHN0eWxlZC5pbnNgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuZXhwb3J0IGNvbnN0IERlbCA9IHN0eWxlZC5kZWxgXG4gICR7RmxleGVzQmFzZUNzc307XG5gO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFAsXG4gIEEsXG4gIEVtLFxuICBTdHJvbmcsXG4gIFNtYWxsLFxuICBTLFxuICBDaXRlLFxuICBRLFxuICBEZm4sXG4gIEFiYnIsXG4gIFRpbWUsXG4gIENvZGUsXG4gIFZhcixcbiAgU2FtcCxcbiAgS2JkLFxuICBTdWIsXG4gIFN1cCxcbiAgSSxcbiAgQixcbiAgTWFyayxcbiAgUnVieSxcbiAgUnQsXG4gIFJwLFxuICBCZG8sXG4gIFNwYW4sXG4gIEJyLFxuICBXYnIsXG4gIElucyxcbiAgRGVsLFxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1vbk1vZGVsIHtcbiAgdG9Kc29uKCkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMpKTtcbiAgfVxuICBpc0ZpbGxlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbihPYmplY3QudmFsdWVzKHRoaXMpLmZpbmRJbmRleCgodmFsdWUpID0+IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09ICcnKSk7XG4gIH1cbn1cbiIsImV4cG9ydCB0eXBlIE1lbnVzVHlwZSA9IHtcbiAga2V5OiBzdHJpbmc7XG4gIGxhYmVsOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgY29uc3QgQWNjb3VudE1lbnVzTXlNZW51ID0gJ215TWVudSc7XG5leHBvcnQgY29uc3QgQWNjb3VudE1lbnVzU2VsZWN0QWNjb3VudCA9ICdzZWxlY3RBY2NvdW50JztcbmV4cG9ydCBjb25zdCBBY2NvdW50TWVudXNMb2dvdXQgPSAnbG9nb3V0JztcbmV4cG9ydCBjb25zdCBBY2NvdW50TWVudXM6IE1lbnVzVHlwZVtdID0gW1xuICB7IGtleTogQWNjb3VudE1lbnVzTXlNZW51LCBsYWJlbDogJ01ZIFBBR0UnIH0sXG4gIHsga2V5OiBBY2NvdW50TWVudXNTZWxlY3RBY2NvdW50LCBsYWJlbDogJ0FDQ09VTlRTJyB9LFxuICB7IGtleTogQWNjb3VudE1lbnVzTG9nb3V0LCBsYWJlbDogJ0xPR09VVCcgfSxcbl07XG4iLCJleHBvcnQgY29uc3Qgc2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXMgPSAnbGl2ZVBhZ2VzJztcbmV4cG9ydCBjb25zdCBzZWxlY3RDb250ZW50TWVudUNyZWF0b3JzID0gJ3N0b3JpZXMnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENvbnRlbnRNZW51Q29uZmlnID0gJ2NvbmZpZyc7XG5leHBvcnQgY29uc3Qgc2VsZWN0Q29udGVudE1lbnVCdXNpbmVzcyA9ICdidXNpbmVzcyc7XG5leHBvcnQgY29uc3Qgc2VsZWN0Q29udGVudE1lbnVTdG9yaWVzID0gJ3N0b3JpZXMnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENvbnRlbnRNZW51VXNlcnMgPSAndXNlcnMnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENvbnRlbnRNZW51RGVmYXVsdCA9IHNlbGVjdENvbnRlbnRNZW51QnVzaW5lc3M7XG5leHBvcnQgdHlwZSBTZWxlY3RDb250ZW50TWVudVR5cGUgPVxuICB8IHR5cGVvZiBzZWxlY3RDb250ZW50TWVudUxpdmVQYWdlc1xuICB8IHR5cGVvZiBzZWxlY3RDb250ZW50TWVudUJ1c2luZXNzXG4gIHwgdHlwZW9mIHNlbGVjdENvbnRlbnRNZW51U3Rvcmllc1xuICB8IHR5cGVvZiBzZWxlY3RDb250ZW50TWVudVVzZXJzXG4gIHwgdHlwZW9mIHNlbGVjdENvbnRlbnRNZW51TGl2ZVBhZ2VzXG4gIHwgdHlwZW9mIHNlbGVjdENvbnRlbnRNZW51Q3JlYXRvcnNcbiAgfCB0eXBlb2Ygc2VsZWN0Q29udGVudE1lbnVDb25maWc7XG4iLCJpbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBDb21tb25Nb2RlbCBmcm9tICcuL0NvbW1vbic7XG5cbmV4cG9ydCB0eXBlIFVzZXJIYXNTZWxmVGFnc1R5cGUgPSB7XG4gIGludmVzdG9yOiBib29sZWFuO1xuICBmb3VuZGVyOiBib29sZWFuO1xuICBtZW1iZXI6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyIGV4dGVuZHMgQ29tbW9uTW9kZWwge1xuICBwdWJsaWMgaWQ6IHN0cmluZztcbiAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgcHVibGljIGVtYWlsOiBzdHJpbmc7XG4gIHB1YmxpYyBiZzogc3RyaW5nO1xuICBwdWJsaWMgaWNvbjogc3RyaW5nO1xuICBwdWJsaWMgc25zSWNvbjogc3RyaW5nO1xuICBwdWJsaWMgYmlydGhkYXk6IG51bWJlcjtcbiAgcHVibGljIGxhbmd1YWdlczogc3RyaW5nW107XG4gIHB1YmxpYyBzZXhlczogc3RyaW5nW107XG4gIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBwdWJsaWMgaGFzU2VsZlRhZ3M6IFVzZXJIYXNTZWxmVGFnc1R5cGU7XG4gIGNvbnN0cnVjdG9yKHByb3BzPzogVXNlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5pZCA9IHRoaXMucmVzb2x2ZUlkKHByb3BzKTtcbiAgICB0aGlzLm5hbWUgPSBwcm9wcyAmJiBwcm9wcy5uYW1lID8gcHJvcHMubmFtZSA6ICcnO1xuICAgIHRoaXMuZW1haWwgPSBwcm9wcyAmJiBwcm9wcy5lbWFpbCA/IHByb3BzLmVtYWlsIDogJyc7XG4gICAgdGhpcy5iZyA9IHByb3BzICYmIHByb3BzLmJnID8gcHJvcHMuYmcgOiAnJztcbiAgICB0aGlzLmljb24gPSBwcm9wcyAmJiBwcm9wcy5pY29uID8gcHJvcHMuaWNvbiA6ICcnO1xuICAgIHRoaXMuc25zSWNvbiA9IHByb3BzICYmIHByb3BzLnNuc0ljb24gPyBwcm9wcy5zbnNJY29uIDogJyc7XG4gICAgdGhpcy5iaXJ0aGRheSA9IHByb3BzICYmIHByb3BzLmJpcnRoZGF5ID8gcHJvcHMuYmlydGhkYXkgOiBjb25mLmRlZmF1bHRCaXJ0aGRheVVuaXh0aW1lO1xuICAgIHRoaXMubGFuZ3VhZ2VzID0gcHJvcHMgJiYgcHJvcHMubGFuZ3VhZ2VzID8gcHJvcHMubGFuZ3VhZ2VzIDogW107XG4gICAgdGhpcy5zZXhlcyA9IHByb3BzICYmIHByb3BzLnNleGVzID8gcHJvcHMuc2V4ZXMgOiBbXTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gcHJvcHMgJiYgcHJvcHMuZGVzY3JpcHRpb24gPyBwcm9wcy5kZXNjcmlwdGlvbiA6ICdTZWxmIEludHJvZHVjdGlvbiBUZXh0Li4uLi4uJztcbiAgICB0aGlzLmhhc1NlbGZUYWdzID0gcHJvcHMgJiYgcHJvcHMuaGFzU2VsZlRhZ3MgPyBwcm9wcy5oYXNTZWxmVGFncyA6IHVzZXJIYXNTZWxmVGFnc0luaXQ7XG4gIH1cblxuICByZXNvbHZlSWQocHJvcHMpIHtcbiAgICBpZiAocHJvcHMpIHtcbiAgICAgIGlmIChwcm9wcy5pZCkgcmV0dXJuIHByb3BzLmlkO1xuICAgICAgaWYgKHByb3BzLl9pZCkgcmV0dXJuIHByb3BzLl9pZDtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCB1c2VySW5pdCA9IG5ldyBVc2VyKCk7XG5cbmV4cG9ydCBjb25zdCB1c2VySGFzU2VsZlRhZ3NJbml0ID0ge1xuICBpbnZlc3RvcjogZmFsc2UsXG4gIGZvdW5kZXI6IGZhbHNlLFxuICBtZW1iZXI6IGZhbHNlLFxufTtcbiIsImltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuZXhwb3J0IHR5cGUgRml4Rm91bmRlclZhbHVlc1R5cGUgPSB7XG4gIHNleGVzOiBzdHJpbmdbXTtcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgYmlydGhkYXk6IG51bWJlcjtcbiAgaW5kdXN0b3J5UGFyZW50SWQ6IHN0cmluZztcbiAgaW5kdXN0b3J5SWQ6IHN0cmluZztcbiAgc3RhcnR1cFNlcmllc0lkOiBzdHJpbmc7XG4gIHllYXI6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjb25zdCBmaXhGb3VuZGVyVmFsdWVzSW5pdDogRml4Rm91bmRlclZhbHVlc1R5cGUgPSB7XG4gIHNleGVzOiBbXSxcbiAgbGFuZ3VhZ2VzOiBbXSxcbiAgYmlydGhkYXk6IGNvbmYuZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG4gIGluZHVzdG9yeVBhcmVudElkOiAnJyxcbiAgaW5kdXN0b3J5SWQ6ICcnLFxuICBzdGFydHVwU2VyaWVzSWQ6ICcnLFxuICB5ZWFyOiAwLFxufTtcbiIsImltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuZXhwb3J0IHR5cGUgRml4SW52ZXN0b3JWYWx1ZXNUeXBlID0ge1xuICBzZXhlczogc3RyaW5nW107XG4gIGxhbmd1YWdlczogc3RyaW5nW107XG4gIGJpcnRoZGF5OiBudW1iZXI7XG4gIGluZHVzdG9yeVBhcmVudElkOiBzdHJpbmc7XG4gIGluZHVzdG9yeUlkOiBzdHJpbmc7XG4gIHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZml4SW52ZXN0b3JWYWx1ZXNJbml0OiBGaXhJbnZlc3RvclZhbHVlc1R5cGUgPSB7XG4gIHNleGVzOiBbXSxcbiAgbGFuZ3VhZ2VzOiBbXSxcbiAgYmlydGhkYXk6IGNvbmYuZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG4gIGluZHVzdG9yeVBhcmVudElkOiAnJyxcbiAgaW5kdXN0b3J5SWQ6ICcnLFxuICBzdGFydHVwU2VyaWVzSWQ6ICcnLFxuICB5ZWFyOiAwLFxufTtcbiIsImltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuZXhwb3J0IHR5cGUgRml4TWVtYmVyVmFsdWVzVHlwZSA9IHtcbiAgc2V4ZXM6IHN0cmluZ1tdO1xuICBsYW5ndWFnZXM6IHN0cmluZ1tdO1xuICBiaXJ0aGRheTogbnVtYmVyO1xuICBpbmR1c3RvcnlQYXJlbnRJZDogc3RyaW5nO1xuICBpbmR1c3RvcnlJZDogc3RyaW5nO1xuICBqb2JQYXJlbnRJZDogc3RyaW5nO1xuICBqb2JJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZml4TWVtYmVyVmFsdWVzSW5pdDogRml4TWVtYmVyVmFsdWVzVHlwZSA9IHtcbiAgc2V4ZXM6IFtdLFxuICBsYW5ndWFnZXM6IFtdLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbiAgaW5kdXN0b3J5UGFyZW50SWQ6ICcnLFxuICBpbmR1c3RvcnlJZDogJycsXG4gIGpvYlBhcmVudElkOiAnJyxcbiAgam9iSWQ6ICcnLFxuICB5ZWFyOiAwLFxufTtcbiIsImV4cG9ydCBjb25zdCBhbGxTZXggPSB7IHVuaXF1ZUlkOiAnQWxsJywgamE6ICflhajjgaYnLCBlbjogJ0FsbCcgfTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTZXhlcyA9IFtcbiAgeyB1bmlxdWVJZDogJzEnLCBqYTogJ+eUtycsIGVuOiAnTWFuJyB9LFxuICB7IHVuaXF1ZUlkOiAnMicsIGphOiAn5aWzJywgZW46ICdXb21hbicgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBzZXhlc0luaXQgPSBbJzEnLCAnMiddO1xuXG5leHBvcnQgY29uc3QgYWxsTGFuZ3VhZ2UgPSB7IHVuaXF1ZUlkOiAnQWxsJywgamE6ICflhajjgaYnLCBlbjogJ0FsbCcgfTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRMYW5ndWFnZXMgPSBbXG4gIHsgdW5pcXVlSWQ6ICcxJywgamE6ICfoi7Hoqp4nLCBlbjogJ0VuZ2xpc2gnIH0sXG4gIHsgdW5pcXVlSWQ6ICcyJywgamE6ICfkuK3lm73oqp4nLCBlbjogJ0dlcm1hbicgfSxcbiAgeyB1bmlxdWVJZDogJzMnLCBqYTogJ+aXpeacrOiqnicsIGVuOiAnSmFwYW5lYXNlJyB9LFxuICB7IHVuaXF1ZUlkOiAnNCcsIGphOiAn44Kk44Ku44Oq44K56KqeJywgZW46ICdCcml0aXNoJyB9LFxuICB7IHVuaXF1ZUlkOiAnNScsIGphOiAn44OS44Oz44OJ44Kl44O86KqeJywgZW46ICdIaW5kdScgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBmaXhQcm9maWxlVmFsdWVzSW5pdCA9IHtcbiAgc2V4ZXM6IFsnMScsICcyJ10sXG4gIGxhbmd1YWdlczogWycxJywgJzInLCAnMycsICc0JywgJzUnXSxcbn07XG4iLCJleHBvcnQgdHlwZSBGaXhTdG9yeVZhbHVlc1R5cGUgPSB7XG4gIHN0b3J5SWQ6IHN0cmluZztcbn07XG5cbmV4cG9ydCBjb25zdCBmaXhTdG9yeVZhbHVlc0luaXQ6IEZpeFN0b3J5VmFsdWVzVHlwZSA9IHtcbiAgc3RvcnlJZDogJycsXG59O1xuIiwiaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgeyBGaXhGb3VuZGVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL0ZvdW5kZXInO1xuaW1wb3J0IHsgRml4SW52ZXN0b3JWYWx1ZXNUeXBlIH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MvSW52ZXN0b3InO1xuaW1wb3J0IHsgRml4TWVtYmVyVmFsdWVzVHlwZSB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL01lbWJlcic7XG5pbXBvcnQgeyBGaXhTdG9yeVZhbHVlc1R5cGUgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9TdG9yeSc7XG5cbmV4cG9ydCB0eXBlIFVzZXJUYWdzVHlwZSA9IHtcbiAgc2VsZjogeyBpbnZlc3RvcjogYW55W107IGZvdW5kZXI6IGFueVtdOyBtZW1iZXI6IGFueVtdIH07XG4gIHJlbGF0aW9uOiB7IGludmVzdG9yOiBhbnlbXTsgZm91bmRlcjogYW55W107IG1lbWJlcjogYW55W10gfTtcbiAgc3Rvcnk6IHsgc3Rvcnk6IGFueVtdIH07XG59O1xuXG5leHBvcnQgY29uc3QgdGFnUGFyZW50U2VsZiA9ICdzZWxmJztcbmV4cG9ydCBjb25zdCB0YWdQYXJlbnRTZWFyY2ggPSAnc2VhcmNoJztcbmV4cG9ydCBjb25zdCB0YWdQYXJlbnRTdG9yeSA9ICdzdG9yeSc7XG5leHBvcnQgdHlwZSBUYWdQYXJlbnRUeXBlID0gdHlwZW9mIHRhZ1BhcmVudFNlbGYgfCB0eXBlb2YgdGFnUGFyZW50U2VhcmNoIHwgdHlwZW9mIHRhZ1BhcmVudFN0b3J5O1xuZXhwb3J0IGNvbnN0IHRhZ1BhcmVudFR5cGVzOiBUYWdQYXJlbnRUeXBlW10gPSBbdGFnUGFyZW50U2VsZiwgdGFnUGFyZW50U2VhcmNoLCB0YWdQYXJlbnRTdG9yeV07XG5leHBvcnQgdHlwZSBUYWdQYXJlbnRTYXZlQnV0dG9uRGlzYWJsZWRUeXBlID0ge307XG5cbmV4cG9ydCBjb25zdCB0YWdNb2RlVmlldyA9ICd2aWV3JztcbmV4cG9ydCBjb25zdCB0YWdNb2RlRWRpdCA9ICdlZGl0JztcbmV4cG9ydCB0eXBlIFRhZ01vZGVUeXBlID0gdHlwZW9mIHRhZ01vZGVWaWV3IHwgdHlwZW9mIHRhZ01vZGVFZGl0O1xuXG5leHBvcnQgY29uc3QgdGFnSW52ZXN0b3IgPSAnaW52ZXN0b3InO1xuZXhwb3J0IGNvbnN0IHRhZ0ZvdW5kZXIgPSAnZm91bmRlcic7XG5leHBvcnQgY29uc3QgdGFnTWVtYmVyID0gJ21lbWJlcic7XG5leHBvcnQgY29uc3QgdGFnU3RvcnkgPSAnc3RvcnknO1xuZXhwb3J0IHR5cGUgVGFnVHlwZSA9IHR5cGVvZiB0YWdJbnZlc3RvciB8IHR5cGVvZiB0YWdGb3VuZGVyIHwgdHlwZW9mIHRhZ01lbWJlciB8IHR5cGVvZiB0YWdTdG9yeTtcbmV4cG9ydCBjb25zdCB0YWdUeXBlcyA9IFt0YWdJbnZlc3RvciwgdGFnRm91bmRlciwgdGFnTWVtYmVyLCB0YWdTdG9yeV07XG5cbmV4cG9ydCB0eXBlIEZpeFZhbHVlc1R5cGUgPSBGaXhGb3VuZGVyVmFsdWVzVHlwZSB8IEZpeEludmVzdG9yVmFsdWVzVHlwZSB8IEZpeE1lbWJlclZhbHVlc1R5cGUgfCBGaXhTdG9yeVZhbHVlc1R5cGU7XG5cbmV4cG9ydCB0eXBlIE9wZW5Nb2RhbE9wdGlvblR5cGUgPSB7XG4gIHRhZ0lkOiBzdHJpbmc7XG4gIHVzZXJJZDogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICB0YWdQYXJlbnRUeXBlOiBUYWdQYXJlbnRUeXBlIHwgJyc7XG4gIHRhZ1R5cGU6IFRhZ1R5cGUgfCAnJztcbiAgaW5kdXN0b3J5UGFyZW50SWQ6IHN0cmluZztcbiAgaW5kdXN0b3J5SWQ6IHN0cmluZztcbiAgam9iUGFyZW50SWQ6IHN0cmluZztcbiAgam9iQ2F0ZWdvcnlJZDogc3RyaW5nO1xuICBqb2JJZDogc3RyaW5nO1xuICBzdGFydHVwU2VyaWVzSWQ6IHN0cmluZztcbiAgc3RvcnlJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG4gIGJnOiBzdHJpbmc7XG4gIGljb246IHN0cmluZztcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgc2V4ZXM6IHN0cmluZ1tdO1xuICBiaXJ0aGRheTogbnVtYmVyO1xuICBpbmRleD86IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjb25zdCBvcGVuTW9kYWxPcHRpb25Jbml0OiBPcGVuTW9kYWxPcHRpb25UeXBlID0ge1xuICB0YWdJZDogJycsXG4gIHVzZXJJZDogJycsXG4gIGlzRWRpdGFibGU6IGZhbHNlLFxuICB0YWdQYXJlbnRUeXBlOiAnJyxcbiAgdGFnVHlwZTogJycsXG4gIGluZGV4OiB1bmRlZmluZWQsXG4gIGJnOiAnJyxcbiAgaWNvbjogJycsXG4gIGxhbmd1YWdlczogW10sXG4gIHNleGVzOiBbXSxcbiAgYmlydGhkYXk6IGNvbmYuZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG4gIGluZHVzdG9yeVBhcmVudElkOiAnJyxcbiAgaW5kdXN0b3J5SWQ6ICcnLFxuICBqb2JQYXJlbnRJZDogJycsXG4gIGpvYkNhdGVnb3J5SWQ6ICcnLFxuICBqb2JJZDogJycsXG4gIHN0YXJ0dXBTZXJpZXNJZDogJycsXG4gIHN0b3J5SWQ6ICcnLFxuICB5ZWFyOiAwLFxufTtcblxuZXhwb3J0IGRlZmF1bHQge307XG4iLCJleHBvcnQgY29uc3QgdHJhbnNpdGlvbkR1cmF0aW9uID0gMzAwO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbn07XG4iLCJleHBvcnQgY29uc3QgYmFzZVNpemUgPSA4O1xuZXhwb3J0IGNvbnN0IGRvdWJsZVNpemUgPSBiYXNlU2l6ZSAqIDI7XG5leHBvcnQgY29uc3QgdHJpcGxlU2l6ZSA9IGJhc2VTaXplICogMztcbmV4cG9ydCBjb25zdCBxdWFkU2l6ZSA9IGJhc2VTaXplICogNDtcbmV4cG9ydCBjb25zdCBxdWludFNpemUgPSBiYXNlU2l6ZSAqIDU7XG5leHBvcnQgY29uc3Qgc2l4U2l6ZSA9IGJhc2VTaXplICogNjtcbmV4cG9ydCBjb25zdCBzZXBTaXplID0gYmFzZVNpemUgKiA3O1xuZXhwb3J0IGNvbnN0IGJhc2VNYXJnaW4gPSBiYXNlU2l6ZTtcbmV4cG9ydCBjb25zdCBkb3VibGVNYXJnaW4gPSBiYXNlTWFyZ2luICogMjtcbmV4cG9ydCBjb25zdCB0cmlwbGVNYXJnaW4gPSBiYXNlTWFyZ2luICogMztcbmV4cG9ydCBjb25zdCBxdWFkTWFyZ2luID0gYmFzZU1hcmdpbiAqIDQ7XG5leHBvcnQgY29uc3QgcXVpbnRNYXJnaW4gPSBiYXNlTWFyZ2luICogNTtcbmV4cG9ydCBjb25zdCBzZXhNYXJnaW4gPSBiYXNlTWFyZ2luICogNjtcbmV4cG9ydCBjb25zdCBzZXBNYXJnaW4gPSBiYXNlTWFyZ2luICogNztcbmV4cG9ydCBjb25zdCBiYXNlUGFkZGluZyA9IGJhc2VTaXplO1xuZXhwb3J0IGNvbnN0IGRvdWJsZVBhZGRpbmcgPSBiYXNlUGFkZGluZyAqIDI7XG5leHBvcnQgY29uc3QgdHJpcGxlUGFkZGluZyA9IGJhc2VQYWRkaW5nICogMztcbmV4cG9ydCBjb25zdCBxdWFkUGFkZGluZyA9IGJhc2VQYWRkaW5nICogNDtcbmV4cG9ydCBjb25zdCBxdWludFBhZGRpbmcgPSBiYXNlTWFyZ2luICogNTtcbmV4cG9ydCBjb25zdCBzZXhQYWRkaW5nID0gYmFzZU1hcmdpbiAqIDY7XG5leHBvcnQgY29uc3Qgc2VwUGFkZGluZyA9IGJhc2VNYXJnaW4gKiA3O1xuZXhwb3J0IGNvbnN0IHNoYWRvd1NpemUgPSAxMDtcbmV4cG9ydCBjb25zdCBmb250QmFzZVNpemUgPSAyMDtcbmV4cG9ydCBjb25zdCBmb250QmFzZVNwU2l6ZSA9IDE2O1xuZXhwb3J0IGNvbnN0IGZvbnRCYXNlV2VpZ2h0ID0gMjAwO1xuZXhwb3J0IGNvbnN0IGZvbnRTaXplID0gJzEwMCUnO1xuZXhwb3J0IGNvbnN0IGZvbnRXZWlnaHQgPSAnMjAwJztcbmV4cG9ydCBjb25zdCBsaW5lSGVpZ2h0ID0gJzMwcHgnO1xuZXhwb3J0IGNvbnN0IGJvcmRlclJhZGl1cyA9IGRvdWJsZVNpemU7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYmFzZVNpemUsXG4gIGRvdWJsZVNpemUsXG4gIHRyaXBsZVNpemUsXG4gIHF1YWRTaXplLFxuICBxdWludFNpemUsXG4gIHNpeFNpemUsXG4gIHNlcFNpemUsXG4gIGJhc2VNYXJnaW4sXG4gIGRvdWJsZU1hcmdpbixcbiAgdHJpcGxlTWFyZ2luLFxuICBxdWFkTWFyZ2luLFxuICBxdWludE1hcmdpbixcbiAgc2V4TWFyZ2luLFxuICBzZXBNYXJnaW4sXG4gIGJhc2VQYWRkaW5nLFxuICBkb3VibGVQYWRkaW5nLFxuICB0cmlwbGVQYWRkaW5nLFxuICBxdWFkUGFkZGluZyxcbiAgcXVpbnRQYWRkaW5nLFxuICBzZXhQYWRkaW5nLFxuICBzZXBQYWRkaW5nLFxuICBzaGFkb3dTaXplLFxuICBmb250QmFzZVNpemUsXG4gIGZvbnRCYXNlU3BTaXplLFxuICBmb250QmFzZVdlaWdodCxcbiAgZm9udFNpemUsXG4gIGZvbnRXZWlnaHQsXG4gIGxpbmVIZWlnaHQsXG4gIGJvcmRlclJhZGl1cyxcbn07XG4iLCIvKioqKioqKioqKioqKioqKioqKi9cbi8qICB0eXBlXG4vKioqKioqKioqKioqKioqKioqKi9cblxuZXhwb3J0IHR5cGUgVGhlbWVDb2xvclR5cGUgPSB0eXBlb2YgdGhlbWVSZ2IgfCB0eXBlb2YgaG90UmdiIHwgdHlwZW9mIGZsYXRSZ2IgfCB0eXBlb2YgY29sZFJnYjtcbmV4cG9ydCB0eXBlIEJhc2VDb2xvclR5cGUgPVxuICB8IHR5cGVvZiB3aGl0ZVJnYlxuICB8IHR5cGVvZiBicmlnaHRlclJnYlxuICB8IHR5cGVvZiBicmlnaHRSZ2JcbiAgfCB0eXBlb2YgYmFzZVJnYlxuICB8IHR5cGVvZiBkYXJrUmdiXG4gIHwgdHlwZW9mIGRhcmtlclJnYlxuICB8IHR5cGVvZiBibGFja1JnYjtcbmV4cG9ydCB0eXBlIENvbG9yVHlwZSA9IFRoZW1lQ29sb3JUeXBlIHwgQmFzZUNvbG9yVHlwZTtcblxuZXhwb3J0IHR5cGUgQWxwaGFUeXBlID0gdHlwZW9mIGJyaWdodEFscGhhIHwgdHlwZW9mIGJhc2VBbHBoYSB8IHR5cGVvZiBkYXJrQWxwaGEgfCB0eXBlb2YgZGVlcERhcmtBbHBoYTtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgZnVuY3Rpb25cbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgZ2V0UmdiQ29sb3IgPSAoY29sb3I6IENvbG9yVHlwZSkgPT4gYHJnYigke2NvbG9yfSlgO1xuZXhwb3J0IGNvbnN0IGdldFJnYmFDb2xvciA9IChjb2xvcjogQ29sb3JUeXBlLCBhbHBoYTogQWxwaGFUeXBlID0gYmFzZUFscGhhKSA9PiBgcmdiYSgke2NvbG9yfSwgJHthbHBoYX0pYDtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgYmFzZSBjb2xvcnNcbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgYmFzZVRlbnNpb24gPSAxMDA7XG5leHBvcnQgY29uc3QgZGFya0RlcHRoID0gMjA7XG5leHBvcnQgY29uc3QgZGFya2VyRGVwdGggPSBkYXJrRGVwdGggKiAyO1xuXG5leHBvcnQgY29uc3Qgd2hpdGVSZ2IgPSAnMjU1LCAyNTUsIDI1NSc7XG5leHBvcnQgY29uc3QgYnJpZ2h0ZXJSZ2IgPSAnMjQwLCAyNDAsIDI0MCc7XG5leHBvcnQgY29uc3QgYnJpZ2h0UmdiID0gYCR7YmFzZVRlbnNpb24gKiAyfSwgJHtiYXNlVGVuc2lvbiAqIDJ9LCAke2Jhc2VUZW5zaW9uICogMn1gO1xuZXhwb3J0IGNvbnN0IGJhc2VSZ2IgPSBgJHtiYXNlVGVuc2lvbn0sICR7YmFzZVRlbnNpb259LCAke2Jhc2VUZW5zaW9ufWA7XG5leHBvcnQgY29uc3QgZGFya1JnYiA9IGAke2Jhc2VUZW5zaW9uIC0gZGFya0RlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtEZXB0aH0sICR7YmFzZVRlbnNpb24gLSBkYXJrRGVwdGh9YDtcbmV4cG9ydCBjb25zdCBkYXJrZXJSZ2IgPSBgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofWA7XG5leHBvcnQgY29uc3QgYmxhY2tSZ2IgPSAnMCwgMCwgMCc7XG5cbi8vIGFscGhhcy5cbmV4cG9ydCBjb25zdCBicmlnaHRBbHBoYSA9ICcwLjk2JztcbmV4cG9ydCBjb25zdCBiYXNlQWxwaGEgPSAnMC45JztcbmV4cG9ydCBjb25zdCBkYXJrQWxwaGEgPSAnMC42JztcbmV4cG9ydCBjb25zdCBkZWVwRGFya0FscGhhID0gJzAuMyc7XG5cbi8qKioqKioqKioqKioqKioqKioqL1xuLyogIHRoZW1lIGNvbG9yc1xuLyoqKioqKioqKioqKioqKioqKiovXG5cbmV4cG9ydCBjb25zdCB0aGVtZVJnYiA9IGA3OSwgMTc0LCAxNTlgO1xuZXhwb3J0IGNvbnN0IGhvdFJnYiA9IGAyNTUsICR7YmFzZVRlbnNpb259LCAwYDtcbmV4cG9ydCBjb25zdCBmbGF0UmdiID0gYCR7YmFzZVRlbnNpb259LCAke2Jhc2VUZW5zaW9ufSwgJHtiYXNlVGVuc2lvbn1gO1xuZXhwb3J0IGNvbnN0IGNvbGRSZ2IgPSBgMCwgMTUwLCAyNTVgO1xuXG4vKioqKioqKioqKioqKioqKioqKi9cbi8qICBjb21tb24gY29sb3JzXG4vKioqKioqKioqKioqKioqKioqKi9cblxuLy8gbGluZWFyLWdyYWRpZW50KDU1ZGVnLCByZ2JhKDU1LCAyMDAsIDI1NSwgMC45KSwgcmdiYSg1NSwgMjU1LCAyMDAsMC45KSlcbi8vJ2xpbmVhci1ncmFkaWVudCg1NWRlZywgcmdiYSgzNSwgMTgwLCAyMzUsIDAuOSksIHJnYmEoMzUsIDIzNSwgMTgwLDAuOSkpJztcbmV4cG9ydCBjb25zdCB0aGVtZUNvbG9yID0gZ2V0UmdiYUNvbG9yKHRoZW1lUmdiKTtcbmV4cG9ydCBjb25zdCBob3RDb2xvciA9IGdldFJnYmFDb2xvcihob3RSZ2IpO1xuZXhwb3J0IGNvbnN0IGZsYXRDb2xvciA9IGdldFJnYmFDb2xvcihmbGF0UmdiKTtcbmV4cG9ydCBjb25zdCBjb2xkQ29sb3IgPSBnZXRSZ2JhQ29sb3IoY29sZFJnYik7XG5cbmV4cG9ydCBjb25zdCB3aGl0ZUNvbG9yID0gZ2V0UmdiYUNvbG9yKHdoaXRlUmdiKTtcbmV4cG9ydCBjb25zdCBicmlnaHRlckNvbG9yID0gZ2V0UmdiYUNvbG9yKGJyaWdodGVyUmdiKTtcbmV4cG9ydCBjb25zdCBicmlnaHRDb2xvciA9IGdldFJnYmFDb2xvcihicmlnaHRSZ2IpO1xuZXhwb3J0IGNvbnN0IGJhc2VDb2xvciA9IGdldFJnYmFDb2xvcihiYXNlUmdiKTtcbmV4cG9ydCBjb25zdCBkYXJrQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya1JnYik7XG5leHBvcnQgY29uc3QgZGFya2VyQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya2VyUmdiKTtcbmV4cG9ydCBjb25zdCBibGFja0NvbG9yID0gZ2V0UmdiYUNvbG9yKGJsYWNrUmdiKTtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgZm9udCBjb2xvcnNcbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgZm9udExpZ2h0Q29sb3IgPSBnZXRSZ2JDb2xvcihicmlnaHRlclJnYik7XG5leHBvcnQgY29uc3QgZm9udENvbG9yID0gZ2V0UmdiQ29sb3IoYmFzZVJnYik7XG5leHBvcnQgY29uc3QgZm9udERhcmtDb2xvciA9IGdldFJnYkNvbG9yKGRhcmtlclJnYik7XG5cbi8qKioqKioqKioqKioqKioqKioqL1xuLyogIGNvbnRlbnQgY29sb3JzXG4vKioqKioqKioqKioqKioqKioqKi9cblxuZXhwb3J0IGNvbnN0IG1hcmt1cENvbG9yID0gZ2V0UmdiQ29sb3IoYnJpZ2h0ZXJSZ2IpO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9yID0gZ2V0UmdiQ29sb3IoYnJpZ2h0UmdiKTtcbmV4cG9ydCBjb25zdCBjb21wb25lbnRCZ0NvbG9yID0gZ2V0UmdiYUNvbG9yKHdoaXRlUmdiKTtcbmV4cG9ydCBjb25zdCB3aGl0ZUhvdmVyQ29sb3IgPSBnZXRSZ2JhQ29sb3IoYnJpZ2h0UmdiLCBkYXJrQWxwaGEpO1xuZXhwb3J0IGNvbnN0IHRhZ0JnQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya1JnYik7XG5leHBvcnQgY29uc3QgYWR2ZXJ0Q29sb3IgPSBnZXRSZ2JhQ29sb3IoYnJpZ2h0UmdiKTtcbmV4cG9ydCBjb25zdCBhZHZlcnRIb3ZlckNvbG9yID0gZ2V0UmdiYUNvbG9yKGRhcmtSZ2IpO1xuZXhwb3J0IGNvbnN0IGFydGljbGVCZ0NvbG9yID0gZ2V0UmdiYUNvbG9yKGJyaWdodFJnYik7XG5leHBvcnQgY29uc3QgYXJ0aWNsZUJnSG92ZXJDb2xvciA9IGdldFJnYmFDb2xvcihkYXJrUmdiKTtcbmV4cG9ydCBjb25zdCBzYXZlQ29sb3IgPSBnZXRSZ2JhQ29sb3IoaG90UmdiKTtcbmV4cG9ydCBjb25zdCBzYXZlQ2hlY2tDb2xvciA9IGdldFJnYmFDb2xvcih0aGVtZVJnYik7XG5leHBvcnQgY29uc3QgZnVsbEJhY2tncm91bmRDb2xvciA9IGdldFJnYmFDb2xvcihibGFja1JnYiwgZGVlcERhcmtBbHBoYSk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYmFzZVRlbnNpb24sXG4gIGRhcmtEZXB0aCxcbiAgZGFya2VyRGVwdGgsXG4gIHdoaXRlUmdiLFxuICBicmlnaHRlclJnYixcbiAgYnJpZ2h0UmdiLFxuICBiYXNlUmdiLFxuICBkYXJrUmdiLFxuICBkYXJrZXJSZ2IsXG4gIGJsYWNrUmdiLFxuICBicmlnaHRBbHBoYSxcbiAgYmFzZUFscGhhLFxuICBkYXJrQWxwaGEsXG4gIGRlZXBEYXJrQWxwaGEsXG4gIHRoZW1lUmdiLFxuICBob3RSZ2IsXG4gIGZsYXRSZ2IsXG4gIGNvbGRSZ2IsXG4gIHRoZW1lQ29sb3IsXG4gIGhvdENvbG9yLFxuICBmbGF0Q29sb3IsXG4gIGNvbGRDb2xvcixcbiAgd2hpdGVDb2xvcixcbiAgYnJpZ2h0ZXJDb2xvcixcbiAgYnJpZ2h0Q29sb3IsXG4gIGJhc2VDb2xvcixcbiAgZGFya0NvbG9yLFxuICBkYXJrZXJDb2xvcixcbiAgYmxhY2tDb2xvcixcbiAgZm9udExpZ2h0Q29sb3IsXG4gIGZvbnRDb2xvcixcbiAgZm9udERhcmtDb2xvcixcbiAgbWFya3VwQ29sb3IsXG4gIGJvcmRlckNvbG9yLFxuICBjb21wb25lbnRCZ0NvbG9yLFxuICB3aGl0ZUhvdmVyQ29sb3IsXG4gIGFkdmVydENvbG9yLFxuICBhZHZlcnRIb3ZlckNvbG9yLFxuICBhcnRpY2xlQmdDb2xvcixcbiAgYXJ0aWNsZUJnSG92ZXJDb2xvcixcbiAgdGFnQmdDb2xvcixcbiAgc2F2ZUNvbG9yLFxuICBzYXZlQ2hlY2tDb2xvcixcbiAgZnVsbEJhY2tncm91bmRDb2xvcixcbiAgZ2V0UmdiQ29sb3IsXG4gIGdldFJnYmFDb2xvcixcbn07XG4iLCJpbXBvcnQgeyB0cmFuc2l0aW9uRHVyYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvbnMnO1xuaW1wb3J0IGNvbG9ycywgeyBnZXRSZ2JhQ29sb3IgfSBmcm9tICcuL2NvbG9ycyc7XG5cbmV4cG9ydCBjb25zdCBhbHBoYUJnU2V0ID0gYFxuICAgIGJhY2tncm91bmQ6ICR7Z2V0UmdiYUNvbG9yKGNvbG9ycy53aGl0ZVJnYil9O1xuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xuYDtcblxuZXhwb3J0IGNvbnN0IGFscGhhTGlnaHRCZ1NldCA9IGBcbiAgICBiYWNrZ3JvdW5kOiAke2dldFJnYmFDb2xvcihjb2xvcnMud2hpdGVSZ2IpfTtcbiAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMi41cHgpO1xuYDtcblxuZXhwb3J0IGNvbnN0IGJlZm9yZUJsdXIgPSBgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgY29udGVudDogJyAnO1xuICAgIGJhY2tkcm9wLWZpbHRlcjogJHsocHJvcHMpID0+IGdldEJhY2tkcm9wRmlsdGVyKHByb3BzKX07XG4gICAgdHJhbnNpdGlvbjogJHt0cmFuc2l0aW9uRHVyYXRpb259bXM7XG5gO1xuXG5leHBvcnQgY29uc3QgZ2V0QmFja2Ryb3BGaWx0ZXIgPSAocHJvcHM6IHsgaXNIb3ZlcjogYm9vbGVhbiB9KTogc3RyaW5nID0+IHtcbiAgaWYgKHByb3BzLmlzSG92ZXIpIHtcbiAgICByZXR1cm4gYGJsdXIoMnB4KSBicmlnaHRuZXNzKDAuNylgO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgYmx1cigwKSBicmlnaHRuZXNzKDEpYDtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhbHBoYUJnU2V0LFxuICBhbHBoYUxpZ2h0QmdTZXQsXG4gIGJlZm9yZUJsdXIsXG4gIGdldEJhY2tkcm9wRmlsdGVyLFxufTtcbiIsImltcG9ydCBhbmltYXRpb25zIGZyb20gJy4vYW5pbWF0aW9ucyc7XG5pbXBvcnQgYmxvY2tzIGZyb20gJy4vYmxvY2tzJztcbmltcG9ydCBjb2xvcnMgZnJvbSAnLi9jb2xvcnMnO1xuaW1wb3J0IGRyb3BGaWx0ZXIgZnJvbSAnLi9kcm9wRmlsdGVyJztcbmltcG9ydCBsYXlvdXRzIGZyb20gJy4vbGF5b3V0cyc7XG5pbXBvcnQgc2hhZG93IGZyb20gJy4vc2hhZG93JztcbmltcG9ydCB6SW5kZXggZnJvbSAnLi96SW5kZXgnO1xuXG5leHBvcnQgY29uc3QgZ2V0VHJpbVVuaXROdW1iZXIgPSAodmFsdWU6IHN0cmluZykgPT4gTnVtYmVyKHZhbHVlLnJlcGxhY2UoJ3B4JywgJycpKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICB6SW5kZXgsXG4gIC4uLmFuaW1hdGlvbnMsXG4gIC4uLmxheW91dHMsXG4gIC4uLmNvbG9ycyxcbiAgLi4uZHJvcEZpbHRlcixcbiAgLi4uYmxvY2tzLFxuICAuLi5zaGFkb3csXG4gIGdldFRyaW1Vbml0TnVtYmVyLFxufTtcbiIsImltcG9ydCBibG9ja3MgZnJvbSAnLi9ibG9ja3MnO1xuXG4vLyBTZWN0aW9uXG5leHBvcnQgY29uc3Qgc2VjdGlvblBhZGRpbmcgPSBibG9ja3MuZG91YmxlU2l6ZTtcbmV4cG9ydCBjb25zdCBzZWN0aW9uTWFyZ2luQ29sdW1uID0gYmxvY2tzLnF1YWRNYXJnaW47XG5cbi8vIE1udS5cbmV4cG9ydCBjb25zdCBtZW51UGNXaWR0aCA9IDM3NTtcbmV4cG9ydCBjb25zdCBtZW51VGFiV2lkdGggPSA0MzA7XG5cbi8vIEFwcC5cbmV4cG9ydCBjb25zdCBiYXNlSGVpZ2h0ID0gNjA7XG5leHBvcnQgY29uc3QgYXBwSGVhZGVySGVpZ2h0ID0gYmFzZUhlaWdodDtcbmV4cG9ydCBjb25zdCBhcHBNZW51TWluV2lkdGggPSAzNTk7XG5leHBvcnQgY29uc3QgYXBwTWluV2lkdGggPSAzNzU7XG5leHBvcnQgY29uc3QgYXBwV2lkdGggPSAxMjAwO1xuZXhwb3J0IGNvbnN0IGFkdmVydFdpZHRoID0gMjAwO1xuZXhwb3J0IGNvbnN0IHNwTGF5b3V0U3RyaWN0V2lkdGggPSA2ODA7XG5leHBvcnQgY29uc3Qgc3BMYXlvdXRTdHJpY3RXaWR0aFB4ID0gYCR7c3BMYXlvdXRTdHJpY3RXaWR0aH1weGA7XG5leHBvcnQgY29uc3Qgc3BMYXlvdXRXaWR0aCA9IDk4MDtcbmV4cG9ydCBjb25zdCBkb3VibGVBZHZlcnRXaWR0aCA9IGFwcFdpZHRoICsgYWR2ZXJ0V2lkdGggKiAxLjU7XG5leHBvcnQgY29uc3QgZXllQ2F0Y2hWd1ZhbHVlID0gMTAwO1xuZXhwb3J0IGNvbnN0IGV5ZUNhdGNoVmhWYWx1ZSA9IDIwO1xuZXhwb3J0IGNvbnN0IGV5ZUNhdGNoTWluSGVpZ2h0UHhWYWx1ZSA9IDI4MDtcblxuLy8gQXJ0aWNsZSBPcmRlci5cbmV4cG9ydCBjb25zdCBhcnRpY2xlT3JkZXJIZWlnaHQgPSAyOTA7XG5cbi8vIEFydGljbGUgKGxpc3QpLlxuZXhwb3J0IGNvbnN0IGFydGljbGVXaWR0aCA9IDMwMDtcbmV4cG9ydCBjb25zdCBhcnRpY2xlVG90YWxXaWR0aCA9IGFydGljbGVXaWR0aCArIGJsb2Nrcy5iYXNlU2l6ZSAqIDI7XG5leHBvcnQgY29uc3QgYXJ0aWNsZUNsb3NlSGVpZ2h0ID0gMjYwO1xuZXhwb3J0IGNvbnN0IGFydGljbGVPcGVuSGVpZ2h0ID0gJ2F1dG8nO1xuZXhwb3J0IGNvbnN0IGFydGljbGVPcGVuU2NhbGUgPSAxLjA1O1xuZXhwb3J0IGNvbnN0IGFydGljbGVTaGFkb3dDb2xvciA9ICcjNDQ0JztcblxuLy8gRG9tYWluIFByb2ZpbGUuXG5leHBvcnQgY29uc3QgaW1hZ2VXaWR0aCA9IDIwMDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzZWN0aW9uUGFkZGluZyxcbiAgc2VjdGlvbk1hcmdpbkNvbHVtbixcbiAgbWVudVBjV2lkdGgsXG4gIG1lbnVUYWJXaWR0aCxcbiAgYmFzZUhlaWdodCxcbiAgYXBwSGVhZGVySGVpZ2h0LFxuICBhcHBNZW51TWluV2lkdGgsXG4gIGFwcE1pbldpZHRoLFxuICBhcHBXaWR0aCxcbiAgYWR2ZXJ0V2lkdGgsXG4gIHNwTGF5b3V0U3RyaWN0V2lkdGgsXG4gIHNwTGF5b3V0U3RyaWN0V2lkdGhQeCxcbiAgc3BMYXlvdXRXaWR0aCxcbiAgZG91YmxlQWR2ZXJ0V2lkdGgsXG4gIGV5ZUNhdGNoVndWYWx1ZSxcbiAgZXllQ2F0Y2hWaFZhbHVlLFxuICBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUsXG4gIGFydGljbGVPcmRlckhlaWdodCxcbiAgYXJ0aWNsZVdpZHRoLFxuICBhcnRpY2xlVG90YWxXaWR0aCxcbiAgYXJ0aWNsZUNsb3NlSGVpZ2h0LFxuICBhcnRpY2xlT3BlbkhlaWdodCxcbiAgYXJ0aWNsZU9wZW5TY2FsZSxcbiAgYXJ0aWNsZVNoYWRvd0NvbG9yLFxuICBpbWFnZVdpZHRoLFxufTtcbiIsImltcG9ydCBjb2xvcnMsIHsgZ2V0UmdiQ29sb3IgfSBmcm9tICcuL2NvbG9ycyc7XG5cbmV4cG9ydCBjb25zdCBzaGFkb3dTaXplID0gMTA7XG5jb25zdCBzaGFkb3dUZXh0VHlwZSA9ICcxcHggMXB4JztcbmNvbnN0IHNoYWRvd0NpcmNsZSA9IGAwIDAgJHtzaGFkb3dTaXplfXB4IDBgO1xuY29uc3Qgc2hhZG93SG9yaXpvbiA9IGAwICR7c2hhZG93U2l6ZSAvIDJ9cHggJHtzaGFkb3dTaXplfXB4IDBgO1xuXG5leHBvcnQgY29uc3QgYmFzZVRleHRTaGFkb3cgPSBgJHtzaGFkb3dUZXh0VHlwZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuZGFya1JnYil9YDtcbmV4cG9ydCBjb25zdCBzaGFkb3dDaXJjbGVCcmlnaHRlciA9IGAke3NoYWRvd0NpcmNsZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuYnJpZ2h0ZXJSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93Q2lyY2xlQnJpZ2h0ID0gYCR7c2hhZG93Q2lyY2xlfSAke2dldFJnYkNvbG9yKGNvbG9ycy5icmlnaHRSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93Q2lyY2xlQmFzZSA9IGAke3NoYWRvd0NpcmNsZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuYmFzZVJnYil9YDtcbmV4cG9ydCBjb25zdCBzaGFkb3dDaXJjbGVEYXJrID0gYCR7c2hhZG93Q2lyY2xlfSAke2dldFJnYkNvbG9yKGNvbG9ycy5kYXJrUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25CcmlnaHRlciA9IGAke3NoYWRvd0hvcml6b259ICR7Z2V0UmdiQ29sb3IoY29sb3JzLmJyaWdodGVyUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25CcmlnaHQgPSBgJHtzaGFkb3dIb3Jpem9ufSAke2dldFJnYkNvbG9yKGNvbG9ycy5icmlnaHRSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93SG9yaXpvbkJhc2UgPSBgJHtzaGFkb3dIb3Jpem9ufSAke2dldFJnYkNvbG9yKGNvbG9ycy5iYXNlUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25EYXJrID0gYCR7c2hhZG93SG9yaXpvbn0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuZGFya1JnYil9YDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzaGFkb3dTaXplLFxuICBiYXNlVGV4dFNoYWRvdyxcbiAgc2hhZG93Q2lyY2xlQnJpZ2h0ZXIsXG4gIHNoYWRvd0NpcmNsZUJyaWdodCxcbiAgc2hhZG93Q2lyY2xlQmFzZSxcbiAgc2hhZG93Q2lyY2xlRGFyayxcbiAgc2hhZG93SG9yaXpvbkJyaWdodGVyLFxuICBzaGFkb3dIb3Jpem9uQnJpZ2h0LFxuICBzaGFkb3dIb3Jpem9uQmFzZSxcbiAgc2hhZG93SG9yaXpvbkRhcmssXG59O1xuIiwiZXhwb3J0IGNvbnN0IHpJbmRleCA9IHtcbiAgaGVhZGVyOiAxMDAwLFxuICBzaWRlTWVudTogOTgwLFxuICB0b1RvcDogMTAxLFxuICBjb250ZW50c01lbnU6IDEwMCxcbiAgZXllQ2F0Y2g6IDEwMCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHpJbmRleDtcbiIsImltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCBkZWZpbmUgZnJvbSAnY29tbW9uL2RlZmluZSc7XG5cbmltcG9ydCBSZW5kZXIgZnJvbSAnY292ZXIvQXBwJztcblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICBnb29nbGU6IGFueTtcbiAgICB0YWxrbkRhdGFzOiBhbnk7XG4gICAgdGFsa25NZWRpYTogYW55O1xuICAgIHRhbGtuQVBJOiBhbnk7XG4gICAgWW91dHViZTogYW55O1xuICAgIGxvZzogYW55O1xuICAgIF9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXzogYW55O1xuICB9XG4gIGludGVyZmFjZSBNYXRoIHtcbiAgICBlYXNlSW5PdXRRdWFkOiBhbnk7XG4gIH1cbn1cblxuY29uc3QgaHJlZiA9IFN0cmluZyh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5jb25zdCBzcGxpdGVkVXJsID0gaHJlZi5zcGxpdCgnLycpO1xuY29uc3Qgc3BsaXRlZFVybExlbmd0aCA9IHNwbGl0ZWRVcmwubGVuZ3RoO1xubGV0IGNoID0gJy8nO1xuXG53aW5kb3cudGFsa25EYXRhcy5zdG9yaWVzUG9pbnRlciA9XG4gIHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZyAmJiB3aW5kb3cudGFsa25EYXRhcy5jb25maWcuc3RvcmllcyA/IHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZy5zdG9yaWVzLmxlbmd0aCA6IDA7XG5cbmlmIChzcGxpdGVkVXJsW3NwbGl0ZWRVcmxMZW5ndGggLSAxXSA9PT0gJycpIHtcbiAgY2ggPSBocmVmO1xufSBlbHNlIHtcbiAgY29uc3QgbGFzdFNsYXNoID0gaHJlZi5sYXN0SW5kZXhPZignLycpO1xuICBjb25zdCBfdGFsa25TdG9yaWVzUG9pbnRlciA9IE51bWJlcihocmVmLnN1YnN0cihsYXN0U2xhc2ggKyAxLCBsYXN0U2xhc2gpKTtcbiAgY2ggPSBocmVmLnN1YnN0cigwLCBsYXN0U2xhc2ggKyAxKTtcblxuICBpZiAoX3RhbGtuU3Rvcmllc1BvaW50ZXIgPD0gMCkge1xuICAgIHdpbmRvdy50YWxrbkRhdGFzLnN0b3JpZXNQb2ludGVyID0gMTtcbiAgfVxuXG4gIGlmICh3aW5kb3cudGFsa25EYXRhcy5zdG9yaWVzUG9pbnRlciA8IHdpbmRvdy50YWxrbkRhdGFzLmNvbmZpZy5zdG9yaWVzLmxlbmd0aCkge1xuICAgIHdpbmRvdy50YWxrbkRhdGFzLnN0b3JpZXNQb2ludGVyID0gd2luZG93LnRhbGtuRGF0YXMuY29uZmlnLnN0b3JpZXMubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy50YWxrbkRhdGFzLnN0b3JpZXNQb2ludGVyID0gX3RhbGtuU3Rvcmllc1BvaW50ZXI7XG4gIH1cbn1cblxuaWYgKGNvbmYuZG9tYWluID09PSBkZWZpbmUuREVWRUxPUE1FTlRfRE9NQUlOKSB7XG4gIGlmIChjaC5pbmRleE9mKGRlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9DT1ZFUikgPj0gMCkge1xuICAgIGNoID0gY2gucmVwbGFjZShgaHR0cHM6Ly8ke2RlZmluZS5ERVZFTE9QTUVOVF9ET01BSU59OiR7ZGVmaW5lLlBPUlRTLkRFVkVMT1BNRU5UX0NPVkVSfWAsICcnKTtcbiAgfSBlbHNlIHtcbiAgICBjaCA9IGNoLnJlcGxhY2UoYGh0dHBzOi8vJHtkZWZpbmUuU1VCX0RPTUFJTlMuQ09WRVJ9LiR7ZGVmaW5lLkRFVkVMT1BNRU5UX0RPTUFJTn1gLCAnJyk7XG4gIH1cbn0gZWxzZSB7XG4gIGNoID0gY2gucmVwbGFjZShgaHR0cHM6Ly8ke2RlZmluZS5TVUJfRE9NQUlOUy5DT1ZFUn0uJHtkZWZpbmUuUFJPRFVDVElPTl9ET01BSU59YCwgJycpO1xufVxuXG5SZW5kZXIoKTtcbiIsImV4cG9ydCBjb25zdCBteVVzZXJLZXkgPSAndGFsa25NeVVzZXJTZXNzaW9uJztcbmV4cG9ydCBjb25zdCBnb29nbGVBY2NvdW50Q29va2llS2V5ID0gXCJnX3N0YXRlPScnXCI7XG5leHBvcnQgY29uc3QgaWRTZXBhcmF0b3IgPSAnQCc7XG4iLCJpbXBvcnQgeyBGaXhWYWx1ZXNUeXBlLCBVc2VyVGFnc1R5cGUsIFRhZ1R5cGUsIHRhZ0ludmVzdG9yLCB0YWdGb3VuZGVyLCB0YWdNZW1iZXIsIHRhZ1N0b3J5IH0gZnJvbSAnY292ZXIvbW9kZWwvdXNlclRhZ3MnO1xuaW1wb3J0IHsgZml4Rm91bmRlclZhbHVlc0luaXQgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9Gb3VuZGVyJztcbmltcG9ydCB7IGZpeEludmVzdG9yVmFsdWVzSW5pdCB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL0ludmVzdG9yJztcbmltcG9ydCB7IGZpeE1lbWJlclZhbHVlc0luaXQgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9NZW1iZXInO1xuaW1wb3J0IHsgZml4UHJvZmlsZVZhbHVlc0luaXQgfSBmcm9tICdjb3Zlci9tb2RlbC91c2VyVGFncy9Qcm9maWxlJztcbmltcG9ydCB7IGZpeFN0b3J5VmFsdWVzSW5pdCB9IGZyb20gJ2NvdmVyL21vZGVsL3VzZXJUYWdzL1N0b3J5JztcblxuZXhwb3J0IGNvbnN0IGdldEZpeFZhbHVlc0VtcHR5ID0gKHRhZ1R5cGUsIGluY2x1ZGVGaWxsUHJvZmlsZSA9IGZhbHNlKTogRml4VmFsdWVzVHlwZSA9PiB7XG4gIGxldCBmaXhWYWx1ZXNFbXB0eTtcbiAgc3dpdGNoICh0YWdUeXBlKSB7XG4gICAgY2FzZSB0YWdJbnZlc3RvcjpcbiAgICAgIGZpeFZhbHVlc0VtcHR5ID0geyAuLi5maXhJbnZlc3RvclZhbHVlc0luaXQgfTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgdGFnRm91bmRlcjpcbiAgICAgIGZpeFZhbHVlc0VtcHR5ID0geyAuLi5maXhGb3VuZGVyVmFsdWVzSW5pdCB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSB0YWdNZW1iZXI6XG4gICAgICBmaXhWYWx1ZXNFbXB0eSA9IHsgLi4uZml4TWVtYmVyVmFsdWVzSW5pdCB9O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSB0YWdTdG9yeTpcbiAgICAgIGZpeFZhbHVlc0VtcHR5ID0geyAuLi5maXhTdG9yeVZhbHVlc0luaXQgfTtcbiAgICAgIGJyZWFrO1xuICB9XG4gIHJldHVybiBpbmNsdWRlRmlsbFByb2ZpbGUgPyB7IC4uLmZpeFZhbHVlc0VtcHR5LCAuLi5maXhQcm9maWxlVmFsdWVzSW5pdCB9IDogZml4VmFsdWVzRW1wdHk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0RXh0cmFjdEZpeFZhbHVlcyA9IChvcGVuTW9kYWxPcHRpb24pOiBGaXhWYWx1ZXNUeXBlID0+IHtcbiAgbGV0IGZpeFZhbHVlcyA9IHt9O1xuICBsZXQgZml4VmFsdWVzRW1wdHkgPSBnZXRGaXhWYWx1ZXNFbXB0eShvcGVuTW9kYWxPcHRpb24udGFnVHlwZSk7XG5cbiAgT2JqZWN0LmtleXMob3Blbk1vZGFsT3B0aW9uKS5mb3JFYWNoKChjb2x1bW5OYW1lKSA9PiB7XG4gICAgaWYgKGZpeFZhbHVlc0VtcHR5W2NvbHVtbk5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGZpeFZhbHVlc1tjb2x1bW5OYW1lXSA9IG9wZW5Nb2RhbE9wdGlvbltjb2x1bW5OYW1lXTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gZml4VmFsdWVzIGFzIEZpeFZhbHVlc1R5cGU7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0SGFzU2VsZlRhZ3MgPSAodXNlclRhZ3M6IFVzZXJUYWdzVHlwZSwgYWN0aW9uOiAnc2F2ZScgfCAncmVtb3ZlJywgdGFnVHlwZT86IFRhZ1R5cGUpID0+IHtcbiAgY29uc3QgeyBpbnZlc3RvciwgZm91bmRlciwgbWVtYmVyIH0gPSB1c2VyVGFncy5zZWxmO1xuICBsZXQgaW52ZXN0b3JDbnQgPSBpbnZlc3Rvci5sZW5ndGg7XG4gIGxldCBmb3VuZGVyQ250ID0gZm91bmRlci5sZW5ndGg7XG4gIGxldCBtZW1iZXJDbnQgPSBtZW1iZXIubGVuZ3RoO1xuXG4gIGlmICh0YWdUeXBlID09PSB0YWdJbnZlc3Rvcikge1xuICAgIGludmVzdG9yQ250ID0gYWN0aW9uID09PSAncmVtb3ZlJyA/IGludmVzdG9yLmxlbmd0aCAtIDEgOiBpbnZlc3Rvci5sZW5ndGggKyAxO1xuICB9IGVsc2UgaWYgKHRhZ1R5cGUgPT09IHRhZ0ZvdW5kZXIpIHtcbiAgICBmb3VuZGVyQ250ID0gYWN0aW9uID09PSAncmVtb3ZlJyA/IGZvdW5kZXIubGVuZ3RoIC0gMSA6IGZvdW5kZXIubGVuZ3RoICsgMTtcbiAgfSBlbHNlIGlmICh0YWdUeXBlID09PSB0YWdNZW1iZXIpIHtcbiAgICBtZW1iZXJDbnQgPSBhY3Rpb24gPT09ICdyZW1vdmUnID8gbWVtYmVyLmxlbmd0aCAtIDEgOiBtZW1iZXIubGVuZ3RoICsgMTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW52ZXN0b3I6IGludmVzdG9yQ250ID4gMCxcbiAgICBmb3VuZGVyOiBmb3VuZGVyQ250ID4gMCxcbiAgICBtZW1iZXI6IG1lbWJlckNudCA+IDAsXG4gIH07XG59O1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0bG9hZGVkOiBmYWxzZSxcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5ubWQgPSAobW9kdWxlKSA9PiB7XG5cdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdHJldHVybiBtb2R1bGU7XG59OyIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgaXMgcmVmZXJlbmNlZCBieSBvdGhlciBtb2R1bGVzIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5MjkzKTtcbiJdLCJuYW1lcyI6WyJjYWNoZWRTZXRUaW1lb3V0IiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0U2V0VGltb3V0IiwiRXJyb3IiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsInNldFRpbWVvdXQiLCJlIiwiY2FsbCIsInRoaXMiLCJjbGVhclRpbWVvdXQiLCJjdXJyZW50UXVldWUiLCJxdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImxlbmd0aCIsImNvbmNhdCIsImRyYWluUXVldWUiLCJ0aW1lb3V0IiwibGVuIiwicnVuIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsImFycmF5Iiwibm9vcCIsIm5leHRUaWNrIiwiYXJncyIsIkFycmF5IiwiYXJndW1lbnRzIiwiaSIsInB1c2giLCJwcm90b3R5cGUiLCJhcHBseSIsInRpdGxlIiwiYnJvd3NlciIsImVudiIsImFyZ3YiLCJ2ZXJzaW9uIiwidmVyc2lvbnMiLCJvbiIsImFkZExpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZW1pdCIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJuYW1lIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJ3IiwiYXRvYk5hdGl2ZSIsImF0b2JCZXN0IiwiYXRvYiIsIkJ1ZmZlciIsImEiLCJ0b1N0cmluZyIsImJhc2U2NGpzIiwiYnVmIiwiYjY0VG9CeXRlQXJyYXkiLCJtYXAiLCJjaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImpvaW4iLCJ3aW5kb3ciLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImlkIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJpdGVtIiwiY29udGVudCIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJhcnIyIiwiX2l0ZW0iLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJfcyIsIl9lIiwiX2FyciIsIl9uIiwiX2QiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwibyIsIm1pbkxlbiIsIm4iLCJPYmplY3QiLCJzbGljZSIsImNvbnN0cnVjdG9yIiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsIk1lbW8iLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwia2V5IiwiZGVzY3JpcHRvciIsImhhc093blByb3BlcnR5IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJhc3NpZ24iLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzeW1ib2xzIiwidG8iLCJzIiwiYWEiLCJtIiwiciIsInkiLCJiIiwiYyIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJoYSIsImlhIiwiamEiLCJrYSIsIkIiLCJkIiwiZiIsImciLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsIkQiLCJ0b0xvd2VyQ2FzZSIsIm9hIiwicGEiLCJ0b1VwcGVyQ2FzZSIsInFhIiwibWEiLCJpc05hTiIsIm5hIiwibGEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInJlcGxhY2UiLCJ4bGlua0hyZWYiLCJyYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwic2EiLCJ0YSIsInVhIiwid2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsImZvciIsIkUiLCJNYSIsIkthIiwiTGEiLCJOYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiT2EiLCJQYSIsInByZXBhcmVTdGFja1RyYWNlIiwic2V0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImsiLCJoIiwiUWEiLCJ0YWciLCJfcmVuZGVyIiwiUmEiLCIkJHR5cGVvZiIsIl9jb250ZXh0IiwiX3BheWxvYWQiLCJfaW5pdCIsIlNhIiwiVGEiLCJub2RlTmFtZSIsIlZhIiwiX3ZhbHVlVHJhY2tlciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsImNiIiwib3duZXJEb2N1bWVudCIsImViIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzdHlsZSIsImluZGV4T2YiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInViIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiT2IiLCJQYiIsIlFiIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJSYiIsImwiLCJvbkVycm9yIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJzaGlmdCIsInpjIiwiQWMiLCJCYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIkNjIiwiRGMiLCJFYyIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIkZjIiwiR2MiLCJIYyIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiUWMiLCJ1bnN0YWJsZV9ub3ciLCJGIiwiUmMiLCJVYyIsInBlbmRpbmdMYW5lcyIsImV4cGlyZWRMYW5lcyIsInN1c3BlbmRlZExhbmVzIiwicGluZ2VkTGFuZXMiLCJWYyIsImVudGFuZ2xlZExhbmVzIiwiZW50YW5nbGVtZW50cyIsIldjIiwiWGMiLCJZYyIsIlpjIiwiJGMiLCJldmVudFRpbWVzIiwiTWF0aCIsImNsejMyIiwiYmQiLCJjZCIsImxvZyIsIkxOMiIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImJpbmQiLCJ1YyIsImpkIiwia2QiLCJsZCIsIm1kIiwibmQiLCJvZCIsImtleUNvZGUiLCJjaGFyQ29kZSIsInBkIiwicWQiLCJyZCIsIl9yZWFjdE5hbWUiLCJfdGFyZ2V0SW5zdCIsImN1cnJlbnRUYXJnZXQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJKZCIsImNsaXBib2FyZERhdGEiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJSZCIsImNvZGUiLCJsb2NhdGlvbiIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm5vZGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIk1lIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIk5lIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiaHJlZiIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIlliIiwiaW5zdGFuY2UiLCJsaXN0ZW5lciIsIkciLCIkZSIsImhhcyIsImFmIiwiYmYiLCJyYW5kb20iLCJjZiIsImRmIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJOYiIsIngiLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImdldENoaWxkQ29udGV4dCIsIkpmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIlFmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJSZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIlNmIiwiVGYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIlVmIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJWZiIsIldmIiwiWGYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIllmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiTyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsIl9jdXJyZW50VmFsdWUiLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsImNhbGxiYWNrIiwiQWciLCJCZyIsIkNnIiwiQSIsInAiLCJDIiwiRGciLCJFZyIsIkZnIiwiQ29tcG9uZW50IiwicmVmcyIsIkdnIiwiS2ciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJIZyIsIklnIiwiSmciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiTGciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIk1nIiwic3RhdGUiLCJ1cGRhdGVyIiwiTmciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJPZyIsInByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiaW5kZXgiLCJUZyIsIlVnIiwibW9kZSIsImVsZW1lbnRUeXBlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJQIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJSIiwiUyIsIlQiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJVIiwidXNlU3RhdGUiLCJnZXRTbmFwc2hvdCIsInN1YnNjcmliZSIsInVzZUVmZmVjdCIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlT3BhcXVlSWRlbnRpZmllciIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsInVmIiwiZWkiLCJSZWFjdEN1cnJlbnRPd25lciIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJWIiwiSGkiLCJJaSIsIlciLCJKaSIsIktpIiwiTGkiLCJNaSIsIm1lc3NhZ2UiLCJOaSIsImNvbnNvbGUiLCJlcnJvciIsIk9pIiwiV2Vha01hcCIsIlBpIiwiZWxlbWVudCIsIlFpIiwiUmkiLCJTaSIsImNvbXBvbmVudERpZENhdGNoIiwiVGkiLCJjb21wb25lbnRTdGFjayIsIlVpIiwiV2Vha1NldCIsIlZpIiwiV2kiLCJYaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiWWkiLCJaaSIsIiRpIiwiZm9jdXMiLCJhaiIsImRpc3BsYXkiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJ0aGVuIiwibWoiLCJuaiIsImNlaWwiLCJvaiIsInBqIiwiWCIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJaIiwieGoiLCJ5aiIsInpqIiwiQWoiLCJCaiIsIkNqIiwiRGoiLCJFaiIsIkZqIiwiR2oiLCJIaiIsIklqIiwiSmoiLCJTYyIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJUYyIsIk5qIiwiT2oiLCJQaiIsIlFqIiwiUmoiLCJTaiIsIlRqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlVqIiwidGltZW91dEhhbmRsZSIsIldqIiwiWGoiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJrayIsImxrIiwibWsiLCJuayIsIm9rIiwicWsiLCJoeWRyYXRpb25PcHRpb25zIiwibXV0YWJsZVNvdXJjZXMiLCJfaW50ZXJuYWxSb290IiwicmsiLCJ0ayIsImhhc0F0dHJpYnV0ZSIsInNrIiwidWsiLCJoayIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlZqIiwidmsiLCJFdmVudHMiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwieWsiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjaGVja0RDRSIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZyYWdtZW50IiwiTGF6eSIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiQWN0aW9uIiwiX2V4dGVuZHMiLCJCZWZvcmVVbmxvYWRFdmVudFR5cGUiLCJQb3BTdGF0ZUV2ZW50VHlwZSIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtYXgiLCJwcm9tcHRCZWZvcmVVbmxvYWQiLCJjcmVhdGVFdmVudHMiLCJoYW5kbGVycyIsImZuIiwiZmlsdGVyIiwiaGFuZGxlciIsImFyZyIsImNyZWF0ZUtleSIsInN1YnN0ciIsImNyZWF0ZVBhdGgiLCJfcmVmIiwiX3JlZiRwYXRobmFtZSIsInBhdGhuYW1lIiwiX3JlZiRzZWFyY2giLCJfcmVmJGhhc2giLCJoYXNoIiwicGFyc2VQYXRoIiwicGF0aCIsInBhcnNlZFBhdGgiLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsIk5hdmlnYXRpb25Db250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkxvY2F0aW9uQ29udGV4dCIsIlJvdXRlQ29udGV4dCIsIm91dGxldCIsIm1hdGNoZXMiLCJpbnZhcmlhbnQiLCJjb25kIiwiZ2VuZXJhdGVQYXRoIiwicGFyYW1zIiwiXyIsIm1hdGNoUm91dGVzIiwicm91dGVzIiwibG9jYXRpb25BcmciLCJiYXNlbmFtZSIsInN0cmlwQmFzZW5hbWUiLCJicmFuY2hlcyIsImZsYXR0ZW5Sb3V0ZXMiLCJzb3J0Iiwic2NvcmUiLCJldmVyeSIsImNvbXBhcmVJbmRleGVzIiwicm91dGVzTWV0YSIsImNoaWxkcmVuSW5kZXgiLCJyYW5rUm91dGVCcmFuY2hlcyIsIm1hdGNoUm91dGVCcmFuY2giLCJwYXJlbnRzTWV0YSIsInBhcmVudFBhdGgiLCJyb3V0ZSIsInJlbGF0aXZlUGF0aCIsImNhc2VTZW5zaXRpdmUiLCJzdGFydHNXaXRoIiwiam9pblBhdGhzIiwiY29tcHV0ZVNjb3JlIiwicGFyYW1SZSIsImlzU3BsYXQiLCJzZWdtZW50cyIsImluaXRpYWxTY29yZSIsInNvbWUiLCJyZWR1Y2UiLCJzZWdtZW50IiwiYnJhbmNoIiwibWF0Y2hlZFBhcmFtcyIsIm1hdGNoZWRQYXRobmFtZSIsInJlbWFpbmluZ1BhdGhuYW1lIiwibWF0Y2hQYXRoIiwicGF0aG5hbWVCYXNlIiwibm9ybWFsaXplUGF0aG5hbWUiLCJwYXR0ZXJuIiwibWF0Y2hlciIsInBhcmFtTmFtZXMiLCJyZWdleHBTb3VyY2UiLCJwYXJhbU5hbWUiLCJlbmRzV2l0aCIsIlJlZ0V4cCIsInVuZGVmaW5lZCIsImNvbXBpbGVQYXRoIiwiY2FwdHVyZUdyb3VwcyIsIm1lbW8iLCJzcGxhdFZhbHVlIiwiZGVjb2RlVVJJQ29tcG9uZW50Iiwic2FmZWx5RGVjb2RlVVJJQ29tcG9uZW50IiwicmVzb2x2ZVBhdGgiLCJmcm9tUGF0aG5hbWUiLCJ0b1BhdGhuYW1lIiwicG9wIiwicmVzb2x2ZVBhdGhuYW1lIiwibm9ybWFsaXplU2VhcmNoIiwibm9ybWFsaXplSGFzaCIsInJlc29sdmVUbyIsInRvQXJnIiwicm91dGVQYXRobmFtZXMiLCJsb2NhdGlvblBhdGhuYW1lIiwicm91dGVQYXRobmFtZUluZGV4IiwidG9TZWdtZW50cyIsIm5leHRDaGFyIiwicGF0aHMiLCJ1c2VIcmVmIiwidXNlSW5Sb3V0ZXJDb250ZXh0IiwibmF2aWdhdG9yIiwidXNlUmVzb2x2ZWRQYXRoIiwiam9pbmVkUGF0aG5hbWUiLCJnZXRUb1BhdGhuYW1lIiwiZW5kc1dpdGhTbGFzaCIsImNyZWF0ZUhyZWYiLCJ1c2VMb2NhdGlvbiIsInVzZU5hdmlnYXRpb25UeXBlIiwibmF2aWdhdGlvblR5cGUiLCJ1c2VNYXRjaCIsInVzZU5hdmlnYXRlIiwicm91dGVQYXRobmFtZXNKc29uIiwiYWN0aXZlUmVmIiwiZ28iLCJwYXJzZSIsIk91dGxldENvbnRleHQiLCJ1c2VPdXRsZXRDb250ZXh0IiwidXNlT3V0bGV0IiwiUHJvdmlkZXIiLCJ1c2VQYXJhbXMiLCJyb3V0ZU1hdGNoIiwidXNlUm91dGVzIiwicGFyZW50TWF0Y2hlcyIsInBhcmVudFBhcmFtcyIsInBhcmVudFBhdGhuYW1lQmFzZSIsImxvY2F0aW9uRnJvbUNvbnRleHQiLCJfcGFyc2VkTG9jYXRpb25BcmckcGEiLCJwYXJzZWRMb2NhdGlvbkFyZyIsIl9yZW5kZXJNYXRjaGVzIiwicmVkdWNlUmlnaHQiLCJNZW1vcnlSb3V0ZXIiLCJpbml0aWFsRW50cmllcyIsImluaXRpYWxJbmRleCIsImhpc3RvcnlSZWYiLCJfb3B0aW9uczMiLCJfb3B0aW9uczMkaW5pdGlhbEVudHIiLCJlbnRyaWVzIiwiZW50cnkiLCJQb3AiLCJibG9ja2VycyIsImdldE5leHRMb2NhdGlvbiIsImFsbG93VHgiLCJyZXRyeSIsImFwcGx5VHgiLCJuZXh0QWN0aW9uIiwibmV4dExvY2F0aW9uIiwiZGVsdGEiLCJuZXh0SW5kZXgiLCJQdXNoIiwic3BsaWNlIiwiUmVwbGFjZSIsImJhY2siLCJmb3J3YXJkIiwibGlzdGVuIiwiYmxvY2siLCJibG9ja2VyIiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsImhpc3RvcnkiLCJzZXRTdGF0ZSIsIlJvdXRlciIsIk5hdmlnYXRlIiwiX3JlZjIiLCJuYXZpZ2F0ZSIsIk91dGxldCIsIlJvdXRlIiwiX3Byb3BzIiwiX3JlZjMiLCJiYXNlbmFtZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdGF0aWMiLCJzdGF0aWNQcm9wIiwibmF2aWdhdGlvbkNvbnRleHQiLCJ0cmFpbGluZ1BhdGhuYW1lIiwiUm91dGVzIiwiX3JlZjQiLCJjcmVhdGVSb3V0ZXNGcm9tQ2hpbGRyZW4iLCJpc1ZhbGlkRWxlbWVudCIsInJlbmRlck1hdGNoZXMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsIl9leGNsdWRlZCIsIl9leGNsdWRlZDIiLCJCcm93c2VyUm91dGVyIiwiX29wdGlvbnMkd2luZG93IiwiZ2xvYmFsSGlzdG9yeSIsImdldEluZGV4QW5kTG9jYXRpb24iLCJfd2luZG93JGxvY2F0aW9uIiwiaWR4IiwidXNyIiwiYmxvY2tlZFBvcFR4IiwiX2dldEluZGV4QW5kTG9jYXRpb24iLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjIiLCJnZXRIaXN0b3J5U3RhdGVBbmRVcmwiLCJfZ2V0SW5kZXhBbmRMb2NhdGlvbjMiLCJyZXBsYWNlU3RhdGUiLCJfZ2V0SGlzdG9yeVN0YXRlQW5kVXIiLCJoaXN0b3J5U3RhdGUiLCJwdXNoU3RhdGUiLCJfZ2V0SGlzdG9yeVN0YXRlQW5kVXIyIiwidW5ibG9jayIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiSGFzaFJvdXRlciIsIl9vcHRpb25zMiR3aW5kb3ciLCJfcGFyc2VQYXRoIiwiX3BhcnNlUGF0aCRwYXRobmFtZSIsIl9wYXJzZVBhdGgkc2VhcmNoIiwiX3BhcnNlUGF0aCRoYXNoIiwiaGFuZGxlUG9wIiwiX2dldEluZGV4QW5kTG9jYXRpb240IiwiX2dldEluZGV4QW5kTG9jYXRpb242IiwicXVlcnlTZWxlY3RvciIsImdldEF0dHJpYnV0ZSIsImdldEJhc2VIcmVmIiwiX2dldEluZGV4QW5kTG9jYXRpb243IiwiX2dldEhpc3RvcnlTdGF0ZUFuZFVyMyIsIl9nZXRIaXN0b3J5U3RhdGVBbmRVcjQiLCJjcmVhdGVIYXNoSGlzdG9yeSIsIkhpc3RvcnlSb3V0ZXIiLCJMaW5rIiwiZm9yd2FyZFJlZiIsInJlbG9hZERvY3VtZW50IiwicmVzdCIsImludGVybmFsT25DbGljayIsInVzZUxpbmtDbGlja0hhbmRsZXIiLCJOYXZMaW5rIiwiX3JlZjUiLCJhcmlhQ3VycmVudFByb3AiLCJjbGFzc05hbWUiLCJjbGFzc05hbWVQcm9wIiwic3R5bGVQcm9wIiwiaXNBY3RpdmUiLCJhcmlhQ3VycmVudCIsIkJvb2xlYW4iLCJfdGVtcCIsInJlcGxhY2VQcm9wIiwiaXNNb2RpZmllZEV2ZW50IiwidXNlU2VhcmNoUGFyYW1zIiwiZGVmYXVsdEluaXQiLCJkZWZhdWx0U2VhcmNoUGFyYW1zUmVmIiwiY3JlYXRlU2VhcmNoUGFyYW1zIiwic2VhcmNoUGFyYW1zIiwiZ2V0QWxsIiwiYXBwZW5kIiwibmV4dEluaXQiLCJuYXZpZ2F0ZU9wdGlvbnMiLCJpbml0IiwiVVJMU2VhcmNoUGFyYW1zIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImVzY2FwZSIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiZGVmYXVsdCIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiY291bnQiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJjbG9uZUVsZW1lbnQiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImxhenkiLCJwZXJmb3JtYW5jZSIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwib2JqQSIsIm9iakIiLCJjb21wYXJlQ29udGV4dCIsInJldCIsImtleXNBIiwia2V5c0IiLCJiSGFzT3duUHJvcGVydHkiLCJ2YWx1ZUEiLCJ2YWx1ZUIiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJzdXBwb3J0cyIsImxheWVyIiwicmVmZXJlbmNlcyIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJhcGkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3R5bGVUYXJnZXQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZ2V0VGFyZ2V0IiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwibmVlZExheWVyIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjaGFyQ29kZUF0IiwicHJlZml4IiwidXNlIiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJXZWJraXRMaW5lQ2xhbXAiLCJyZWFjdFByb3BzUmVnZXgiLCJjYWNoZSIsInByb3AiLCJmcmVlemUiLCJzdHlsZWRDb21wb25lbnRJZCIsIlJFQUNUX0FQUF9TQ19BVFRSIiwiU0NfQVRUUiIsIlNDX0RJU0FCTEVfU1BFRURZIiwiUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIiwiaiIsImdyb3VwU2l6ZXMiLCJVaW50MzJBcnJheSIsImluZGV4T2ZHcm91cCIsImluc2VydFJ1bGVzIiwiaW5zZXJ0UnVsZSIsImNsZWFyR3JvdXAiLCJkZWxldGVSdWxlIiwiZ2V0R3JvdXAiLCJnZXRSdWxlIiwicmVnaXN0ZXJOYW1lIiwicGFyc2VJbnQiLCJnZXRUYWciLCJfX3dlYnBhY2tfbm9uY2VfXyIsImNoaWxkTm9kZXMiLCIkIiwic2hlZXQiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsImNzc1J1bGVzIiwibm9kZXMiLCJydWxlcyIsImlzU2VydmVyIiwidXNlQ1NTT01JbmplY3Rpb24iLCJncyIsIm5hbWVzIiwic2VydmVyIiwicmVnaXN0ZXJJZCIsInJlY29uc3RydWN0V2l0aE9wdGlvbnMiLCJhbGxvY2F0ZUdTSW5zdGFuY2UiLCJoYXNOYW1lRm9ySWQiLCJjbGVhck5hbWVzIiwiY2xlYXIiLCJjbGVhclJ1bGVzIiwiY2xlYXJUYWciLCJhYnMiLCJzdGF0aWNSdWxlc0lkIiwiaXNTdGF0aWMiLCJjb21wb25lbnRJZCIsImJhc2VIYXNoIiwiYmFzZVN0eWxlIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJwbHVnaW5zIiwibGFzdEluZGV4T2YiLCJzdHlsaXNQbHVnaW5zIiwiZGlzYWJsZUNTU09NSW5qZWN0aW9uIiwiZGlzYWJsZVZlbmRvclByZWZpeGVzIiwiZ2V0TmFtZSIsImlzQ3NzIiwidGhlbWUiLCJHZSIsImF0dHJzIiwicGFyZW50Q29tcG9uZW50SWQiLCJzaG91bGRGb3J3YXJkUHJvcCIsImNvbXBvbmVudFN0eWxlIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiJGFzIiwiYXMiLCJ3aXRoQ29tcG9uZW50IiwiX2ZvbGRlZERlZmF1bHRQcm9wcyIsIndpdGhDb25maWciLCJjcmVhdGVTdHlsZXMiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJfZW1pdFNoZWV0Q1NTIiwiZ2V0U3R5bGVUYWdzIiwic2VhbGVkIiwiZ2V0U3R5bGVFbGVtZW50Iiwic2VhbCIsImNvbGxlY3RTdHlsZXMiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJTdHlsZVNoZWV0IiwibWFzdGVyU2hlZXQiLCJBcHAiLCJzdXBlciIsIm9mZnNldFRpbWVsaW5lRmluZElkIiwiZGVmYXVsdEZpbmRJZCIsIm9mZnNldFNpbmdsZUZpbmRJZCIsIm9mZnNldE11bHRpRmluZElkIiwib2Zmc2V0Q2hpbGRGaW5kSWQiLCJvZmZzZXRMb2dzRmluZElkIiwiaXNNZWRpYUNoIiwiaXNTZXQiLCJnZXRJc01lZGlhQ2giLCJpc0xpbmtDaCIsInJvb3RDaCIsImlzUm9vdENoIiwicm9vdFRpdGxlIiwic3JjIiwiZ2V0TWVkaWFTcmMiLCJwcm90b2NvbCIsImNoVHlwZSIsImdldE1lZGlhVHlwZSIsInR1bmVkIiwiZGlzcFRocmVhZFR5cGUiLCJnZXREaXNwVGhyZWFkVHlwZSIsIm11bHRpc3RyZWFtIiwiZmluZFR5cGUiLCJmaW5kVHlwZUFsbCIsIm9mZnNldEZpbmRJZCIsImRlZmF1bHRPZmZzZXRGaW5kSWQiLCJpbnB1dFBvc3QiLCJpbnB1dFN0YW1wSWQiLCJpbnB1dEN1cnJlbnRUaW1lIiwiaW5wdXRTZWFyY2giLCJpc1RvZ2dsZU11bHRpc3RyZWFtIiwiaXNSYW5rRGV0YWlsTW9kZSIsImFjdGlvbmVkIiwiZGVidWciLCJtZWRpYVR5cGVNcDMiLCJtZWRpYVR5cGVNcDQiLCJtZWRpYVR5cGVNNGEiLCJtZWRpYVRhZ1R5cGVBdWRpbyIsIm1lZGlhVGFnVHlwZVZpZGVvIiwiZ2V0TWVkaWFUeXBlRnJvbVNyYyIsIm1lZGlhQ2hUYWdUeXBlS2V5cyIsIm1lZGlhQ2hUYWdUeXBlcyIsIm1lZGlhQ2hUYWdUeXBlTGVuZ3RoIiwibWVkaWFUeXBlIiwicmVnRXhwIiwiaW5uZXJXaWR0aCIsIk51bWJlciIsImlubmVySGVpZ2h0IiwiY29udGVudFR5cGUiLCJpc0F1ZGlvQ29udGVudFR5cGUiLCJpc1ZpZGVvQ29udGVudFR5cGUiLCJtZWRpYUNocyIsImV4dCIsInJlZ2V4cCIsImRpc3BUaHJlYWRUeXBlVGltZWxpbmUiLCJkaXNwVGhyZWFkVHlwZU11bHRpIiwicG9zdHMiLCJfaWQiLCJhcHAiLCJyYW5rcyIsInRocmVhZFN0YXR1cyIsInRvQ2giLCJjbGlja2VkIiwiYWZ0ZXJEaXNwVGhyZWFkVHlwZSIsImJlZm9yZURpc3BUaHJlYWRUeXBlIiwiZ2V0U3RlcERpc3BUaHJlYWRUeXBlIiwic3RlcFRvIiwidXBkYXRlZEFwcCIsImRpc3BUaHJlYWRUeXBlQ2hpbGQiLCJkaXNwVGhyZWFkVHlwZVNpbmdsZSIsIlBvc3QiLCJkZWZhdWx0VmFsdWVzIiwiY2hzIiwiZmF2aWNvbiIsInBvc3QiLCJzdGFtcElkIiwibGl2ZUNudCIsInVpZCIsInV0eXBlIiwiZGlzcEZsZyIsImNyZWF0ZVRpbWUiLCJjdXJyZW50VGltZSIsInVwZGF0ZVRpbWUiLCJ2YWx1ZXMiLCJkZWZhdWx0RmF2aWNvbiIsIlRocmVhZCIsImJvb3RPcHRpb24iLCJUQUxLTl9QUk9UT0NPTCIsImNoYXJzZXQiLCJob3N0IiwiZ2V0RGVmYXVsdEZhdmljb24iLCJnZXREZWZhdWx0VGl0bGUiLCJtZXRhcyIsImVtb3Rpb25zIiwic2VydmVyTWV0YXMiLCJjbGllbnRNZXRhcyIsImxpbmtzIiwiaDFzIiwiYXVkaW9zIiwidmlkZW9zIiwiZ2V0TGF5ZXIiLCJtZWRpYUluZGV4IiwicG9zdENudCIsIm11bHRpUG9zdENudCIsImlzU2VsZkNoIiwidGhyZWFkIiwiaXNXaW5kb3dPYmoiLCJjb25zdHJ1Y3RvckZyb21XaW5kb3ciLCJmaW5kVHlwZUh0bWwiLCJmaW5kVHlwZU11c2ljIiwiZmluZFR5cGVWaWRlbyIsImFzc2V0c1VSTCIsImFsZXJ0IiwiYm9vdENoIiwiZ2V0Q2giLCJoYXNTbGFzaCIsImhhc3NsYXNoIiwiZ2V0Qm9vbCIsImdldFByb3RvY29sIiwiZ2V0SG9zdCIsImdldENocyIsImdldEZhdmljb25Gcm9tV2luZG93IiwiZ2V0SXNTZWxmQ2giLCJfY2giLCJjaEFyciIsImNoTGVuZ3RoIiwibmV3Q2giLCJkb21haW4iLCJldmFsdWF0ZSIsInN0cmluZ1ZhbHVlIiwiaHMiLCJpc0V4aXN0Iiwic3RhdHVzIiwiZGlzcFR5cGUiLCJpc0NyZWF0ZSIsImlzUmVxdWlyZVVwc2VydCIsImlzTXVsdGlzdHJlYW0iLCJnZXRNb3JlIiwiZ2V0U3RhdHVzQ3JlYXRlIiwiZ2V0U3RhdHVzSXNSZXF1aXJlVXBzZXJ0IiwiZ2V0U3RhdHVzSXNNdWx0aXN0cmVhbSIsImdldFN0YXR1c0lzVG9nZ2xlTXVsdGlzdHJlYW0iLCJnZXRTdGF0dXNJc01lZGlhQ2giLCJ0aHJlYWRVcGRhdGVUaW1lIiwiZ2V0VGltZSIsIm5vd1llYXIiLCJnZXRGdWxsWWVhciIsIm5vd01vbnRoIiwiZ2V0TW9udGgiLCJub3dEYXkiLCJnZXREYXRlIiwibm93SG91ciIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImZpbmRPbmVUaHJlYWRBY3RpdmVIb3VyIiwiZmluZFR5cGVzIiwic3BsaXRlZENvbnRlbnRUeXBlIiwiaW5jbHVkZXMiLCJzdHIiLCJTVUJfRE9NQUlOUyIsIkRFVkVMT1BNRU5UIiwibWVkaWFTZWNvbmRJbnRlcnZhbCIsInNjcmVlblNpemUiLCJzbWFsbCIsIm1pZGRsZSIsIkFTU0VUUyIsInBvcnRhbFBhdGgiLCJDTElFTlQiLCJQT1JUQUwiLCJjbGllbnRQYXRoIiwiYXNzZXRzUGF0aCIsInNlc3Npb25QYXRoIiwiU0VTU0lPTiIsImNhY2hlS2V5Iiwic2V0dGluZyIsImlGcmFtZUlkIiwiZ2V0V2lkdGgiLCJnZXRIZWlnaHQiLCJwb3N0c0hlaWdodCIsImdldFNjcmVlblNpemUiLCJleHRlbnNpb25Nb2RlIiwiZXh0ZW5zaW9uTW9kZU5vbmUiLCJleHRlbnNpb25XaWR0aCIsImV4dGVuc2lvbkhlaWdodCIsInRocmVhZFNjcm9sbFkiLCJpc09wZW5Qb3N0cyIsImdldElzT3BlblBvc3RzIiwiaXNPcGVuU2V0dGluZyIsImlzT3Blbk1lbnUiLCJnZXRJc09wZW5NZW51IiwiaXNPcGVuRGV0YWlsIiwic2NyZWVuU2l6ZURldGFpbExhYmVsIiwiaXNPcGVuTmV3UG9zdCIsImlzT3Blbk5vdGlmIiwiaXNPcGVuUG9zdHNTdXBwb3J0ZXIiLCJpc09wZW5Cb2FyZCIsImdldElzT3BlbkJvYXJkIiwiaXNPcGVuU2V0Q2hNb2RhbCIsImlzQnViYmxlUG9zdCIsImlzRGlzcFBvc3RzIiwiaXNPcGVuTGlua3MiLCJpc1RyYW5zaXRpb24iLCJtZW51Q29tcG9uZW50IiwiZ2V0RGVmYXVsdE1lbnVDb21wb25lbnQiLCJvcGVuTG9ja01lbnUiLCJvcGVuTG9ja01lbnVMYWJlbE5vIiwib3BlbklubmVyTm90aWYiLCJkZXRhaWxDaCIsImlzTG9hZGluZyIsIm1lbnVDb21wb25lbnRSYW5rTGFiZWwiLCJleHRlbnNpb25IZWlndCIsIndpZHRoUHgiLCJzY3JlZW5TaXplU21hbGxXaWR0aFB4Iiwic2NyZWVuU2l6ZVNtYWxsTGFiZWwiLCJzY3JlZW5TaXplTWlkZGxlV2lkdGhQeCIsInNjcmVlblNpemVNaWRkbGVMYWJlbCIsInNjcmVlblNpemVMYXJnZUxhYmVsIiwiY2FsbGVkIiwiZXh0ZW5zaW9uQ2xvc2VIZWlnaHQiLCJleHRlbnNpb25Nb2RlQm90dG9tIiwiZXh0ZW5zaW9uTW9kZU1vZGFsIiwicHJvZHVjdGlvbiIsImxvY2FsaG9zdCIsInByb2R1Y3Rob3N0IiwidGFsa25MaXZlTWVkaWFIb3N0IiwiTWVkaWFUeXBlQ2F0ZWdvcnlCYXNlIiwiTWVkaWFUeXBlQ2F0ZWdvcnlSYW5raW5nIiwiTWVkaWFUeXBlQ2F0ZWdvcnlCdXp6Q3ljbGUiLCJkZWZhdWx0TWVkaWFUeXBlQ2F0ZWdvcnkiLCJNZWRpYVR5cGVBcnRpc3RzIiwiTWVkaWFUeXBlQ29udGVudHMiLCJNZWRpYVR5cGVNdXNpYyIsIk1lZGlhVHlwZU1vdmllcyIsIk1lZGlhVHlwZUFwcHMiLCJNZWRpYVR5cGVCb29rcyIsIk1lZGlhVHlwZU5ld3MiLCJNZWRpYVR5cGVHaXJsc05ld3MiLCJNZWRpYVR5cGVUcmVuZFdvcmQiLCJOZXR3b3JrQ2F0ZWdvcnlMaXN0QmFzZUJlbG9uZ1R5cGUiLCJOZXR3b3JrQ2F0ZWdvcnlMaXN0UmFua2luZ0JlbG9uZ1R5cGUiLCJOZXR3b3JrQ2F0ZWdvcnlMaXN0QnV6ekN5Y2xlQmVsb25nVHlwZSIsIk5ldHdvcmtDYXRlZ29yeUxpc3QiLCJkZWZhdWx0TWVkaWFUeXBlIiwiTmV0d29ya05ld3MiLCJzdWJEb21haW4iLCJsYWJlbCIsIm1ldGhvZCIsImVuZHBvaW50IiwibmV3cyIsImVuZHBvaW50SG9zdCIsImhlYWRlcnMiLCJlbmRwb2ludEtleSIsImRldlBvcnQiLCJnZXRJbWFnZVBhcmFtcyIsIk5ldHdvcmtMaXN0IiwiZ2V0TmV0d29yayIsImZpbmRDYWxsYmFrIiwiZmluZCIsImdldE15SG9zdCIsIlNjaGVtYSIsIm9wdGlvbiIsImdldFR5cGUiLCJmblN0cmluZyIsImRlZiIsImlzQWNjZXB0TnVsbCIsImlzQWNjZXB0QmxhbmsiLCJ2YWxpZCIsImlzRW1wdHlPYmplY3QiLCJ2YWxpZEZ1bmMiLCJfdmFsdWUiLCJwb2ludGVyIiwidmFsaWRWYWx1ZSIsInZhbGlkVHlwZSIsInBhcmFtc1ZhbHVlIiwicGFyYW1zVHlwZSIsInZhbGlkUmVzdWx0IiwidmFsaWRXYXJuIiwiZXJyb3JUaHJvdyIsIndhcm4iLCJjYW5TZXQiLCJjdXJyZW50VmFsdWUiLCJtZXJnZSIsImltbXV0YWJsZSIsIm9iaktleXMiLCJtZXJnZWRPYmoiLCJ0b0pTT04iLCJqc29uT2JqIiwiZnVuYyIsInJldHVybkltbXV0YWJsZSIsImdldFNoaWZ0IiwicmVzdWx0cyIsIlNlcXVlbmNlIiwiQVBJX1JFUVVFU1RfVFlQRSIsIk1FVEhPRF9DT0xPTiIsIkFQSV9SRVNQT05TRV9UWVBFX0VNSVQiLCJBUElfUkVTUE9OU0VfVFlQRV9CUk9BRENBU1QiLCJ0dW5lIiwicmVxdWVzdFB1YmxpY1N0YXRlIiwicmVxdWVzdFByaXZhdGVTdGF0ZSIsInJlc3BvbnNlRW1pdFN0YXRlIiwidXNlciIsInJlc3BvbnNlQnJvYWRjYXN0U3RhdGUiLCJmZXRjaFBvc3RzIiwidXBkYXRlVGhyZWFkIiwiY2hhbmdlVGhyZWFkIiwiY2hhbmdlVGhyZWFkRGV0YWlsIiwiYWRkRmluZENoaWxkIiwicmFuayIsInVwZGF0ZVRocmVhZFNlcnZlck1ldGFzIiwiZGlzY29ubmVjdCIsInNwbGl0ZWQiLCJzZXF1ZW5jZSIsImFjdGlvblR5cGUiLCJhY3Rpb25OYW1lIiwiYWN0aXZlUmVzcG9uc2VNYXAiLCJicm9hZGNhc3QiLCJBUElfU0VQQVJBVEVfSU9fVFlQRV9TVEFSVCIsIkFQSV9TRVBBUkFURV9JT19UWVBFX0VORCIsIkFQSV9TRVRVUCIsImNvbnZlcnRBcGlUb0NsaWVudEFjdGlvblR5cGUiLCJBUElfVE9fU0VSVkVSX1JFUVVFU1QiLCJBUElfVE9fQ0xJRU5UX1JFUVVFU1QiLCJTRVJWRVJfVE9fQVBJX0VNSVQiLCJBUElfVE9fQ0xJRU5UX0VNSVQiLCJTRVJWRVJfVE9fQVBJX0JST0FEQ0FTVCIsIkFQSV9UT19DTElFTlRfQlJPQURDQVNUIiwicmVkdXhTdGF0ZSIsInJlcXVlc3RQYXJhbXMiLCJyZXF1ZXN0U3RhdGUiLCJSRURVWF9BQ1RJT05fS0VZIiwic3RhdGVLZXkiLCJjb2x1bW5OYW1lIiwicmVzcG9uc2VUeXBlIiwidXBkYXRlU3RhdGUiLCJyZXNwb25zZVNjaGVtYSIsInJlc3BvbnNlU3RhdGUiLCJ1cGRhdGVTdGF0ZUtleSIsImNvbHVtbk5hbWVzIiwidXBkYXRlU3RhdGVWYWx1ZSIsIl9fdiIsInJlcXVlc3RQYXJhbXMxIiwicmVxdWVzdFBhcmFtczIiLCJQUk9EVUNUSU9OIiwiUFJPRFVDVElPTl9ET01BSU4iLCJERVZFTE9QTUVOVF9ET01BSU4iLCJQT1JUUyIsImhvc3ROYW1lIiwiaG9zdG5hbWUiLCJwb3J0IiwiREVWRUxPUE1FTlRfQ0xJRU5UIiwiREVWRUxPUE1FTlRfQVBJIiwiREVWRUxPUE1FTlRfQ09WRVIiLCJERVZFTE9QTUVOVF9DT01QT05FTlRTIiwiREVWRUxPUE1FTlRfVFVORSIsIkxPQ0FMSE9TVCIsIkFXU19IT1NUX0tFWSIsImdldEVudiIsImZpbGVzIiwiY2xpZW50Iiwid3NXb3JrZXIiLCJjb3ZlciIsImNvbXBvbmVudHMiLCJpc0RldiIsInd3d1VSTCIsIldXVyIsImNvdmVyVVJMIiwiQ09WRVIiLCJhcGlVUkwiLCJBUEkiLCJhcGlBY2Nlc3NVUkwiLCJjbGllbnRVUkwiLCJkZXNjVVJMIiwiREVTQyIsInBvcnRhbFVSTCIsImF1dG9VUkwiLCJBVVRPIiwiZXh0VVJMIiwiRVhUIiwiY29tcFVSTCIsIkNPTVAiLCJvd25VUkwiLCJPV04iLCJuZXdzVVJMIiwiTkVXUyIsInR1bmVVUkwiLCJUVU5FIiwiY29tcG9uZW50c1VSTCIsIkNPTVBPTkVOVFMiLCJhc3NldHNJbWdQYXRoIiwiY29uZiIsImJhbm5lclVSTCIsIkJBTk5FUiIsInRyYW5zYWN0aW9uVVJMIiwiVFJBTlNBQ1RJT04iLCJhc3NldHNDb3ZlclBhdGgiLCJhc3NldHNJY29uUGF0aCIsImFzc2V0c0pzUGF0aCIsInNlc3Npb25VUkwiLCJkZXNjcmlwdGlvbiIsImFwaVZlciIsImxwTGFuZ3VhZ2VzIiwiZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUiLCJmaW5kT25lUG9zdENudCIsImZpbmRPbmVMaW1pdENudCIsIm9ncEltYWdlcyIsIkh0bWwiLCJNdXNpYyIsIlZpZGVvIiwiZGVmaW5lIiwiQVBQX05BTUUiLCJQUk9EVUNUSU9OX0lQIiwiSE9TVE5BTUUiLCJIVFRQIiwiSFRUUFMiLCJSRURJUyIsIk1PTkdPIiwiU09DS0VUX0lPIiwiUkFOSyIsIkFQUF9UWVBFUyIsIkVYVEVOU0lPTiIsIlVSTCIsInR3aXR0ZXIiLCJmYWNlYm9vayIsImFwcHN0b3JlIiwicGxheXN0b3JlIiwiY2hyb21lRXh0ZW5zaW9uIiwidGFsa25DbGllbnRKcyIsInRhbGtuQXBpSnMiLCJ0YWxrblJhbmtKcyIsIm5vSW5uZXJOb3RpZiIsImJhbm5lckNsYXNzIiwic3RvcmFnZUtleSIsImJhc2VLZXkiLCJwb3N0c1RpbWVsaW5lWmVybyIsInBvc3RzVGltZWxpbmUiLCJwb3N0c1NpbmdsZSIsInBvc3RzTXVsdGkiLCJwb3N0c0NoaWxkIiwicG9zdHNMb2dzIiwidGhyZWFkcyIsImVuZHBvaW50U2VhcmNoSG9zdCIsIm11c2ljIiwiY29uZmlnVXNlckNhdGVnb3J5Q2hMaW1pdCIsImNvbmZpZ1N0b3JpZXNMaW1pdCIsImNvbmZpZ0luaXQiLCJzdG9yaWVzIiwidXNlckNhdGVnb3J5Q2hzIiwib2dwSW1hZ2UiLCJpYW1UYWdzIiwicmVsYXRpb25UYWdzIiwic3Rvcmllc0luaXQiLCJleWVDYXRjaCIsImludGVydmlldyIsImlzVXJsIiwiZ2V0U2F2ZUZhdmljb25OYW1lIiwiZmlsZU5hbWUiLCJfZmlsZU5hbWUiLCJ0cmltUHgiLCJnZXRVcHBlclByZWZpeCIsInRpbWVBZ29Gb3JtYXR0ZXIiLCJ1bml0Iiwic3VmZml4Iiwic2hvcnRVbml0IiwicGFyc2VKd3QiLCJ0b2tlbiIsImpzb25QYXlsb2FkIiwiZGVlcENvcHkiLCJkZWVwRXF1YWxzIiwib2JqMSIsIm9iajIiLCJnZXRBZ2VCeUJpcnRoZGF5IiwiYmlydGhkYXkiLCJyZXR1cm5BZ2UiLCJiaXJ0aERhdGUiLCJub3dEYXRlIiwiZ2V0VW5pcXVlSWQiLCJzdHJvbmciLCJnZXRIZWFkVXBwZXIiLCJqc29uIiwiYXN5bmMiLCJfYm9keSIsInJlc3BvbnNlIiwiZmV0Y2giLCJyZXNwb25zZVJlc2R1bHRKc29uIiwiZm9ybURhdGEiLCJidXR0b25UaGVtZUhvdCIsImhvdENvbG9yIiwiYnV0dG9uVGhlbWVGbGF0IiwiZmxhdENvbG9yIiwiYnV0dG9uVGhlbWVDb2xkIiwiY29sZENvbG9yIiwiYnV0dG9uVGhlbWVCcmlnaHQiLCJicmlnaHRDb2xvciIsImJ1dHRvblRoZW1lQmFzZSIsImJhc2VDb2xvciIsImJ1dHRvblRoZW1lRGVmYXVsdCIsInRoZW1lQ29sb3IiLCJkaWRNb3VudCIsInNldERpZE1vdW50IiwiZmxleExheW91dENlbnRlclByb3BzSW5pdCIsImJveExheW91dFByb3BzSW5pdCIsIkJ1dHRvbiIsImJhc2VIZWlnaHQiLCJCb3hMYXlvdXRDc3MiLCJkb3VibGVQYWRkaW5nIiwiZ2V0Q29sb3IiLCJnZXRCYWNrZ3JvdW5kIiwiYm9yZGVyQ29sb3IiLCJiYXNlU2l6ZSIsInRyYW5zaXRpb25EdXJhdGlvbiIsInNoYWRvd0hvcml6b25CcmlnaHQiLCJzcExheW91dFN0cmljdFdpZHRoIiwiYmFzZVBhZGRpbmciLCJ3aGl0ZUNvbG9yIiwiY2xvc2UiLCJmb2N1c0FuaW1hdGlvbiIsImdldEZpbm5pc2hQcm9wcyIsIkNvbnRhaW5lciIsInJ1cGVTaXplIiwiU2VhcmNoQ3NzIiwiQ2xvc2VDc3MiLCJkaXYiLCJJY29uIiwiX3VuaXh0aW5lIiwib25DaGFuZ2UiLCJyZWxhdGlvbklkIiwiZ2V0VW5pdHRpbWVUb1ltZCIsInltZCIsIkZsZXhDdXN0b20iLCJmbG93IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiTGFiZWwiLCJodG1sRm9yIiwic2lkZU1hcmdpbiIsIklucHV0IiwidW5peHRpbWUiLCJJbnB1dENzcyIsImRyYWdTdGF0dXNEcmFnb3ZlciIsImRyYWdTdGF0dXNEcmFnbGVhdmUiLCJpbWFnZUJnIiwiaW1hZ2VJY29uIiwiaW1hZ2VEZWZhdWx0IiwiY29udGFpbmVyUmVmIiwiZHJhZ0Ryb3BJbnB1dFJlZiIsImRyYWdTdGF0dXMiLCJzZXREcmFnU3RhdHVzIiwicHJldmlldyIsImZpbGUiLCJjb250YWluZXJFbG0iLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwiRm9ybURhdGEiLCJiYXNlNjRTdHJpbmciLCJjcmVhdGVkRmlsZSIsIkZpbGUiLCJsYXN0TW9kaWZpZWQiLCJleHRUeXBlIiwiYmFja2dyb3VuZEltYWdlIiwicmVhZEFzRGF0YVVSTCIsIkRyYWdEcm9wSW5wdXQiLCJhY2NlcHQiLCJvbkRyYWdPdmVyIiwib25EcmFnTGVhdmUiLCJvbkRyYWciLCJiZ0NzcyIsImljb25Dc3MiLCJnZXRCYWNrZ3JvdW5kSW1hZ2UiLCJpbWFnZSIsImJhc2VNYXJnaW4iLCJnZXRSZ2JhQ29sb3IiLCJxdWFkTWFyZ2luIiwidGhlbWVSZ2IiLCJmb250Q29sb3IiLCJEcm9wSW1hZ2UiLCJUZXh0Iiwibm9TZWxlY3RPcHRpb24iLCJub1NlbGVjdE9wdGlvbkxhYmVsIiwiZ2V0Tm9TZWxlY3RPcHRpb24iLCJzZWxlY3QiLCJkaXNhYmxlZEJhc2VUZW5zaW9uIiwiYmFzZVRlbnNpb24iLCJkaXNhYmVsZENvbG9yIiwiU2luZ2xlIiwiT3B0aW9uIiwidmlld0JveCIsImVuYWJsZUJhY2tncm91bmQiLCJmaWxsIiwic2F2ZUNoZWNrQ29sb3IiLCJ4bWxucyIsInByZXNlcnZlQXNwZWN0UmF0aW8iLCJ0cmFuc2Zvcm0iLCJzdHJva2UiLCJ4bWxTcGFjZSIsInN2Z0NzcyIsIkNoZWNrbWFyayIsIkVkaXQiLCJHb29nbGUiLCJSZXNldCIsIlRhZyIsIlVzZXIiLCJTdG9yeSIsIk5vdGlmIiwiQ2xvc2UiLCJMb2FyZGluZyIsImdldE15VXNlckZyb21TZXNzaW9uIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm15VXNlcktleSIsIm15VXNlciIsInNldE15VXNlciIsInNob3dNZW51Iiwic2V0U2hvd01lbnUiLCJoYW5kbGVHb29sZ2VDcmVkZW50aWFsUmVzcG9uc2UiLCJnb29sZ2VDcmVkZW50aWFsUmVzcG9uc2UiLCJnb29nbGVSZXNwb25zZSIsImNyZWRlbnRpYWwiLCJzbnNJY29uIiwicGljdHVyZSIsInJlcXVlc3QiLCJpc3MiLCJuYmYiLCJhdWQiLCJzdWIiLCJhenAiLCJpYXQiLCJleHAiLCJqdGkiLCJnaXZlbl9uYW1lIiwiZmFtaWx5X25hbWUiLCJlbWFpbF92ZXJpZmllZCIsIl91c2VyIiwic2V0SXRlbSIsInJlbG9hZCIsIm15VXNlclNlc3Npb24iLCJnb29nbGUiLCJhY2NvdW50cyIsImluaXRpYWxpemUiLCJjbGllbnRfaWQiLCJjbGllbnRJZCIsImNhbmNlbF9vbl90YXBfb3V0c2lkZSIsInByb21wdCIsIm5vdGlmaWNhdGlvbiIsImlzTm90RGlzcGxheWVkIiwiaXNTa2lwcGVkTW9tZW50IiwiY29va2llIiwiZ29vZ2xlQWNjb3VudENvb2tpZUtleSIsImFsdCIsIkxvZ2luIiwiYm9yZGVyIiwiYm9yZGVyUmFkaXVzIiwiTXlBY2NvdW50Iiwic2hvdyIsInNldFNob3ciLCJtZW51cyIsIkFjY291bnRNZW51cyIsIm1lbnUiLCJBY2NvdW50TWVudXNNeU1lbnUiLCJBY2NvdW50TWVudXNTZWxlY3RBY2NvdW50IiwiQWNjb3VudE1lbnVzTG9nb3V0IiwiZGlzYWJsZUF1dG9TZWxlY3QiLCJyZW1vdmVJdGVtIiwiZml0UmlnaHQiLCJUaGVtZUdyZWVuIiwiTGFiZWxzIiwiQW5jaG9yIiwiQ29udGVudCIsIkJveExpc3QiLCJhZGRDbGFzc05hbWUiLCJhY3RpdmUiLCJtYXJrdXBDb2xvciIsImhlYWRlck1lbnUiLCJpY29uVHlwZSIsImNoZWNrQW5pbWF0aW9uIiwiU2VjdGlvbkN1c3RvbSIsInJlc2V0T3JpZ2luIiwidXBwZXJNYXJnaW4iLCJzaWRlUGFkZGluZyIsImJvdHRvbVBhZGRpbmciLCJib3R0b21NYXJnaW4iLCJIZWFkZXIiLCJ1cHBlclBhZGRpbmciLCJINSIsIlNlY3Rpb24iLCJkb3VibGVNYXJnaW4iLCJzaG93QWR2ZXJ0IiwiaGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnQiLCJBZHZlcnRIZWFkZXIiLCJBZHZlcnRBdHRhY2giLCJBZHZlcnRSaWdodCIsIkFkdmVydExlZnQiLCJVbmRlciIsImdsb2JhbENvbnRleHQiLCJ1c2VGbGV4ZXNDb250ZXh0IiwiQWR2ZXJ0VW5kZXIiLCJpc1Njcm9sbFRvcCIsIkFkdmVydFVuZGVyQ29udGVudCIsIkFkdmVydENzcyIsImFkdmVydFdpZHRoIiwiYWR2ZXJ0Q29sb3IiLCJhZHZlcnRIb3ZlckNvbG9yIiwic3BMYXlvdXRXaWR0aCIsImRvdWJsZUFkdmVydFdpZHRoIiwidW5kZXJBZHZlcnRTaXplIiwidW5kZXJBZHZlcnRTcGFjZSIsInVuZGVyQWR2ZXJ0WSIsInVuZGVyUGljdHVyZVNpemUiLCJhcHBXaWR0aCIsImFscGhhTGlnaHRCZ1NldCIsInRhZ0xhYmVsSW5pdCIsImluZHVzdG9yeSIsImluZHVzdG9yeVBhcmVudCIsInN0YXJ0dXBTZXJpZXMiLCJqb2JQYXJlbnQiLCJqb2IiLCJzdG9yeSIsImlzTXlQYWdlIiwidGFnUGFyZW50Iiwic29tZVRhZ3MiLCJpc1NhdmVkQW5pbWF0aW9ucyIsImhhbmRsZU9uQ2xpY2tPcGVuVGFnIiwiaGFuZGxlT25DbGlja1JlbW92ZSIsInRhZ1BhcmVudFN0b3J5IiwibGFiZWxzIiwiZ2V0Q29udmVydFRhZ0lkVG9MYWJlbCIsInRhZ1N0b3J5Iiwic3RvcnlJZCIsIm9uQ2xpY2tSZW1vdmUiLCJ0YWdUeXBlcyIsInRhZ1R5cGUiLCJ0YWdDbnQiLCJ1cHBlckxlZnQiLCJ1cHBlclJpZ2h0IiwiYm90dG9tTGVmdCIsInRhZ01lbWJlciIsImJvdHRvbVJpZ2h0IiwieWVhciIsImdldFRhZ0NvbXBsZXhpdHlOb2RlIiwidGFnU3RydWN0dXJlIiwiaW5kdXN0b3J5SWQiLCJpbmR1c3RvcnlQYXJlbnRJZCIsInN0YXJ0dXBTZXJpZXNJZCIsImpvYklkIiwiam9iUGFyZW50SWQiLCJ0YWdMYWJlbHMiLCJ0YWdJbnZlc3RvciIsInRhZ0ZvdW5kZXIiLCJ0YWxrbkRhdGFzIiwic3RhdGljVGFnc0J5SWQiLCJqb2JzIiwiam9iUGFyZW50cyIsIk5vU2V0Q29tcG9uZW5zIiwiVGFnSWQiLCJQcm9maWxlcyIsImlzRWRpdGFibGUiLCJzZXhlcyIsImxhbmd1YWdlcyIsImhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzIiwiaGFuZGxlT25DaGFuZ2VTZXhlcyIsImhhbmRsZU9uQ2hhbmdlQmlydGhkYXkiLCJ1bmRlcmxpbmUiLCJpc0hvcml6b24iLCJzZXRXaWR0aCIsIm1vdXRlZCIsImVsbSIsImNsaWVudFdpZHRoIiwiTW9kYWxGb290ZXIiLCJoYW5kbGVPbkNsaWNrU2F2ZSIsImdldEFsbEZpbGxJbnB1dHMiLCJmaXhWYWx1ZXMiLCJpc0NoYW5nZVVzZXJUYWdzSW5pdCIsImlzU2F2aW5nQW5pbWF0aW9uc0luaXQiLCJ0YWdQYXJlbnRUeXBlcyIsInRhZ1BhcmVudFR5cGUiLCJ1c2VySWQiLCJ1c2VyVGFncyIsInVzZXJUYWdzSW5pdCIsInNldFVzZXIiLCJzZXRVc2VyVGFncyIsInNldFVzZXJUYWdzSW5pdCIsIm9wZW5Nb2RhbE9wdGlvbnMiLCJzZXRPcGVuTW9kYWxPcHRpb25zIiwib3Blbk1vZGFsT3B0aW9uSW5pdCIsInNldElzU2F2ZWRBbmltYXRpb25zIiwidGFnSWQiLCJnZXRUYWdJZCIsInRhZ1BhcmVudFNlbGYiLCJoYXNTZWxmVGFncyIsImlzRXhpc3RBY2NvdW50VGFncyIsInNsaWRlIiwiaGFuZGxlT25DbGlja1NhdmVVc2VyVGFnIiwidXBkYXRlVXNlclRhZyIsImNvbHVtblR5cGUiLCJjb2x1bW5WYWx1ZSIsImhhbmRsZU9uQ2xpY2tDYW5jZWwiLCJzZXRGaXhWYWx1ZXMiLCJvbkNoYW5nZVN0YXJ0dXBTZXJpZXNJZCIsIm9uQ2hhbmdlWWVhciIsIm9uQ2hhbmdlSm9iIiwib3B0aW9uU3RvcnlJZCIsImNsaWNrZWRTdG9yeUlkIiwiaGFuZGxlT25DbGlja1JlbW92ZVVzZXJUYWdzIiwiZml4VmFsdWVzRW1wdHkiLCJnZXRGaXhWYWx1ZXNFbXB0eSIsImlzRGlkTW91bnQiLCJzZXRJc0RpZE1vdW50Iiwic2V0SXNMb2FkaW5nIiwiaXNDaGVja0FuaW1hdGlvbiIsInNldElzQ2hlY2tBbmltYXRpb24iLCJjb250ZW50SW5kZXgiLCJzZXRDb250ZW50SW5kZXgiLCJzZWFyY2hlZFVzZXJzIiwic2V0U2VhcmNoZWRVc2VycyIsImRpc2FibGVTZWFyY2hCdXR0b24iLCJzZXREaXNhYmxlU2VhcmNoQnV0dG9uIiwiZGlzYWJsZVNhdmVCdXR0b24iLCJzZXREaXNhYmxlU2F2ZUJ1dHRvbiIsImZpeFZhbHVlc0luaXQiLCJzZXRGaXhWYWx1ZXNJbml0IiwiYWxsRmlsbElucHV0cyIsImlzRXF1YWxzIiwiZ2V0RGlzYWJsZVNhdmVCdXR0b24iLCJyZXF1ZXN0SnNvbiIsImZldGNoRGF0YSIsImNhdGNoIiwiZmV0Y2hVc2VyIiwiZ2V0RXh0cmFjdEZpeFZhbHVlcyIsIkZ1bGwiLCJvdmVyZmxvdyIsImhhbmRsZU9uQ2xpY2tDbG9zZSIsImhhbmRsZU9uQ2hhbmdlQ29udGVudEluZGV4IiwiaGVhZGVyIiwibWF4V2lkdGgiLCJtZW51Tm9kZSIsImdldE1lbnVOb2RlIiwiQUN1c3RvbSIsImZ1bGxXaWR0aCIsImxheW91dCIsImhvdmVyQW5pbWF0aW9uVHlwZSIsImhvdmVyQW5pbWF0aW9uQm94U2hhZG93IiwiZm9vdGVyIiwiZ2V0SGFzU2VsZlRhZ3MiLCJyZXF1ZXN0TW9kYWxPcHRpb25zIiwidXBzZXJ0ZWRJZCIsIkFnZSIsIkFnZVBhcmFtcyIsIl9iaXJ0aGRheSIsInNldEJpcnRoZGF5IiwiYWdlIiwic2V0QWdlIiwiaGFuZGxlT25DaGFuZ2UiLCJkb3VibGVTaXplIiwiX2luZHVzdG9yeVBhcmVudElkIiwiX2luZHVzdG9yeUlkIiwic2V0SW5kdXN0b3J5UGFyZW50SWQiLCJzZXRJbmR1c3RvcnlJZCIsImluZHVzdG9yeVN0YXRpY0RhdGEiLCJzZXRJbmR1c3RvcnlTdGF0aWNEYXRhIiwidXBkYXRlSW5kdXN0b3J5U3RhdGljRGF0YSIsInN0YXRpY1RhZ3MiLCJpbmQiLCJwYXJlbnRJZCIsInVuaXF1ZUlkIiwiX2pvYlBhcmVudElkIiwiX2pvYklkIiwiX3llYXIiLCJzZXRKb2JQYXJlbnRJZCIsInNldEpvYklkIiwiam9iU3RhdGljRGF0YSIsInNldEpvYlN0YXRpY0RhdGEiLCJzZXRZZWFyIiwidXBkYXRlSm9iU3RhdGljRGF0YSIsImxhbmd1YWdlc0luaXQiLCJkZWZhdWx0TGFuZ3VhZ2VzIiwibGFuZ3VhZ2UiLCJfbGFuZ3VhZ2VzIiwiaXNBY3RpdmVBbGwiLCJzZXRJc0FjdGl2ZUFsbCIsInNldExhbmd1YWdlcyIsInVwZGF0ZUlzQWN0aXZlQWxsIiwidXBkYXRlTGFuZ3VhZ2VzIiwiZ2V0RnVsbExhbmd1YWdlcyIsIkJ1dHRvbkN1c3RvbSIsImFsbExhbmd1YWdlIiwiZ2V0QnV0dG9uVGhlbWUiLCJjbGlja2VkVW5pcXVlSWQiLCJtZW51UGNXaWR0aCIsImNvbmRpdGlvbiIsInNlYXJjaFR5cGUiLCJ0YWdUeXBlVXBwZXIiLCJfc2V4ZXMiLCJzZXRTZXhlcyIsImRlZmF1bHRTZXhlcyIsInVwZGF0ZVNleGVzIiwiZ2V0RnVsbFNleGVzIiwiYWxsU2V4Iiwic2V4IiwiX3NhcnR1cFNlcmllc0lkIiwic2V0U3RhcnR1cFNlcmllc0lkIiwiX3N0b3J5SWQiLCJzZXRTdG9yeUlkIiwiaXNTaG93IiwiZGVmYXVsdFllYXJzIiwic2hvd0ZvcmNlSG92ZXIiLCJob3ZlckNzcyIsInNoYWRvd0NpcmNsZUJhc2UiLCJob3ZlckNzc05vQm94U2hhZG93IiwidGFnQmdDb2xvciIsImdldFRyYW5zaXRpb24iLCJpc0hvdmVyIiwic2V0SXNIb3ZlciIsIm9uTW91c2VPdmVyIiwib25Nb3VzZUxlYXZlIiwiQ2xvc2VJY29uIiwiQm9keSIsIk1pZGRsd0ZsZXgiLCJVcHBlckxlZnQiLCJVcHBlclJpZ2h0IiwiQm90dG9tRmxleCIsIkJvdHRvbUxlZnQiLCJCb3R0b21SaWdodCIsInNoYWRvd0NpcmNsZURhcmsiLCJnZXRCR0NvbnRlbnQiLCJzY3JvbGxCYXNlTGVmdCIsImFydGljbGVCZ0NvbG9yIiwib3JkZXJFbG0iLCJnZXRTY3JvbGxXaWR0aCIsIm9yZGVyUmVmIiwiZGlzcGxheVN0b3JpZXMiLCJzZXREaXNwbGF5U3RvcmllcyIsInNldEluZGV4IiwiaW5kZXhDbnQiLCJjb25maWciLCJfb2Zmc2V0Iiwic3Rvcmllc1BvaW50ZXIiLCJsaW1pdCIsInVwZGF0ZURpc3BsYXlTdG9yaWVzIiwicmV2ZXJzZSIsImhhbmRsZU9uQ2xpY2tDaXJjbGUiLCJzY3JvbGxUbyIsImRhdGFzZXQiLCJiZWhhdmlvciIsIlN0b3J5T3JkZXIiLCJvblNjcm9sbCIsIm9sRWxtIiwib25lU2Nyb2xsV2lkdGgiLCJpc0ludGVnZXIiLCJzdG9yaWVzRXllQ2F0Y2giLCJubyIsIkNpcmNsZU9yZGVyIiwiY2lyY2xlIiwiQ3VzdG9tQSIsIk9sIiwib2wiLCJnZXRIZWFkRXllQ2F0Y2hTZWxlY3RPcmRlcldpZHRoIiwiZmxleExheW91dFByb3BzSW5pdCIsIkJhY2tncm91bmQiLCJNZW51T2wiLCJob3ZlciIsImFscGhhQmdTZXQiLCJzaGFkb3dIb3Jpem9uQmFzZSIsImNvcGllZCIsInNldENvcGllZCIsImhhbmRsZU9uQ2xpY2siLCJleGVjQ29tbWFuZCIsImZvbnRMaWdodENvbG9yIiwiTWVzc2FnZSIsInNlY3Rpb24iLCJCYXJBcnJvd1dyYXAiLCJCYXIiLCJCYXJBcnJvdyIsIkxvZ28iLCJDb3B5cmlnaHQiLCJzZXBNYXJnaW4iLCJfbWVkaWFUeXBlIiwiR3JvdXBzIiwiTWVtYmVyIiwiYmdTcmMiLCJUb1RvcCIsInRvVG9wIiwicXVpbnRTaXplIiwiRm9vdGVyIiwib3Blbk1lbnUiLCJhY2NvdW50IiwiaGFuZGxlT25DbGlja01lbnUiLCJhcHBIZWFkZXJIZWlnaHQiLCJIZWFkZXJJblNpZGVNZW51IiwiSDEiLCJUaXRsZUFuY2hvciIsIkltZyIsIkhlYWRlclNpZGUiLCJzZWxlY3RDb250ZW50TWVudSIsIkNvbnRlbnRNZW51T3JkZXIiLCJDb250ZW50TWVudUxpc3QiLCJzZWxlY3RDb250ZW50TWVudVVzZXJzIiwiSDIiLCJzZWxlY3RDb250ZW50TWVudUJ1c2luZXNzIiwic2VsZWN0Q29udGVudE1lbnVTdG9yaWVzIiwiY29udGVudHNNZW51IiwidWwiLCJkYXJrQ29sb3IiLCJzZXRTZWFyY2hUeXBlIiwiZm9vdGVySGVpZ2h0Iiwic2V0Rm9vdGVySGVpZ2h0Iiwic2VhcmNoTWVudU1lbW8iLCJTZWFyY2hDb250YWluZXIiLCJTZWFyY2hDb250ZW50IiwibWFyZ2luQm90dG9tIiwiX3NlYXJjaFR5cGUiLCJGaXhlZEZvb3RlciIsImNsaWVudEhlaWdodCIsInNpZGVNZW51IiwiZnVsbEJhY2tncm91bmRDb2xvciIsInNwYWNlIiwibW9kYWxDb250YWluZXJDbGFzc05hbWUiLCJjb250ZW50T3JkZXJSZWYiLCJzcExheW91dFN0cmljdFdpZHRoUHgiLCJvcHRpbmFsUGFydENudCIsImdldE9wdGlvbmFsUGFydHNDbnQiLCJjb250ZW50SGVpZ2h0IiwiZ2V0Q29udGVudEhlaWdodCIsImlzQ29udGVudExvYWRpbmciLCJpc1NwTGF5b3V0IiwiaXNTcExheW91dFN0cmljdCIsImNvbnRlbnRPcmRlckVsbSIsInNjcm9sbFdpZHRoIiwiY2xhc3NMaXN0IiwiU2VjdGlvbkJvYXJkIiwiQm9keU9yZGVyIiwiYXBwTWVudU1pbldpZHRoIiwiYWRkU3BhY2UiLCJjbG9zZU1vZGFsIiwib25UcmFuc2l0aW9uRW5kIiwiQm9hcmQiLCJ3aW5kb3dJbm5lckhlaWdodCIsImZ1bGxIZWlnaHQiLCJQbGFpbiIsIlN0cnVjdHVyZSIsIlR3aXR0ZXIiLCJUd2l0dGVySWNvbiIsImNoYXJTZXQiLCJyZWwiLCJsYXlvdXRUb3AiLCJsYXlvdXRTZWFyY2giLCJsYXlvdXREZWZhdWx0IiwiaG92ZXJBbmltYXRpb25CbHVyIiwiaG92ZXJBbmltYXRpb25EZWZhdWx0IiwiTWFyayIsIk1hcmtDb250YWluZXIiLCJpc1NhdmVkQW5pbWF0aW9uIiwiY29udHJvbEhlaWdodCIsImdldENvbnRyb2xIZWlnaHQiLCJQcm9maWxlQ29udGVudCIsImljb24iLCJleWVDYXRjaFZ3VmFsdWUiLCJleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUiLCJnZXRCb3hTaGFkb3ciLCJnZXRCYWNrZ3JvdW5kVHJhbnNmb3JtIiwiYmVmb3JlQmx1ciIsImV5ZUNhdGNoVmhWYWx1ZSIsImdldEJhY2tkcm9wRmlsdGVyIiwic2V0U2hvd1Byb2ZpbGVNb2RhbE9wdGlvbiIsInNldElzU2F2ZWRBbmltYXRpb24iLCJpc0Rpc2FibGVkU2F2ZUJ1dHRvbiIsInNldElzRGlzYWJsZWRTYXZlQnV0dG9uIiwic2hvd01vZGFsIiwic2V0U2hvd01vZGFsIiwiYmdGb3JtRGF0YSIsInNldEJnRnJvbURhdGEiLCJpY29uRm9ybURhdGEiLCJzZXRJY29uRm9ybURhdGEiLCJJbnB1dERyb3BJbWFnZUljb24iLCJwcm9taXNlcyIsInVwZGF0ZVVzZXIiLCJpc1VwZGF0ZUltYWdlIiwiUHJvbWlzZSIsImFsbCIsImhhbmRsZU9uU2F2ZSIsIkdsb2JhbENvbnRleHQiLCJ1c2VHbG9iYWxDb250ZXh0Iiwic2VjdGlvbnMiLCJzdG9yaWVzVmVydGljYWxEYXRhcyIsImRhdGFNb3VudCIsInNldE1vdW50RGF0YSIsInNldENvbmZpZyIsInNldFRocmVhZCIsInNldFNlcnZlck1ldGFzIiwic2V0U3RvcmllcyIsInVzZXJJbml0Iiwic2hvd1Byb2ZpbGVNb2RhbE9wdGlvbiIsIm1heE1haW4iLCJzZXRNYXhNYWluIiwic2V0U2hvd0FkdmVydCIsInNob3dTZWFyY2hNb2RhbE9wdGlvbiIsInNldFNob3dTZWFyY2hNb2RhbE9wdGlvbiIsInNldFVzZXJDYXRlZ29yeUNocyIsInNldE9wZW5NZW51Iiwic2V0U3Rvcmllc1BvaW50ZXIiLCJuYXZpZ2F0aW9uTGF5b3V0Iiwic2V0TmF2aWdhdGlvbkxheW91dCIsInJlc3VtZVJlZiIsInVzZUNhbGxiYWNrU2Nyb2xsIiwiX3N0b3JpZXNQb2ludGVyIiwiZmluZEluZGV4Iiwib2Zmc2V0VG9wIiwic2Nyb2xsWSIsIm9mZnNldEJvdHRvbSIsInJlc3VtZUVsbSIsInJlc3VtZVN0eWxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFRyaW1Vbml0TnVtYmVyIiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5MZWZ0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInVzZXJDYXRlZ29yeUNoQ250IiwiTWFpbkNvbnRlbnRzQm9hcmQiLCJNYWluQ29udGVudHNXcmFwIiwiTWFpbkNvbnRlbnRzIiwiYXBwTWluV2lkdGgiLCJmb250QmFzZVNpemUiLCJmb250QmFzZVdlaWdodCIsImZvbnRCYXNlU3BTaXplIiwiTWFpbiIsInVzZXJzIiwic2V0VXNlcnMiLCJzZXRJc015UGFnZSIsImNvbW1vblByb3BzIiwiRmxleGVzQ29udGV4dCIsImdldEZsZXhlc1ZhbHVlIiwibGliTmFtZSIsInVzZVRoZW1lIiwiYmFzZUZvbnRTaXplIiwiZmxleGVzUHJvcHNJbml0IiwiY29udGVudFByb3BzSW5pdCIsImVhc2VJbk91dFF1YWQiLCJkdXJhdGlvbiIsInNjcm9sbExlZnRBbmltYXRpb24iLCJzdGFydEJhY2siLCJlbmRCYWNrIiwidGltZW91dElkIiwiYW5pbWF0ZVNjcm9sbCIsInNjcm9sbFdpbmRvd1RvcEFuaW1hdGlvbiIsIl90byIsImRpc3BhdGgiLCJub25lIiwidG9wbGluZSIsInJpZ2h0bGluZSIsImxlZnRsaW5lIiwicmFkaXVzQ2lyY2xlIiwicmFkaXVzQnV0dG9uIiwicmFkaXVzSW5wdXQiLCJzaXplT2ZmIiwic2l6ZVNtYWxsIiwic2l6ZU1pZGRsZSIsInNpemVMYXJnZSIsInNpemVIdWdlIiwic2l6ZURlZmF1bHQiLCJtaW5XaWR0aCIsImdldE1pbk1heFNpemUiLCJnZXRQYWRkaW5nIiwiZ2V0TWFyZ2luIiwiZ2V0Qm9yZGVyIiwiZ2V0UmFkaXVzIiwid2hpdGVIb3ZlckNvbG9yIiwidHJpcGxlTWFyZ2luIiwidHJpcGxlUGFkZGluZyIsInF1YWRQYWRkaW5nIiwiZm9udFNpemUiLCJsZXR0ZXJTcGFjaW5nIiwidXNlU2VsZWN0IiwiQ29udGVudENzcyIsIkZsZXhDc3MiLCJGbGV4ZXNCYXNlQ3NzIiwiZ2V0SG92ZXJBbHRDc3MiLCJvblNjcm9sbEVuZCIsInNlc3Npb25TdG9yYWdlIiwiZGVsZXRlQ2hpbGRyZW4iLCJlbGVtZW50cyIsIkRpdiIsImNhdGVnb3J5IiwiRmxleGVzQ29tcG9uZW50Iiwic2V0T3B0aW9uIiwiaXNPdmVyZmxvd1lTY3JvbGwiLCJzZWxmRWxtIiwicGFyZW50RWxtIiwicGFyZW50RWxlbWVudCIsIk5hdiIsIkFydGljbGUiLCJBZGRyZXNzIiwiSDMiLCJINCIsIkg2IiwiUHJlIiwiQmxvY2txdW90ZSIsIkRsIiwiRHQiLCJGaWd1cmUiLCJGaWdjYXB0aW9uIiwiSHIiLCJFbSIsIlN0cm9uZyIsIlNtYWxsIiwiQ2l0ZSIsIkRmbiIsIkFiYnIiLCJUaW1lIiwiQ29kZSIsIlZhciIsIlNhbXAiLCJLYmQiLCJTdWIiLCJTdXAiLCJSdWJ5IiwiUnQiLCJScCIsIkJkbyIsIlNwYW4iLCJCciIsIldiciIsIklucyIsIklmcmFtZSIsIkVtYmVkIiwiUGFyYW0iLCJBdWRpbyIsIlNvdXJjZSIsIkNhbnZhcyIsIkFyZWEiLCJUYWJsZSIsIkNhcHRpb24iLCJDb2xncm91cCIsIkNvbCIsIlRib2R5IiwiVGhlYWQiLCJUZm9vdCIsIlRyIiwiRm9ybSIsIkZpZWxkc2V0IiwiTGVnZW5kIiwiU2VsZWN0IiwiRGF0YWxpc3QiLCJPcHRncm91cCIsIlRleHRhcmVhIiwiS2V5Z2VuIiwiT3V0cHV0IiwiUHJvZ3Jlc3MiLCJNZXRlciIsIkRldGFpbHMiLCJTdW1tYXJ5IiwiZmxleGVzQ29udGV4dGluaXQiLCJmbGV4ZXNDb250ZXh0Iiwic2V0RmxleGVzQ29udGV4dCIsImhhbmRsZUZsZXhlc0FjdGlvbiIsImF0dCIsImhvcml6b24iLCJ2ZXJ0aWNhbCIsInRyYW5zbGF0ZVkiLCJpZnJhbWUiLCJvYmplY3QiLCJ2aWRlbyIsImF1ZGlvIiwiY2FudmFzIiwiZmllbGRzZXQiLCJsZWdlbmQiLCJkYXRhbGlzdCIsIm9wdGdyb3VwIiwidGV4dGFyZWEiLCJvdXRwdXQiLCJwcm9ncmVzcyIsIm1ldGVyIiwicHJlIiwiYmxvY2txdW90ZSIsIlVsIiwiZGwiLCJkdCIsImZpZ3VyZSIsImZpZ2NhcHRpb24iLCJoMSIsImgyIiwiaDMiLCJoNCIsImg1IiwiaDYiLCJlbWJlZHMiLCJmb3JtcyIsImdyb3VwcyIsImhlYWRzIiwiaW50ZXJhY3RpdmUiLCJ0YWJsZXMiLCJ0ZXh0cyIsImRldGFpbHMiLCJzdW1tYXJ5IiwibmF2IiwiYXJ0aWNsZSIsIm1haW4iLCJhZGRyZXNzIiwidGFibGUiLCJjYXB0aW9uIiwiY29sZ3JvdXAiLCJ0Ym9keSIsInRoZWFkIiwidGZvb3QiLCJ0ciIsImVtIiwiY2l0ZSIsImRmbiIsImFiYnIiLCJ2YXIiLCJzYW1wIiwia2JkIiwic3VwIiwibWFyayIsInJ1YnkiLCJydCIsInJwIiwiYmRvIiwic3BhbiIsImlucyIsImRlbCIsInRvSnNvbiIsImlzRmlsbGVkIiwic2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXMiLCJzZWxlY3RDb250ZW50TWVudUNyZWF0b3JzIiwic2VsZWN0Q29udGVudE1lbnVDb25maWciLCJzZWxlY3RDb250ZW50TWVudURlZmF1bHQiLCJyZXNvbHZlSWQiLCJ1c2VySGFzU2VsZlRhZ3NJbml0IiwiaW52ZXN0b3IiLCJmb3VuZGVyIiwibWVtYmVyIiwiZml4Rm91bmRlclZhbHVlc0luaXQiLCJmaXhJbnZlc3RvclZhbHVlc0luaXQiLCJmaXhNZW1iZXJWYWx1ZXNJbml0IiwiZW4iLCJzZXhlc0luaXQiLCJmaXhQcm9maWxlVmFsdWVzSW5pdCIsImZpeFN0b3J5VmFsdWVzSW5pdCIsInRhZ1BhcmVudFNlYXJjaCIsInRhZ01vZGVWaWV3IiwidGFnTW9kZUVkaXQiLCJqb2JDYXRlZ29yeUlkIiwidHJpcGxlU2l6ZSIsInF1YWRTaXplIiwic2l4U2l6ZSIsInNlcFNpemUiLCJxdWludE1hcmdpbiIsInNleE1hcmdpbiIsInF1aW50UGFkZGluZyIsInNleFBhZGRpbmciLCJzZXBQYWRkaW5nIiwic2hhZG93U2l6ZSIsImdldFJnYkNvbG9yIiwiYWxwaGEiLCJiYXNlQWxwaGEiLCJkYXJrRGVwdGgiLCJkYXJrZXJEZXB0aCIsIndoaXRlUmdiIiwiYnJpZ2h0ZXJSZ2IiLCJicmlnaHRSZ2IiLCJiYXNlUmdiIiwiZGFya1JnYiIsImRhcmtlclJnYiIsImJsYWNrUmdiIiwiYnJpZ2h0QWxwaGEiLCJkYXJrQWxwaGEiLCJkZWVwRGFya0FscGhhIiwiaG90UmdiIiwiZmxhdFJnYiIsImNvbGRSZ2IiLCJicmlnaHRlckNvbG9yIiwiZGFya2VyQ29sb3IiLCJibGFja0NvbG9yIiwiZm9udERhcmtDb2xvciIsImNvbXBvbmVudEJnQ29sb3IiLCJhcnRpY2xlQmdIb3ZlckNvbG9yIiwic2F2ZUNvbG9yIiwic2VjdGlvblBhZGRpbmciLCJzZWN0aW9uTWFyZ2luQ29sdW1uIiwibWVudVRhYldpZHRoIiwiYXJ0aWNsZU9yZGVySGVpZ2h0IiwiYXJ0aWNsZVdpZHRoIiwiYXJ0aWNsZVRvdGFsV2lkdGgiLCJhcnRpY2xlQ2xvc2VIZWlnaHQiLCJhcnRpY2xlT3BlbkhlaWdodCIsImFydGljbGVPcGVuU2NhbGUiLCJhcnRpY2xlU2hhZG93Q29sb3IiLCJpbWFnZVdpZHRoIiwic2hhZG93Q2lyY2xlIiwic2hhZG93SG9yaXpvbiIsImJhc2VUZXh0U2hhZG93Iiwic2hhZG93Q2lyY2xlQnJpZ2h0ZXIiLCJzaGFkb3dDaXJjbGVCcmlnaHQiLCJzaGFkb3dIb3Jpem9uQnJpZ2h0ZXIiLCJzaGFkb3dIb3Jpem9uRGFyayIsInNwbGl0ZWRVcmwiLCJzcGxpdGVkVXJsTGVuZ3RoIiwibGFzdFNsYXNoIiwiX3RhbGtuU3Rvcmllc1BvaW50ZXIiLCJpZFNlcGFyYXRvciIsImluY2x1ZGVGaWxsUHJvZmlsZSIsIm9wZW5Nb2RhbE9wdGlvbiIsInNlbGYiLCJpbnZlc3RvckNudCIsImZvdW5kZXJDbnQiLCJtZW1iZXJDbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJsb2FkZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJ0b1N0cmluZ1RhZyIsIm5tZCJdLCJzb3VyY2VSb290IjoiIn0=